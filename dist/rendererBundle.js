(()=>{"use strict";function t(t,n){let i="";for(let o=0;o<t.length;o+=1){const s=t.charAt(o);if("d"==s){if("number"!=typeof n)throw new Error("Value must be numerical but got type "+typeof n);return Math.trunc(n).toString()}if("f"==s){if("number"!=typeof n)throw new Error("Value must be numerical but got type "+typeof n);return n.toString()}if("s"==s){if("string"!=typeof n)throw new Error("Value must be string but got type "+typeof n);return n}{let s="0";for(;"."!=t.charAt(o)&&"d"!=t.charAt(o)&&"f"!=t.charAt(o);)s+=t.charAt(o++);if("."==t.charAt(o)){i+=e(s,n,!0);let a=o;for(o+=1;"d"!=t.charAt(o)&&"f"!=t.charAt(o);)a+=1,o+=1;i+=r(t.substring(o,a),n),o+=1}else i+=e(s,n,!1)}}if(n<0&&"-"!=i.charAt(0)){if(i.includes("-")){let t=i.indexOf("-"),e=i.substring(0,t),r=i.substring(t+1,i.length);i=e+"0"+r}i="-"+i.substring(1,i.length)}return i}function e(t,e,r){let n="";r&&(e=Math.trunc(e));let i=Number(t),o=e.toString();if(o.length<i){for(let t=0;t<i-o.length;t+=1)n+="0";n+=o}else o.length-1>=i?n=o.substring(0,i):n+=o;return n}function r(t,e){if(0==t.length)return".";let r=Number(t),n=e.toString(),i="";if(n.includes(".")){if(i=n.substring(n.indexOf(".")+1),i.length>r)i=i.substring(0,r);else if(i.length<r)for(;i.length<r;)i+="0"}else for(;r-- >0;)i+="0";return"."+i}class n{#t=new Uint8ClampedArray(4);static GAMMA=1/2.2;static black=new n;static BLACK=new n;static Black=new n;static white=new n(255,255,255);static WHITE=new n(255,255,255);static White=new n(255,255,255);static red=new n(255,0,0);static RED=new n(255,0,0);static Red=new n(255,0,0);static green=new n(0,255,0);static GREEN=new n(0,255,0);static Green=new n(0,255,0);static blue=new n(0,0,255);static BLUE=new n(0,0,255);static Blue=new n(0,0,255);static orange=new n(255,127,0);static ORANGE=new n(255,127,0);static Orange=new n(255,127,0);static yellow=new n(255,255,0);static YELLOW=new n(255,255,0);static Yellow=new n(255,255,0);static pink=new n(255,192,203);static PINK=new n(255,192,203);static Pink=new n(255,192,203);static cyan=new n(0,255,255);static CYAN=new n(0,255,255);static Cyan=new n(0,255,255);static magenta=new n(255,0,255);static MAGENTA=new n(255,0,255);static Magenta=new n(255,0,255);static gray=new n(192,192,192);static GRAY=new n(192,192,192);static Gray=new n(192,192,192);constructor(t=0,e=0,r=0,n=255){if("number"!=typeof t||"number"!=typeof e||"number"!=typeof r||"number"!=typeof n)throw new Error("All parameters must be numeric");this.#t[0]=t,this.#t[1]=e,this.#t[2]=r,this.#t[3]=n}static buildColor(t){if(t instanceof n==0)throw new Error("color is not of type Color");return new n(t.#t[0],t.#t[1],t.#t[2],t.#t[3])}static buildRGBA(t){if(t instanceof Uint8ClampedArray==0)throw new Error("RGBA needs to be a uint8clamped array");return new n(t[0],t[1],t[2],t[3])}static buildAlpha(t,e){if(t instanceof n==0)throw new Error("Color is not of type Color");if("number"!=typeof e)throw new Error("Alpha is not numerical");return new n(t.#t[0],t.#t[1],t.#t[2],e)}static blendColor(t,e){return n.blendColorWeight(t,e,t.getAlpha()/(t.getAlpha()+e.getAlpha()))}static blendColorWeight(t,e,r=.5){if(t instanceof n==0||e instanceof n==0)throw new Error("C1 and C2 are not of type color");if("number"!=typeof r)throw new Error("c1Weight is not numerical");if(!(r>=0&&r<=1))throw new Error("c1Weight has to be in the range 0 to 1 inclusive");const i=r*t.getRed()+(1-r)*e.getRed(),o=r*t.getGreen()+(1-r)*e.getGreen(),s=r*t.getBlue()+(1-r)*e.getBlue();return new n(i,o,s,255)}darker(t=.1){return this.#e(1-t)}lighter(t=.1){return this.#e(1+t)}brighter(t=.1){return this.#e(1+t)}#e(t){return new n(this.#t[0]*t,this.#t[1]*t,this.#t[2]*t,this.#t[3])}getRed(){return this.#t[0]}getGreen(){return this.#t[1]}getBlue(){return this.#t[2]}getAlpha(){return this.#t[3]}setAlpha(t){if("number"!=typeof t)throw new Error("a is not numerical");if(t<0||t>255)throw new Error("a is supposed to be between 0 and 255 inclusive");this.#t[3]=Math.round(t)}getRGBComponents(){return this.#t}get rgb(){return this.#t}toString(){return function(e,...r){if("string"!=typeof e)throw new Error("Str must be a string");let n="",i=0;for(let o=0;o<e.length;o+=1)if("%"!=e.charAt(o))n+=e.charAt(o);else{let s="";for(;"d"!=e.charAt(++o)&&"f"!=e.charAt(o)&&"s"!=e.charAt(o);)s+=e.charAt(o);s+=e.charAt(o),n+=t(s,r[i++])}return n}("(r, g, b): (%3d, %3d, %3d)",this.#t[0],this.#t[1],this.#t[2])}static main(){}static applyGamma(t){if(t instanceof n==0)throw new Error("Color is not of type Color");const e=255*Math.pow(t.getRed()/255,n.GAMMA),r=255*Math.pow(t.getGreen()/255,n.GAMMA),i=255*Math.pow(t.getBlue()/255,n.GAMMA);return new n(e,r,i)}static hexToRgba(t){return t.match(/^#[A-Fa-f0-9]{6}/)?new Array([parseInt(t.substring(1,3),16),parseInt(t.substring(3,5),16),parseInt(t.substring(5,7),16),255]):new Array([0,0,0,255])}static RgbToHex(t){if(t instanceof n==0)throw new Error("Color is not of type Color");return"#"+n.intToHex(t[0])+n.intToHex(t[1])+n.intToHex(t[2])}static intToHex(t){return t<10?"0"+t.toString(16):t.toString(16)}}n.white,n.white})();