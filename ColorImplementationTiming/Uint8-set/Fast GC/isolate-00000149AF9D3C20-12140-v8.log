v8-version,10,2,154,23,-node.21,0
v8-platform,windows,unknown
shared-library,C:\\Program Files\\nodejs\\node.exe,0x7ff725800000,0x7ff729d2c000,0
shared-library,C:\\WINDOWS\\SYSTEM32\\ntdll.dll,0x7ffaea970000,0x7ffaeab68000,0
shared-library,C:\\WINDOWS\\System32\\KERNEL32.DLL,0x7ffaea860000,0x7ffaea91d000,0
shared-library,C:\\WINDOWS\\System32\\KERNELBASE.dll,0x7ffae80e0000,0x7ffae83d6000,0
shared-library,C:\\WINDOWS\\System32\\WS2_32.dll,0x7ffae9af0000,0x7ffae9b5b000,0
shared-library,C:\\WINDOWS\\System32\\RPCRT4.dll,0x7ffae9b60000,0x7ffae9c86000,0
shared-library,C:\\WINDOWS\\SYSTEM32\\dbghelp.dll,0x7ffae2620000,0x7ffae2804000,0
shared-library,C:\\WINDOWS\\System32\\PSAPI.DLL,0x7ffae9940000,0x7ffae9948000,0
shared-library,C:\\WINDOWS\\System32\\ucrtbase.dll,0x7ffae85c0000,0x7ffae86c0000,0
shared-library,C:\\WINDOWS\\System32\\ADVAPI32.dll,0x7ffaea6d0000,0x7ffaea783000,0
shared-library,C:\\WINDOWS\\System32\\msvcrt.dll,0x7ffae8de0000,0x7ffae8e7e000,0
shared-library,C:\\WINDOWS\\System32\\sechost.dll,0x7ffaea7c0000,0x7ffaea85f000,0
shared-library,C:\\WINDOWS\\SYSTEM32\\USERENV.dll,0x7ffae7e80000,0x7ffae7eae000,0
shared-library,C:\\WINDOWS\\SYSTEM32\\IPHLPAPI.DLL,0x7ffae73f0000,0x7ffae742b000,0
shared-library,C:\\WINDOWS\\System32\\bcrypt.dll,0x7ffae8820000,0x7ffae8847000,0
shared-library,C:\\WINDOWS\\System32\\USER32.dll,0x7ffae9950000,0x7ffae9aee000,0
shared-library,C:\\WINDOWS\\System32\\win32u.dll,0x7ffae8590000,0x7ffae85b2000,0
shared-library,C:\\WINDOWS\\System32\\GDI32.dll,0x7ffae89c0000,0x7ffae89ec000,0
shared-library,C:\\WINDOWS\\System32\\gdi32full.dll,0x7ffae88a0000,0x7ffae89ba000,0
shared-library,C:\\WINDOWS\\System32\\msvcp_win.dll,0x7ffae8040000,0x7ffae80dd000,0
shared-library,C:\\WINDOWS\\System32\\CRYPT32.dll,0x7ffae86c0000,0x7ffae881d000,0
shared-library,C:\\WINDOWS\\SYSTEM32\\WINMM.dll,0x7ffada590000,0x7ffada5b7000,0
shared-library,C:\\WINDOWS\\SYSTEM32\\CRYPTBASE.DLL,0x7ffae7910000,0x7ffae791c000,0
shared-library,C:\\WINDOWS\\System32\\IMM32.DLL,0x7ffaea790000,0x7ffaea7c0000,0
shared-library,C:\\WINDOWS\\SYSTEM32\\powrprof.dll,0x7ffae7f20000,0x7ffae7f6b000,0
shared-library,C:\\WINDOWS\\SYSTEM32\\UMPDC.dll,0x7ffae7f00000,0x7ffae7f12000,0
shared-library,C:\\WINDOWS\\system32\\uxtheme.dll,0x7ffae5b20000,0x7ffae5bbe000,0
shared-library,C:\\WINDOWS\\System32\\combase.dll,0x7ffae9ea0000,0x7ffaea1f4000,0
shared-library,C:\\WINDOWS\\system32\\mswsock.dll,0x7ffae7700000,0x7ffae776a000,0
shared-library,C:\\WINDOWS\\System32\\bcryptprimitives.dll,0x7ffae8500000,0x7ffae8582000,0
shared-library,C:\\WINDOWS\\SYSTEM32\\kernel.appcore.dll,0x7ffae5de0000,0x7ffae5df2000,0
shared-library-end
profiler,begin,1000
tick,0x7ffaeaa0d064,215681,0,0x0,6
new,CodeRange,0x7ff6a6660000,0
new,MemoryChunk,0x3ba70f40000,262144
new,MemoryChunk,0x2aaec640000,262144
new,MemoryChunk,0x191ca40000,262144
new,MemoryChunk,0x3ad297c0000,262144
new,MemoryChunk,0x192d5540000,262144
heap-capacity,1030976
heap-available,2198828672
new,MemoryChunk,0x37744200000,262144
new,MemoryChunk,0x343bc740000,262144
new,MemoryChunk,0x1f81b700000,262144
new,MemoryChunk,0x3a899780000,262144
new,MemoryChunk,0x1adeb580000,262144
new,MemoryChunk,0x113713c0000,262144
new,MemoryChunk,0x2dbe93c0000,262144
new,MemoryChunk,0x9147900000,262144
new,MemoryChunk,0x3893bcc0000,262144
new,MemoryChunk,0x3541b4c0000,262144
new,MemoryChunk,0x7ff6a6680000,262144
new,MemoryChunk,0x36900ac0000,262144
code-creation,Builtin,2,223377,0x7ff7264ff474,800,DeoptimizationEntry_Eager
code-creation,Builtin,2,223405,0x7ff7264ff7b4,804,DeoptimizationEntry_Lazy
code-creation,Builtin,2,223418,0x7ff7264ffaf4,804,DeoptimizationEntry_Unused
code-creation,Builtin,2,223429,0x7ff7264ffe34,1384,RecordWriteEmitRememberedSetSaveFP
code-creation,Builtin,2,223443,0x7ff7265003b4,460,RecordWriteOmitRememberedSetSaveFP
code-creation,Builtin,2,223454,0x7ff7265005b4,664,RecordWriteEmitRememberedSetIgnoreFP
code-creation,Builtin,2,223465,0x7ff726500874,216,RecordWriteOmitRememberedSetIgnoreFP
code-creation,Builtin,2,223479,0x7ff726500974,376,EphemeronKeyBarrierSaveFP
code-creation,Builtin,2,223490,0x7ff726500af4,140,EphemeronKeyBarrierIgnoreFP
code-creation,Builtin,2,223505,0x7ff726500bb4,64,AdaptorWithBuiltinExitFrame
code-creation,Builtin,2,223519,0x7ff726500c34,316,CallFunction_ReceiverIsNullOrUndefined
code-creation,Builtin,2,223530,0x7ff726500d74,368,CallFunction_ReceiverIsNotNullOrUndefined
code-creation,Builtin,2,223542,0x7ff726500ef4,404,CallFunction_ReceiverIsAny
code-creation,Builtin,2,223552,0x7ff7265010b4,104,CallBoundFunction
code-creation,Builtin,2,223563,0x7ff726501134,832,CallWrappedFunction
code-creation,Builtin,2,223573,0x7ff7265014b4,168,Call_ReceiverIsNullOrUndefined
code-creation,Builtin,2,223584,0x7ff726501574,168,Call_ReceiverIsNotNullOrUndefined
code-creation,Builtin,2,223595,0x7ff726501634,168,Call_ReceiverIsAny
code-creation,Builtin,2,223605,0x7ff7265016f4,976,Call_ReceiverIsNullOrUndefined_Baseline_Compact
code-creation,Builtin,2,223616,0x7ff726501af4,968,Call_ReceiverIsNullOrUndefined_Baseline
code-creation,Builtin,2,223627,0x7ff726501ef4,1056,Call_ReceiverIsNotNullOrUndefined_Baseline_Compact
code-creation,Builtin,2,223639,0x7ff726502334,1048,Call_ReceiverIsNotNullOrUndefined_Baseline
code-creation,Builtin,2,223653,0x7ff726502774,1056,Call_ReceiverIsAny_Baseline_Compact
code-creation,Builtin,2,223664,0x7ff726502bb4,1048,Call_ReceiverIsAny_Baseline
code-creation,Builtin,2,223674,0x7ff726502ff4,920,Call_ReceiverIsNullOrUndefined_WithFeedback
code-creation,Builtin,2,223696,0x7ff7265033b4,920,Call_ReceiverIsNotNullOrUndefined_WithFeedback
code-creation,Builtin,2,223711,0x7ff726503774,920,Call_ReceiverIsAny_WithFeedback
tick,0x7ffaeaa0d0e4,223803,0,0x0,6
code-creation,Builtin,2,223850,0x7ff726503b34,744,CallProxy
code-creation,Builtin,2,223886,0x7ff726503e34,152,CallVarargs
code-creation,Builtin,2,223907,0x7ff726503ef4,940,CallWithSpread
code-creation,Builtin,2,223936,0x7ff7265042b4,1956,CallWithSpread_Baseline
code-creation,Builtin,2,223956,0x7ff726504a74,1900,CallWithSpread_WithFeedback
code-creation,Builtin,2,223968,0x7ff7265051f4,940,CallWithArrayLike
code-creation,Builtin,2,223978,0x7ff7265055b4,1872,CallWithArrayLike_WithFeedback
code-creation,Builtin,2,223990,0x7ff726505d34,156,CallForwardVarargs
code-creation,Builtin,2,224000,0x7ff726505df4,156,CallFunctionForwardVarargs
code-creation,Builtin,2,224011,0x7ff726505eb4,136,CallFunctionTemplate_CheckAccess
code-creation,Builtin,2,224022,0x7ff726505f74,236,CallFunctionTemplate_CheckCompatibleReceiver
code-creation,Builtin,2,224034,0x7ff726506074,324,CallFunctionTemplate_CheckAccessAndCompatibleReceiver
code-creation,Builtin,2,224046,0x7ff7265061f4,32,ConstructFunction
code-creation,Builtin,2,224056,0x7ff726506234,104,ConstructBoundFunction
code-creation,Builtin,2,224067,0x7ff7265062b4,28,ConstructedNonConstructable
code-creation,Builtin,2,224078,0x7ff7265062f4,100,Construct
code-creation,Builtin,2,224088,0x7ff726506374,152,ConstructVarargs
code-creation,Builtin,2,224099,0x7ff726506434,968,ConstructWithSpread
code-creation,Builtin,2,224109,0x7ff726506834,1756,ConstructWithSpread_Baseline
code-creation,Builtin,2,224120,0x7ff726506f34,1744,ConstructWithSpread_WithFeedback
code-creation,Builtin,2,224132,0x7ff726507634,964,ConstructWithArrayLike
code-creation,Builtin,2,224142,0x7ff726507a34,1708,ConstructWithArrayLike_WithFeedback
code-creation,Builtin,2,224154,0x7ff7265080f4,196,ConstructForwardVarargs
code-creation,Builtin,2,224164,0x7ff7265081f4,196,ConstructFunctionForwardVarargs
code-creation,Builtin,2,224175,0x7ff7265082f4,780,Construct_Baseline
code-creation,Builtin,2,224186,0x7ff726508634,800,Construct_WithFeedback
code-creation,Builtin,2,224197,0x7ff726508974,476,JSConstructStubGeneric
code-creation,Builtin,2,224207,0x7ff726508b74,368,JSBuiltinsConstructStub
code-creation,Builtin,2,224218,0x7ff726508cf4,652,FastNewObject
code-creation,Builtin,2,224229,0x7ff726508fb4,296,FastNewClosure
code-creation,Builtin,2,224239,0x7ff7265090f4,724,ConstructProxy
code-creation,Builtin,2,224249,0x7ff7265093f4,360,JSEntry
code-creation,Builtin,2,224260,0x7ff726509574,360,JSConstructEntry
code-creation,Builtin,2,224270,0x7ff7265096f4,360,JSRunMicrotasksEntry
code-creation,Builtin,2,224281,0x7ff726509874,100,JSEntryTrampoline
code-creation,Builtin,2,224296,0x7ff7265098f4,100,JSConstructEntryTrampoline
code-creation,Builtin,2,224310,0x7ff726509974,288,ResumeGeneratorTrampoline
code-creation,Builtin,2,224322,0x7ff726509ab4,1500,StringFromCodePointAt
code-creation,Builtin,2,224333,0x7ff72650a0b4,528,StringEqual
code-creation,Builtin,2,224350,0x7ff72650a2f4,280,StringGreaterThan
code-creation,Builtin,2,224361,0x7ff72650a434,280,StringGreaterThanOrEqual
code-creation,Builtin,2,224372,0x7ff72650a574,280,StringLessThan
code-creation,Builtin,2,224383,0x7ff72650a6b4,280,StringLessThanOrEqual
code-creation,Builtin,2,224393,0x7ff72650a7f4,2424,StringSubstring
code-creation,Builtin,2,224404,0x7ff72650b174,80,OrderedHashTableHealIndex
code-creation,Builtin,2,224415,0x7ff72650b1f4,1264,InterpreterEntryTrampoline
code-creation,Builtin,2,224425,0x7ff72650b6f4,76,InterpreterPushArgsThenCall
code-creation,Builtin,2,224436,0x7ff72650b774,84,InterpreterPushUndefinedAndArgsThenCall
code-creation,Builtin,2,224448,0x7ff72650b7f4,84,InterpreterPushArgsThenCallWithFinalSpread
code-creation,Builtin,2,224459,0x7ff72650b874,84,InterpreterPushArgsThenConstruct
code-creation,Builtin,2,224470,0x7ff72650b8f4,84,InterpreterPushArgsThenConstructArrayFunction
code-creation,Builtin,2,224482,0x7ff72650b974,88,InterpreterPushArgsThenConstructWithFinalSpread
code-creation,Builtin,2,224493,0x7ff72650b9f4,84,InterpreterEnterAtBytecode
code-creation,Builtin,2,224504,0x7ff72650ba74,220,InterpreterEnterAtNextBytecode
code-creation,Builtin,2,224515,0x7ff72650bb74,52,InterpreterOnStackReplacement
code-creation,Builtin,2,224526,0x7ff72650bbb4,688,BaselineOutOfLinePrologue
code-creation,Builtin,2,224537,0x7ff72650be74,56,BaselineOnStackReplacement
code-creation,Builtin,2,224548,0x7ff72650beb4,84,BaselineLeaveFrame
code-creation,Builtin,2,224558,0x7ff72650bf34,220,BaselineOrInterpreterEnterAtBytecode
code-creation,Builtin,2,224570,0x7ff72650c034,228,BaselineOrInterpreterEnterAtNextBytecode
code-creation,Builtin,2,224581,0x7ff72650c134,196,InterpreterOnStackReplacement_ToBaseline
code-creation,Builtin,2,224593,0x7ff72650c234,1188,CompileLazy
code-creation,Builtin,2,224603,0x7ff72650c6f4,68,CompileLazyDeoptimizedCode
code-creation,Builtin,2,224614,0x7ff72650c774,256,InstantiateAsmJs
code-creation,Builtin,2,224624,0x7ff72650c8b4,32,NotifyDeoptimized
code-creation,Builtin,2,224635,0x7ff72650c8f4,52,ContinueToCodeStubBuiltin
code-creation,Builtin,2,224645,0x7ff72650c934,60,ContinueToCodeStubBuiltinWithResult
code-creation,Builtin,2,224657,0x7ff72650c974,56,ContinueToJavaScriptBuiltin
code-creation,Builtin,2,224667,0x7ff72650c9b4,64,ContinueToJavaScriptBuiltinWithResult
code-creation,Builtin,2,224679,0x7ff72650ca34,292,CallApiCallback
code-creation,Builtin,2,224689,0x7ff72650cb74,276,CallApiGetter
code-creation,Builtin,2,224699,0x7ff72650ccb4,12,HandleApiCall
code-creation,Builtin,2,224709,0x7ff72650ccf4,12,HandleApiCallAsFunction
code-creation,Builtin,2,224720,0x7ff72650cd34,12,HandleApiCallAsConstructor
code-creation,Builtin,2,224731,0x7ff72650cd74,64,AllocateInYoungGeneration
code-creation,Builtin,2,224744,0x7ff72650cdf4,52,AllocateRegularInYoungGeneration
code-creation,Builtin,2,224756,0x7ff72650ce34,64,AllocateInOldGeneration
code-creation,Builtin,2,224766,0x7ff72650ceb4,52,AllocateRegularInOldGeneration
code-creation,Builtin,2,224778,0x7ff72650cef4,432,CopyFastSmiOrObjectElements
code-creation,Builtin,2,224788,0x7ff72650d0b4,508,GrowFastDoubleElements
code-creation,Builtin,2,224799,0x7ff72650d2b4,404,GrowFastSmiOrObjectElements
code-creation,Builtin,2,224810,0x7ff72650d474,480,DebugBreakTrampoline
code-creation,Builtin,2,224820,0x7ff72650d674,184,ToNumber
code-creation,Builtin,2,224831,0x7ff72650d734,300,ToNumber_Baseline
code-creation,Builtin,2,224841,0x7ff72650d874,368,ToNumeric_Baseline
code-creation,Builtin,2,224852,0x7ff72650d9f4,104,PlainPrimitiveToNumber
code-creation,Builtin,2,224863,0x7ff72650da74,224,ToNumberConvertBigInt
code-creation,Builtin,2,224873,0x7ff72650db74,140,Typeof
code-creation,Builtin,2,224884,0x7ff72650dc34,108,BigIntToI64
code-creation,Builtin,2,224896,0x7ff72650dcb4,4,BigIntToI32Pair
code-creation,Builtin,2,224908,0x7ff72650dcf4,228,I64ToBigInt
code-creation,Builtin,2,224918,0x7ff72650ddf4,4,I32PairToBigInt
code-creation,Builtin,2,224929,0x7ff72650de34,112,ToBooleanLazyDeoptContinuation
code-creation,Builtin,2,224940,0x7ff72650deb4,4044,KeyedLoadIC_PolymorphicName
code-creation,Builtin,2,224951,0x7ff72650eeb4,15632,KeyedStoreIC_Megamorphic
code-creation,Builtin,2,224961,0x7ff726512bf4,12068,DefineKeyedOwnIC_Megamorphic
code-creation,Builtin,2,224973,0x7ff726515b34,464,LoadGlobalIC_NoFeedback
code-creation,Builtin,2,224983,0x7ff726515d34,68,LoadIC_FunctionPrototype
code-creation,Builtin,2,224994,0x7ff726515db4,12,LoadIC_StringLength
code-creation,Builtin,2,225004,0x7ff726515df4,16,LoadIC_StringWrapperLength
code-creation,Builtin,2,225015,0x7ff726515e34,3064,LoadIC_NoFeedback
code-creation,Builtin,2,225026,0x7ff726516a34,32,StoreGlobalIC_Slow
code-creation,Builtin,2,225036,0x7ff726516a74,7352,StoreIC_NoFeedback
code-creation,Builtin,2,225047,0x7ff726518734,3248,DefineNamedOwnIC_NoFeedback
code-creation,Builtin,2,225059,0x7ff7265193f4,184,KeyedLoadIC_SloppyArguments
code-creation,Builtin,2,225070,0x7ff7265194b4,72,LoadIndexedInterceptorIC
code-creation,Builtin,2,225081,0x7ff726519534,240,KeyedStoreIC_SloppyArguments_Standard
code-creation,Builtin,2,225093,0x7ff726519634,240,KeyedStoreIC_SloppyArguments_GrowNoTransitionHandleCOW
code-creation,Builtin,2,225105,0x7ff726519734,240,KeyedStoreIC_SloppyArguments_NoTransitionIgnoreOOB
code-creation,Builtin,2,225116,0x7ff726519834,240,KeyedStoreIC_SloppyArguments_NoTransitionHandleCOW
code-creation,Builtin,2,225128,0x7ff726519934,14928,StoreFastElementIC_Standard
code-creation,Builtin,2,225139,0x7ff72651d3b4,9808,StoreFastElementIC_GrowNoTransitionHandleCOW
code-creation,Builtin,2,225151,0x7ff72651fa34,13988,StoreFastElementIC_NoTransitionIgnoreOOB
code-creation,Builtin,2,225163,0x7ff7265230f4,5620,StoreFastElementIC_NoTransitionHandleCOW
code-creation,Builtin,2,225174,0x7ff7265246f4,8600,ElementsTransitionAndStore_Standard
code-creation,Builtin,2,225185,0x7ff7265268b4,19636,ElementsTransitionAndStore_GrowNoTransitionHandleCOW
code-creation,Builtin,2,225198,0x7ff72652b574,8600,ElementsTransitionAndStore_NoTransitionIgnoreOOB
code-creation,Builtin,2,225210,0x7ff72652d734,11164,ElementsTransitionAndStore_NoTransitionHandleCOW
code-creation,Builtin,2,225221,0x7ff7265302f4,820,KeyedHasIC_PolymorphicName
code-creation,Builtin,2,225232,0x7ff726530634,172,KeyedHasIC_SloppyArguments
code-creation,Builtin,2,225243,0x7ff7265306f4,72,HasIndexedInterceptorIC
code-creation,Builtin,2,225254,0x7ff726530774,172,EnqueueMicrotask
code-creation,Builtin,2,225264,0x7ff726530834,8,RunMicrotasksTrampoline
code-creation,Builtin,2,225275,0x7ff726530874,3796,RunMicrotasks
code-creation,Builtin,2,225285,0x7ff726531774,2716,HasProperty
code-creation,Builtin,2,225295,0x7ff726532234,1180,DeleteProperty
code-creation,Builtin,2,225306,0x7ff7265326f4,2004,CopyDataProperties
code-creation,Builtin,2,225316,0x7ff726532ef4,9384,SetDataProperties
code-creation,Builtin,2,225327,0x7ff7265353b4,2736,CopyDataPropertiesWithExcludedPropertiesOnStack
code-creation,Builtin,2,225339,0x7ff726535e74,56,CopyDataPropertiesWithExcludedProperties
code-creation,Builtin,2,225350,0x7ff726535eb4,28,Abort
code-creation,Builtin,2,225360,0x7ff726535ef4,28,AbortCSADcheck
code-creation,Builtin,2,225370,0x7ff726535f34,12,EmptyFunction
code-creation,Builtin,2,225396,0x7ff726535f74,12,Illegal
code-creation,Builtin,2,225407,0x7ff726535fb4,12,StrictPoisonPillThrower
code-creation,Builtin,2,225418,0x7ff726535ff4,12,UnsupportedThrower
code-creation,Builtin,2,225428,0x7ff726536034,60,ReturnReceiver
code-creation,Builtin,2,225439,0x7ff726536074,36,ArrayConstructor
code-creation,Builtin,2,225449,0x7ff7265360b4,412,ArrayConstructorImpl
code-creation,Builtin,2,225459,0x7ff726536274,220,ArrayNoArgumentConstructor_PackedSmi_DontOverride
code-creation,Builtin,2,225471,0x7ff726536374,220,ArrayNoArgumentConstructor_HoleySmi_DontOverride
code-creation,Builtin,2,225483,0x7ff726536474,180,ArrayNoArgumentConstructor_PackedSmi_DisableAllocationSites
code-creation,Builtin,2,225549,0x7ff726536534,180,ArrayNoArgumentConstructor_HoleySmi_DisableAllocationSites
code-creation,Builtin,2,225566,0x7ff7265365f4,180,ArrayNoArgumentConstructor_Packed_DisableAllocationSites
code-creation,Builtin,2,225579,0x7ff7265366b4,180,ArrayNoArgumentConstructor_Holey_DisableAllocationSites
code-creation,Builtin,2,225591,0x7ff726536774,192,ArrayNoArgumentConstructor_PackedDouble_DisableAllocationSites
code-creation,Builtin,2,225604,0x7ff726536874,192,ArrayNoArgumentConstructor_HoleyDouble_DisableAllocationSites
code-creation,Builtin,2,225620,0x7ff726536974,508,ArraySingleArgumentConstructor_PackedSmi_DontOverride
code-creation,Builtin,2,225633,0x7ff726536b74,472,ArraySingleArgumentConstructor_HoleySmi_DontOverride
code-creation,Builtin,2,225645,0x7ff726536d74,436,ArraySingleArgumentConstructor_PackedSmi_DisableAllocationSites
code-creation,Builtin,2,232202,0x7ff726536f34,400,ArraySingleArgumentConstructor_HoleySmi_DisableAllocationSites
code-creation,Builtin,2,232814,0x7ff7265370f4,436,ArraySingleArgumentConstructor_Packed_DisableAllocationSites
code-creation,Builtin,2,233319,0x7ff7265372b4,400,ArraySingleArgumentConstructor_Holey_DisableAllocationSites
code-creation,Builtin,2,233346,0x7ff726537474,444,ArraySingleArgumentConstructor_PackedDouble_DisableAllocationSites
code-creation,Builtin,2,233360,0x7ff726537634,408,ArraySingleArgumentConstructor_HoleyDouble_DisableAllocationSites
code-creation,Builtin,2,233373,0x7ff7265377f4,56,ArrayNArgumentsConstructor
code-creation,Builtin,2,233385,0x7ff726537834,12,ArrayConcat
code-creation,Builtin,2,233395,0x7ff726537874,12,ArrayPrototypeFill
code-creation,Builtin,2,233406,0x7ff7265378b4,928,ArrayIncludesSmiOrObject
code-creation,Builtin,2,233417,0x7ff726537c74,152,ArrayIncludesPackedDoubles
code-creation,Builtin,2,233428,0x7ff726537d34,220,ArrayIncludesHoleyDoubles
code-creation,Builtin,2,233439,0x7ff726537e34,544,ArrayIncludes
code-creation,Builtin,2,233449,0x7ff726538074,844,ArrayIndexOfSmiOrObject
code-creation,Builtin,2,233460,0x7ff7265383f4,116,ArrayIndexOfPackedDoubles
code-creation,Builtin,2,233471,0x7ff726538474,116,ArrayIndexOfHoleyDoubles
code-creation,Builtin,2,233482,0x7ff7265384f4,548,ArrayIndexOf
code-creation,Builtin,2,233509,0x7ff726538734,12,ArrayPop
code-creation,Builtin,2,233539,0x7ff726538774,608,ArrayPrototypePop
code-creation,Builtin,2,233572,0x7ff7265389f4,12,ArrayPrototypeGroupBy
code-creation,Builtin,2,233594,0x7ff726538a34,12,ArrayPrototypeGroupByToMap
code-creation,Builtin,2,233625,0x7ff726538a74,12,ArrayPush
code-creation,Builtin,2,233664,0x7ff726538ab4,2428,ArrayPrototypePush
code-creation,Builtin,2,233687,0x7ff726539434,12,ArrayShift
code-creation,Builtin,2,233698,0x7ff726539474,12,ArrayUnshift
code-creation,Builtin,2,233708,0x7ff7265394b4,964,CloneFastJSArray
code-creation,Builtin,2,233719,0x7ff7265398b4,2168,CloneFastJSArrayFillingHoles
code-creation,Builtin,2,233730,0x7ff72653a134,992,ExtractFastJSArray
code-creation,Builtin,2,233741,0x7ff72653a534,260,ArrayPrototypeEntries
code-creation,Builtin,2,233751,0x7ff72653a674,244,ArrayPrototypeKeys
code-creation,Builtin,2,233762,0x7ff72653a774,260,ArrayPrototypeValues
code-creation,Builtin,2,233772,0x7ff72653a8b4,4464,ArrayIteratorPrototypeNext
code-creation,Builtin,2,233783,0x7ff72653ba34,4152,FlattenIntoArray
code-creation,Builtin,2,233794,0x7ff72653ca74,4168,FlatMapIntoArray
code-creation,Builtin,2,233804,0x7ff72653daf4,384,ArrayPrototypeFlat
code-creation,Builtin,2,233815,0x7ff72653dcb4,444,ArrayPrototypeFlatMap
code-creation,Builtin,2,233825,0x7ff72653de74,12,ArrayBufferConstructor
code-creation,Builtin,2,233836,0x7ff72653deb4,12,ArrayBufferConstructor_DoNotInitialize
code-creation,Builtin,2,233847,0x7ff72653def4,12,ArrayBufferPrototypeSlice
code-creation,Builtin,2,233858,0x7ff72653df34,12,ArrayBufferPrototypeResize
code-creation,Builtin,2,233869,0x7ff72653df74,924,AsyncFunctionEnter
code-creation,Builtin,2,233879,0x7ff72653e334,80,AsyncFunctionReject
code-creation,Builtin,2,233890,0x7ff72653e3b4,76,AsyncFunctionResolve
code-creation,Builtin,2,233904,0x7ff72653e434,12,AsyncFunctionLazyDeoptContinuation
code-creation,Builtin,2,233919,0x7ff72653e474,1820,AsyncFunctionAwaitCaught
code-creation,Builtin,2,233930,0x7ff72653ebb4,1820,AsyncFunctionAwaitUncaught
code-creation,Builtin,2,233941,0x7ff72653f2f4,172,AsyncFunctionAwaitRejectClosure
code-creation,Builtin,2,233952,0x7ff72653f3b4,164,AsyncFunctionAwaitResolveClosure
code-creation,Builtin,2,233964,0x7ff72653f474,12,BigIntConstructor
code-creation,Builtin,2,233974,0x7ff72653f4b4,12,BigIntAsUintN
code-creation,Builtin,2,233985,0x7ff72653f4f4,12,BigIntAsIntN
code-creation,Builtin,2,233995,0x7ff72653f534,12,BigIntPrototypeToLocaleString
code-creation,Builtin,2,234006,0x7ff72653f574,12,BigIntPrototypeToString
code-creation,Builtin,2,234017,0x7ff72653f5b4,12,BigIntPrototypeValueOf
code-creation,Builtin,2,234027,0x7ff72653f5f4,12,CallSitePrototypeGetColumnNumber
code-creation,Builtin,2,234038,0x7ff72653f634,12,CallSitePrototypeGetEnclosingColumnNumber
code-creation,Builtin,2,234050,0x7ff72653f674,12,CallSitePrototypeGetEnclosingLineNumber
code-creation,Builtin,2,234061,0x7ff72653f6b4,12,CallSitePrototypeGetEvalOrigin
code-creation,Builtin,2,234072,0x7ff72653f6f4,12,CallSitePrototypeGetFileName
code-creation,Builtin,2,234083,0x7ff72653f734,12,CallSitePrototypeGetFunction
code-creation,Builtin,2,234094,0x7ff72653f774,12,CallSitePrototypeGetFunctionName
code-creation,Builtin,2,234105,0x7ff72653f7b4,12,CallSitePrototypeGetLineNumber
code-creation,Builtin,2,234116,0x7ff72653f7f4,12,CallSitePrototypeGetMethodName
code-creation,Builtin,2,234127,0x7ff72653f834,12,CallSitePrototypeGetPosition
code-creation,Builtin,2,234138,0x7ff72653f874,12,CallSitePrototypeGetPromiseIndex
code-creation,Builtin,2,234149,0x7ff72653f8b4,12,CallSitePrototypeGetScriptNameOrSourceURL
code-creation,Builtin,2,234160,0x7ff72653f8f4,12,CallSitePrototypeGetThis
code-creation,Builtin,2,234171,0x7ff72653f934,12,CallSitePrototypeGetTypeName
code-creation,Builtin,2,234182,0x7ff72653f974,12,CallSitePrototypeIsAsync
code-creation,Builtin,2,234192,0x7ff72653f9b4,12,CallSitePrototypeIsConstructor
code-creation,Builtin,2,234203,0x7ff72653f9f4,12,CallSitePrototypeIsEval
code-creation,Builtin,2,234214,0x7ff72653fa34,12,CallSitePrototypeIsNative
code-creation,Builtin,2,234225,0x7ff72653fa74,12,CallSitePrototypeIsPromiseAll
code-creation,Builtin,2,234235,0x7ff72653fab4,12,CallSitePrototypeIsToplevel
code-creation,Builtin,2,234246,0x7ff72653faf4,12,CallSitePrototypeToString
code-creation,Builtin,2,234257,0x7ff72653fb34,12,ConsoleDebug
code-creation,Builtin,2,234267,0x7ff72653fb74,12,ConsoleError
code-creation,Builtin,2,234277,0x7ff72653fbb4,12,ConsoleInfo
code-creation,Builtin,2,234288,0x7ff72653fbf4,12,ConsoleLog
code-creation,Builtin,2,234298,0x7ff72653fc34,12,ConsoleWarn
code-creation,Builtin,2,234308,0x7ff72653fc74,12,ConsoleDir
code-creation,Builtin,2,234318,0x7ff72653fcb4,12,ConsoleDirXml
code-creation,Builtin,2,234328,0x7ff72653fcf4,12,ConsoleTable
code-creation,Builtin,2,234339,0x7ff72653fd34,12,ConsoleTrace
code-creation,Builtin,2,234349,0x7ff72653fd74,12,ConsoleGroup
code-creation,Builtin,2,234359,0x7ff72653fdb4,12,ConsoleGroupCollapsed
code-creation,Builtin,2,234370,0x7ff72653fdf4,12,ConsoleGroupEnd
code-creation,Builtin,2,234380,0x7ff72653fe34,12,ConsoleClear
code-creation,Builtin,2,234390,0x7ff72653fe74,12,ConsoleCount
code-creation,Builtin,2,234401,0x7ff72653feb4,12,ConsoleCountReset
code-creation,Builtin,2,234411,0x7ff72653fef4,12,ConsoleAssert
code-creation,Builtin,2,234421,0x7ff72653ff34,12,ConsoleProfile
code-creation,Builtin,2,234432,0x7ff72653ff74,12,ConsoleProfileEnd
code-creation,Builtin,2,234442,0x7ff72653ffb4,12,ConsoleTime
code-creation,Builtin,2,234453,0x7ff72653fff4,12,ConsoleTimeLog
code-creation,Builtin,2,234463,0x7ff726540034,12,ConsoleTimeEnd
code-creation,Builtin,2,234474,0x7ff726540074,12,ConsoleTimeStamp
code-creation,Builtin,2,234484,0x7ff7265400b4,12,ConsoleContext
code-creation,Builtin,2,234494,0x7ff7265400f4,12,DataViewConstructor
code-creation,Builtin,2,234505,0x7ff726540134,12,DateConstructor
code-creation,Builtin,2,234517,0x7ff726540174,220,DatePrototypeGetDate
code-creation,Builtin,2,234529,0x7ff726540274,220,DatePrototypeGetDay
code-creation,Builtin,2,234540,0x7ff726540374,220,DatePrototypeGetFullYear
code-creation,Builtin,2,234551,0x7ff726540474,220,DatePrototypeGetHours
code-creation,Builtin,2,234561,0x7ff726540574,212,DatePrototypeGetMilliseconds
code-creation,Builtin,2,234572,0x7ff726540674,220,DatePrototypeGetMinutes
code-creation,Builtin,2,234583,0x7ff726540774,220,DatePrototypeGetMonth
code-creation,Builtin,2,234594,0x7ff726540874,220,DatePrototypeGetSeconds
code-creation,Builtin,2,234604,0x7ff726540974,124,DatePrototypeGetTime
code-creation,Builtin,2,234615,0x7ff7265409f4,212,DatePrototypeGetTimezoneOffset
code-creation,Builtin,2,234626,0x7ff726540af4,212,DatePrototypeGetUTCDate
code-creation,Builtin,2,234637,0x7ff726540bf4,212,DatePrototypeGetUTCDay
code-creation,Builtin,2,234648,0x7ff726540cf4,212,DatePrototypeGetUTCFullYear
code-creation,Builtin,2,234659,0x7ff726540df4,212,DatePrototypeGetUTCHours
code-creation,Builtin,2,234669,0x7ff726540ef4,212,DatePrototypeGetUTCMilliseconds
code-creation,Builtin,2,234680,0x7ff726540ff4,212,DatePrototypeGetUTCMinutes
code-creation,Builtin,2,234691,0x7ff7265410f4,212,DatePrototypeGetUTCMonth
code-creation,Builtin,2,234702,0x7ff7265411f4,212,DatePrototypeGetUTCSeconds
code-creation,Builtin,2,234713,0x7ff7265412f4,124,DatePrototypeValueOf
code-creation,Builtin,2,234724,0x7ff726541374,372,DatePrototypeToPrimitive
code-creation,Builtin,2,234734,0x7ff7265414f4,12,DatePrototypeGetYear
code-creation,Builtin,2,234745,0x7ff726541534,12,DatePrototypeSetYear
code-creation,Builtin,2,234755,0x7ff726541574,12,DateNow
code-creation,Builtin,2,234765,0x7ff7265415b4,12,DateParse
code-creation,Builtin,2,234775,0x7ff7265415f4,12,DatePrototypeSetDate
code-creation,Builtin,2,234786,0x7ff726541634,12,DatePrototypeSetFullYear
code-creation,Builtin,2,234797,0x7ff726541674,12,DatePrototypeSetHours
code-creation,Builtin,2,234807,0x7ff7265416b4,12,DatePrototypeSetMilliseconds
code-creation,Builtin,2,234818,0x7ff7265416f4,12,DatePrototypeSetMinutes
code-creation,Builtin,2,234829,0x7ff726541734,12,DatePrototypeSetMonth
code-creation,Builtin,2,234839,0x7ff726541774,12,DatePrototypeSetSeconds
code-creation,Builtin,2,234850,0x7ff7265417b4,12,DatePrototypeSetTime
code-creation,Builtin,2,234860,0x7ff7265417f4,12,DatePrototypeSetUTCDate
code-creation,Builtin,2,234871,0x7ff726541834,12,DatePrototypeSetUTCFullYear
code-creation,Builtin,2,234882,0x7ff726541874,12,DatePrototypeSetUTCHours
code-creation,Builtin,2,234892,0x7ff7265418b4,12,DatePrototypeSetUTCMilliseconds
code-creation,Builtin,2,234903,0x7ff7265418f4,12,DatePrototypeSetUTCMinutes
code-creation,Builtin,2,234914,0x7ff726541934,12,DatePrototypeSetUTCMonth
code-creation,Builtin,2,234925,0x7ff726541974,12,DatePrototypeSetUTCSeconds
code-creation,Builtin,2,234936,0x7ff7265419b4,12,DatePrototypeToDateString
code-creation,Builtin,2,234946,0x7ff7265419f4,12,DatePrototypeToISOString
code-creation,Builtin,2,234958,0x7ff726541a34,12,DatePrototypeToUTCString
code-creation,Builtin,2,234969,0x7ff726541a74,12,DatePrototypeToString
code-creation,Builtin,2,234980,0x7ff726541ab4,12,DatePrototypeToTimeString
code-creation,Builtin,2,234991,0x7ff726541af4,12,DatePrototypeToJson
code-creation,Builtin,2,235001,0x7ff726541b34,12,DateUTC
code-creation,Builtin,2,235011,0x7ff726541b74,12,ErrorConstructor
code-creation,Builtin,2,235021,0x7ff726541bb4,12,ErrorCaptureStackTrace
code-creation,Builtin,2,235032,0x7ff726541bf4,12,ErrorPrototypeToString
code-creation,Builtin,2,235050,0x7ff726541c34,12,FunctionConstructor
code-creation,Builtin,2,235061,0x7ff726541c74,80,FunctionPrototypeApply
code-creation,Builtin,2,235071,0x7ff726541cf4,12,FunctionPrototypeBind
code-creation,Builtin,2,235082,0x7ff726541d34,36,FunctionPrototypeCall
code-creation,Builtin,2,235092,0x7ff726541d74,12,FunctionPrototypeToString
code-creation,Builtin,2,235103,0x7ff726541db4,192,CreateIterResultObject
code-creation,Builtin,2,235114,0x7ff726541eb4,812,CreateGeneratorObject
code-creation,Builtin,2,235125,0x7ff7265421f4,12,GeneratorFunctionConstructor
code-creation,Builtin,2,235137,0x7ff726542234,416,GeneratorPrototypeNext
code-creation,Builtin,2,235149,0x7ff7265423f4,420,GeneratorPrototypeReturn
code-creation,Builtin,2,235160,0x7ff7265425b4,424,GeneratorPrototypeThrow
code-creation,Builtin,2,235171,0x7ff726542774,12,AsyncFunctionConstructor
code-creation,Builtin,2,235182,0x7ff7265427b4,388,SuspendGeneratorBaseline
code-creation,Builtin,2,235193,0x7ff726542974,100,ResumeGeneratorBaseline
code-creation,Builtin,2,235203,0x7ff7265429f4,36,GetIteratorWithFeedbackLazyDeoptContinuation
code-creation,Builtin,2,235215,0x7ff726542a34,12,GlobalDecodeURI
code-creation,Builtin,2,235225,0x7ff726542a74,12,GlobalDecodeURIComponent
code-creation,Builtin,2,235236,0x7ff726542ab4,12,GlobalEncodeURI
code-creation,Builtin,2,235246,0x7ff726542af4,12,GlobalEncodeURIComponent
code-creation,Builtin,2,235257,0x7ff726542b34,12,GlobalEscape
code-creation,Builtin,2,235267,0x7ff726542b74,12,GlobalUnescape
code-creation,Builtin,2,235277,0x7ff726542bb4,12,GlobalEval
code-creation,Builtin,2,235287,0x7ff726542bf4,136,GlobalIsFinite
code-creation,Builtin,2,235298,0x7ff726542cb4,132,GlobalIsNaN
code-creation,Builtin,2,235308,0x7ff726542d74,12,JsonParse
code-creation,Builtin,2,235318,0x7ff726542db4,12,JsonStringify
code-creation,Builtin,2,235328,0x7ff726542df4,4340,LoadIC
code-creation,Builtin,2,235341,0x7ff726543ef4,4156,LoadIC_Megamorphic
code-creation,Builtin,2,235352,0x7ff726544f34,4352,LoadIC_Noninlined
code-creation,Builtin,2,235363,0x7ff726546074,44,LoadICTrampoline
code-creation,Builtin,2,235373,0x7ff7265460b4,24,LoadICBaseline
code-creation,Builtin,2,235384,0x7ff7265460f4,44,LoadICTrampoline_Megamorphic
code-creation,Builtin,2,235394,0x7ff726546134,7196,LoadSuperIC
code-creation,Builtin,2,235405,0x7ff726547d74,24,LoadSuperICBaseline
code-creation,Builtin,2,235415,0x7ff726547db4,8224,KeyedLoadIC
code-creation,Builtin,2,235425,0x7ff726549df4,13200,KeyedLoadIC_Megamorphic
code-creation,Builtin,2,235436,0x7ff72654d1b4,44,KeyedLoadICTrampoline
code-creation,Builtin,2,235447,0x7ff72654d1f4,24,KeyedLoadICBaseline
code-creation,Builtin,2,235457,0x7ff72654d234,44,KeyedLoadICTrampoline_Megamorphic
code-creation,Builtin,2,235468,0x7ff72654d274,5112,StoreGlobalIC
code-creation,Builtin,2,235479,0x7ff72654e674,44,StoreGlobalICTrampoline
code-creation,Builtin,2,235489,0x7ff72654e6b4,24,StoreGlobalICBaseline
code-creation,Builtin,2,235500,0x7ff72654e6f4,5312,StoreIC
code-creation,Builtin,2,235510,0x7ff72654fbf4,44,StoreICTrampoline
code-creation,Builtin,2,235520,0x7ff72654fc34,24,StoreICBaseline
code-creation,Builtin,2,235530,0x7ff72654fc74,5124,DefineNamedOwnIC
code-creation,Builtin,2,235541,0x7ff7265510b4,44,DefineNamedOwnICTrampoline
code-creation,Builtin,2,235551,0x7ff7265510f4,24,DefineNamedOwnICBaseline
code-creation,Builtin,2,235562,0x7ff726551134,5784,KeyedStoreIC
code-creation,Builtin,2,235572,0x7ff7265527f4,44,KeyedStoreICTrampoline
code-creation,Builtin,2,235583,0x7ff726552834,24,KeyedStoreICBaseline
code-creation,Builtin,2,235593,0x7ff726552874,5600,DefineKeyedOwnIC
code-creation,Builtin,2,235604,0x7ff726553e74,44,DefineKeyedOwnICTrampoline
code-creation,Builtin,2,235615,0x7ff726553eb4,24,DefineKeyedOwnICBaseline
code-creation,Builtin,2,235625,0x7ff726553ef4,384,StoreInArrayLiteralIC
code-creation,Builtin,2,235636,0x7ff7265540b4,24,StoreInArrayLiteralICBaseline
code-creation,Builtin,2,235647,0x7ff7265540f4,140,LookupContextBaseline
code-creation,Builtin,2,235658,0x7ff7265541b4,140,LookupContextInsideTypeofBaseline
code-creation,Builtin,2,235669,0x7ff726554274,3036,LoadGlobalIC
code-creation,Builtin,2,235679,0x7ff726554e74,3020,LoadGlobalICInsideTypeof
code-creation,Builtin,2,235690,0x7ff726555a74,44,LoadGlobalICTrampoline
code-creation,Builtin,2,235700,0x7ff726555ab4,24,LoadGlobalICBaseline
code-creation,Builtin,2,235711,0x7ff726555af4,44,LoadGlobalICInsideTypeofTrampoline
code-creation,Builtin,2,235722,0x7ff726555b34,24,LoadGlobalICInsideTypeofBaseline
code-creation,Builtin,2,235733,0x7ff726555b74,144,LookupGlobalICBaseline
code-creation,Builtin,2,235745,0x7ff726555c34,144,LookupGlobalICInsideTypeofBaseline
code-creation,Builtin,2,235758,0x7ff726555cf4,2060,CloneObjectIC
code-creation,Builtin,2,235769,0x7ff726556534,24,CloneObjectICBaseline
code-creation,Builtin,2,235779,0x7ff726556574,2060,CloneObjectIC_Slow
code-creation,Builtin,2,235790,0x7ff726556db4,2904,KeyedHasIC
code-creation,Builtin,2,235800,0x7ff726557934,24,KeyedHasICBaseline
code-creation,Builtin,2,235811,0x7ff726557974,2720,KeyedHasIC_Megamorphic
code-creation,Builtin,2,235822,0x7ff726558434,1460,IterableToList
code-creation,Builtin,2,235832,0x7ff7265589f4,1268,IterableToFixedArray
code-creation,Builtin,2,235843,0x7ff726558ef4,736,IterableToListWithSymbolLookup
code-creation,Builtin,2,235854,0x7ff7265591f4,56,IterableToFixedArrayWithSymbolLookupSlow
code-creation,Builtin,2,235865,0x7ff726559234,128,IterableToListMayPreserveHoles
code-creation,Builtin,2,235876,0x7ff7265592f4,1016,IterableToFixedArrayForWasm
code-creation,Builtin,2,235887,0x7ff7265596f4,1524,StringListFromIterable
code-creation,Builtin,2,235898,0x7ff726559cf4,1224,FindOrderedHashMapEntry
code-creation,Builtin,2,235909,0x7ff72655a1f4,4212,MapConstructor
code-creation,Builtin,2,235919,0x7ff72655b274,2004,MapPrototypeSet
code-creation,Builtin,2,235930,0x7ff72655ba74,1524,MapPrototypeDelete
code-creation,Builtin,2,235940,0x7ff72655c074,208,MapPrototypeGet
code-creation,Builtin,2,235950,0x7ff72655c174,168,MapPrototypeHas
code-creation,Builtin,2,235961,0x7ff72655c234,12,MapPrototypeClear
code-creation,Builtin,2,235972,0x7ff72655c274,284,MapPrototypeEntries
code-creation,Builtin,2,235982,0x7ff72655c3b4,144,MapPrototypeGetSize
code-creation,Builtin,2,235993,0x7ff72655c474,500,MapPrototypeForEach
code-creation,Builtin,2,236003,0x7ff72655c674,288,MapPrototypeKeys
code-creation,Builtin,2,236014,0x7ff72655c7b4,288,MapPrototypeValues
code-creation,Builtin,2,236024,0x7ff72655c8f4,1052,MapIteratorPrototypeNext
code-creation,Builtin,2,236035,0x7ff72655cd34,1176,MapIteratorToList
code-creation,Builtin,2,236046,0x7ff72655d1f4,12,NumberPrototypeToExponential
code-creation,Builtin,2,236057,0x7ff72655d234,12,NumberPrototypeToFixed
code-creation,Builtin,2,236067,0x7ff72655d274,12,NumberPrototypeToLocaleString
code-creation,Builtin,2,236078,0x7ff72655d2b4,12,NumberPrototypeToPrecision
code-creation,Builtin,2,236089,0x7ff72655d2f4,324,SameValue
code-creation,Builtin,2,236099,0x7ff72655d474,200,SameValueNumbersOnly
code-creation,Builtin,2,236110,0x7ff72655d574,792,Add_Baseline
code-creation,Builtin,2,236120,0x7ff72655d8b4,652,AddSmi_Baseline
code-creation,Builtin,2,236131,0x7ff72655db74,832,Subtract_Baseline
code-creation,Builtin,2,236141,0x7ff72655def4,692,SubtractSmi_Baseline
code-creation,Builtin,2,236152,0x7ff72655e1b4,820,Multiply_Baseline
code-creation,Builtin,2,236162,0x7ff72655e4f4,712,MultiplySmi_Baseline
code-creation,Builtin,2,236173,0x7ff72655e7f4,836,Divide_Baseline
code-creation,Builtin,2,236183,0x7ff72655eb74,772,DivideSmi_Baseline
code-creation,Builtin,2,236194,0x7ff72655eeb4,776,Modulus_Baseline
code-creation,Builtin,2,236204,0x7ff72655f1f4,668,ModulusSmi_Baseline
code-creation,Builtin,2,236215,0x7ff72655f4b4,828,Exponentiate_Baseline
code-creation,Builtin,2,236225,0x7ff72655f7f4,724,ExponentiateSmi_Baseline
code-creation,Builtin,2,236236,0x7ff72655faf4,792,BitwiseAnd_Baseline
code-creation,Builtin,2,236247,0x7ff72655fe34,376,BitwiseAndSmi_Baseline
code-creation,Builtin,2,236257,0x7ff72655ffb4,788,BitwiseOr_Baseline
code-creation,Builtin,2,236268,0x7ff7265602f4,376,BitwiseOrSmi_Baseline
code-creation,Builtin,2,236279,0x7ff726560474,792,BitwiseXor_Baseline
code-creation,Builtin,2,236289,0x7ff7265607b4,376,BitwiseXorSmi_Baseline
code-creation,Builtin,2,236300,0x7ff726560934,812,ShiftLeft_Baseline
code-creation,Builtin,2,236310,0x7ff726560c74,400,ShiftLeftSmi_Baseline
code-creation,Builtin,2,236321,0x7ff726560e34,812,ShiftRight_Baseline
code-creation,Builtin,2,236331,0x7ff726561174,388,ShiftRightSmi_Baseline
code-creation,Builtin,2,236342,0x7ff726561334,924,ShiftRightLogical_Baseline
code-creation,Builtin,2,236353,0x7ff7265616f4,652,ShiftRightLogicalSmi_Baseline
code-creation,Builtin,2,236365,0x7ff7265619b4,724,Add_WithFeedback
code-creation,Builtin,2,236377,0x7ff726561cb4,784,Subtract_WithFeedback
code-creation,Builtin,2,236389,0x7ff726561ff4,784,Multiply_WithFeedback
code-creation,Builtin,2,236399,0x7ff726562334,812,Divide_WithFeedback
code-creation,Builtin,2,236410,0x7ff726562674,736,Modulus_WithFeedback
code-creation,Builtin,2,236420,0x7ff726562974,792,Exponentiate_WithFeedback
code-creation,Builtin,2,236431,0x7ff726562cb4,772,BitwiseAnd_WithFeedback
code-creation,Builtin,2,236442,0x7ff726562ff4,768,BitwiseOr_WithFeedback
code-creation,Builtin,2,236453,0x7ff726563334,772,BitwiseXor_WithFeedback
code-creation,Builtin,2,236463,0x7ff726563674,784,ShiftLeft_WithFeedback
code-creation,Builtin,2,236474,0x7ff7265639b4,784,ShiftRight_WithFeedback
code-creation,Builtin,2,236485,0x7ff726563cf4,900,ShiftRightLogical_WithFeedback
code-creation,Builtin,2,236496,0x7ff7265640b4,1692,Equal_Baseline
code-creation,Builtin,2,236506,0x7ff726564774,896,StrictEqual_Baseline
code-creation,Builtin,2,236517,0x7ff726564b34,1260,LessThan_Baseline
code-creation,Builtin,2,236527,0x7ff726565034,1256,GreaterThan_Baseline
code-creation,Builtin,2,236538,0x7ff726565534,1260,LessThanOrEqual_Baseline
code-creation,Builtin,2,236548,0x7ff726565a34,1256,GreaterThanOrEqual_Baseline
code-creation,Builtin,2,236559,0x7ff726565f34,1632,Equal_WithFeedback
code-creation,Builtin,2,236570,0x7ff7265665b4,920,StrictEqual_WithFeedback
code-creation,Builtin,2,236581,0x7ff726566974,1240,LessThan_WithFeedback
code-creation,Builtin,2,236591,0x7ff726566e74,1240,GreaterThan_WithFeedback
code-creation,Builtin,2,236602,0x7ff726567374,1240,LessThanOrEqual_WithFeedback
code-creation,Builtin,2,236613,0x7ff726567874,1240,GreaterThanOrEqual_WithFeedback
code-creation,Builtin,2,236624,0x7ff726567d74,356,BitwiseNot_Baseline
code-creation,Builtin,2,236635,0x7ff726567ef4,460,Decrement_Baseline
code-creation,Builtin,2,236645,0x7ff7265680f4,464,Increment_Baseline
code-creation,Builtin,2,236656,0x7ff7265682f4,492,Negate_Baseline
code-creation,Builtin,2,236666,0x7ff7265684f4,344,BitwiseNot_WithFeedback
code-creation,Builtin,2,236677,0x7ff726568674,440,Decrement_WithFeedback
code-creation,Builtin,2,236687,0x7ff726568834,444,Increment_WithFeedback
code-creation,Builtin,2,236698,0x7ff7265689f4,472,Negate_WithFeedback
code-creation,Builtin,2,236709,0x7ff726568bf4,264,ObjectAssign
code-creation,Builtin,2,236719,0x7ff726568d34,864,ObjectCreate
code-creation,Builtin,2,236729,0x7ff7265690b4,12,ObjectDefineGetter
code-creation,Builtin,2,236739,0x7ff7265690f4,12,ObjectDefineProperties
code-creation,Builtin,2,236750,0x7ff726569134,12,ObjectDefineProperty
code-creation,Builtin,2,236761,0x7ff726569174,12,ObjectDefineSetter
code-creation,Builtin,2,236771,0x7ff7265691b4,1480,ObjectEntries
code-creation,Builtin,2,236781,0x7ff7265697b4,12,ObjectFreeze
code-creation,Builtin,2,236792,0x7ff7265697f4,5664,ObjectGetOwnPropertyDescriptor
code-creation,Builtin,2,236802,0x7ff72656ae34,12,ObjectGetOwnPropertyDescriptors
code-creation,Builtin,2,236813,0x7ff72656ae74,596,ObjectGetOwnPropertyNames
code-creation,Builtin,2,236824,0x7ff72656b0f4,12,ObjectGetOwnPropertySymbols
code-creation,Builtin,2,236835,0x7ff72656b134,168,ObjectHasOwn
code-creation,Builtin,2,236845,0x7ff72656b1f4,388,ObjectIs
code-creation,Builtin,2,236855,0x7ff72656b3b4,12,ObjectIsFrozen
code-creation,Builtin,2,236900,0x7ff72656b3f4,12,ObjectIsSealed
code-creation,Builtin,2,236911,0x7ff72656b434,532,ObjectKeys
code-creation,Builtin,2,236921,0x7ff72656b674,12,ObjectLookupGetter
code-creation,Builtin,2,236932,0x7ff72656b6b4,12,ObjectLookupSetter
code-creation,Builtin,2,236943,0x7ff72656b6f4,2424,ObjectPrototypeHasOwnProperty
code-creation,Builtin,2,236957,0x7ff72656c074,236,ObjectPrototypeIsPrototypeOf
code-creation,Builtin,2,236968,0x7ff72656c174,12,ObjectPrototypePropertyIsEnumerable
code-creation,Builtin,2,236980,0x7ff72656c1b4,12,ObjectPrototypeGetProto
code-creation,Builtin,2,236991,0x7ff72656c1f4,12,ObjectPrototypeSetProto
code-creation,Builtin,2,237002,0x7ff72656c234,12,ObjectSeal
code-creation,Builtin,2,237014,0x7ff72656c274,1132,ObjectToString
code-creation,Builtin,2,237026,0x7ff72656c6f4,1248,ObjectValues
code-creation,Builtin,2,237037,0x7ff72656cbf4,296,OrdinaryHasInstance
code-creation,Builtin,2,237048,0x7ff72656cd34,368,InstanceOf
code-creation,Builtin,2,237061,0x7ff72656ceb4,640,InstanceOf_WithFeedback
code-creation,Builtin,2,237072,0x7ff72656d174,656,InstanceOf_Baseline
code-creation,Builtin,2,237083,0x7ff72656d434,268,ForInEnumerate
code-creation,Builtin,2,237093,0x7ff72656d574,148,ForInPrepare
code-creation,Builtin,2,237104,0x7ff72656d634,2672,ForInFilter
code-creation,Builtin,2,237114,0x7ff72656e0b4,56,ReflectApply
code-creation,Builtin,2,237124,0x7ff72656e0f4,64,ReflectConstruct
code-creation,Builtin,2,237135,0x7ff72656e174,12,ReflectDefineProperty
code-creation,Builtin,2,237145,0x7ff72656e1b4,12,ReflectGetOwnPropertyDescriptor
code-creation,Builtin,2,237156,0x7ff72656e1f4,12,ReflectOwnKeys
code-creation,Builtin,2,237167,0x7ff72656e234,12,ReflectSet
code-creation,Builtin,2,237177,0x7ff72656e274,12,RegExpCapture1Getter
code-creation,Builtin,2,237187,0x7ff72656e2b4,12,RegExpCapture2Getter
code-creation,Builtin,2,237198,0x7ff72656e2f4,12,RegExpCapture3Getter
code-creation,Builtin,2,237208,0x7ff72656e334,12,RegExpCapture4Getter
code-creation,Builtin,2,237219,0x7ff72656e374,12,RegExpCapture5Getter
code-creation,Builtin,2,237229,0x7ff72656e3b4,12,RegExpCapture6Getter
code-creation,Builtin,2,237240,0x7ff72656e3f4,12,RegExpCapture7Getter
code-creation,Builtin,2,237250,0x7ff72656e434,12,RegExpCapture8Getter
code-creation,Builtin,2,237261,0x7ff72656e474,12,RegExpCapture9Getter
code-creation,Builtin,2,237272,0x7ff72656e4b4,2140,RegExpConstructor
code-creation,Builtin,2,237282,0x7ff72656ed34,12,RegExpInputGetter
code-creation,Builtin,2,237292,0x7ff72656ed74,12,RegExpInputSetter
code-creation,Builtin,2,237303,0x7ff72656edb4,12,RegExpLastMatchGetter
code-creation,Builtin,2,237313,0x7ff72656edf4,12,RegExpLastParenGetter
code-creation,Builtin,2,237324,0x7ff72656ee34,12,RegExpLeftContextGetter
code-creation,Builtin,2,237335,0x7ff72656ee74,848,RegExpPrototypeCompile
code-creation,Builtin,2,237346,0x7ff72656f1f4,12,RegExpPrototypeToString
code-creation,Builtin,2,237356,0x7ff72656f234,12,RegExpRightContextGetter
code-creation,Builtin,2,237367,0x7ff72656f274,256,RegExpExecAtom
code-creation,Builtin,2,237377,0x7ff72656f3b4,1020,RegExpExecInternal
code-creation,Builtin,2,237388,0x7ff72656f7b4,8,RegExpInterpreterTrampoline
code-creation,Builtin,2,237399,0x7ff72656f7f4,8,RegExpExperimentalTrampoline
code-creation,Builtin,2,237409,0x7ff72656f834,2772,SetConstructor
code-creation,Builtin,2,237420,0x7ff726570334,1320,SetPrototypeHas
code-creation,Builtin,2,237430,0x7ff726570874,1772,SetPrototypeAdd
code-creation,Builtin,2,237440,0x7ff726570f74,1488,SetPrototypeDelete
code-creation,Builtin,2,237451,0x7ff726571574,12,SetPrototypeClear
code-creation,Builtin,2,237462,0x7ff7265715b4,288,SetPrototypeEntries
code-creation,Builtin,2,237472,0x7ff7265716f4,144,SetPrototypeGetSize
code-creation,Builtin,2,237483,0x7ff7265717b4,464,SetPrototypeForEach
code-creation,Builtin,2,237493,0x7ff7265719b4,288,SetPrototypeValues
code-creation,Builtin,2,237504,0x7ff726571af4,984,SetIteratorPrototypeNext
code-creation,Builtin,2,237515,0x7ff726571ef4,1120,SetOrSetIteratorToList
code-creation,Builtin,2,237525,0x7ff726572374,12,ShadowRealmConstructor
code-creation,Builtin,2,237536,0x7ff7265723b4,572,ShadowRealmGetWrappedValue
code-creation,Builtin,2,237547,0x7ff7265725f4,12,ShadowRealmPrototypeEvaluate
code-creation,Builtin,2,237558,0x7ff726572634,12,ShadowRealmPrototypeImportValue
code-creation,Builtin,2,237569,0x7ff726572674,12,SharedArrayBufferPrototypeGetByteLength
code-creation,Builtin,2,237580,0x7ff7265726b4,12,SharedArrayBufferPrototypeSlice
code-creation,Builtin,2,237591,0x7ff7265726f4,12,SharedArrayBufferPrototypeGrow
code-creation,Builtin,2,237602,0x7ff726572734,1336,AtomicsLoad
code-creation,Builtin,2,237612,0x7ff726572c74,1068,AtomicsStore
code-creation,Builtin,2,237623,0x7ff7265730b4,1716,AtomicsExchange
code-creation,Builtin,2,237633,0x7ff726573774,2064,AtomicsCompareExchange
code-creation,Builtin,2,237649,0x7ff726573fb4,1804,AtomicsAdd
code-creation,Builtin,2,237661,0x7ff7265746f4,1804,AtomicsSub
code-creation,Builtin,2,237672,0x7ff726574e34,1804,AtomicsAnd
code-creation,Builtin,2,237682,0x7ff726575574,1804,AtomicsOr
code-creation,Builtin,2,237693,0x7ff726575cb4,1804,AtomicsXor
code-creation,Builtin,2,237703,0x7ff7265763f4,12,AtomicsNotify
code-creation,Builtin,2,237713,0x7ff726576434,12,AtomicsIsLockFree
code-creation,Builtin,2,237724,0x7ff726576474,12,AtomicsWait
code-creation,Builtin,2,237734,0x7ff7265764b4,12,AtomicsWaitAsync
code-creation,Builtin,2,237745,0x7ff7265764f4,12,StringFromCodePoint
code-creation,Builtin,2,237755,0x7ff726576534,1456,StringFromCharCode
code-creation,Builtin,2,237766,0x7ff726576af4,12,StringPrototypeLastIndexOf
code-creation,Builtin,2,237776,0x7ff726576b34,4316,StringPrototypeMatchAll
code-creation,Builtin,2,237787,0x7ff726577c34,12,StringPrototypeLocaleCompare
code-creation,Builtin,2,237798,0x7ff726577c74,1216,StringPrototypeReplace
code-creation,Builtin,2,237809,0x7ff726578174,2900,StringPrototypeSplit
code-creation,Builtin,2,237820,0x7ff726578cf4,12,StringRaw
code-creation,Builtin,2,237830,0x7ff726578d34,12,SymbolConstructor
code-creation,Builtin,2,237840,0x7ff726578d74,12,SymbolFor
code-creation,Builtin,2,237850,0x7ff726578db4,12,SymbolKeyFor
code-creation,Builtin,2,237861,0x7ff726578df4,88,TypedArrayBaseConstructor
code-creation,Builtin,2,237871,0x7ff726578e74,264,TypedArrayConstructor
code-creation,Builtin,2,237882,0x7ff726578fb4,12,TypedArrayPrototypeBuffer
code-creation,Builtin,2,237893,0x7ff726578ff4,912,TypedArrayPrototypeByteLength
code-creation,Builtin,2,237904,0x7ff7265793b4,360,TypedArrayPrototypeByteOffset
code-creation,Builtin,2,237915,0x7ff726579534,616,TypedArrayPrototypeLength
code-creation,Builtin,2,237925,0x7ff7265797b4,12,TypedArrayPrototypeCopyWithin
code-creation,Builtin,2,237936,0x7ff7265797f4,12,TypedArrayPrototypeFill
code-creation,Builtin,2,237947,0x7ff726579834,12,TypedArrayPrototypeIncludes
code-creation,Builtin,2,237958,0x7ff726579874,12,TypedArrayPrototypeIndexOf
code-creation,Builtin,2,237969,0x7ff7265798b4,12,TypedArrayPrototypeLastIndexOf
code-creation,Builtin,2,237980,0x7ff7265798f4,12,TypedArrayPrototypeReverse
code-creation,Builtin,2,237990,0x7ff726579934,304,TypedArrayPrototypeToStringTag
code-creation,Builtin,2,238002,0x7ff726579a74,24304,TypedArrayPrototypeMap
code-creation,Builtin,2,238029,0x7ff72657f974,1000,GenericJSToWasmWrapper
code-creation,Builtin,2,238041,0x7ff72657fd74,1176,WasmReturnPromiseOnSuspend
code-creation,Builtin,2,238052,0x7ff726580234,156,WasmSuspend
code-creation,Builtin,2,238063,0x7ff7265802f4,248,WasmResume
code-creation,Builtin,2,238073,0x7ff7265803f4,160,WasmCompileLazy
code-creation,Builtin,2,238084,0x7ff7265804b4,168,WasmDebugBreak
code-creation,Builtin,2,238094,0x7ff726580574,16,WasmOnStackReplace
code-creation,Builtin,2,238105,0x7ff7265805b4,136,WasmFloat32ToNumber
code-creation,Builtin,2,238115,0x7ff726580674,148,WasmFloat64ToNumber
code-creation,Builtin,2,238126,0x7ff726580734,4,WasmI32AtomicWait32
code-creation,Builtin,2,238136,0x7ff726580774,4,WasmI64AtomicWait32
code-creation,Builtin,2,238146,0x7ff7265807b4,24,JSToWasmLazyDeoptContinuation
code-creation,Builtin,2,238157,0x7ff7265807f4,4380,WeakMapConstructor
code-creation,Builtin,2,238168,0x7ff726581934,212,WeakMapLookupHashIndex
code-creation,Builtin,2,238179,0x7ff726581a34,220,WeakMapGet
code-creation,Builtin,2,238189,0x7ff726581b34,180,WeakMapPrototypeHas
code-creation,Builtin,2,238199,0x7ff726581bf4,220,WeakMapPrototypeSet
code-creation,Builtin,2,238210,0x7ff726581cf4,144,WeakMapPrototypeDelete
code-creation,Builtin,2,238221,0x7ff726581db4,2960,WeakSetConstructor
code-creation,Builtin,2,238231,0x7ff726582974,180,WeakSetPrototypeHas
code-creation,Builtin,2,238242,0x7ff726582a34,224,WeakSetPrototypeAdd
code-creation,Builtin,2,238252,0x7ff726582b34,144,WeakSetPrototypeDelete
code-creation,Builtin,2,238263,0x7ff726582bf4,396,WeakCollectionDelete
code-creation,Builtin,2,238274,0x7ff726582db4,784,WeakCollectionSet
code-creation,Builtin,2,238286,0x7ff7265830f4,12,SharedStructTypeConstructor
code-creation,Builtin,2,238298,0x7ff726583134,12,SharedStructConstructor
code-creation,Builtin,2,238310,0x7ff726583174,296,AsyncGeneratorResolve
code-creation,Builtin,2,238320,0x7ff7265832b4,104,AsyncGeneratorReject
code-creation,Builtin,2,238331,0x7ff726583334,1912,AsyncGeneratorYield
code-creation,Builtin,2,238342,0x7ff726583ab4,2028,AsyncGeneratorReturn
code-creation,Builtin,2,238352,0x7ff7265842b4,312,AsyncGeneratorResumeNext
code-creation,Builtin,2,238363,0x7ff7265843f4,12,AsyncGeneratorFunctionConstructor
code-creation,Builtin,2,238374,0x7ff726584434,1016,AsyncGeneratorPrototypeNext
code-creation,Builtin,2,238386,0x7ff726584834,1020,AsyncGeneratorPrototypeReturn
code-creation,Builtin,2,238397,0x7ff726584c34,1020,AsyncGeneratorPrototypeThrow
code-creation,Builtin,2,238408,0x7ff726585034,1860,AsyncGeneratorAwaitCaught
code-creation,Builtin,2,238418,0x7ff7265857b4,1860,AsyncGeneratorAwaitUncaught
code-creation,Builtin,2,238430,0x7ff726585f34,168,AsyncGeneratorAwaitResolveClosure
code-creation,Builtin,2,238441,0x7ff726585ff4,176,AsyncGeneratorAwaitRejectClosure
code-creation,Builtin,2,238452,0x7ff7265860b4,120,AsyncGeneratorYieldResolveClosure
code-creation,Builtin,2,238463,0x7ff726586134,120,AsyncGeneratorReturnClosedResolveClosure
code-creation,Builtin,2,238475,0x7ff7265861b4,112,AsyncGeneratorReturnClosedRejectClosure
code-creation,Builtin,2,238486,0x7ff726586234,176,AsyncGeneratorReturnResolveClosure
code-creation,Builtin,2,238497,0x7ff7265862f4,1668,AsyncFromSyncIteratorPrototypeNext
code-creation,Builtin,2,238509,0x7ff7265869b4,1780,AsyncFromSyncIteratorPrototypeThrow
code-creation,Builtin,2,238520,0x7ff7265870b4,1800,AsyncFromSyncIteratorPrototypeReturn
code-creation,Builtin,2,238531,0x7ff7265877f4,96,AsyncIteratorValueUnwrap
code-creation,Builtin,2,238542,0x7ff726587874,228,CEntry_Return1_DontSaveFPRegs_ArgvOnStack_NoBuiltinExit
code-creation,Builtin,2,238554,0x7ff726587974,228,CEntry_Return1_DontSaveFPRegs_ArgvOnStack_BuiltinExit
code-creation,Builtin,2,238566,0x7ff726587a74,212,CEntry_Return1_DontSaveFPRegs_ArgvInRegister_NoBuiltinExit
code-creation,Builtin,2,238578,0x7ff726587b74,400,CEntry_Return1_SaveFPRegs_ArgvOnStack_NoBuiltinExit
code-creation,Builtin,2,238590,0x7ff726587d34,400,CEntry_Return1_SaveFPRegs_ArgvOnStack_BuiltinExit
code-creation,Builtin,2,238602,0x7ff726587ef4,244,CEntry_Return2_DontSaveFPRegs_ArgvOnStack_NoBuiltinExit
code-creation,Builtin,2,238614,0x7ff726587ff4,244,CEntry_Return2_DontSaveFPRegs_ArgvOnStack_BuiltinExit
code-creation,Builtin,2,238626,0x7ff7265880f4,224,CEntry_Return2_DontSaveFPRegs_ArgvInRegister_NoBuiltinExit
code-creation,Builtin,2,238638,0x7ff7265881f4,416,CEntry_Return2_SaveFPRegs_ArgvOnStack_NoBuiltinExit
code-creation,Builtin,2,238650,0x7ff7265883b4,416,CEntry_Return2_SaveFPRegs_ArgvOnStack_BuiltinExit
code-creation,Builtin,2,238662,0x7ff726588574,4,DirectCEntry
code-creation,Builtin,2,238672,0x7ff7265885b4,1072,StringAdd_CheckNone
code-creation,Builtin,2,238683,0x7ff7265889f4,2420,SubString
code-creation,Builtin,2,238693,0x7ff726589374,16,StackCheck
code-creation,Builtin,2,238704,0x7ff7265893b4,84,DoubleToI
code-creation,Builtin,2,238714,0x7ff726589434,2276,GetProperty
code-creation,Builtin,2,238724,0x7ff726589d34,2368,GetPropertyWithReceiver
code-creation,Builtin,2,238735,0x7ff72658a6b4,15796,SetProperty
code-creation,Builtin,2,238745,0x7ff72658e474,13620,CreateDataProperty
code-creation,Builtin,2,238756,0x7ff7265919b4,8,MemCopyUint8Uint8
code-creation,Builtin,2,238767,0x7ff7265919f4,8,MemMove
code-creation,Builtin,2,238777,0x7ff726591a34,12,IsTraceCategoryEnabled
code-creation,Builtin,2,238787,0x7ff726591a74,12,Trace
code-creation,Builtin,2,238797,0x7ff726591ab4,12,FinalizationRegistryUnregister
code-creation,Builtin,2,238808,0x7ff726591af4,420,AsyncModuleEvaluate
code-creation,Builtin,2,238819,0x7ff726591cb4,12,CallAsyncModuleFulfilled
code-creation,Builtin,2,238830,0x7ff726591cf4,12,CallAsyncModuleRejected
code-creation,Builtin,2,238840,0x7ff726591d34,12,TemporalNowTimeZone
code-creation,Builtin,2,238852,0x7ff726591d74,12,TemporalNowInstant
code-creation,Builtin,2,238864,0x7ff726591db4,12,TemporalNowPlainDateTime
code-creation,Builtin,2,238875,0x7ff726591df4,12,TemporalNowPlainDateTimeISO
code-creation,Builtin,2,238890,0x7ff726591e34,12,TemporalNowZonedDateTime
code-creation,Builtin,2,238901,0x7ff726591e74,12,TemporalNowZonedDateTimeISO
code-creation,Builtin,2,238912,0x7ff726591eb4,12,TemporalNowPlainDate
code-creation,Builtin,2,238922,0x7ff726591ef4,12,TemporalNowPlainDateISO
code-creation,Builtin,2,238933,0x7ff726591f34,12,TemporalNowPlainTimeISO
code-creation,Builtin,2,238944,0x7ff726591f74,12,TemporalPlainDateConstructor
code-creation,Builtin,2,238954,0x7ff726591fb4,12,TemporalPlainDateFrom
code-creation,Builtin,2,238965,0x7ff726591ff4,12,TemporalPlainDateCompare
code-creation,Builtin,2,238976,0x7ff726592034,12,TemporalPlainDatePrototypeCalendar
code-creation,Builtin,2,238987,0x7ff726592074,12,TemporalPlainDatePrototypeYear
code-creation,Builtin,2,238998,0x7ff7265920b4,12,TemporalPlainDatePrototypeMonth
code-creation,Builtin,2,239009,0x7ff7265920f4,12,TemporalPlainDatePrototypeMonthCode
code-creation,Builtin,2,239020,0x7ff726592134,12,TemporalPlainDatePrototypeDay
code-creation,Builtin,2,239032,0x7ff726592174,12,TemporalPlainDatePrototypeDayOfWeek
code-creation,Builtin,2,239043,0x7ff7265921b4,12,TemporalPlainDatePrototypeDayOfYear
code-creation,Builtin,2,239055,0x7ff7265921f4,12,TemporalPlainDatePrototypeWeekOfYear
code-creation,Builtin,2,239066,0x7ff726592234,12,TemporalPlainDatePrototypeDaysInWeek
code-creation,Builtin,2,239077,0x7ff726592274,12,TemporalPlainDatePrototypeDaysInMonth
code-creation,Builtin,2,239088,0x7ff7265922b4,12,TemporalPlainDatePrototypeDaysInYear
code-creation,Builtin,2,239100,0x7ff7265922f4,12,TemporalPlainDatePrototypeMonthsInYear
code-creation,Builtin,2,239111,0x7ff726592334,12,TemporalPlainDatePrototypeInLeapYear
code-creation,Builtin,2,239122,0x7ff726592374,12,TemporalPlainDatePrototypeToPlainYearMonth
code-creation,Builtin,2,239134,0x7ff7265923b4,12,TemporalPlainDatePrototypeToPlainMonthDay
code-creation,Builtin,2,239145,0x7ff7265923f4,12,TemporalPlainDatePrototypeGetISOFields
code-creation,Builtin,2,239157,0x7ff726592434,12,TemporalPlainDatePrototypeAdd
code-creation,Builtin,2,239168,0x7ff726592474,12,TemporalPlainDatePrototypeSubtract
code-creation,Builtin,2,239179,0x7ff7265924b4,12,TemporalPlainDatePrototypeWith
code-creation,Builtin,2,239190,0x7ff7265924f4,12,TemporalPlainDatePrototypeWithCalendar
code-creation,Builtin,2,239201,0x7ff726592534,12,TemporalPlainDatePrototypeUntil
code-creation,Builtin,2,239212,0x7ff726592574,12,TemporalPlainDatePrototypeSince
code-creation,Builtin,2,239223,0x7ff7265925b4,12,TemporalPlainDatePrototypeEquals
code-creation,Builtin,2,239247,0x7ff7265925f4,12,TemporalPlainDatePrototypeToPlainDateTime
code-creation,Builtin,2,239259,0x7ff726592634,12,TemporalPlainDatePrototypeToZonedDateTime
code-creation,Builtin,2,239270,0x7ff726592674,12,TemporalPlainDatePrototypeToString
code-creation,Builtin,2,239281,0x7ff7265926b4,12,TemporalPlainDatePrototypeToJSON
code-creation,Builtin,2,239292,0x7ff7265926f4,12,TemporalPlainDatePrototypeValueOf
code-creation,Builtin,2,239326,0x7ff726592734,12,TemporalPlainTimeConstructor
code-creation,Builtin,2,239400,0x7ff726592774,12,TemporalPlainTimeFrom
code-creation,Builtin,2,239440,0x7ff7265927b4,12,TemporalPlainTimeCompare
code-creation,Builtin,2,239455,0x7ff7265927f4,12,TemporalPlainTimePrototypeCalendar
code-creation,Builtin,2,239467,0x7ff726592834,12,TemporalPlainTimePrototypeHour
code-creation,Builtin,2,239480,0x7ff726592874,12,TemporalPlainTimePrototypeMinute
code-creation,Builtin,2,239492,0x7ff7265928b4,12,TemporalPlainTimePrototypeSecond
code-creation,Builtin,2,239505,0x7ff7265928f4,12,TemporalPlainTimePrototypeMillisecond
code-creation,Builtin,2,239518,0x7ff726592934,12,TemporalPlainTimePrototypeMicrosecond
code-creation,Builtin,2,239530,0x7ff726592974,12,TemporalPlainTimePrototypeNanosecond
code-creation,Builtin,2,239543,0x7ff7265929b4,12,TemporalPlainTimePrototypeAdd
code-creation,Builtin,2,239558,0x7ff7265929f4,12,TemporalPlainTimePrototypeSubtract
code-creation,Builtin,2,239573,0x7ff726592a34,12,TemporalPlainTimePrototypeWith
code-creation,Builtin,2,239586,0x7ff726592a74,12,TemporalPlainTimePrototypeUntil
code-creation,Builtin,2,239598,0x7ff726592ab4,12,TemporalPlainTimePrototypeSince
code-creation,Builtin,2,239611,0x7ff726592af4,12,TemporalPlainTimePrototypeRound
code-creation,Builtin,2,239623,0x7ff726592b34,12,TemporalPlainTimePrototypeEquals
code-creation,Builtin,2,239635,0x7ff726592b74,12,TemporalPlainTimePrototypeToPlainDateTime
code-creation,Builtin,2,239648,0x7ff726592bb4,12,TemporalPlainTimePrototypeToZonedDateTime
code-creation,Builtin,2,239661,0x7ff726592bf4,12,TemporalPlainTimePrototypeGetISOFields
code-creation,Builtin,2,239674,0x7ff726592c34,12,TemporalPlainTimePrototypeToString
code-creation,Builtin,2,239686,0x7ff726592c74,12,TemporalPlainTimePrototypeToJSON
code-creation,Builtin,2,239699,0x7ff726592cb4,12,TemporalPlainTimePrototypeValueOf
code-creation,Builtin,2,239711,0x7ff726592cf4,12,TemporalPlainDateTimeConstructor
code-creation,Builtin,2,239724,0x7ff726592d34,12,TemporalPlainDateTimeFrom
code-creation,Builtin,2,239736,0x7ff726592d74,12,TemporalPlainDateTimeCompare
code-creation,Builtin,2,239748,0x7ff726592db4,12,TemporalPlainDateTimePrototypeCalendar
code-creation,Builtin,2,239761,0x7ff726592df4,12,TemporalPlainDateTimePrototypeYear
code-creation,Builtin,2,239773,0x7ff726592e34,12,TemporalPlainDateTimePrototypeMonth
code-creation,Builtin,2,239786,0x7ff726592e74,12,TemporalPlainDateTimePrototypeMonthCode
code-creation,Builtin,2,239798,0x7ff726592eb4,12,TemporalPlainDateTimePrototypeDay
code-creation,Builtin,2,239811,0x7ff726592ef4,12,TemporalPlainDateTimePrototypeHour
code-creation,Builtin,2,239823,0x7ff726592f34,12,TemporalPlainDateTimePrototypeMinute
code-creation,Builtin,2,239836,0x7ff726592f74,12,TemporalPlainDateTimePrototypeSecond
code-creation,Builtin,2,239848,0x7ff726592fb4,12,TemporalPlainDateTimePrototypeMillisecond
code-creation,Builtin,2,239861,0x7ff726592ff4,12,TemporalPlainDateTimePrototypeMicrosecond
code-creation,Builtin,2,239874,0x7ff726593034,12,TemporalPlainDateTimePrototypeNanosecond
code-creation,Builtin,2,239887,0x7ff726593074,12,TemporalPlainDateTimePrototypeDayOfWeek
code-creation,Builtin,2,239899,0x7ff7265930b4,12,TemporalPlainDateTimePrototypeDayOfYear
code-creation,Builtin,2,239912,0x7ff7265930f4,12,TemporalPlainDateTimePrototypeWeekOfYear
code-creation,Builtin,2,239925,0x7ff726593134,12,TemporalPlainDateTimePrototypeDaysInWeek
code-creation,Builtin,2,239938,0x7ff726593174,12,TemporalPlainDateTimePrototypeDaysInMonth
code-creation,Builtin,2,239951,0x7ff7265931b4,12,TemporalPlainDateTimePrototypeDaysInYear
code-creation,Builtin,2,239964,0x7ff7265931f4,12,TemporalPlainDateTimePrototypeMonthsInYear
code-creation,Builtin,2,239977,0x7ff726593234,12,TemporalPlainDateTimePrototypeInLeapYear
code-creation,Builtin,2,239990,0x7ff726593274,12,TemporalPlainDateTimePrototypeWith
code-creation,Builtin,2,240002,0x7ff7265932b4,12,TemporalPlainDateTimePrototypeWithPlainTime
code-creation,Builtin,2,240016,0x7ff7265932f4,12,TemporalPlainDateTimePrototypeWithPlainDate
code-creation,Builtin,2,240028,0x7ff726593334,12,TemporalPlainDateTimePrototypeWithCalendar
code-creation,Builtin,2,240041,0x7ff726593374,12,TemporalPlainDateTimePrototypeAdd
code-creation,Builtin,2,240054,0x7ff7265933b4,12,TemporalPlainDateTimePrototypeSubtract
code-creation,Builtin,2,240067,0x7ff7265933f4,12,TemporalPlainDateTimePrototypeUntil
code-creation,Builtin,2,240079,0x7ff726593434,12,TemporalPlainDateTimePrototypeSince
code-creation,Builtin,2,240092,0x7ff726593474,12,TemporalPlainDateTimePrototypeRound
code-creation,Builtin,2,240104,0x7ff7265934b4,12,TemporalPlainDateTimePrototypeEquals
code-creation,Builtin,2,240117,0x7ff7265934f4,12,TemporalPlainDateTimePrototypeToString
code-creation,Builtin,2,240130,0x7ff726593534,12,TemporalPlainDateTimePrototypeToJSON
code-creation,Builtin,2,240142,0x7ff726593574,12,TemporalPlainDateTimePrototypeValueOf
code-creation,Builtin,2,240155,0x7ff7265935b4,12,TemporalPlainDateTimePrototypeToZonedDateTime
code-creation,Builtin,2,240172,0x7ff7265935f4,12,TemporalPlainDateTimePrototypeToPlainDate
code-creation,Builtin,2,240186,0x7ff726593634,12,TemporalPlainDateTimePrototypeToPlainYearMonth
code-creation,Builtin,2,240200,0x7ff726593674,12,TemporalPlainDateTimePrototypeToPlainMonthDay
code-creation,Builtin,2,240213,0x7ff7265936b4,12,TemporalPlainDateTimePrototypeToPlainTime
code-creation,Builtin,2,240226,0x7ff7265936f4,12,TemporalPlainDateTimePrototypeGetISOFields
code-creation,Builtin,2,240239,0x7ff726593734,12,TemporalZonedDateTimeConstructor
code-creation,Builtin,2,240251,0x7ff726593774,12,TemporalZonedDateTimeFrom
code-creation,Builtin,2,240263,0x7ff7265937b4,12,TemporalZonedDateTimeCompare
code-creation,Builtin,2,240275,0x7ff7265937f4,12,TemporalZonedDateTimePrototypeCalendar
code-creation,Builtin,2,240293,0x7ff726593834,12,TemporalZonedDateTimePrototypeTimeZone
code-creation,Builtin,2,240306,0x7ff726593874,12,TemporalZonedDateTimePrototypeYear
code-creation,Builtin,2,240319,0x7ff7265938b4,12,TemporalZonedDateTimePrototypeMonth
code-creation,Builtin,2,240332,0x7ff7265938f4,12,TemporalZonedDateTimePrototypeMonthCode
code-creation,Builtin,2,240344,0x7ff726593934,12,TemporalZonedDateTimePrototypeDay
code-creation,Builtin,2,240357,0x7ff726593974,12,TemporalZonedDateTimePrototypeHour
code-creation,Builtin,2,240369,0x7ff7265939b4,12,TemporalZonedDateTimePrototypeMinute
code-creation,Builtin,2,240382,0x7ff7265939f4,12,TemporalZonedDateTimePrototypeSecond
code-creation,Builtin,2,240395,0x7ff726593a34,12,TemporalZonedDateTimePrototypeMillisecond
code-creation,Builtin,2,240407,0x7ff726593a74,12,TemporalZonedDateTimePrototypeMicrosecond
code-creation,Builtin,2,240420,0x7ff726593ab4,12,TemporalZonedDateTimePrototypeNanosecond
code-creation,Builtin,2,240433,0x7ff726593af4,12,TemporalZonedDateTimePrototypeEpochSeconds
code-creation,Builtin,2,240448,0x7ff726593b34,12,TemporalZonedDateTimePrototypeEpochMilliseconds
code-creation,Builtin,2,240473,0x7ff726593b74,12,TemporalZonedDateTimePrototypeEpochMicroseconds
code-creation,Builtin,2,240487,0x7ff726593bb4,12,TemporalZonedDateTimePrototypeEpochNanoseconds
code-creation,Builtin,2,240500,0x7ff726593bf4,12,TemporalZonedDateTimePrototypeDayOfWeek
code-creation,Builtin,2,240514,0x7ff726593c34,12,TemporalZonedDateTimePrototypeDayOfYear
code-creation,Builtin,2,240526,0x7ff726593c74,12,TemporalZonedDateTimePrototypeWeekOfYear
code-creation,Builtin,2,240539,0x7ff726593cb4,12,TemporalZonedDateTimePrototypeHoursInDay
code-creation,Builtin,2,240552,0x7ff726593cf4,12,TemporalZonedDateTimePrototypeDaysInWeek
code-creation,Builtin,2,240565,0x7ff726593d34,12,TemporalZonedDateTimePrototypeDaysInMonth
code-creation,Builtin,2,240578,0x7ff726593d74,12,TemporalZonedDateTimePrototypeDaysInYear
code-creation,Builtin,2,240590,0x7ff726593db4,12,TemporalZonedDateTimePrototypeMonthsInYear
code-creation,Builtin,2,240603,0x7ff726593df4,12,TemporalZonedDateTimePrototypeInLeapYear
code-creation,Builtin,2,240616,0x7ff726593e34,12,TemporalZonedDateTimePrototypeOffsetNanoseconds
code-creation,Builtin,2,240629,0x7ff726593e74,12,TemporalZonedDateTimePrototypeOffset
code-creation,Builtin,2,240642,0x7ff726593eb4,12,TemporalZonedDateTimePrototypeWith
code-creation,Builtin,2,240655,0x7ff726593ef4,12,TemporalZonedDateTimePrototypeWithPlainTime
code-creation,Builtin,2,240668,0x7ff726593f34,12,TemporalZonedDateTimePrototypeWithPlainDate
code-creation,Builtin,2,240681,0x7ff726593f74,12,TemporalZonedDateTimePrototypeWithTimeZone
code-creation,Builtin,2,240694,0x7ff726593fb4,12,TemporalZonedDateTimePrototypeWithCalendar
code-creation,Builtin,2,240707,0x7ff726593ff4,12,TemporalZonedDateTimePrototypeAdd
code-creation,Builtin,2,240719,0x7ff726594034,12,TemporalZonedDateTimePrototypeSubtract
code-creation,Builtin,2,240732,0x7ff726594074,12,TemporalZonedDateTimePrototypeUntil
code-creation,Builtin,2,240745,0x7ff7265940b4,12,TemporalZonedDateTimePrototypeSince
code-creation,Builtin,2,240757,0x7ff7265940f4,12,TemporalZonedDateTimePrototypeRound
code-creation,Builtin,2,240769,0x7ff726594134,12,TemporalZonedDateTimePrototypeEquals
code-creation,Builtin,2,240784,0x7ff726594174,12,TemporalZonedDateTimePrototypeToString
code-creation,Builtin,2,240798,0x7ff7265941b4,12,TemporalZonedDateTimePrototypeToJSON
code-creation,Builtin,2,240811,0x7ff7265941f4,12,TemporalZonedDateTimePrototypeValueOf
code-creation,Builtin,2,240824,0x7ff726594234,12,TemporalZonedDateTimePrototypeStartOfDay
code-creation,Builtin,2,240837,0x7ff726594274,12,TemporalZonedDateTimePrototypeToInstant
code-creation,Builtin,2,240850,0x7ff7265942b4,12,TemporalZonedDateTimePrototypeToPlainDate
code-creation,Builtin,2,240863,0x7ff7265942f4,12,TemporalZonedDateTimePrototypeToPlainTime
code-creation,Builtin,2,240876,0x7ff726594334,12,TemporalZonedDateTimePrototypeToPlainDateTime
code-creation,Builtin,2,240889,0x7ff726594374,12,TemporalZonedDateTimePrototypeToPlainYearMonth
code-creation,Builtin,2,240902,0x7ff7265943b4,12,TemporalZonedDateTimePrototypeToPlainMonthDay
code-creation,Builtin,2,240915,0x7ff7265943f4,12,TemporalZonedDateTimePrototypeGetISOFields
code-creation,Builtin,2,240928,0x7ff726594434,12,TemporalDurationConstructor
code-creation,Builtin,2,240940,0x7ff726594474,12,TemporalDurationFrom
code-creation,Builtin,2,240952,0x7ff7265944b4,12,TemporalDurationCompare
code-creation,Builtin,2,240964,0x7ff7265944f4,12,TemporalDurationPrototypeYears
code-creation,Builtin,2,240976,0x7ff726594534,12,TemporalDurationPrototypeMonths
code-creation,Builtin,2,240989,0x7ff726594574,12,TemporalDurationPrototypeWeeks
code-creation,Builtin,2,241001,0x7ff7265945b4,12,TemporalDurationPrototypeDays
code-creation,Builtin,2,241013,0x7ff7265945f4,12,TemporalDurationPrototypeHours
code-creation,Builtin,2,241026,0x7ff726594634,12,TemporalDurationPrototypeMinutes
code-creation,Builtin,2,241038,0x7ff726594674,12,TemporalDurationPrototypeSeconds
code-creation,Builtin,2,241051,0x7ff7265946b4,12,TemporalDurationPrototypeMilliseconds
code-creation,Builtin,2,241063,0x7ff7265946f4,12,TemporalDurationPrototypeMicroseconds
code-creation,Builtin,2,241076,0x7ff726594734,12,TemporalDurationPrototypeNanoseconds
code-creation,Builtin,2,241088,0x7ff726594774,12,TemporalDurationPrototypeSign
code-creation,Builtin,2,241101,0x7ff7265947b4,12,TemporalDurationPrototypeBlank
code-creation,Builtin,2,241113,0x7ff7265947f4,12,TemporalDurationPrototypeWith
code-creation,Builtin,2,241126,0x7ff726594834,12,TemporalDurationPrototypeNegated
code-creation,Builtin,2,241138,0x7ff726594874,12,TemporalDurationPrototypeAbs
code-creation,Builtin,2,241150,0x7ff7265948b4,12,TemporalDurationPrototypeAdd
code-creation,Builtin,2,241163,0x7ff7265948f4,12,TemporalDurationPrototypeSubtract
code-creation,Builtin,2,241175,0x7ff726594934,12,TemporalDurationPrototypeRound
code-creation,Builtin,2,241188,0x7ff726594974,12,TemporalDurationPrototypeTotal
code-creation,Builtin,2,241200,0x7ff7265949b4,12,TemporalDurationPrototypeToString
code-creation,Builtin,2,241212,0x7ff7265949f4,12,TemporalDurationPrototypeToJSON
code-creation,Builtin,2,241225,0x7ff726594a34,12,TemporalDurationPrototypeValueOf
code-creation,Builtin,2,241237,0x7ff726594a74,12,TemporalInstantConstructor
code-creation,Builtin,2,241249,0x7ff726594ab4,12,TemporalInstantFrom
code-creation,Builtin,2,241261,0x7ff726594af4,12,TemporalInstantFromEpochSeconds
code-creation,Builtin,2,241274,0x7ff726594b34,12,TemporalInstantFromEpochMilliseconds
code-creation,Builtin,2,241286,0x7ff726594b74,12,TemporalInstantFromEpochMicroseconds
code-creation,Builtin,2,241299,0x7ff726594bb4,12,TemporalInstantFromEpochNanoseconds
code-creation,Builtin,2,241311,0x7ff726594bf4,12,TemporalInstantCompare
code-creation,Builtin,2,241323,0x7ff726594c34,12,TemporalInstantPrototypeEpochSeconds
code-creation,Builtin,2,241336,0x7ff726594c74,12,TemporalInstantPrototypeEpochMilliseconds
code-creation,Builtin,2,241349,0x7ff726594cb4,12,TemporalInstantPrototypeEpochMicroseconds
code-creation,Builtin,2,241361,0x7ff726594cf4,12,TemporalInstantPrototypeEpochNanoseconds
code-creation,Builtin,2,241374,0x7ff726594d34,12,TemporalInstantPrototypeAdd
code-creation,Builtin,2,241387,0x7ff726594d74,12,TemporalInstantPrototypeSubtract
code-creation,Builtin,2,241400,0x7ff726594db4,12,TemporalInstantPrototypeUntil
code-creation,Builtin,2,241414,0x7ff726594df4,12,TemporalInstantPrototypeSince
code-creation,Builtin,2,241427,0x7ff726594e34,12,TemporalInstantPrototypeRound
code-creation,Builtin,2,241439,0x7ff726594e74,12,TemporalInstantPrototypeEquals
code-creation,Builtin,2,241452,0x7ff726594eb4,12,TemporalInstantPrototypeToString
code-creation,Builtin,2,241464,0x7ff726594ef4,12,TemporalInstantPrototypeToJSON
code-creation,Builtin,2,241477,0x7ff726594f34,12,TemporalInstantPrototypeValueOf
code-creation,Builtin,2,241489,0x7ff726594f74,12,TemporalInstantPrototypeToZonedDateTime
code-creation,Builtin,2,241502,0x7ff726594fb4,12,TemporalInstantPrototypeToZonedDateTimeISO
code-creation,Builtin,2,241516,0x7ff726594ff4,12,TemporalPlainYearMonthConstructor
code-creation,Builtin,2,241549,0x7ff726595034,12,TemporalPlainYearMonthFrom
code-creation,Builtin,2,241565,0x7ff726595074,12,TemporalPlainYearMonthCompare
code-creation,Builtin,2,241578,0x7ff7265950b4,12,TemporalPlainYearMonthPrototypeCalendar
code-creation,Builtin,2,241591,0x7ff7265950f4,12,TemporalPlainYearMonthPrototypeYear
code-creation,Builtin,2,241603,0x7ff726595134,12,TemporalPlainYearMonthPrototypeMonth
code-creation,Builtin,2,241616,0x7ff726595174,12,TemporalPlainYearMonthPrototypeMonthCode
code-creation,Builtin,2,241629,0x7ff7265951b4,12,TemporalPlainYearMonthPrototypeDaysInYear
code-creation,Builtin,2,241646,0x7ff7265951f4,12,TemporalPlainYearMonthPrototypeDaysInMonth
code-creation,Builtin,2,241659,0x7ff726595234,12,TemporalPlainYearMonthPrototypeMonthsInYear
code-creation,Builtin,2,241693,0x7ff726595274,12,TemporalPlainYearMonthPrototypeInLeapYear
code-creation,Builtin,2,241707,0x7ff7265952b4,12,TemporalPlainYearMonthPrototypeWith
code-creation,Builtin,2,241720,0x7ff7265952f4,12,TemporalPlainYearMonthPrototypeAdd
code-creation,Builtin,2,241733,0x7ff726595334,12,TemporalPlainYearMonthPrototypeSubtract
code-creation,Builtin,2,241746,0x7ff726595374,12,TemporalPlainYearMonthPrototypeUntil
code-creation,Builtin,2,241759,0x7ff7265953b4,12,TemporalPlainYearMonthPrototypeSince
code-creation,Builtin,2,241771,0x7ff7265953f4,12,TemporalPlainYearMonthPrototypeEquals
code-creation,Builtin,2,241784,0x7ff726595434,12,TemporalPlainYearMonthPrototypeToString
code-creation,Builtin,2,241796,0x7ff726595474,12,TemporalPlainYearMonthPrototypeToJSON
code-creation,Builtin,2,241809,0x7ff7265954b4,12,TemporalPlainYearMonthPrototypeValueOf
code-creation,Builtin,2,241822,0x7ff7265954f4,12,TemporalPlainYearMonthPrototypeToPlainDate
code-creation,Builtin,2,241835,0x7ff726595534,12,TemporalPlainYearMonthPrototypeGetISOFields
code-creation,Builtin,2,241848,0x7ff726595574,12,TemporalPlainMonthDayConstructor
code-creation,Builtin,2,241860,0x7ff7265955b4,12,TemporalPlainMonthDayFrom
code-creation,Builtin,2,241872,0x7ff7265955f4,12,TemporalPlainMonthDayPrototypeCalendar
code-creation,Builtin,2,241885,0x7ff726595634,12,TemporalPlainMonthDayPrototypeMonthCode
code-creation,Builtin,2,241898,0x7ff726595674,12,TemporalPlainMonthDayPrototypeDay
code-creation,Builtin,2,241910,0x7ff7265956b4,12,TemporalPlainMonthDayPrototypeWith
code-creation,Builtin,2,241923,0x7ff7265956f4,12,TemporalPlainMonthDayPrototypeEquals
code-creation,Builtin,2,241936,0x7ff726595734,12,TemporalPlainMonthDayPrototypeToString
code-creation,Builtin,2,241948,0x7ff726595774,12,TemporalPlainMonthDayPrototypeToJSON
code-creation,Builtin,2,241961,0x7ff7265957b4,12,TemporalPlainMonthDayPrototypeValueOf
code-creation,Builtin,2,241973,0x7ff7265957f4,12,TemporalPlainMonthDayPrototypeToPlainDate
code-creation,Builtin,2,241986,0x7ff726595834,12,TemporalPlainMonthDayPrototypeGetISOFields
code-creation,Builtin,2,241999,0x7ff726595874,12,TemporalTimeZoneConstructor
code-creation,Builtin,2,242012,0x7ff7265958b4,12,TemporalTimeZoneFrom
code-creation,Builtin,2,242024,0x7ff7265958f4,12,TemporalTimeZonePrototypeId
code-creation,Builtin,2,242036,0x7ff726595934,12,TemporalTimeZonePrototypeGetOffsetNanosecondsFor
code-creation,Builtin,2,242049,0x7ff726595974,12,TemporalTimeZonePrototypeGetOffsetStringFor
code-creation,Builtin,2,242067,0x7ff7265959b4,12,TemporalTimeZonePrototypeGetPlainDateTimeFor
code-creation,Builtin,2,242082,0x7ff7265959f4,12,TemporalTimeZonePrototypeGetInstantFor
code-creation,Builtin,2,242095,0x7ff726595a34,12,TemporalTimeZonePrototypeGetPossibleInstantsFor
code-creation,Builtin,2,242108,0x7ff726595a74,12,TemporalTimeZonePrototypeGetNextTransition
code-creation,Builtin,2,242122,0x7ff726595ab4,12,TemporalTimeZonePrototypeGetPreviousTransition
code-creation,Builtin,2,242135,0x7ff726595af4,12,TemporalTimeZonePrototypeToString
code-creation,Builtin,2,242148,0x7ff726595b34,12,TemporalTimeZonePrototypeToJSON
code-creation,Builtin,2,242160,0x7ff726595b74,12,TemporalCalendarConstructor
code-creation,Builtin,2,242173,0x7ff726595bb4,12,TemporalCalendarFrom
code-creation,Builtin,2,242185,0x7ff726595bf4,12,TemporalCalendarPrototypeId
code-creation,Builtin,2,242197,0x7ff726595c34,12,TemporalCalendarPrototypeDateFromFields
code-creation,Builtin,2,242210,0x7ff726595c74,12,TemporalCalendarPrototypeYearMonthFromFields
code-creation,Builtin,2,242223,0x7ff726595cb4,12,TemporalCalendarPrototypeMonthDayFromFields
code-creation,Builtin,2,242236,0x7ff726595cf4,12,TemporalCalendarPrototypeDateAdd
code-creation,Builtin,2,242248,0x7ff726595d34,12,TemporalCalendarPrototypeDateUntil
code-creation,Builtin,2,242261,0x7ff726595d74,12,TemporalCalendarPrototypeYear
code-creation,Builtin,2,242273,0x7ff726595db4,12,TemporalCalendarPrototypeMonth
code-creation,Builtin,2,242285,0x7ff726595df4,12,TemporalCalendarPrototypeMonthCode
code-creation,Builtin,2,242298,0x7ff726595e34,12,TemporalCalendarPrototypeDay
code-creation,Builtin,2,242310,0x7ff726595e74,12,TemporalCalendarPrototypeDayOfWeek
code-creation,Builtin,2,242323,0x7ff726595eb4,12,TemporalCalendarPrototypeDayOfYear
code-creation,Builtin,2,242336,0x7ff726595ef4,12,TemporalCalendarPrototypeWeekOfYear
code-creation,Builtin,2,242348,0x7ff726595f34,12,TemporalCalendarPrototypeDaysInWeek
code-creation,Builtin,2,242361,0x7ff726595f74,12,TemporalCalendarPrototypeDaysInMonth
code-creation,Builtin,2,242374,0x7ff726595fb4,12,TemporalCalendarPrototypeDaysInYear
code-creation,Builtin,2,242387,0x7ff726595ff4,12,TemporalCalendarPrototypeMonthsInYear
code-creation,Builtin,2,242399,0x7ff726596034,12,TemporalCalendarPrototypeInLeapYear
code-creation,Builtin,2,242412,0x7ff726596074,12,TemporalCalendarPrototypeFields
code-creation,Builtin,2,242424,0x7ff7265960b4,12,TemporalCalendarPrototypeMergeFields
code-creation,Builtin,2,242437,0x7ff7265960f4,12,TemporalCalendarPrototypeToString
code-creation,Builtin,2,242449,0x7ff726596134,12,TemporalCalendarPrototypeToJSON
code-creation,Builtin,2,242462,0x7ff726596174,1596,StringFixedArrayFromIterable
code-creation,Builtin,2,242475,0x7ff7265967b4,1568,TemporalInstantFixedArrayFromIterable
code-creation,Builtin,2,242487,0x7ff726596df4,272,AggregateErrorConstructor
code-creation,Builtin,2,242500,0x7ff726596f34,848,ArrayPrototypeAt
code-creation,Builtin,2,242512,0x7ff7265972b4,628,ArrayPrototypeConcat
code-creation,Builtin,2,242524,0x7ff726597534,5520,ArrayPrototypeCopyWithin
code-creation,Builtin,2,242536,0x7ff726598af4,212,ArrayEveryLoopEagerDeoptContinuation
code-creation,Builtin,2,242549,0x7ff726598bf4,584,ArrayEveryLoopLazyDeoptContinuation
code-creation,Builtin,2,242561,0x7ff726598e74,3368,ArrayEveryLoopContinuation
code-creation,Builtin,2,242574,0x7ff726599bb4,1496,ArrayEvery
code-creation,Builtin,2,242585,0x7ff72659a1b4,276,ArrayFilterLoopEagerDeoptContinuation
code-creation,Builtin,2,242598,0x7ff72659a2f4,912,ArrayFilterLoopLazyDeoptContinuation
code-creation,Builtin,2,242611,0x7ff72659a6b4,3632,ArrayFilterLoopContinuation
code-creation,Builtin,2,242624,0x7ff72659b4f4,4188,ArrayFilter
code-creation,Builtin,2,242635,0x7ff72659c574,204,ArrayFindLoopEagerDeoptContinuation
code-creation,Builtin,2,242648,0x7ff72659c674,32,ArrayFindLoopLazyDeoptContinuation
code-creation,Builtin,2,242661,0x7ff72659c6b4,304,ArrayFindLoopAfterCallbackLazyDeoptContinuation
code-creation,Builtin,2,242674,0x7ff72659c7f4,508,ArrayFindLoopContinuation
code-creation,Builtin,2,242688,0x7ff72659c9f4,1476,ArrayPrototypeFind
code-creation,Builtin,2,242701,0x7ff72659cff4,204,ArrayFindIndexLoopEagerDeoptContinuation
code-creation,Builtin,2,242715,0x7ff72659d0f4,32,ArrayFindIndexLoopLazyDeoptContinuation
code-creation,Builtin,2,242728,0x7ff72659d134,304,ArrayFindIndexLoopAfterCallbackLazyDeoptContinuation
code-creation,Builtin,2,242742,0x7ff72659d274,504,ArrayFindIndexLoopContinuation
code-creation,Builtin,2,242754,0x7ff72659d474,1472,ArrayPrototypeFindIndex
code-creation,Builtin,2,242767,0x7ff72659da74,448,ArrayFindLastLoopContinuation
code-creation,Builtin,2,242779,0x7ff72659dc74,1668,ArrayPrototypeFindLast
code-creation,Builtin,2,242791,0x7ff72659e334,444,ArrayFindLastIndexLoopContinuation
code-creation,Builtin,2,242804,0x7ff72659e4f4,1664,ArrayPrototypeFindLastIndex
code-creation,Builtin,2,242816,0x7ff72659ebb4,212,ArrayForEachLoopEagerDeoptContinuation
code-creation,Builtin,2,242829,0x7ff72659ecb4,212,ArrayForEachLoopLazyDeoptContinuation
code-creation,Builtin,2,242842,0x7ff72659edb4,3236,ArrayForEachLoopContinuation
code-creation,Builtin,2,242855,0x7ff72659fa74,1344,ArrayForEach
code-creation,Builtin,2,242866,0x7ff72659fff4,3412,ArrayFrom
code-creation,Builtin,2,242878,0x7ff7265a0d74,160,ArrayIsArray
code-creation,Builtin,2,242900,0x7ff7265a0e34,412,LoadJoinElement_DictionaryElements_0
code-creation,Builtin,2,242915,0x7ff7265a0ff4,44,LoadJoinElement_FastSmiOrObjectElements_0
code-creation,Builtin,2,242928,0x7ff7265a1034,140,LoadJoinElement_FastDoubleElements_0
code-creation,Builtin,2,242941,0x7ff7265a10f4,324,ConvertToLocaleString
code-creation,Builtin,2,242953,0x7ff7265a1274,768,JoinStackPush
code-creation,Builtin,2,242965,0x7ff7265a15b4,280,JoinStackPop
code-creation,Builtin,2,242977,0x7ff7265a16f4,6620,ArrayPrototypeJoin
code-creation,Builtin,2,242989,0x7ff7265a30f4,5368,ArrayPrototypeToLocaleString
code-creation,Builtin,2,243002,0x7ff7265a45f4,240,ArrayPrototypeToString
code-creation,Builtin,2,243014,0x7ff7265a46f4,6508,TypedArrayPrototypeJoin
code-creation,Builtin,2,243027,0x7ff7265a6074,5188,TypedArrayPrototypeToLocaleString
code-creation,Builtin,2,243039,0x7ff7265a74f4,3712,ArrayPrototypeLastIndexOf
code-creation,Builtin,2,243052,0x7ff7265a83b4,256,ArrayMapPreLoopLazyDeoptContinuation
code-creation,Builtin,2,243064,0x7ff7265a84f4,244,ArrayMapLoopEagerDeoptContinuation
code-creation,Builtin,2,243077,0x7ff7265a85f4,496,ArrayMapLoopLazyDeoptContinuation
code-creation,Builtin,2,243089,0x7ff7265a87f4,3256,ArrayMapLoopContinuation
code-creation,Builtin,2,243102,0x7ff7265a94b4,3840,ArrayMap
code-creation,Builtin,2,243113,0x7ff7265aa3f4,868,ArrayOf
code-creation,Builtin,2,243125,0x7ff7265aa774,424,ArrayReduceRightPreLoopEagerDeoptContinuation
code-creation,Builtin,2,243141,0x7ff7265aa934,204,ArrayReduceRightLoopEagerDeoptContinuation
code-creation,Builtin,2,243154,0x7ff7265aaa34,204,ArrayReduceRightLoopLazyDeoptContinuation
code-creation,Builtin,2,243167,0x7ff7265aab34,3280,ArrayReduceRightLoopContinuation
code-creation,Builtin,2,243180,0x7ff7265ab834,1948,ArrayReduceRight
code-creation,Builtin,2,243192,0x7ff7265abff4,180,ArrayReducePreLoopEagerDeoptContinuation
code-creation,Builtin,2,243205,0x7ff7265ac0b4,204,ArrayReduceLoopEagerDeoptContinuation
code-creation,Builtin,2,243218,0x7ff7265ac1b4,204,ArrayReduceLoopLazyDeoptContinuation
code-creation,Builtin,2,243231,0x7ff7265ac2b4,3320,ArrayReduceLoopContinuation
code-creation,Builtin,2,243243,0x7ff7265acfb4,1564,ArrayReduce
code-creation,Builtin,2,243255,0x7ff7265ad5f4,3180,ArrayPrototypeReverse
code-creation,Builtin,2,243267,0x7ff7265ae274,3608,ArrayPrototypeShift
code-creation,Builtin,2,243279,0x7ff7265af0b4,5140,ArrayPrototypeSlice
code-creation,Builtin,2,243291,0x7ff7265b04f4,212,ArraySomeLoopEagerDeoptContinuation
code-creation,Builtin,2,243304,0x7ff7265b05f4,556,ArraySomeLoopLazyDeoptContinuation
code-creation,Builtin,2,243317,0x7ff7265b0834,3360,ArraySomeLoopContinuation
code-creation,Builtin,2,243329,0x7ff7265b1574,1476,ArraySome
code-creation,Builtin,2,243341,0x7ff7265b1b74,13776,ArrayPrototypeSplice
code-creation,Builtin,2,243354,0x7ff7265b5174,3052,ArrayPrototypeUnshift
code-creation,Builtin,2,243368,0x7ff7265b5d74,324,ArrayBufferPrototypeGetByteLength
code-creation,Builtin,2,243381,0x7ff7265b5ef4,488,ArrayBufferPrototypeGetMaxByteLength
code-creation,Builtin,2,243394,0x7ff7265b60f4,212,ArrayBufferPrototypeGetResizable
code-creation,Builtin,2,243406,0x7ff7265b61f4,324,SharedArrayBufferPrototypeGetMaxByteLength
code-creation,Builtin,2,243420,0x7ff7265b6374,212,SharedArrayBufferPrototypeGetGrowable
code-creation,Builtin,2,243433,0x7ff7265b6474,100,ArrayBufferIsView
code-creation,Builtin,2,243449,0x7ff7265b64f4,396,ToInteger
code-creation,Builtin,2,243462,0x7ff7265b66b4,3112,FastCreateDataProperty
code-creation,Builtin,2,243474,0x7ff7265b72f4,612,CheckSameObject
code-creation,Builtin,2,243486,0x7ff7265b7574,928,BooleanConstructor
code-creation,Builtin,2,243498,0x7ff7265b7934,160,BooleanPrototypeToString
code-creation,Builtin,2,243510,0x7ff7265b79f4,156,BooleanPrototypeValueOf
code-creation,Builtin,2,243522,0x7ff7265b7ab4,1196,BigIntAddNoThrow
code-creation,Builtin,2,243534,0x7ff7265b7f74,1280,BigIntAdd
code-creation,Builtin,2,243546,0x7ff7265b84b4,1196,BigIntSubtractNoThrow
code-creation,Builtin,2,243558,0x7ff7265b8974,1284,BigIntSubtract
code-creation,Builtin,2,243570,0x7ff7265b8eb4,288,BigIntUnaryMinus
code-creation,Builtin,2,243582,0x7ff7265b8ff4,1348,ToString
code-creation,Builtin,2,243594,0x7ff7265b9574,156,StringPrototypeToString
code-creation,Builtin,2,243606,0x7ff7265b9634,156,StringPrototypeValueOf
code-creation,Builtin,2,243618,0x7ff7265b96f4,2476,StringToList
code-creation,Builtin,2,243630,0x7ff7265ba0b4,996,StringPrototypeCharAt
code-creation,Builtin,2,243642,0x7ff7265ba4b4,696,StringPrototypeCharCodeAt
code-creation,Builtin,2,243654,0x7ff7265ba774,1236,StringPrototypeCodePointAt
code-creation,Builtin,2,243667,0x7ff7265bac74,420,StringPrototypeConcat
code-creation,Builtin,2,243679,0x7ff7265bae34,984,StringConstructor
code-creation,Builtin,2,243691,0x7ff7265bb234,1408,StringAddConvertLeft
code-creation,Builtin,2,243703,0x7ff7265bb7f4,1440,StringAddConvertRight
code-creation,Builtin,2,243715,0x7ff7265bbdb4,792,StringCharAt
code-creation,Builtin,2,243727,0x7ff7265bc0f4,16,FastNewClosureBaseline
code-creation,Builtin,2,243739,0x7ff7265bc134,200,FastNewFunctionContextEval
code-creation,Builtin,2,243751,0x7ff7265bc234,200,FastNewFunctionContextFunction
code-creation,Builtin,2,243764,0x7ff7265bc334,248,CreateRegExpLiteral
code-creation,Builtin,2,243776,0x7ff7265bc434,1068,CreateShallowArrayLiteral
code-creation,Builtin,2,243788,0x7ff7265bc874,500,CreateEmptyArrayLiteral
code-creation,Builtin,2,243801,0x7ff7265bca74,1844,CreateShallowObjectLiteral
code-creation,Builtin,2,243813,0x7ff7265bd1b4,388,ObjectConstructor
code-creation,Builtin,2,243825,0x7ff7265bd374,176,CreateEmptyLiteralObject
code-creation,Builtin,2,243837,0x7ff7265bd434,544,NumberConstructor
code-creation,Builtin,2,243849,0x7ff7265bd674,60,GenericLazyDeoptContinuation
code-creation,Builtin,2,243861,0x7ff7265bd6b4,64,StringToNumber
code-creation,Builtin,2,243873,0x7ff7265bd734,184,NonNumberToNumber
code-creation,Builtin,2,243885,0x7ff7265bd7f4,240,NonNumberToNumeric
code-creation,Builtin,2,243897,0x7ff7265bd8f4,36,ToNumeric
code-creation,Builtin,2,243908,0x7ff7265bd934,1296,NumberToString
code-creation,Builtin,2,243922,0x7ff7265bde74,104,ToBoolean
code-creation,Builtin,2,243952,0x7ff7265bdef4,100,ToBooleanForBaselineJump
code-creation,Builtin,2,243969,0x7ff7265bdf74,604,ToLength
code-creation,Builtin,2,243981,0x7ff7265be1f4,1332,ToName
code-creation,Builtin,2,243993,0x7ff7265be734,756,ToObject
code-creation,Builtin,2,244004,0x7ff7265bea34,236,NonPrimitiveToPrimitive_Default
code-creation,Builtin,2,244016,0x7ff7265beb34,236,NonPrimitiveToPrimitive_Number
code-creation,Builtin,2,244029,0x7ff7265bec34,236,NonPrimitiveToPrimitive_String
code-creation,Builtin,2,244041,0x7ff7265bed34,380,OrdinaryToPrimitive_Number
code-creation,Builtin,2,244053,0x7ff7265beeb4,380,OrdinaryToPrimitive_String
code-creation,Builtin,2,244066,0x7ff7265bf034,232,FastConsoleAssert
code-creation,Builtin,2,244080,0x7ff7265bf134,156,DataViewPrototypeGetBuffer
code-creation,Builtin,2,244094,0x7ff7265bf1f4,752,DataViewPrototypeGetByteLength
code-creation,Builtin,2,244108,0x7ff7265bf4f4,416,DataViewPrototypeGetByteOffset
code-creation,Builtin,2,244206,0x7ff7265bf6b4,816,DataViewPrototypeGetUint8
code-creation,Builtin,2,244244,0x7ff7265bf9f4,816,DataViewPrototypeGetInt8
code-creation,Builtin,2,244277,0x7ff7265bfd34,900,DataViewPrototypeGetUint16
code-creation,Builtin,2,244310,0x7ff7265c00f4,896,DataViewPrototypeGetInt16
code-creation,Builtin,2,244344,0x7ff7265c04b4,1048,DataViewPrototypeGetUint32
code-creation,Builtin,2,244376,0x7ff7265c08f4,928,DataViewPrototypeGetInt32
code-creation,Builtin,2,244392,0x7ff7265c0cb4,1080,DataViewPrototypeGetFloat32
code-creation,Builtin,2,244405,0x7ff7265c10f4,1144,DataViewPrototypeGetFloat64
code-creation,Builtin,2,244418,0x7ff7265c1574,1216,DataViewPrototypeGetBigUint64
code-creation,Builtin,2,244430,0x7ff7265c1a74,1240,DataViewPrototypeGetBigInt64
code-creation,Builtin,2,244443,0x7ff7265c1f74,1216,DataViewPrototypeSetUint8
code-creation,Builtin,2,244455,0x7ff7265c2474,1216,DataViewPrototypeSetInt8
code-creation,Builtin,2,244467,0x7ff7265c2974,1292,DataViewPrototypeSetUint16
code-creation,Builtin,2,244480,0x7ff7265c2eb4,1292,DataViewPrototypeSetInt16
code-creation,Builtin,2,244492,0x7ff7265c33f4,1328,DataViewPrototypeSetUint32
code-creation,Builtin,2,244505,0x7ff7265c3934,1328,DataViewPrototypeSetInt32
code-creation,Builtin,2,244517,0x7ff7265c3e74,1292,DataViewPrototypeSetFloat32
code-creation,Builtin,2,244529,0x7ff7265c43b4,1356,DataViewPrototypeSetFloat64
code-creation,Builtin,2,244542,0x7ff7265c4934,1232,DataViewPrototypeSetBigUint64
code-creation,Builtin,2,244554,0x7ff7265c4e34,1232,DataViewPrototypeSetBigInt64
code-creation,Builtin,2,244567,0x7ff7265c5334,828,FinalizationRegistryConstructor
code-creation,Builtin,2,244579,0x7ff7265c5674,1144,FinalizationRegistryRegister
code-creation,Builtin,2,244592,0x7ff7265c5af4,692,FinalizationRegistryPrototypeCleanupSome
code-creation,Builtin,2,244605,0x7ff7265c5db4,340,FunctionPrototypeHasInstance
code-creation,Builtin,2,244617,0x7ff7265c5f34,940,FastFunctionPrototypeBind
code-creation,Builtin,2,244630,0x7ff7265c62f4,92,IncBlockCounter
code-creation,Builtin,2,244642,0x7ff7265c6374,228,GetTemplateObject
code-creation,Builtin,2,244654,0x7ff7265c6474,92,ForInNext
code-creation,Builtin,2,244665,0x7ff7265c64f4,132,GetImportMetaObjectBaseline
code-creation,Builtin,2,244677,0x7ff7265c65b4,116,GetIteratorWithFeedback
code-creation,Builtin,2,244690,0x7ff7265c6634,100,GetIteratorBaseline
code-creation,Builtin,2,244702,0x7ff7265c66b4,268,CreateAsyncFromSyncIteratorBaseline
code-creation,Builtin,2,244714,0x7ff7265c67f4,1068,CallIteratorWithFeedback
code-creation,Builtin,2,244727,0x7ff7265c6c34,284,MathAbs
code-creation,Builtin,2,244738,0x7ff7265c6d74,424,MathCeil
code-creation,Builtin,2,244749,0x7ff7265c6f34,428,MathFloor
code-creation,Builtin,2,244761,0x7ff7265c70f4,484,MathRound
code-creation,Builtin,2,244772,0x7ff7265c72f4,428,MathTrunc
code-creation,Builtin,2,244784,0x7ff7265c74b4,376,MathPow
code-creation,Builtin,2,244795,0x7ff7265c7634,412,MathMax
code-creation,Builtin,2,244807,0x7ff7265c77f4,416,MathMin
code-creation,Builtin,2,244818,0x7ff7265c79b4,328,MathAcos
code-creation,Builtin,2,244830,0x7ff7265c7b34,328,MathAcosh
code-creation,Builtin,2,244841,0x7ff7265c7cb4,328,MathAsin
code-creation,Builtin,2,244853,0x7ff7265c7e34,328,MathAsinh
code-creation,Builtin,2,244864,0x7ff7265c7fb4,328,MathAtan
code-creation,Builtin,2,244876,0x7ff7265c8134,420,MathAtan2
code-creation,Builtin,2,244887,0x7ff7265c82f4,328,MathAtanh
code-creation,Builtin,2,244898,0x7ff7265c8474,328,MathCbrt
code-creation,Builtin,2,244910,0x7ff7265c85f4,168,MathClz32
code-creation,Builtin,2,244921,0x7ff7265c86b4,328,MathCos
code-creation,Builtin,2,244933,0x7ff7265c8834,328,MathCosh
code-creation,Builtin,2,244944,0x7ff7265c89b4,328,MathExp
code-creation,Builtin,2,244956,0x7ff7265c8b34,328,MathExpm1
code-creation,Builtin,2,244967,0x7ff7265c8cb4,268,MathFround
code-creation,Builtin,2,244979,0x7ff7265c8df4,304,MathImul
code-creation,Builtin,2,244995,0x7ff7265c8f34,328,MathLog
code-creation,Builtin,2,245009,0x7ff7265c90b4,328,MathLog1p
code-creation,Builtin,2,245021,0x7ff7265c9234,328,MathLog10
code-creation,Builtin,2,245032,0x7ff7265c93b4,328,MathLog2
code-creation,Builtin,2,245044,0x7ff7265c9534,328,MathSin
code-creation,Builtin,2,245055,0x7ff7265c96b4,176,MathSign
code-creation,Builtin,2,245067,0x7ff7265c9774,328,MathSinh
code-creation,Builtin,2,245078,0x7ff7265c98f4,264,MathSqrt
code-creation,Builtin,2,245090,0x7ff7265c9a34,328,MathTan
code-creation,Builtin,2,245101,0x7ff7265c9bb4,328,MathTanh
code-creation,Builtin,2,245113,0x7ff7265c9d34,1052,MathHypot
code-creation,Builtin,2,245125,0x7ff7265ca174,336,MathRandom
code-creation,Builtin,2,245136,0x7ff7265ca2f4,2820,NumberPrototypeToString
code-creation,Builtin,2,245149,0x7ff7265cae34,156,NumberIsFinite
code-creation,Builtin,2,245160,0x7ff7265caef4,344,NumberIsInteger
code-creation,Builtin,2,245172,0x7ff7265cb074,128,NumberIsNaN
code-creation,Builtin,2,245184,0x7ff7265cb134,376,NumberIsSafeInteger
code-creation,Builtin,2,245196,0x7ff7265cb2b4,156,NumberPrototypeValueOf
code-creation,Builtin,2,245208,0x7ff7265cb374,200,NumberParseFloat
code-creation,Builtin,2,245219,0x7ff7265cb474,252,ParseInt
code-creation,Builtin,2,245231,0x7ff7265cb574,84,NumberParseInt
code-creation,Builtin,2,245243,0x7ff7265cb5f4,820,Add
code-creation,Builtin,2,245258,0x7ff7265cb934,420,Subtract
code-creation,Builtin,2,245270,0x7ff7265cbaf4,608,Multiply
code-creation,Builtin,2,245282,0x7ff7265cbd74,532,Divide
code-creation,Builtin,2,245294,0x7ff7265cbfb4,592,Modulus
code-creation,Builtin,2,245305,0x7ff7265cc234,520,Exponentiate
code-creation,Builtin,2,245317,0x7ff7265cc474,344,Negate
code-creation,Builtin,2,245331,0x7ff7265cc5f4,108,BitwiseNot
code-creation,Builtin,2,245343,0x7ff7265cc674,108,Decrement
code-creation,Builtin,2,245355,0x7ff7265cc6f4,108,Increment
code-creation,Builtin,2,245367,0x7ff7265cc774,428,ShiftLeft
code-creation,Builtin,2,245378,0x7ff7265cc934,428,ShiftRight
code-creation,Builtin,2,245390,0x7ff7265ccaf4,540,ShiftRightLogical
code-creation,Builtin,2,245401,0x7ff7265ccd34,424,BitwiseAnd
code-creation,Builtin,2,245413,0x7ff7265ccef4,424,BitwiseOr
code-creation,Builtin,2,245425,0x7ff7265cd0b4,424,BitwiseXor
code-creation,Builtin,2,245436,0x7ff7265cd274,796,LessThan
code-creation,Builtin,2,245448,0x7ff7265cd5b4,796,LessThanOrEqual
code-creation,Builtin,2,245460,0x7ff7265cd8f4,792,GreaterThan
code-creation,Builtin,2,245471,0x7ff7265cdc34,792,GreaterThanOrEqual
code-creation,Builtin,2,245483,0x7ff7265cdf74,852,Equal
code-creation,Builtin,2,245494,0x7ff7265ce2f4,332,StrictEqual
code-creation,Builtin,2,245506,0x7ff7265ce474,3332,ObjectFromEntries
code-creation,Builtin,2,245518,0x7ff7265cf1b4,752,CreateObjectWithoutProperties
code-creation,Builtin,2,245530,0x7ff7265cf4b4,144,ObjectIsExtensible
code-creation,Builtin,2,245542,0x7ff7265cf574,148,ObjectPreventExtensions
code-creation,Builtin,2,245554,0x7ff7265cf634,140,ObjectGetPrototypeOf
code-creation,Builtin,2,245566,0x7ff7265cf6f4,304,ObjectSetPrototypeOf
code-creation,Builtin,2,245578,0x7ff7265cf834,80,ObjectPrototypeToString
code-creation,Builtin,2,245590,0x7ff7265cf8b4,96,ObjectPrototypeValueOf
code-creation,Builtin,2,245602,0x7ff7265cf934,176,ObjectPrototypeToLocaleString
code-creation,Builtin,2,245614,0x7ff7265cf9f4,872,FulfillPromise
code-creation,Builtin,2,245626,0x7ff7265cfd74,1012,RejectPromise
code-creation,Builtin,2,245639,0x7ff7265d0174,2700,NewPromiseCapability
code-creation,Builtin,2,245651,0x7ff7265d0c34,168,PromiseCapabilityDefaultReject
code-creation,Builtin,2,245664,0x7ff7265d0cf4,156,PromiseCapabilityDefaultResolve
code-creation,Builtin,2,245676,0x7ff7265d0db4,1296,PerformPromiseThen
code-creation,Builtin,2,245688,0x7ff7265d12f4,668,PromiseReject
code-creation,Builtin,2,245700,0x7ff7265d15b4,292,PromiseGetCapabilitiesExecutor
code-creation,Builtin,2,245712,0x7ff7265d16f4,108,PromiseConstructorLazyDeoptContinuation
code-creation,Builtin,2,245725,0x7ff7265d1774,4720,PromiseAll
code-creation,Builtin,2,245736,0x7ff7265d29f4,5144,PromiseAllSettled
code-creation,Builtin,2,245750,0x7ff7265d3e34,1108,PromiseAllResolveElementClosure
code-creation,Builtin,2,245764,0x7ff7265d42b4,1404,PromiseAllSettledResolveElementClosure
code-creation,Builtin,2,245777,0x7ff7265d4834,1412,PromiseAllSettledRejectElementClosure
code-creation,Builtin,2,245791,0x7ff7265d4df4,1184,PromiseAnyRejectElementClosure
code-creation,Builtin,2,245803,0x7ff7265d52b4,2728,PromiseAny
code-creation,Builtin,2,245815,0x7ff7265d5d74,3136,PromiseConstructor
code-creation,Builtin,2,245827,0x7ff7265d69f4,300,PromisePrototypeCatch
code-creation,Builtin,2,245839,0x7ff7265d6b34,88,PromiseValueThunkFinally
code-creation,Builtin,2,245851,0x7ff7265d6bb4,80,PromiseThrowerFinally
code-creation,Builtin,2,245863,0x7ff7265d6c34,1020,PromiseCatchFinally
code-creation,Builtin,2,245875,0x7ff7265d7034,1020,PromiseThenFinally
code-creation,Builtin,2,245887,0x7ff7265d7434,1796,PromisePrototypeFinally
code-creation,Builtin,2,245899,0x7ff7265d7b74,1544,PromiseRace
code-creation,Builtin,2,245911,0x7ff7265d81b4,340,PromiseFulfillReactionJob
code-creation,Builtin,2,245923,0x7ff7265d8334,444,PromiseRejectReactionJob
code-creation,Builtin,2,245935,0x7ff7265d84f4,156,PromiseResolveTrampoline
code-creation,Builtin,2,245947,0x7ff7265d85b4,680,PromiseResolve
code-creation,Builtin,2,245959,0x7ff7265d8874,696,ResolvePromise
code-creation,Builtin,2,245971,0x7ff7265d8b34,2248,PromisePrototypeThen
code-creation,Builtin,2,245983,0x7ff7265d9434,1364,PromiseResolveThenableJob
code-creation,Builtin,2,245995,0x7ff7265d99b4,448,ProxyConstructor
code-creation,Builtin,2,246007,0x7ff7265d9bb4,1768,ProxyDeleteProperty
code-creation,Builtin,2,246019,0x7ff7265da2b4,2144,ProxyGetProperty
code-creation,Builtin,2,246031,0x7ff7265dab34,1056,ProxyGetPrototypeOf
code-creation,Builtin,2,246043,0x7ff7265daf74,1692,ProxyHasProperty
code-creation,Builtin,2,246055,0x7ff7265db634,772,ProxyIsExtensible
code-creation,Builtin,2,246067,0x7ff7265db974,824,ProxyPreventExtensions
code-creation,Builtin,2,246079,0x7ff7265dbcb4,1236,ProxyRevocable
code-creation,Builtin,2,246090,0x7ff7265dc1b4,132,ProxyRevoke
code-creation,Builtin,2,246102,0x7ff7265dc274,2240,ProxySetProperty
code-creation,Builtin,2,246114,0x7ff7265dcb74,1312,ProxySetPrototypeOf
code-creation,Builtin,2,246128,0x7ff7265dd0b4,208,ReflectIsExtensible
code-creation,Builtin,2,246141,0x7ff7265dd1b4,216,ReflectPreventExtensions
code-creation,Builtin,2,246153,0x7ff7265dd2b4,184,ReflectGetPrototypeOf
code-creation,Builtin,2,246165,0x7ff7265dd374,296,ReflectSetPrototypeOf
code-creation,Builtin,2,246177,0x7ff7265dd4b4,300,ReflectGet
code-creation,Builtin,2,246189,0x7ff7265dd5f4,156,ReflectDeleteProperty
code-creation,Builtin,2,246201,0x7ff7265dd6b4,144,ReflectHas
code-creation,Builtin,2,246212,0x7ff7265dd774,5024,RegExpPrototypeExecSlow
code-creation,Builtin,2,246224,0x7ff7265deb34,5044,RegExpPrototypeExec
code-creation,Builtin,2,246236,0x7ff7265dfef4,2312,RegExpPrototypeMatchAll
code-creation,Builtin,2,246249,0x7ff7265e0834,9352,RegExpStringIteratorPrototypeNext
code-creation,Builtin,2,246261,0x7ff7265e2cf4,8744,RegExpMatchFast
code-creation,Builtin,2,246272,0x7ff7265e4f34,3572,RegExpPrototypeMatch
code-creation,Builtin,2,246285,0x7ff7265e5d34,6180,RegExpReplace
code-creation,Builtin,2,246296,0x7ff7265e7574,524,RegExpPrototypeReplace
code-creation,Builtin,2,246308,0x7ff7265e77b4,1356,RegExpSearchFast
code-creation,Builtin,2,246320,0x7ff7265e7d34,1636,RegExpPrototypeSearch
code-creation,Builtin,2,246332,0x7ff7265e83b4,200,RegExpPrototypeSourceGetter
code-creation,Builtin,2,246345,0x7ff7265e84b4,5744,RegExpSplit
code-creation,Builtin,2,246356,0x7ff7265e9b34,484,RegExpPrototypeSplit
code-creation,Builtin,2,246369,0x7ff7265e9d34,2220,RegExpPrototypeTest
code-creation,Builtin,2,246381,0x7ff7265ea5f4,1284,RegExpPrototypeTestFast
code-creation,Builtin,2,246395,0x7ff7265eab34,240,RegExpPrototypeGlobalGetter
code-creation,Builtin,2,246426,0x7ff7265eac34,256,RegExpPrototypeIgnoreCaseGetter
code-creation,Builtin,2,246443,0x7ff7265ead74,256,RegExpPrototypeMultilineGetter
code-creation,Builtin,2,246458,0x7ff7265eaeb4,256,RegExpPrototypeHasIndicesGetter
code-creation,Builtin,2,246472,0x7ff7265eaff4,256,RegExpPrototypeLinearGetter
code-creation,Builtin,2,246485,0x7ff7265eb134,256,RegExpPrototypeDotAllGetter
code-creation,Builtin,2,246498,0x7ff7265eb274,284,RegExpPrototypeStickyGetter
code-creation,Builtin,2,246511,0x7ff7265eb3b4,284,RegExpPrototypeUnicodeGetter
code-creation,Builtin,2,246523,0x7ff7265eb4f4,2288,RegExpPrototypeFlagsGetter
code-creation,Builtin,2,246536,0x7ff7265ebdf4,1464,StringPrototypeAt
code-creation,Builtin,2,246548,0x7ff7265ec3b4,3096,StringPrototypeEndsWith
code-creation,Builtin,2,246560,0x7ff7265ecff4,488,CreateHTML
code-creation,Builtin,2,246572,0x7ff7265ed1f4,164,StringPrototypeAnchor
code-creation,Builtin,2,246584,0x7ff7265ed2b4,128,StringPrototypeBig
code-creation,Builtin,2,246596,0x7ff7265ed374,128,StringPrototypeBlink
code-creation,Builtin,2,246608,0x7ff7265ed434,128,StringPrototypeBold
code-creation,Builtin,2,246620,0x7ff7265ed4f4,172,StringPrototypeFontcolor
code-creation,Builtin,2,246632,0x7ff7265ed5b4,172,StringPrototypeFontsize
code-creation,Builtin,2,246644,0x7ff7265ed674,128,StringPrototypeFixed
code-creation,Builtin,2,246656,0x7ff7265ed734,128,StringPrototypeItalics
code-creation,Builtin,2,246668,0x7ff7265ed7f4,172,StringPrototypeLink
code-creation,Builtin,2,246681,0x7ff7265ed8b4,128,StringPrototypeSmall
code-creation,Builtin,2,246693,0x7ff7265ed974,128,StringPrototypeStrike
code-creation,Builtin,2,246705,0x7ff7265eda34,128,StringPrototypeSub
code-creation,Builtin,2,246717,0x7ff7265edaf4,128,StringPrototypeSup
code-creation,Builtin,2,246729,0x7ff7265edbb4,1060,StringPrototypeIncludes
code-creation,Builtin,2,246741,0x7ff7265edff4,648,StringPrototypeIndexOf
code-creation,Builtin,2,246753,0x7ff7265ee2b4,344,StringPrototypeIterator
code-creation,Builtin,2,246766,0x7ff7265ee434,1976,StringIteratorPrototypeNext
code-creation,Builtin,2,246778,0x7ff7265eebf4,1264,StringPrototypeMatch
code-creation,Builtin,2,246790,0x7ff7265ef0f4,1264,StringPrototypeSearch
code-creation,Builtin,2,246803,0x7ff7265ef5f4,816,StringPrototypePadStart
code-creation,Builtin,2,246815,0x7ff7265ef934,816,StringPrototypePadEnd
code-creation,Builtin,2,246827,0x7ff7265efc74,120,StringRepeat
code-creation,Builtin,2,246839,0x7ff7265efcf4,404,StringPrototypeRepeat
code-creation,Builtin,2,246851,0x7ff7265efeb4,11220,StringPrototypeReplaceAll
code-creation,Builtin,2,246864,0x7ff7265f2ab4,3316,StringPrototypeSlice
code-creation,Builtin,2,246876,0x7ff7265f37b4,3120,StringPrototypeStartsWith
code-creation,Builtin,2,246888,0x7ff7265f43f4,3248,StringPrototypeSubstr
code-creation,Builtin,2,246900,0x7ff7265f50b4,3168,StringPrototypeSubstring
code-creation,Builtin,2,246912,0x7ff7265f5d34,6860,StringPrototypeTrim
code-creation,Builtin,2,246925,0x7ff7265f7834,6212,StringPrototypeTrimStart
code-creation,Builtin,2,246937,0x7ff7265f90b4,5828,StringPrototypeTrimEnd
code-creation,Builtin,2,246949,0x7ff7265fa7b4,160,SymbolPrototypeDescriptionGetter
code-creation,Builtin,2,246962,0x7ff7265fa874,156,SymbolPrototypeToPrimitive
code-creation,Builtin,2,246974,0x7ff7265fa934,176,SymbolPrototypeToString
code-creation,Builtin,2,246987,0x7ff7265fa9f4,156,SymbolPrototypeValueOf
code-creation,Builtin,2,246999,0x7ff7265faab4,1152,TypedArrayPrototypeAt
code-creation,Builtin,2,247011,0x7ff7265faf74,10140,CreateTypedArray
code-creation,Builtin,2,247023,0x7ff7265fd734,1776,TypedArrayPrototypeEvery
code-creation,Builtin,2,247036,0x7ff7265fde34,420,TypedArrayPrototypeEntries
code-creation,Builtin,2,247048,0x7ff7265fdff4,4232,TypedArrayPrototypeFilter
code-creation,Builtin,2,247061,0x7ff7265ff0b4,1792,TypedArrayPrototypeFind
code-creation,Builtin,2,247073,0x7ff7265ff7f4,1796,TypedArrayPrototypeFindIndex
code-creation,Builtin,2,247085,0x7ff7265fff34,1780,TypedArrayPrototypeFindLast
code-creation,Builtin,2,247097,0x7ff726600634,1784,TypedArrayPrototypeFindLastIndex
code-creation,Builtin,2,247110,0x7ff726600d34,1660,TypedArrayPrototypeForEach
code-creation,Builtin,2,247122,0x7ff7266013b4,2348,TypedArrayFrom
code-creation,Builtin,2,247134,0x7ff726601cf4,404,TypedArrayPrototypeKeys
code-creation,Builtin,2,247148,0x7ff726601eb4,1036,TypedArrayOf
code-creation,Builtin,2,247161,0x7ff7266022f4,1764,TypedArrayPrototypeReduce
code-creation,Builtin,2,247174,0x7ff7266029f4,1756,TypedArrayPrototypeReduceRight
code-creation,Builtin,2,247186,0x7ff7266030f4,3492,TypedArrayPrototypeSet
code-creation,Builtin,2,247199,0x7ff726603eb4,3912,TypedArrayPrototypeSlice
code-creation,Builtin,2,247211,0x7ff726604e34,1792,TypedArrayPrototypeSome
code-creation,Builtin,2,247224,0x7ff726605574,948,TypedArrayMergeSort
code-creation,Builtin,2,247236,0x7ff726605934,2352,TypedArrayPrototypeSort
code-creation,Builtin,2,247248,0x7ff726606274,3188,TypedArrayPrototypeSubArray
code-creation,Builtin,2,247260,0x7ff726606ef4,420,TypedArrayPrototypeValues
code-creation,Builtin,2,247273,0x7ff7266070b4,956,WeakRefConstructor
code-creation,Builtin,2,247285,0x7ff726607474,184,WeakRefDeref
code-creation,Builtin,2,247297,0x7ff726607534,664,NewSloppyArgumentsElements
code-creation,Builtin,2,247309,0x7ff7266077f4,304,NewStrictArgumentsElements
code-creation,Builtin,2,247321,0x7ff726607934,332,NewRestArgumentsElements
code-creation,Builtin,2,247334,0x7ff726607ab4,1536,FastNewSloppyArguments
code-creation,Builtin,2,247346,0x7ff7266080f4,516,FastNewStrictArguments
code-creation,Builtin,2,247358,0x7ff726608334,564,FastNewRestArguments
code-creation,Builtin,2,247371,0x7ff726608574,668,StringSlowFlatten
code-creation,Builtin,2,247383,0x7ff726608834,2164,StringIndexOf
code-creation,Builtin,2,247394,0x7ff7266090b4,2064,TestTurbofanType
code-creation,Builtin,2,247406,0x7ff7266098f4,152,CheckTurbofanType
code-creation,Builtin,2,247418,0x7ff7266099b4,4,GenericBuiltinTest_JSAny_0
code-creation,Builtin,2,247431,0x7ff7266099f4,20,TestHelperPlus1
code-creation,Builtin,2,247442,0x7ff726609a34,20,TestHelperPlus2
code-creation,Builtin,2,247454,0x7ff726609a74,96,NewSmiBox
code-creation,Builtin,2,247466,0x7ff726609af4,24,ReturnTwoValues
code-creation,Builtin,2,247478,0x7ff726609b34,32,Load_FastSmiElements_0
code-creation,Builtin,2,247490,0x7ff726609b74,32,Load_FastObjectElements_0
code-creation,Builtin,2,247502,0x7ff726609bb4,144,Load_FastDoubleElements_0
code-creation,Builtin,2,247514,0x7ff726609c74,32,Store_FastSmiElements_0
code-creation,Builtin,2,247526,0x7ff726609cb4,96,Store_FastObjectElements_0
code-creation,Builtin,2,247539,0x7ff726609d34,48,Store_FastDoubleElements_0
code-creation,Builtin,2,247551,0x7ff726609d74,40,Delete_FastSmiElements_0
code-creation,Builtin,2,247564,0x7ff726609db4,40,Delete_FastObjectElements_0
code-creation,Builtin,2,247576,0x7ff726609df4,44,Delete_FastDoubleElements_0
code-creation,Builtin,2,247589,0x7ff726609e34,296,SortCompareDefault
code-creation,Builtin,2,247601,0x7ff726609f74,96,SortCompareUserFn
code-creation,Builtin,2,247613,0x7ff726609ff4,12,CanUseSameAccessor_GenericElementsAccessor_0
code-creation,Builtin,2,247626,0x7ff72660a034,312,Copy
code-creation,Builtin,2,247637,0x7ff72660a174,5784,MergeAt
code-creation,Builtin,2,247649,0x7ff72660b834,792,GallopLeft
code-creation,Builtin,2,247661,0x7ff72660bb74,832,GallopRight
code-creation,Builtin,2,247673,0x7ff72660bef4,3808,ArrayTimSort
code-creation,Builtin,2,247685,0x7ff72660cdf4,2100,ArrayPrototypeSort
code-creation,Builtin,2,247697,0x7ff72660d634,3564,StringFastLocaleCompare
code-creation,Builtin,2,247709,0x7ff72660e434,100,WasmInt32ToHeapNumber
code-creation,Builtin,2,247722,0x7ff72660e4b4,24,WasmFuncRefToJS
code-creation,Builtin,2,247733,0x7ff72660e4f4,124,WasmTaggedNonSmiToInt32
code-creation,Builtin,2,247745,0x7ff72660e574,76,WasmTaggedToFloat64
code-creation,Builtin,2,247758,0x7ff72660e5f4,72,WasmMemoryGrow
code-creation,Builtin,2,247769,0x7ff72660e674,100,WasmTableInit
code-creation,Builtin,2,247781,0x7ff72660e6f4,100,WasmTableCopy
code-creation,Builtin,2,247793,0x7ff72660e774,84,WasmTableFill
code-creation,Builtin,2,247805,0x7ff72660e7f4,72,WasmTableGrow
code-creation,Builtin,2,247817,0x7ff72660e874,148,WasmTableGet
code-creation,Builtin,2,247828,0x7ff72660e934,240,WasmTableSet
code-creation,Builtin,2,247840,0x7ff72660ea34,96,WasmRefFunc
code-creation,Builtin,2,247853,0x7ff72660eab4,144,WasmAllocateFixedArray
code-creation,Builtin,2,247867,0x7ff72660eb74,44,WasmThrow
code-creation,Builtin,2,247879,0x7ff72660ebb4,56,WasmRethrow
code-creation,Builtin,2,247891,0x7ff72660ebf4,44,WasmRethrowExplicitContext
code-creation,Builtin,2,247903,0x7ff72660ec34,44,WasmTriggerTierUp
code-creation,Builtin,2,247915,0x7ff72660ec74,32,WasmStackGuard
code-creation,Builtin,2,247927,0x7ff72660ecb4,32,WasmStackOverflow
code-creation,Builtin,2,247939,0x7ff72660ecf4,40,WasmTraceMemory
code-creation,Builtin,2,247951,0x7ff72660ed34,32,WasmTraceEnter
code-creation,Builtin,2,247963,0x7ff72660ed74,40,WasmTraceExit
code-creation,Builtin,2,247974,0x7ff72660edb4,340,WasmAllocateJSArray
code-creation,Builtin,2,247986,0x7ff72660ef34,120,WasmAllocateStructWithRtt
code-creation,Builtin,2,247999,0x7ff72660efb4,136,WasmAllocateArray_Uninitialized
code-creation,Builtin,2,248012,0x7ff72660f074,172,WasmAllocateArray_InitZero
code-creation,Builtin,2,248024,0x7ff72660f134,176,WasmAllocateArray_InitNull
code-creation,Builtin,2,248036,0x7ff72660f1f4,60,WasmArrayInitFromData
code-creation,Builtin,2,248049,0x7ff72660f234,140,WasmArrayCopyWithChecks
code-creation,Builtin,2,248061,0x7ff72660f2f4,72,WasmArrayCopy
code-creation,Builtin,2,248073,0x7ff72660f374,240,WasmAllocateObjectWrapper
code-creation,Builtin,2,248085,0x7ff72660f474,52,WasmSubtypeCheck
code-creation,Builtin,2,248097,0x7ff72660f4b4,8,WasmInt32ToNumber
code-creation,Builtin,2,248109,0x7ff72660f4f4,116,WasmUint32ToNumber
code-creation,Builtin,2,248121,0x7ff72660f574,144,UintPtr53ToNumber
code-creation,Builtin,2,248133,0x7ff72660f634,96,WasmAtomicNotify
code-creation,Builtin,2,248145,0x7ff72660f6b4,116,WasmI32AtomicWait64
code-creation,Builtin,2,248157,0x7ff72660f734,116,WasmI64AtomicWait64
code-creation,Builtin,2,248169,0x7ff72660f7b4,1268,CallRefIC
code-creation,Builtin,2,248181,0x7ff72660fcb4,596,WasmGetOwnProperty
code-creation,Builtin,2,248193,0x7ff72660ff34,40,WasmTrap
code-creation,Builtin,2,248204,0x7ff72660ff74,16,ThrowWasmTrapUnreachable
code-creation,Builtin,2,248217,0x7ff72660ffb4,16,ThrowWasmTrapMemOutOfBounds
code-creation,Builtin,2,248229,0x7ff72660fff4,16,ThrowWasmTrapUnalignedAccess
code-creation,Builtin,2,248241,0x7ff726610034,16,ThrowWasmTrapDivByZero
code-creation,Builtin,2,248253,0x7ff726610074,16,ThrowWasmTrapDivUnrepresentable
code-creation,Builtin,2,248266,0x7ff7266100b4,16,ThrowWasmTrapRemByZero
code-creation,Builtin,2,248278,0x7ff7266100f4,16,ThrowWasmTrapFloatUnrepresentable
code-creation,Builtin,2,248291,0x7ff726610134,16,ThrowWasmTrapFuncSigMismatch
code-creation,Builtin,2,248303,0x7ff726610174,16,ThrowWasmTrapDataSegmentOutOfBounds
code-creation,Builtin,2,248316,0x7ff7266101b4,16,ThrowWasmTrapElemSegmentDropped
code-creation,Builtin,2,248328,0x7ff7266101f4,16,ThrowWasmTrapTableOutOfBounds
code-creation,Builtin,2,248341,0x7ff726610234,16,ThrowWasmTrapRethrowNull
code-creation,Builtin,2,248353,0x7ff726610274,16,ThrowWasmTrapNullDereference
code-creation,Builtin,2,248365,0x7ff7266102b4,16,ThrowWasmTrapIllegalCast
code-creation,Builtin,2,248377,0x7ff7266102f4,16,ThrowWasmTrapArrayOutOfBounds
code-creation,Builtin,2,248390,0x7ff726610334,16,ThrowWasmTrapArrayTooLarge
code-creation,Builtin,2,248402,0x7ff726610374,168,LoadJoinElement_GenericElementsAccessor_0
code-creation,Builtin,2,248415,0x7ff726610434,24,LoadJoinTypedElement_Int32Elements_0
code-creation,Builtin,2,248427,0x7ff726610474,112,LoadJoinTypedElement_Float32Elements_0
code-creation,Builtin,2,248440,0x7ff7266104f4,108,LoadJoinTypedElement_Float64Elements_0
code-creation,Builtin,2,248453,0x7ff726610574,24,LoadJoinTypedElement_Uint8ClampedElements_0
code-creation,Builtin,2,248466,0x7ff7266105b4,216,LoadJoinTypedElement_BigUint64Elements_0
code-creation,Builtin,2,248479,0x7ff7266106b4,244,LoadJoinTypedElement_BigInt64Elements_0
code-creation,Builtin,2,248492,0x7ff7266107b4,24,LoadJoinTypedElement_Uint8Elements_0
code-creation,Builtin,2,248505,0x7ff7266107f4,24,LoadJoinTypedElement_Int8Elements_0
code-creation,Builtin,2,248518,0x7ff726610834,24,LoadJoinTypedElement_Uint16Elements_0
code-creation,Builtin,2,248532,0x7ff726610874,24,LoadJoinTypedElement_Int16Elements_0
code-creation,Builtin,2,248546,0x7ff7266108b4,128,LoadJoinTypedElement_Uint32Elements_0
code-creation,Builtin,2,248559,0x7ff726610974,12,GenericBuiltinTest_Smi_0
code-creation,Builtin,2,248572,0x7ff7266109b4,40,CanUseSameAccessor_FastDoubleElements_0
code-creation,Builtin,2,248585,0x7ff7266109f4,40,CanUseSameAccessor_FastSmiElements_0
code-creation,Builtin,2,248598,0x7ff726610a34,40,CanUseSameAccessor_FastObjectElements_0
code-creation,Builtin,2,248610,0x7ff726610a74,2760,Load_GenericElementsAccessor_0
code-creation,Builtin,2,248623,0x7ff726611574,24,Store_GenericElementsAccessor_0
code-creation,Builtin,2,248640,0x7ff7266115b4,36,Delete_GenericElementsAccessor_0
code-creation,Builtin,2,248652,0x7ff7266115f4,24,LoadTypedElement_Int32Elements_0
code-creation,Builtin,2,248665,0x7ff726611634,172,StoreTypedElementNumeric_Int32Elements_0
code-creation,Builtin,2,248678,0x7ff7266116f4,180,StoreTypedElementJSAny_Int32Elements_0
code-creation,Builtin,2,248691,0x7ff7266117b4,112,LoadTypedElement_Float32Elements_0
code-creation,Builtin,2,248704,0x7ff726611834,32,StoreTypedElementNumeric_Float32Elements_0
code-creation,Builtin,2,248719,0x7ff726611874,160,StoreTypedElementJSAny_Float32Elements_0
code-creation,Builtin,2,248752,0x7ff726611934,108,LoadTypedElement_Float64Elements_0
code-creation,Builtin,2,248768,0x7ff7266119b4,28,StoreTypedElementNumeric_Float64Elements_0
code-creation,Builtin,2,248781,0x7ff7266119f4,156,StoreTypedElementJSAny_Float64Elements_0
code-creation,Builtin,2,248794,0x7ff726611ab4,24,LoadTypedElement_Uint8ClampedElements_0
code-creation,Builtin,2,248807,0x7ff726611af4,24,StoreTypedElementNumeric_Uint8ClampedElements_0
code-creation,Builtin,2,248820,0x7ff726611b34,616,StoreTypedElementJSAny_Uint8ClampedElements_0
code-creation,Builtin,2,248833,0x7ff726611db4,216,LoadTypedElement_BigUint64Elements_0
code-creation,Builtin,2,248846,0x7ff726611eb4,56,StoreTypedElementNumeric_BigUint64Elements_0
code-creation,Builtin,2,248859,0x7ff726611ef4,196,StoreTypedElementJSAny_BigUint64Elements_0
code-creation,Builtin,2,248872,0x7ff726611ff4,244,LoadTypedElement_BigInt64Elements_0
code-creation,Builtin,2,248884,0x7ff7266120f4,56,StoreTypedElementNumeric_BigInt64Elements_0
code-creation,Builtin,2,248897,0x7ff726612134,196,StoreTypedElementJSAny_BigInt64Elements_0
code-creation,Builtin,2,248910,0x7ff726612234,24,LoadTypedElement_Uint8Elements_0
code-creation,Builtin,2,248923,0x7ff726612274,24,StoreTypedElementNumeric_Uint8Elements_0
code-creation,Builtin,2,248935,0x7ff7266122b4,180,StoreTypedElementJSAny_Uint8Elements_0
code-creation,Builtin,2,248948,0x7ff726612374,24,LoadTypedElement_Int8Elements_0
code-creation,Builtin,2,248961,0x7ff7266123b4,24,StoreTypedElementNumeric_Int8Elements_0
code-creation,Builtin,2,248973,0x7ff7266123f4,180,StoreTypedElementJSAny_Int8Elements_0
code-creation,Builtin,2,248986,0x7ff7266124b4,24,LoadTypedElement_Uint16Elements_0
code-creation,Builtin,2,248999,0x7ff7266124f4,24,StoreTypedElementNumeric_Uint16Elements_0
code-creation,Builtin,2,249011,0x7ff726612534,184,StoreTypedElementJSAny_Uint16Elements_0
code-creation,Builtin,2,249024,0x7ff7266125f4,24,LoadTypedElement_Int16Elements_0
code-creation,Builtin,2,249036,0x7ff726612634,24,StoreTypedElementNumeric_Int16Elements_0
code-creation,Builtin,2,249049,0x7ff726612674,184,StoreTypedElementJSAny_Int16Elements_0
code-creation,Builtin,2,249062,0x7ff726612734,128,LoadTypedElement_Uint32Elements_0
code-creation,Builtin,2,249074,0x7ff7266127f4,172,StoreTypedElementNumeric_Uint32Elements_0
code-creation,Builtin,2,249087,0x7ff7266128b4,180,StoreTypedElementJSAny_Uint32Elements_0
code-creation,Builtin,2,249100,0x7ff726612974,12,CollatorConstructor
code-creation,Builtin,2,249111,0x7ff7266129b4,12,CollatorInternalCompare
code-creation,Builtin,2,249124,0x7ff7266129f4,12,CollatorPrototypeCompare
code-creation,Builtin,2,249136,0x7ff726612a34,12,CollatorSupportedLocalesOf
code-creation,Builtin,2,249148,0x7ff726612a74,12,CollatorPrototypeResolvedOptions
code-creation,Builtin,2,249163,0x7ff726612ab4,12,DatePrototypeToLocaleDateString
code-creation,Builtin,2,249177,0x7ff726612af4,12,DatePrototypeToLocaleString
code-creation,Builtin,2,249191,0x7ff726612b34,12,DatePrototypeToLocaleTimeString
code-creation,Builtin,2,249203,0x7ff726612b74,12,DateTimeFormatConstructor
code-creation,Builtin,2,249215,0x7ff726612bb4,12,DateTimeFormatInternalFormat
code-creation,Builtin,2,249227,0x7ff726612bf4,12,DateTimeFormatPrototypeFormat
code-creation,Builtin,2,249239,0x7ff726612c34,12,DateTimeFormatPrototypeFormatRange
code-creation,Builtin,2,249252,0x7ff726612c74,12,DateTimeFormatPrototypeFormatRangeToParts
code-creation,Builtin,2,249264,0x7ff726612cb4,12,DateTimeFormatPrototypeFormatToParts
code-creation,Builtin,2,249277,0x7ff726612cf4,12,DateTimeFormatPrototypeResolvedOptions
code-creation,Builtin,2,249290,0x7ff726612d34,12,DateTimeFormatSupportedLocalesOf
code-creation,Builtin,2,249302,0x7ff726612d74,12,DisplayNamesConstructor
code-creation,Builtin,2,249314,0x7ff726612db4,12,DisplayNamesPrototypeOf
code-creation,Builtin,2,249327,0x7ff726612df4,12,DisplayNamesPrototypeResolvedOptions
code-creation,Builtin,2,249339,0x7ff726612e34,12,DisplayNamesSupportedLocalesOf
code-creation,Builtin,2,249352,0x7ff726612e74,12,IntlGetCanonicalLocales
code-creation,Builtin,2,249364,0x7ff726612eb4,12,IntlSupportedValuesOf
code-creation,Builtin,2,249376,0x7ff726612ef4,12,ListFormatConstructor
code-creation,Builtin,2,249388,0x7ff726612f34,228,ListFormatPrototypeFormat
code-creation,Builtin,2,249400,0x7ff726613034,228,ListFormatPrototypeFormatToParts
code-creation,Builtin,2,249412,0x7ff726613134,12,ListFormatPrototypeResolvedOptions
code-creation,Builtin,2,249425,0x7ff726613174,12,ListFormatSupportedLocalesOf
code-creation,Builtin,2,249437,0x7ff7266131b4,12,LocaleConstructor
code-creation,Builtin,2,249449,0x7ff7266131f4,12,LocalePrototypeBaseName
code-creation,Builtin,2,249461,0x7ff726613234,12,LocalePrototypeCalendar
code-creation,Builtin,2,249473,0x7ff726613274,12,LocalePrototypeCalendars
code-creation,Builtin,2,249485,0x7ff7266132b4,12,LocalePrototypeCaseFirst
code-creation,Builtin,2,249497,0x7ff7266132f4,12,LocalePrototypeCollation
code-creation,Builtin,2,249509,0x7ff726613334,12,LocalePrototypeCollations
code-creation,Builtin,2,249522,0x7ff726613374,12,LocalePrototypeHourCycle
code-creation,Builtin,2,249534,0x7ff7266133b4,12,LocalePrototypeHourCycles
code-creation,Builtin,2,249546,0x7ff7266133f4,12,LocalePrototypeLanguage
code-creation,Builtin,2,249558,0x7ff726613434,12,LocalePrototypeMaximize
code-creation,Builtin,2,249570,0x7ff726613474,12,LocalePrototypeMinimize
code-creation,Builtin,2,249582,0x7ff7266134b4,12,LocalePrototypeNumeric
code-creation,Builtin,2,249594,0x7ff7266134f4,12,LocalePrototypeNumberingSystem
code-creation,Builtin,2,249607,0x7ff726613534,12,LocalePrototypeNumberingSystems
code-creation,Builtin,2,249619,0x7ff726613574,12,LocalePrototypeRegion
code-creation,Builtin,2,249631,0x7ff7266135b4,12,LocalePrototypeScript
code-creation,Builtin,2,249643,0x7ff7266135f4,12,LocalePrototypeTextInfo
code-creation,Builtin,2,249655,0x7ff726613634,12,LocalePrototypeTimeZones
code-creation,Builtin,2,249667,0x7ff726613674,12,LocalePrototypeToString
code-creation,Builtin,2,249679,0x7ff7266136b4,12,LocalePrototypeWeekInfo
code-creation,Builtin,2,249691,0x7ff7266136f4,12,NumberFormatConstructor
code-creation,Builtin,2,249704,0x7ff726613734,12,NumberFormatInternalFormatNumber
code-creation,Builtin,2,249716,0x7ff726613774,12,NumberFormatPrototypeFormatNumber
code-creation,Builtin,2,249728,0x7ff7266137b4,12,NumberFormatPrototypeFormatRange
code-creation,Builtin,2,249741,0x7ff7266137f4,12,NumberFormatPrototypeFormatRangeToParts
code-creation,Builtin,2,249753,0x7ff726613834,12,NumberFormatPrototypeFormatToParts
code-creation,Builtin,2,249766,0x7ff726613874,12,NumberFormatPrototypeResolvedOptions
code-creation,Builtin,2,249778,0x7ff7266138b4,12,NumberFormatSupportedLocalesOf
code-creation,Builtin,2,249791,0x7ff7266138f4,12,PluralRulesConstructor
code-creation,Builtin,2,249803,0x7ff726613934,12,PluralRulesPrototypeResolvedOptions
code-creation,Builtin,2,249817,0x7ff726613974,12,PluralRulesPrototypeSelect
code-creation,Builtin,2,249830,0x7ff7266139b4,12,PluralRulesPrototypeSelectRange
code-creation,Builtin,2,249843,0x7ff7266139f4,12,PluralRulesSupportedLocalesOf
code-creation,Builtin,2,249856,0x7ff726613a34,12,RelativeTimeFormatConstructor
code-creation,Builtin,2,249868,0x7ff726613a74,12,RelativeTimeFormatPrototypeFormat
code-creation,Builtin,2,249881,0x7ff726613ab4,12,RelativeTimeFormatPrototypeFormatToParts
code-creation,Builtin,2,249894,0x7ff726613af4,12,RelativeTimeFormatPrototypeResolvedOptions
code-creation,Builtin,2,249907,0x7ff726613b34,12,RelativeTimeFormatSupportedLocalesOf
code-creation,Builtin,2,249920,0x7ff726613b74,12,SegmenterConstructor
code-creation,Builtin,2,249932,0x7ff726613bb4,12,SegmenterPrototypeResolvedOptions
code-creation,Builtin,2,249944,0x7ff726613bf4,12,SegmenterPrototypeSegment
code-creation,Builtin,2,249956,0x7ff726613c34,12,SegmenterSupportedLocalesOf
code-creation,Builtin,2,249968,0x7ff726613c74,12,SegmentIteratorPrototypeNext
code-creation,Builtin,2,249980,0x7ff726613cb4,12,SegmentsPrototypeContaining
code-creation,Builtin,2,249993,0x7ff726613cf4,12,SegmentsPrototypeIterator
code-creation,Builtin,2,250005,0x7ff726613d34,12,StringPrototypeNormalizeIntl
code-creation,Builtin,2,250017,0x7ff726613d74,12,StringPrototypeToLocaleLowerCase
code-creation,Builtin,2,250029,0x7ff726613db4,12,StringPrototypeToLocaleUpperCase
code-creation,Builtin,2,250042,0x7ff726613df4,196,StringPrototypeToLowerCaseIntl
code-creation,Builtin,2,250054,0x7ff726613ef4,12,StringPrototypeToUpperCaseIntl
code-creation,Builtin,2,250066,0x7ff726613f34,660,StringToLowerCaseIntl
code-creation,Builtin,2,250079,0x7ff7266141f4,12,TemporalCalendarPrototypeEra
code-creation,Builtin,2,250091,0x7ff726614234,12,TemporalCalendarPrototypeEraYear
code-creation,Builtin,2,250103,0x7ff726614274,12,TemporalDurationPrototypeToLocaleString
code-creation,Builtin,2,250120,0x7ff7266142b4,12,TemporalInstantPrototypeToLocaleString
code-creation,Builtin,2,250134,0x7ff7266142f4,12,TemporalPlainDatePrototypeEra
code-creation,Builtin,2,250146,0x7ff726614334,12,TemporalPlainDatePrototypeEraYear
code-creation,Builtin,2,250159,0x7ff726614374,12,TemporalPlainDatePrototypeToLocaleString
code-creation,Builtin,2,250172,0x7ff7266143b4,12,TemporalPlainDateTimePrototypeEra
code-creation,Builtin,2,250184,0x7ff7266143f4,12,TemporalPlainDateTimePrototypeEraYear
code-creation,Builtin,2,250197,0x7ff726614434,12,TemporalPlainDateTimePrototypeToLocaleString
code-creation,Builtin,2,250210,0x7ff726614474,12,TemporalPlainMonthDayPrototypeToLocaleString
code-creation,Builtin,2,250223,0x7ff7266144b4,12,TemporalPlainTimePrototypeToLocaleString
code-creation,Builtin,2,250236,0x7ff7266144f4,12,TemporalPlainYearMonthPrototypeEra
code-creation,Builtin,2,250249,0x7ff726614534,12,TemporalPlainYearMonthPrototypeEraYear
code-creation,Builtin,2,250261,0x7ff726614574,12,TemporalPlainYearMonthPrototypeToLocaleString
code-creation,Builtin,2,250274,0x7ff7266145b4,12,TemporalZonedDateTimePrototypeEra
code-creation,Builtin,2,250287,0x7ff7266145f4,12,TemporalZonedDateTimePrototypeEraYear
code-creation,Builtin,2,250299,0x7ff726614634,12,TemporalZonedDateTimePrototypeToLocaleString
code-creation,Builtin,2,250312,0x7ff726614674,12,V8BreakIteratorConstructor
code-creation,Builtin,2,250325,0x7ff7266146b4,12,V8BreakIteratorInternalAdoptText
code-creation,Builtin,2,250337,0x7ff7266146f4,12,V8BreakIteratorInternalBreakType
code-creation,Builtin,2,250350,0x7ff726614734,12,V8BreakIteratorInternalCurrent
code-creation,Builtin,2,250362,0x7ff726614774,12,V8BreakIteratorInternalFirst
code-creation,Builtin,2,250374,0x7ff7266147b4,12,V8BreakIteratorInternalNext
code-creation,Builtin,2,250387,0x7ff7266147f4,12,V8BreakIteratorPrototypeAdoptText
code-creation,Builtin,2,250399,0x7ff726614834,12,V8BreakIteratorPrototypeBreakType
code-creation,Builtin,2,250411,0x7ff726614874,12,V8BreakIteratorPrototypeCurrent
code-creation,Builtin,2,250424,0x7ff7266148b4,12,V8BreakIteratorPrototypeFirst
code-creation,Builtin,2,250436,0x7ff7266148f4,12,V8BreakIteratorPrototypeNext
code-creation,Builtin,2,250452,0x7ff726614934,12,V8BreakIteratorPrototypeResolvedOptions
code-creation,Builtin,2,250466,0x7ff726614974,12,V8BreakIteratorSupportedLocalesOf
code-creation,BytecodeHandler,0,250480,0x7ff7266149b4,24,Wide
code-creation,BytecodeHandler,0,250492,0x7ff7266149f4,24,ExtraWide
code-creation,BytecodeHandler,0,250504,0x7ff726614a34,104,DebugBreakWide
code-creation,BytecodeHandler,0,250517,0x7ff726614ab4,104,DebugBreakExtraWide
code-creation,BytecodeHandler,0,250529,0x7ff726614b34,164,DebugBreak0
code-creation,BytecodeHandler,0,250541,0x7ff726614bf4,104,DebugBreak1
code-creation,BytecodeHandler,0,250553,0x7ff726614c74,104,DebugBreak2
code-creation,BytecodeHandler,0,250565,0x7ff726614cf4,104,DebugBreak3
code-creation,BytecodeHandler,0,250577,0x7ff726614d74,104,DebugBreak4
code-creation,BytecodeHandler,0,250589,0x7ff726614df4,104,DebugBreak5
code-creation,BytecodeHandler,0,250601,0x7ff726614e74,104,DebugBreak6
code-creation,BytecodeHandler,0,250613,0x7ff726614ef4,32,Ldar
code-creation,BytecodeHandler,0,250625,0x7ff726614f34,60,LdaZero
code-creation,BytecodeHandler,0,250640,0x7ff726614f74,68,LdaSmi
code-creation,BytecodeHandler,0,250666,0x7ff726614ff4,64,LdaUndefined
code-creation,BytecodeHandler,0,250679,0x7ff726615074,64,LdaNull
code-creation,BytecodeHandler,0,250691,0x7ff7266150f4,64,LdaTheHole
code-creation,BytecodeHandler,0,250703,0x7ff726615174,24,LdaTrue
code-creation,BytecodeHandler,0,250715,0x7ff7266151b4,24,LdaFalse
code-creation,BytecodeHandler,0,250727,0x7ff7266151f4,68,LdaConstant
code-creation,BytecodeHandler,0,250739,0x7ff726615274,124,LdaContextSlot
code-creation,BytecodeHandler,0,250751,0x7ff7266152f4,124,LdaImmutableContextSlot
code-creation,BytecodeHandler,0,250764,0x7ff726615374,80,LdaCurrentContextSlot
code-creation,BytecodeHandler,0,250777,0x7ff7266153f4,80,LdaImmutableCurrentContextSlot
code-creation,BytecodeHandler,0,250790,0x7ff726615474,32,Star
code-creation,BytecodeHandler,0,250801,0x7ff7266154b4,48,Mov
code-creation,BytecodeHandler,0,250813,0x7ff7266154f4,40,PushContext
code-creation,BytecodeHandler,0,250825,0x7ff726615534,36,PopContext
code-creation,BytecodeHandler,0,250837,0x7ff726615574,56,TestReferenceEqual
code-creation,BytecodeHandler,0,250849,0x7ff7266155b4,60,TestUndetectable
code-creation,BytecodeHandler,0,250862,0x7ff7266155f4,44,TestNull
code-creation,BytecodeHandler,0,250873,0x7ff726615634,44,TestUndefined
code-creation,BytecodeHandler,0,250886,0x7ff726615674,364,TestTypeOf
code-creation,BytecodeHandler,0,250898,0x7ff7266157f4,5648,LdaGlobal
code-creation,BytecodeHandler,0,250910,0x7ff726616e34,4400,LdaGlobalInsideTypeof
code-creation,BytecodeHandler,0,250922,0x7ff726617f74,160,StaGlobal
code-creation,BytecodeHandler,0,250934,0x7ff726618034,160,StaContextSlot
code-creation,BytecodeHandler,0,250946,0x7ff7266180f4,116,StaCurrentContextSlot
code-creation,BytecodeHandler,0,250959,0x7ff726618174,124,LdaLookupSlot
code-creation,BytecodeHandler,0,250971,0x7ff7266181f4,244,LdaLookupContextSlot
code-creation,BytecodeHandler,0,250983,0x7ff7266182f4,4660,LdaLookupGlobalSlot
code-creation,BytecodeHandler,0,250996,0x7ff726619534,124,LdaLookupSlotInsideTypeof
code-creation,BytecodeHandler,0,251009,0x7ff7266195b4,244,LdaLookupContextSlotInsideTypeof
code-creation,BytecodeHandler,0,251022,0x7ff7266196b4,4572,LdaLookupGlobalSlotInsideTypeof
code-creation,BytecodeHandler,0,251034,0x7ff72661a8b4,220,StaLookupSlot
code-creation,BytecodeHandler,0,251047,0x7ff72661a9b4,5292,GetNamedProperty
code-creation,BytecodeHandler,0,251059,0x7ff72661be74,184,GetNamedPropertyFromSuper
code-creation,BytecodeHandler,0,251071,0x7ff72661bf34,200,GetKeyedProperty
code-creation,BytecodeHandler,0,251085,0x7ff72661c034,160,LdaModuleVariable
code-creation,BytecodeHandler,0,251118,0x7ff72661c0f4,292,StaModuleVariable
code-creation,BytecodeHandler,0,251134,0x7ff72661c234,176,SetNamedProperty
code-creation,BytecodeHandler,0,251147,0x7ff72661c2f4,176,DefineNamedOwnProperty
code-creation,BytecodeHandler,0,251160,0x7ff72661c3b4,168,SetKeyedProperty
code-creation,BytecodeHandler,0,251172,0x7ff72661c474,168,DefineKeyedOwnProperty
code-creation,BytecodeHandler,0,251189,0x7ff72661c534,168,StaInArrayLiteral
code-creation,BytecodeHandler,0,251204,0x7ff72661c5f4,200,DefineKeyedOwnPropertyInLiteral
code-creation,BytecodeHandler,0,251218,0x7ff72661c6f4,164,CollectTypeProfile
code-creation,BytecodeHandler,0,251231,0x7ff72661c7b4,1028,Add
code-creation,BytecodeHandler,0,251243,0x7ff72661cbf4,1056,Sub
code-creation,BytecodeHandler,0,251254,0x7ff72661d034,1036,Mul
code-creation,BytecodeHandler,0,251266,0x7ff72661d474,988,Div
code-creation,BytecodeHandler,0,251278,0x7ff72661d874,936,Mod
code-creation,BytecodeHandler,0,251290,0x7ff72661dc34,988,Exp
code-creation,BytecodeHandler,0,251301,0x7ff72661e034,992,BitwiseOr
code-creation,BytecodeHandler,0,251313,0x7ff72661e434,992,BitwiseXor
code-creation,BytecodeHandler,0,251325,0x7ff72661e834,992,BitwiseAnd
code-creation,BytecodeHandler,0,251337,0x7ff72661ec34,1008,ShiftLeft
code-creation,BytecodeHandler,0,251349,0x7ff72661f034,1008,ShiftRight
code-creation,BytecodeHandler,0,251361,0x7ff72661f434,1128,ShiftRightLogical
code-creation,BytecodeHandler,0,251374,0x7ff72661f8b4,956,AddSmi
code-creation,BytecodeHandler,0,251386,0x7ff72661fc74,964,SubSmi
code-creation,BytecodeHandler,0,251397,0x7ff726620074,892,MulSmi
code-creation,BytecodeHandler,0,251409,0x7ff7266203f4,940,DivSmi
code-creation,BytecodeHandler,0,251421,0x7ff7266207b4,812,ModSmi
code-creation,BytecodeHandler,0,251433,0x7ff726620af4,872,ExpSmi
code-creation,BytecodeHandler,0,251445,0x7ff726620e74,500,BitwiseOrSmi
code-creation,BytecodeHandler,0,251457,0x7ff726621074,500,BitwiseXorSmi
code-creation,BytecodeHandler,0,251469,0x7ff726621274,500,BitwiseAndSmi
code-creation,BytecodeHandler,0,251481,0x7ff726621474,524,ShiftLeftSmi
code-creation,BytecodeHandler,0,251493,0x7ff7266216b4,512,ShiftRightSmi
code-creation,BytecodeHandler,0,251505,0x7ff7266218f4,820,ShiftRightLogicalSmi
code-creation,BytecodeHandler,0,251518,0x7ff726621c34,656,Inc
code-creation,BytecodeHandler,0,251530,0x7ff726621ef4,656,Dec
code-creation,BytecodeHandler,0,251541,0x7ff7266221b4,652,Negate
code-creation,BytecodeHandler,0,251553,0x7ff726622474,500,BitwiseNot
code-creation,BytecodeHandler,0,251566,0x7ff726622674,120,ToBooleanLogicalNot
code-creation,BytecodeHandler,0,251578,0x7ff7266226f4,44,LogicalNot
code-creation,BytecodeHandler,0,251590,0x7ff726622734,208,TypeOf
code-creation,BytecodeHandler,0,251602,0x7ff726622834,124,DeletePropertyStrict
code-creation,BytecodeHandler,0,251615,0x7ff7266228b4,116,DeletePropertySloppy
code-creation,BytecodeHandler,0,251627,0x7ff726622934,40,GetSuperConstructor
code-creation,BytecodeHandler,0,251640,0x7ff726622974,1108,CallAnyReceiver
code-creation,BytecodeHandler,0,251652,0x7ff726622df4,1108,CallProperty
code-creation,BytecodeHandler,0,251664,0x7ff726623274,1004,CallProperty0
code-creation,BytecodeHandler,0,251677,0x7ff726623674,1016,CallProperty1
code-creation,BytecodeHandler,0,251689,0x7ff726623a74,1028,CallProperty2
code-creation,BytecodeHandler,0,251701,0x7ff726623eb4,992,CallUndefinedReceiver
code-creation,BytecodeHandler,0,251713,0x7ff7266242b4,1040,CallUndefinedReceiver0
code-creation,BytecodeHandler,0,251726,0x7ff7266246f4,1016,CallUndefinedReceiver1
code-creation,BytecodeHandler,0,251739,0x7ff726624af4,1032,CallUndefinedReceiver2
code-creation,BytecodeHandler,0,251752,0x7ff726624f34,1108,CallWithSpread
code-creation,BytecodeHandler,0,251764,0x7ff7266253b4,128,CallRuntime
code-creation,BytecodeHandler,0,251776,0x7ff726625474,164,CallRuntimeForPair
code-creation,BytecodeHandler,0,251789,0x7ff726625534,84,CallJSRuntime
code-creation,BytecodeHandler,0,251801,0x7ff7266255b4,1316,InvokeIntrinsic
code-creation,BytecodeHandler,0,251813,0x7ff726625af4,1016,Construct
code-creation,BytecodeHandler,0,251825,0x7ff726625ef4,516,ConstructWithSpread
code-creation,BytecodeHandler,0,251838,0x7ff726626134,1920,TestEqual
code-creation,BytecodeHandler,0,251850,0x7ff7266268f4,1048,TestEqualStrict
code-creation,BytecodeHandler,0,251875,0x7ff726626d34,1624,TestLessThan
code-creation,BytecodeHandler,0,251889,0x7ff7266273b4,1624,TestGreaterThan
code-creation,BytecodeHandler,0,251905,0x7ff726627a34,1624,TestLessThanOrEqual
code-creation,BytecodeHandler,0,251920,0x7ff7266280b4,1624,TestGreaterThanOrEqual
code-creation,BytecodeHandler,0,251933,0x7ff726628734,868,TestInstanceOf
code-creation,BytecodeHandler,0,251945,0x7ff726628ab4,156,TestIn
code-creation,BytecodeHandler,0,251957,0x7ff726628b74,116,ToName
code-creation,BytecodeHandler,0,251969,0x7ff726628bf4,220,ToNumber
code-creation,BytecodeHandler,0,251982,0x7ff726628cf4,240,ToNumeric
code-creation,BytecodeHandler,0,251994,0x7ff726628df4,116,ToObject
code-creation,BytecodeHandler,0,252006,0x7ff726628e74,120,ToString
code-creation,BytecodeHandler,0,252018,0x7ff726628ef4,404,CreateRegExpLiteral
code-creation,BytecodeHandler,0,252030,0x7ff7266290b4,1480,CreateArrayLiteral
code-creation,BytecodeHandler,0,252043,0x7ff7266296b4,92,CreateArrayFromIterable
code-creation,BytecodeHandler,0,252055,0x7ff726629734,788,CreateEmptyArrayLiteral
code-creation,BytecodeHandler,0,252068,0x7ff726629a74,2236,CreateObjectLiteral
code-creation,BytecodeHandler,0,252081,0x7ff72662a334,224,CreateEmptyObjectLiteral
code-creation,BytecodeHandler,0,252094,0x7ff72662a434,172,CloneObject
code-creation,BytecodeHandler,0,252106,0x7ff72662a4f4,208,GetTemplateObject
code-creation,BytecodeHandler,0,252118,0x7ff72662a5f4,328,CreateClosure
code-creation,BytecodeHandler,0,252130,0x7ff72662a774,116,CreateBlockContext
code-creation,BytecodeHandler,0,252143,0x7ff72662a7f4,132,CreateCatchContext
code-creation,BytecodeHandler,0,252156,0x7ff72662a8b4,260,CreateFunctionContext
code-creation,BytecodeHandler,0,252168,0x7ff72662a9f4,260,CreateEvalContext
code-creation,BytecodeHandler,0,252180,0x7ff72662ab34,132,CreateWithContext
code-creation,BytecodeHandler,0,252193,0x7ff72662abf4,1600,CreateMappedArguments
code-creation,BytecodeHandler,0,252206,0x7ff72662b274,588,CreateUnmappedArguments
code-creation,BytecodeHandler,0,252218,0x7ff72662b4f4,644,CreateRestParameter
code-creation,BytecodeHandler,0,252231,0x7ff72662b7b4,480,JumpLoop
code-creation,BytecodeHandler,0,252243,0x7ff72662b9b4,44,Jump
code-creation,BytecodeHandler,0,252255,0x7ff72662b9f4,56,JumpConstant
code-creation,BytecodeHandler,0,252267,0x7ff72662ba34,80,JumpIfNullConstant
code-creation,BytecodeHandler,0,252280,0x7ff72662bab4,80,JumpIfNotNullConstant
code-creation,BytecodeHandler,0,252292,0x7ff72662bb34,80,JumpIfUndefinedConstant
code-creation,BytecodeHandler,0,252305,0x7ff72662bbb4,80,JumpIfNotUndefinedConstant
code-creation,BytecodeHandler,0,252317,0x7ff72662bc34,92,JumpIfUndefinedOrNullConstant
code-creation,BytecodeHandler,0,252330,0x7ff72662bcb4,80,JumpIfTrueConstant
code-creation,BytecodeHandler,0,252343,0x7ff72662bd34,80,JumpIfFalseConstant
code-creation,BytecodeHandler,0,252355,0x7ff72662bdb4,88,JumpIfJSReceiverConstant
code-creation,BytecodeHandler,0,252368,0x7ff72662be34,160,JumpIfToBooleanTrueConstant
code-creation,BytecodeHandler,0,252381,0x7ff72662bef4,156,JumpIfToBooleanFalseConstant
code-creation,BytecodeHandler,0,252394,0x7ff72662bfb4,144,JumpIfToBooleanTrue
code-creation,BytecodeHandler,0,252407,0x7ff72662c074,144,JumpIfToBooleanFalse
code-creation,BytecodeHandler,0,252419,0x7ff72662c134,68,JumpIfTrue
code-creation,BytecodeHandler,0,252431,0x7ff72662c1b4,68,JumpIfFalse
code-creation,BytecodeHandler,0,252443,0x7ff72662c234,68,JumpIfNull
code-creation,BytecodeHandler,0,252455,0x7ff72662c2b4,68,JumpIfNotNull
code-creation,BytecodeHandler,0,252467,0x7ff72662c334,68,JumpIfUndefined
code-creation,BytecodeHandler,0,252480,0x7ff72662c3b4,68,JumpIfNotUndefined
code-creation,BytecodeHandler,0,252493,0x7ff72662c434,76,JumpIfUndefinedOrNull
code-creation,BytecodeHandler,0,252505,0x7ff72662c4b4,76,JumpIfJSReceiver
code-creation,BytecodeHandler,0,252518,0x7ff72662c534,108,SwitchOnSmiNoFeedback
code-creation,BytecodeHandler,0,252530,0x7ff72662c5b4,468,ForInEnumerate
code-creation,BytecodeHandler,0,252543,0x7ff72662c7b4,260,ForInPrepare
code-creation,BytecodeHandler,0,252555,0x7ff72662c8f4,64,ForInContinue
code-creation,BytecodeHandler,0,252567,0x7ff72662c974,264,ForInNext
code-creation,BytecodeHandler,0,252582,0x7ff72662cab4,48,ForInStep
code-creation,BytecodeHandler,0,252596,0x7ff72662caf4,36,SetPendingMessage
code-creation,BytecodeHandler,0,252609,0x7ff72662cb34,116,Throw
code-creation,BytecodeHandler,0,252621,0x7ff72662cbb4,116,ReThrow
code-creation,BytecodeHandler,0,252633,0x7ff72662cc34,112,Return
code-creation,BytecodeHandler,0,252644,0x7ff72662ccb4,192,ThrowReferenceErrorIfHole
code-creation,BytecodeHandler,0,252657,0x7ff72662cdb4,136,ThrowSuperNotCalledIfHole
code-creation,BytecodeHandler,0,252670,0x7ff72662ce74,136,ThrowSuperAlreadyCalledIfNotHole
code-creation,BytecodeHandler,0,252683,0x7ff72662cf34,156,ThrowIfNotSuperConstructor
code-creation,BytecodeHandler,0,252696,0x7ff72662cff4,124,SwitchOnGeneratorState
code-creation,BytecodeHandler,0,252709,0x7ff72662d074,524,SuspendGenerator
code-creation,BytecodeHandler,0,252721,0x7ff72662d2b4,140,ResumeGenerator
code-creation,BytecodeHandler,0,252733,0x7ff72662d374,164,GetIterator
code-creation,BytecodeHandler,0,252749,0x7ff72662d434,116,Debugger
code-creation,BytecodeHandler,0,252762,0x7ff72662d4b4,124,IncBlockCounter
code-creation,BytecodeHandler,0,252775,0x7ff72662d534,56,Abort
code-creation,BytecodeHandler,0,252787,0x7ff72662d574,32,Star0
code-creation,BytecodeHandler,0,252798,0x7ff72662d5b4,60,Illegal
code-creation,BytecodeHandler,0,252814,0x7ff72662d5f4,108,DebugBreak1.Wide
code-creation,BytecodeHandler,0,252827,0x7ff72662d674,108,DebugBreak2.Wide
code-creation,BytecodeHandler,0,252840,0x7ff72662d6f4,108,DebugBreak3.Wide
code-creation,BytecodeHandler,0,252853,0x7ff72662d774,108,DebugBreak4.Wide
code-creation,BytecodeHandler,0,252866,0x7ff72662d7f4,108,DebugBreak5.Wide
code-creation,BytecodeHandler,0,252878,0x7ff72662d874,108,DebugBreak6.Wide
code-creation,BytecodeHandler,0,252891,0x7ff72662d8f4,32,Ldar.Wide
code-creation,BytecodeHandler,0,252903,0x7ff72662d934,32,LdaSmi.Wide
code-creation,BytecodeHandler,0,252916,0x7ff72662d974,32,LdaConstant.Wide
code-creation,BytecodeHandler,0,252928,0x7ff72662d9b4,92,LdaContextSlot.Wide
code-creation,BytecodeHandler,0,252941,0x7ff72662da34,92,LdaImmutableContextSlot.Wide
code-creation,BytecodeHandler,0,252954,0x7ff72662dab4,48,LdaCurrentContextSlot.Wide
code-creation,BytecodeHandler,0,252967,0x7ff72662daf4,48,LdaImmutableCurrentContextSlot.Wide
code-creation,BytecodeHandler,0,252981,0x7ff72662db34,32,Star.Wide
code-creation,BytecodeHandler,0,252993,0x7ff72662db74,48,Mov.Wide
code-creation,BytecodeHandler,0,253005,0x7ff72662dbb4,40,PushContext.Wide
code-creation,BytecodeHandler,0,253017,0x7ff72662dbf4,36,PopContext.Wide
code-creation,BytecodeHandler,0,253030,0x7ff72662dc34,56,TestReferenceEqual.Wide
code-creation,BytecodeHandler,0,253042,0x7ff72662dc74,4536,LdaGlobal.Wide
code-creation,BytecodeHandler,0,253055,0x7ff72662ee34,4464,LdaGlobalInsideTypeof.Wide
code-creation,BytecodeHandler,0,253067,0x7ff72662ffb4,164,StaGlobal.Wide
code-creation,BytecodeHandler,0,253081,0x7ff726630074,160,StaContextSlot.Wide
code-creation,BytecodeHandler,0,253104,0x7ff726630134,116,StaCurrentContextSlot.Wide
code-creation,BytecodeHandler,0,253118,0x7ff7266301b4,128,LdaLookupSlot.Wide
code-creation,BytecodeHandler,0,253131,0x7ff726630274,248,LdaLookupContextSlot.Wide
code-creation,BytecodeHandler,0,253144,0x7ff726630374,4732,LdaLookupGlobalSlot.Wide
code-creation,BytecodeHandler,0,253157,0x7ff7266315f4,128,LdaLookupSlotInsideTypeof.Wide
code-creation,BytecodeHandler,0,253170,0x7ff7266316b4,248,LdaLookupContextSlotInsideTypeof.Wide
code-creation,BytecodeHandler,0,253184,0x7ff7266317b4,4636,LdaLookupGlobalSlotInsideTypeof.Wide
code-creation,BytecodeHandler,0,253198,0x7ff7266329f4,220,StaLookupSlot.Wide
code-creation,BytecodeHandler,0,253210,0x7ff726632af4,5304,GetNamedProperty.Wide
code-creation,BytecodeHandler,0,253223,0x7ff726633fb4,192,GetNamedPropertyFromSuper.Wide
code-creation,BytecodeHandler,0,253236,0x7ff7266340b4,156,GetKeyedProperty.Wide
code-creation,BytecodeHandler,0,253249,0x7ff726634174,160,LdaModuleVariable.Wide
code-creation,BytecodeHandler,0,253262,0x7ff726634234,300,StaModuleVariable.Wide
code-creation,BytecodeHandler,0,253276,0x7ff726634374,180,SetNamedProperty.Wide
code-creation,BytecodeHandler,0,253291,0x7ff726634434,180,DefineNamedOwnProperty.Wide
code-creation,BytecodeHandler,0,253304,0x7ff7266344f4,172,SetKeyedProperty.Wide
code-creation,BytecodeHandler,0,253317,0x7ff7266345b4,172,DefineKeyedOwnProperty.Wide
code-creation,BytecodeHandler,0,253330,0x7ff726634674,172,StaInArrayLiteral.Wide
code-creation,BytecodeHandler,0,253343,0x7ff726634734,204,DefineKeyedOwnPropertyInLiteral.Wide
code-creation,BytecodeHandler,0,253357,0x7ff726634834,168,CollectTypeProfile.Wide
code-creation,BytecodeHandler,0,253369,0x7ff7266348f4,988,Add.Wide
code-creation,BytecodeHandler,0,253381,0x7ff726634cf4,1024,Sub.Wide
code-creation,BytecodeHandler,0,253394,0x7ff726635134,992,Mul.Wide
code-creation,BytecodeHandler,0,253405,0x7ff726635534,992,Div.Wide
code-creation,BytecodeHandler,0,253417,0x7ff726635934,944,Mod.Wide
code-creation,BytecodeHandler,0,253429,0x7ff726635cf4,1004,Exp.Wide
code-creation,BytecodeHandler,0,253441,0x7ff7266360f4,1016,BitwiseOr.Wide
code-creation,BytecodeHandler,0,253454,0x7ff7266364f4,1016,BitwiseXor.Wide
code-creation,BytecodeHandler,0,253466,0x7ff7266368f4,1016,BitwiseAnd.Wide
code-creation,BytecodeHandler,0,253481,0x7ff726636cf4,1032,ShiftLeft.Wide
code-creation,BytecodeHandler,0,253513,0x7ff726637134,1032,ShiftRight.Wide
code-creation,BytecodeHandler,0,253559,0x7ff726637574,1152,ShiftRightLogical.Wide
code-creation,BytecodeHandler,0,253592,0x7ff726637a34,920,AddSmi.Wide
code-creation,BytecodeHandler,0,253607,0x7ff726637df4,932,SubSmi.Wide
code-creation,BytecodeHandler,0,253620,0x7ff7266381b4,892,MulSmi.Wide
code-creation,BytecodeHandler,0,253632,0x7ff726638534,940,DivSmi.Wide
code-creation,BytecodeHandler,0,253645,0x7ff7266388f4,812,ModSmi.Wide
code-creation,BytecodeHandler,0,253657,0x7ff726638c34,872,ExpSmi.Wide
code-creation,BytecodeHandler,0,253670,0x7ff726638fb4,508,BitwiseOrSmi.Wide
code-creation,BytecodeHandler,0,253683,0x7ff7266391b4,508,BitwiseXorSmi.Wide
code-creation,BytecodeHandler,0,253696,0x7ff7266393b4,508,BitwiseAndSmi.Wide
code-creation,BytecodeHandler,0,253708,0x7ff7266395b4,532,ShiftLeftSmi.Wide
code-creation,BytecodeHandler,0,253721,0x7ff7266397f4,520,ShiftRightSmi.Wide
code-creation,BytecodeHandler,0,253734,0x7ff726639a34,828,ShiftRightLogicalSmi.Wide
code-creation,BytecodeHandler,0,253747,0x7ff726639d74,624,Inc.Wide
code-creation,BytecodeHandler,0,253759,0x7ff726639ff4,624,Dec.Wide
code-creation,BytecodeHandler,0,253772,0x7ff72663a274,660,Negate.Wide
code-creation,BytecodeHandler,0,253784,0x7ff72663a534,512,BitwiseNot.Wide
code-creation,BytecodeHandler,0,253797,0x7ff72663a774,128,DeletePropertyStrict.Wide
code-creation,BytecodeHandler,0,253810,0x7ff72663a834,120,DeletePropertySloppy.Wide
code-creation,BytecodeHandler,0,253823,0x7ff72663a8b4,40,GetSuperConstructor.Wide
code-creation,BytecodeHandler,0,253836,0x7ff72663a8f4,1112,CallAnyReceiver.Wide
code-creation,BytecodeHandler,0,253849,0x7ff72663ad74,1112,CallProperty.Wide
code-creation,BytecodeHandler,0,253862,0x7ff72663b1f4,1004,CallProperty0.Wide
code-creation,BytecodeHandler,0,253875,0x7ff72663b5f4,1016,CallProperty1.Wide
code-creation,BytecodeHandler,0,253887,0x7ff72663b9f4,1028,CallProperty2.Wide
code-creation,BytecodeHandler,0,253900,0x7ff72663be34,992,CallUndefinedReceiver.Wide
code-creation,BytecodeHandler,0,253913,0x7ff72663c234,1044,CallUndefinedReceiver0.Wide
code-creation,BytecodeHandler,0,253927,0x7ff72663c674,1020,CallUndefinedReceiver1.Wide
code-creation,BytecodeHandler,0,253939,0x7ff72663ca74,1036,CallUndefinedReceiver2.Wide
code-creation,BytecodeHandler,0,253953,0x7ff72663ceb4,1112,CallWithSpread.Wide
code-creation,BytecodeHandler,0,253966,0x7ff72663d334,132,CallRuntime.Wide
code-creation,BytecodeHandler,0,253979,0x7ff72663d3f4,176,CallRuntimeForPair.Wide
code-creation,BytecodeHandler,0,253992,0x7ff72663d4b4,88,CallJSRuntime.Wide
code-creation,BytecodeHandler,0,254005,0x7ff72663d534,1320,InvokeIntrinsic.Wide
code-creation,BytecodeHandler,0,254018,0x7ff72663da74,968,Construct.Wide
code-creation,BytecodeHandler,0,254030,0x7ff72663de74,464,ConstructWithSpread.Wide
code-creation,BytecodeHandler,0,254046,0x7ff72663e074,1944,TestEqual.Wide
code-creation,BytecodeHandler,0,254060,0x7ff72663e834,1056,TestEqualStrict.Wide
code-creation,BytecodeHandler,0,254074,0x7ff72663ec74,1612,TestLessThan.Wide
code-creation,BytecodeHandler,0,254087,0x7ff72663f2f4,1612,TestGreaterThan.Wide
code-creation,BytecodeHandler,0,254100,0x7ff72663f974,1612,TestLessThanOrEqual.Wide
code-creation,BytecodeHandler,0,254114,0x7ff72663fff4,1612,TestGreaterThanOrEqual.Wide
code-creation,BytecodeHandler,0,254127,0x7ff726640674,876,TestInstanceOf.Wide
code-creation,BytecodeHandler,0,254140,0x7ff7266409f4,156,TestIn.Wide
code-creation,BytecodeHandler,0,254152,0x7ff726640ab4,120,ToName.Wide
code-creation,BytecodeHandler,0,254164,0x7ff726640b34,224,ToNumber.Wide
code-creation,BytecodeHandler,0,254177,0x7ff726640c34,244,ToNumeric.Wide
code-creation,BytecodeHandler,0,254189,0x7ff726640d34,120,ToObject.Wide
code-creation,BytecodeHandler,0,254201,0x7ff726640db4,408,CreateRegExpLiteral.Wide
code-creation,BytecodeHandler,0,254214,0x7ff726640f74,1404,CreateArrayLiteral.Wide
code-creation,BytecodeHandler,0,254227,0x7ff7266414f4,788,CreateEmptyArrayLiteral.Wide
code-creation,BytecodeHandler,0,254240,0x7ff726641834,2164,CreateObjectLiteral.Wide
code-creation,BytecodeHandler,0,254253,0x7ff7266420b4,176,CloneObject.Wide
code-creation,BytecodeHandler,0,254266,0x7ff726642174,164,GetTemplateObject.Wide
code-creation,BytecodeHandler,0,254279,0x7ff726642234,320,CreateClosure.Wide
code-creation,BytecodeHandler,0,254292,0x7ff7266423b4,120,CreateBlockContext.Wide
code-creation,BytecodeHandler,0,254319,0x7ff726642434,136,CreateCatchContext.Wide
code-creation,BytecodeHandler,0,254334,0x7ff7266424f4,260,CreateFunctionContext.Wide
code-creation,BytecodeHandler,0,254347,0x7ff726642634,260,CreateEvalContext.Wide
code-creation,BytecodeHandler,0,254360,0x7ff726642774,136,CreateWithContext.Wide
code-creation,BytecodeHandler,0,254373,0x7ff726642834,492,JumpLoop.Wide
code-creation,BytecodeHandler,0,254386,0x7ff726642a34,44,Jump.Wide
code-creation,BytecodeHandler,0,254398,0x7ff726642a74,56,JumpConstant.Wide
code-creation,BytecodeHandler,0,254411,0x7ff726642ab4,80,JumpIfNullConstant.Wide
code-creation,BytecodeHandler,0,254424,0x7ff726642b34,80,JumpIfNotNullConstant.Wide
code-creation,BytecodeHandler,0,254437,0x7ff726642bb4,80,JumpIfUndefinedConstant.Wide
code-creation,BytecodeHandler,0,254450,0x7ff726642c34,80,JumpIfNotUndefinedConstant.Wide
code-creation,BytecodeHandler,0,254464,0x7ff726642cb4,92,JumpIfUndefinedOrNullConstant.Wide
code-creation,BytecodeHandler,0,254477,0x7ff726642d34,80,JumpIfTrueConstant.Wide
code-creation,BytecodeHandler,0,254490,0x7ff726642db4,80,JumpIfFalseConstant.Wide
code-creation,BytecodeHandler,0,254504,0x7ff726642e34,88,JumpIfJSReceiverConstant.Wide
code-creation,BytecodeHandler,0,254517,0x7ff726642eb4,160,JumpIfToBooleanTrueConstant.Wide
code-creation,BytecodeHandler,0,254530,0x7ff726642f74,156,JumpIfToBooleanFalseConstant.Wide
code-creation,BytecodeHandler,0,254544,0x7ff726643034,144,JumpIfToBooleanTrue.Wide
code-creation,BytecodeHandler,0,254557,0x7ff7266430f4,144,JumpIfToBooleanFalse.Wide
code-creation,BytecodeHandler,0,254570,0x7ff7266431b4,68,JumpIfTrue.Wide
code-creation,BytecodeHandler,0,254583,0x7ff726643234,68,JumpIfFalse.Wide
code-creation,BytecodeHandler,0,254595,0x7ff7266432b4,68,JumpIfNull.Wide
code-creation,BytecodeHandler,0,254608,0x7ff726643334,68,JumpIfNotNull.Wide
code-creation,BytecodeHandler,0,254621,0x7ff7266433b4,68,JumpIfUndefined.Wide
code-creation,BytecodeHandler,0,254633,0x7ff726643434,68,JumpIfNotUndefined.Wide
code-creation,BytecodeHandler,0,254646,0x7ff7266434b4,76,JumpIfUndefinedOrNull.Wide
code-creation,BytecodeHandler,0,254659,0x7ff726643534,76,JumpIfJSReceiver.Wide
code-creation,BytecodeHandler,0,254672,0x7ff7266435b4,108,SwitchOnSmiNoFeedback.Wide
code-creation,BytecodeHandler,0,254685,0x7ff726643634,472,ForInEnumerate.Wide
code-creation,BytecodeHandler,0,254698,0x7ff726643834,260,ForInPrepare.Wide
code-creation,BytecodeHandler,0,254711,0x7ff726643974,64,ForInContinue.Wide
code-creation,BytecodeHandler,0,254727,0x7ff7266439f4,268,ForInNext.Wide
code-creation,BytecodeHandler,0,254741,0x7ff726643b34,48,ForInStep.Wide
code-creation,BytecodeHandler,0,254754,0x7ff726643b74,160,ThrowReferenceErrorIfHole.Wide
code-creation,BytecodeHandler,0,254767,0x7ff726643c34,160,ThrowIfNotSuperConstructor.Wide
code-creation,BytecodeHandler,0,254780,0x7ff726643cf4,124,SwitchOnGeneratorState.Wide
code-creation,BytecodeHandler,0,254794,0x7ff726643d74,532,SuspendGenerator.Wide
code-creation,BytecodeHandler,0,254807,0x7ff726643fb4,140,ResumeGenerator.Wide
code-creation,BytecodeHandler,0,254820,0x7ff726644074,168,GetIterator.Wide
code-creation,BytecodeHandler,0,254833,0x7ff726644134,128,IncBlockCounter.Wide
code-creation,BytecodeHandler,0,254846,0x7ff7266441f4,56,Abort.Wide
code-creation,BytecodeHandler,0,254858,0x7ff726644234,108,DebugBreak1.ExtraWide
code-creation,BytecodeHandler,0,254871,0x7ff7266442b4,108,DebugBreak2.ExtraWide
code-creation,BytecodeHandler,0,254884,0x7ff726644334,108,DebugBreak3.ExtraWide
code-creation,BytecodeHandler,0,254897,0x7ff7266443b4,108,DebugBreak4.ExtraWide
code-creation,BytecodeHandler,0,254910,0x7ff726644434,108,DebugBreak5.ExtraWide
code-creation,BytecodeHandler,0,254923,0x7ff7266444b4,108,DebugBreak6.ExtraWide
code-creation,BytecodeHandler,0,254983,0x7ff726644534,32,Ldar.ExtraWide
code-creation,BytecodeHandler,0,255011,0x7ff726644574,28,LdaSmi.ExtraWide
code-creation,BytecodeHandler,0,255044,0x7ff7266445b4,32,LdaConstant.ExtraWide
code-creation,BytecodeHandler,0,255056,0x7ff7266445f4,88,LdaContextSlot.ExtraWide
code-creation,BytecodeHandler,0,255070,0x7ff726644674,88,LdaImmutableContextSlot.ExtraWide
code-creation,BytecodeHandler,0,255083,0x7ff7266446f4,48,LdaCurrentContextSlot.ExtraWide
code-creation,BytecodeHandler,0,255097,0x7ff726644734,48,LdaImmutableCurrentContextSlot.ExtraWide
code-creation,BytecodeHandler,0,255111,0x7ff726644774,32,Star.ExtraWide
code-creation,BytecodeHandler,0,255122,0x7ff7266447b4,44,Mov.ExtraWide
code-creation,BytecodeHandler,0,255134,0x7ff7266447f4,40,PushContext.ExtraWide
code-creation,BytecodeHandler,0,255146,0x7ff726644834,36,PopContext.ExtraWide
code-creation,BytecodeHandler,0,255159,0x7ff726644874,52,TestReferenceEqual.ExtraWide
code-creation,BytecodeHandler,0,255171,0x7ff7266448b4,4524,LdaGlobal.ExtraWide
code-creation,BytecodeHandler,0,255182,0x7ff726645a74,4452,LdaGlobalInsideTypeof.ExtraWide
code-creation,BytecodeHandler,0,255194,0x7ff726646bf4,164,StaGlobal.ExtraWide
code-creation,BytecodeHandler,0,255208,0x7ff726646cb4,156,StaContextSlot.ExtraWide
code-creation,BytecodeHandler,0,255222,0x7ff726646d74,116,StaCurrentContextSlot.ExtraWide
code-creation,BytecodeHandler,0,255237,0x7ff726646df4,128,LdaLookupSlot.ExtraWide
code-creation,BytecodeHandler,0,255251,0x7ff726646eb4,244,LdaLookupContextSlot.ExtraWide
code-creation,BytecodeHandler,0,255265,0x7ff726646fb4,4716,LdaLookupGlobalSlot.ExtraWide
code-creation,BytecodeHandler,0,255278,0x7ff726648234,128,LdaLookupSlotInsideTypeof.ExtraWide
code-creation,BytecodeHandler,0,255292,0x7ff7266482f4,244,LdaLookupContextSlotInsideTypeof.ExtraWide
code-creation,BytecodeHandler,0,255305,0x7ff7266483f4,4624,LdaLookupGlobalSlotInsideTypeof.ExtraWide
code-creation,BytecodeHandler,0,255318,0x7ff726649634,220,StaLookupSlot.ExtraWide
code-creation,BytecodeHandler,0,255330,0x7ff726649734,5284,GetNamedProperty.ExtraWide
code-creation,BytecodeHandler,0,255342,0x7ff72664abf4,188,GetNamedPropertyFromSuper.ExtraWide
code-creation,BytecodeHandler,0,255356,0x7ff72664acb4,156,GetKeyedProperty.ExtraWide
code-creation,BytecodeHandler,0,255368,0x7ff72664ad74,160,LdaModuleVariable.ExtraWide
code-creation,BytecodeHandler,0,255380,0x7ff72664ae34,296,StaModuleVariable.ExtraWide
code-creation,BytecodeHandler,0,255391,0x7ff72664af74,176,SetNamedProperty.ExtraWide
code-creation,BytecodeHandler,0,255403,0x7ff72664b034,176,DefineNamedOwnProperty.ExtraWide
code-creation,BytecodeHandler,0,255416,0x7ff72664b0f4,168,SetKeyedProperty.ExtraWide
code-creation,BytecodeHandler,0,255428,0x7ff72664b1b4,168,DefineKeyedOwnProperty.ExtraWide
code-creation,BytecodeHandler,0,255443,0x7ff72664b274,168,StaInArrayLiteral.ExtraWide
code-creation,BytecodeHandler,0,255459,0x7ff72664b334,200,DefineKeyedOwnPropertyInLiteral.ExtraWide
code-creation,BytecodeHandler,0,255473,0x7ff72664b434,168,CollectTypeProfile.ExtraWide
code-creation,BytecodeHandler,0,255485,0x7ff72664b4f4,984,Add.ExtraWide
code-creation,BytecodeHandler,0,255497,0x7ff72664b8f4,1024,Sub.ExtraWide
code-creation,BytecodeHandler,0,255509,0x7ff72664bd34,988,Mul.ExtraWide
code-creation,BytecodeHandler,0,255520,0x7ff72664c134,992,Div.ExtraWide
code-creation,BytecodeHandler,0,255531,0x7ff72664c534,944,Mod.ExtraWide
code-creation,BytecodeHandler,0,255542,0x7ff72664c8f4,1000,Exp.ExtraWide
code-creation,BytecodeHandler,0,255554,0x7ff72664ccf4,1012,BitwiseOr.ExtraWide
code-creation,BytecodeHandler,0,255566,0x7ff72664d0f4,1016,BitwiseXor.ExtraWide
code-creation,BytecodeHandler,0,255578,0x7ff72664d4f4,1016,BitwiseAnd.ExtraWide
code-creation,BytecodeHandler,0,255590,0x7ff72664d8f4,1028,ShiftLeft.ExtraWide
code-creation,BytecodeHandler,0,255602,0x7ff72664dd34,1028,ShiftRight.ExtraWide
code-creation,BytecodeHandler,0,255614,0x7ff72664e174,1152,ShiftRightLogical.ExtraWide
code-creation,BytecodeHandler,0,255626,0x7ff72664e634,916,AddSmi.ExtraWide
code-creation,BytecodeHandler,0,255637,0x7ff72664e9f4,928,SubSmi.ExtraWide
code-creation,BytecodeHandler,0,255649,0x7ff72664edb4,892,MulSmi.ExtraWide
code-creation,BytecodeHandler,0,255660,0x7ff72664f134,936,DivSmi.ExtraWide
code-creation,BytecodeHandler,0,255671,0x7ff72664f4f4,812,ModSmi.ExtraWide
code-creation,BytecodeHandler,0,255683,0x7ff72664f834,868,ExpSmi.ExtraWide
code-creation,BytecodeHandler,0,255696,0x7ff72664fbb4,508,BitwiseOrSmi.ExtraWide
code-creation,BytecodeHandler,0,255709,0x7ff72664fdb4,508,BitwiseXorSmi.ExtraWide
code-creation,BytecodeHandler,0,255723,0x7ff72664ffb4,508,BitwiseAndSmi.ExtraWide
code-creation,BytecodeHandler,0,255736,0x7ff7266501b4,528,ShiftLeftSmi.ExtraWide
code-creation,BytecodeHandler,0,255749,0x7ff7266503f4,516,ShiftRightSmi.ExtraWide
code-creation,BytecodeHandler,0,255762,0x7ff726650634,828,ShiftRightLogicalSmi.ExtraWide
code-creation,BytecodeHandler,0,255775,0x7ff726650974,624,Inc.ExtraWide
code-creation,BytecodeHandler,0,255788,0x7ff726650bf4,620,Dec.ExtraWide
code-creation,BytecodeHandler,0,255800,0x7ff726650e74,656,Negate.ExtraWide
code-creation,BytecodeHandler,0,255813,0x7ff726651134,508,BitwiseNot.ExtraWide
code-creation,BytecodeHandler,0,255826,0x7ff726651334,124,DeletePropertyStrict.ExtraWide
code-creation,BytecodeHandler,0,255840,0x7ff7266513b4,116,DeletePropertySloppy.ExtraWide
code-creation,BytecodeHandler,0,255853,0x7ff726651434,40,GetSuperConstructor.ExtraWide
code-creation,BytecodeHandler,0,255867,0x7ff726651474,1104,CallAnyReceiver.ExtraWide
code-creation,BytecodeHandler,0,255880,0x7ff7266518f4,1104,CallProperty.ExtraWide
code-creation,BytecodeHandler,0,255893,0x7ff726651d74,1000,CallProperty0.ExtraWide
code-creation,BytecodeHandler,0,255907,0x7ff726652174,1012,CallProperty1.ExtraWide
code-creation,BytecodeHandler,0,255920,0x7ff726652574,1024,CallProperty2.ExtraWide
code-creation,BytecodeHandler,0,255934,0x7ff7266529b4,988,CallUndefinedReceiver.ExtraWide
code-creation,BytecodeHandler,0,255948,0x7ff726652db4,1040,CallUndefinedReceiver0.ExtraWide
code-creation,BytecodeHandler,0,255962,0x7ff7266531f4,1016,CallUndefinedReceiver1.ExtraWide
code-creation,BytecodeHandler,0,255976,0x7ff7266535f4,1032,CallUndefinedReceiver2.ExtraWide
code-creation,BytecodeHandler,0,255989,0x7ff726653a34,1104,CallWithSpread.ExtraWide
code-creation,BytecodeHandler,0,256003,0x7ff726653eb4,128,CallRuntime.ExtraWide
code-creation,BytecodeHandler,0,256016,0x7ff726653f74,176,CallRuntimeForPair.ExtraWide
code-creation,BytecodeHandler,0,256030,0x7ff726654034,84,CallJSRuntime.ExtraWide
code-creation,BytecodeHandler,0,256042,0x7ff7266540b4,1320,InvokeIntrinsic.ExtraWide
code-creation,BytecodeHandler,0,256057,0x7ff7266545f4,964,Construct.ExtraWide
code-creation,BytecodeHandler,0,256098,0x7ff7266549f4,460,ConstructWithSpread.ExtraWide
code-creation,BytecodeHandler,0,256127,0x7ff726654bf4,1944,TestEqual.ExtraWide
code-creation,BytecodeHandler,0,256141,0x7ff7266553b4,1052,TestEqualStrict.ExtraWide
code-creation,BytecodeHandler,0,256153,0x7ff7266557f4,1608,TestLessThan.ExtraWide
code-creation,BytecodeHandler,0,256165,0x7ff726655e74,1608,TestGreaterThan.ExtraWide
code-creation,BytecodeHandler,0,256177,0x7ff7266564f4,1608,TestLessThanOrEqual.ExtraWide
code-creation,BytecodeHandler,0,256189,0x7ff726656b74,1608,TestGreaterThanOrEqual.ExtraWide
code-creation,BytecodeHandler,0,256202,0x7ff7266571f4,876,TestInstanceOf.ExtraWide
code-creation,BytecodeHandler,0,256215,0x7ff726657574,156,TestIn.ExtraWide
code-creation,BytecodeHandler,0,256228,0x7ff726657634,116,ToName.ExtraWide
code-creation,BytecodeHandler,0,256241,0x7ff7266576b4,220,ToNumber.ExtraWide
code-creation,BytecodeHandler,0,256254,0x7ff7266577b4,240,ToNumeric.ExtraWide
code-creation,BytecodeHandler,0,256266,0x7ff7266578b4,116,ToObject.ExtraWide
code-creation,BytecodeHandler,0,256279,0x7ff726657934,404,CreateRegExpLiteral.ExtraWide
code-creation,BytecodeHandler,0,256292,0x7ff726657af4,1404,CreateArrayLiteral.ExtraWide
code-creation,BytecodeHandler,0,256305,0x7ff726658074,788,CreateEmptyArrayLiteral.ExtraWide
code-creation,BytecodeHandler,0,256319,0x7ff7266583b4,2160,CreateObjectLiteral.ExtraWide
code-creation,BytecodeHandler,0,256332,0x7ff726658c34,172,CloneObject.ExtraWide
code-creation,BytecodeHandler,0,256345,0x7ff726658cf4,164,GetTemplateObject.ExtraWide
code-creation,BytecodeHandler,0,256358,0x7ff726658db4,320,CreateClosure.ExtraWide
code-creation,BytecodeHandler,0,256371,0x7ff726658f34,120,CreateBlockContext.ExtraWide
code-creation,BytecodeHandler,0,256384,0x7ff726658fb4,132,CreateCatchContext.ExtraWide
code-creation,BytecodeHandler,0,256397,0x7ff726659074,260,CreateFunctionContext.ExtraWide
code-creation,BytecodeHandler,0,256410,0x7ff7266591b4,260,CreateEvalContext.ExtraWide
code-creation,BytecodeHandler,0,256423,0x7ff7266592f4,132,CreateWithContext.ExtraWide
code-creation,BytecodeHandler,0,256436,0x7ff7266593b4,488,JumpLoop.ExtraWide
code-creation,BytecodeHandler,0,256448,0x7ff7266595b4,44,Jump.ExtraWide
code-creation,BytecodeHandler,0,256461,0x7ff7266595f4,56,JumpConstant.ExtraWide
code-creation,BytecodeHandler,0,256473,0x7ff726659634,80,JumpIfNullConstant.ExtraWide
code-creation,BytecodeHandler,0,256487,0x7ff7266596b4,80,JumpIfNotNullConstant.ExtraWide
code-creation,BytecodeHandler,0,256500,0x7ff726659734,80,JumpIfUndefinedConstant.ExtraWide
code-creation,BytecodeHandler,0,256513,0x7ff7266597b4,80,JumpIfNotUndefinedConstant.ExtraWide
code-creation,BytecodeHandler,0,256527,0x7ff726659834,88,JumpIfUndefinedOrNullConstant.ExtraWide
code-creation,BytecodeHandler,0,256540,0x7ff7266598b4,80,JumpIfTrueConstant.ExtraWide
code-creation,BytecodeHandler,0,256553,0x7ff726659934,80,JumpIfFalseConstant.ExtraWide
code-creation,BytecodeHandler,0,256566,0x7ff7266599b4,88,JumpIfJSReceiverConstant.ExtraWide
code-creation,BytecodeHandler,0,256580,0x7ff726659a34,160,JumpIfToBooleanTrueConstant.ExtraWide
code-creation,BytecodeHandler,0,256593,0x7ff726659af4,156,JumpIfToBooleanFalseConstant.ExtraWide
code-creation,BytecodeHandler,0,256607,0x7ff726659bb4,144,JumpIfToBooleanTrue.ExtraWide
code-creation,BytecodeHandler,0,256620,0x7ff726659c74,144,JumpIfToBooleanFalse.ExtraWide
code-creation,BytecodeHandler,0,256633,0x7ff726659d34,68,JumpIfTrue.ExtraWide
code-creation,BytecodeHandler,0,256646,0x7ff726659db4,68,JumpIfFalse.ExtraWide
code-creation,BytecodeHandler,0,256659,0x7ff726659e34,68,JumpIfNull.ExtraWide
code-creation,BytecodeHandler,0,256671,0x7ff726659eb4,68,JumpIfNotNull.ExtraWide
code-creation,BytecodeHandler,0,256684,0x7ff726659f34,68,JumpIfUndefined.ExtraWide
code-creation,BytecodeHandler,0,256697,0x7ff726659fb4,68,JumpIfNotUndefined.ExtraWide
code-creation,BytecodeHandler,0,256710,0x7ff72665a034,76,JumpIfUndefinedOrNull.ExtraWide
code-creation,BytecodeHandler,0,256722,0x7ff72665a0b4,72,JumpIfJSReceiver.ExtraWide
code-creation,BytecodeHandler,0,256735,0x7ff72665a134,108,SwitchOnSmiNoFeedback.ExtraWide
code-creation,BytecodeHandler,0,256747,0x7ff72665a1b4,472,ForInEnumerate.ExtraWide
code-creation,BytecodeHandler,0,256760,0x7ff72665a3b4,256,ForInPrepare.ExtraWide
code-creation,BytecodeHandler,0,256773,0x7ff72665a4f4,64,ForInContinue.ExtraWide
code-creation,BytecodeHandler,0,256786,0x7ff72665a574,264,ForInNext.ExtraWide
code-creation,BytecodeHandler,0,256797,0x7ff72665a6b4,44,ForInStep.ExtraWide
code-creation,BytecodeHandler,0,256809,0x7ff72665a6f4,160,ThrowReferenceErrorIfHole.ExtraWide
code-creation,BytecodeHandler,0,256823,0x7ff72665a7b4,160,ThrowIfNotSuperConstructor.ExtraWide
code-creation,BytecodeHandler,0,256858,0x7ff72665a874,124,SwitchOnGeneratorState.ExtraWide
code-creation,BytecodeHandler,0,256877,0x7ff72665a8f4,528,SuspendGenerator.ExtraWide
code-creation,BytecodeHandler,0,256889,0x7ff72665ab34,136,ResumeGenerator.ExtraWide
code-creation,BytecodeHandler,0,256901,0x7ff72665abf4,164,GetIterator.ExtraWide
code-creation,BytecodeHandler,0,256913,0x7ff72665acb4,124,IncBlockCounter.ExtraWide
code-creation,BytecodeHandler,0,256925,0x7ff72665ad34,56,Abort.ExtraWide
tick,0x7ffaea99b7a2,256992,0,0x0,6
tick,0x7ffaeaa0d0e4,257026,0,0x0,6
new,MemoryChunk,0x8cb6840000,262144
new,MemoryChunk,0x2ffd8f80000,262144
new,MemoryChunk,0x10673ec0000,262144
new,MemoryChunk,0x23add740000,262144
new,MemoryChunk,0xb505300000,262144
code-creation,Eval,10,263201,0xb505335600,5, node:internal/main/run_main_module:1:1,0xb5053354b8,~
script-source,438,node:internal/main/run_main_module,'use strict';\x0d\n\x0d\nconst { RegExpPrototypeExec } = primordials;\x0d\n\x0d\nconst {\x0d\n  prepareMainThreadExecution\x2C\x0d\n  markBootstrapComplete\x0d\n} = require('internal/process/pre_execution');\x0d\n\x0d\nprepareMainThreadExecution(true);\x0d\n\x0d\nmarkBootstrapComplete();\x0d\n\x0d\n// Necessary to reset RegExp statics before user code runs.\x0d\nRegExpPrototypeExec(/^/\x2C '');\x0d\n\x0d\n// Note: this loads the module through the ESM loader if the module is\x0d\n// determined to be an ES module. This hangs from the CJS module loader\x0d\n// because we currently allow monkey-patching of the module loaders\x0d\n// in the preloaded scripts through require('module').\x0d\n// runMain here might be monkey-patched by users in --require.\x0d\n// XXX: the monkey-patchability here should probably be deprecated.\x0d\nrequire('internal/modules/cjs/loader').Module.runMain(process.argv[1]);\x0d\n
code-source-info,0xb505335600,438,0,815,C0O0C4O815,,
code-creation,Function,10,263351,0xb5053356c8,81, node:internal/main/run_main_module:1:1,0xb505335578,~
code-source-info,0xb5053356c8,438,0,815,C0O25C5O134C8O134C13O76C18O107C23O180C25O180C29O217C32O306C40O306C45O742C48O742C53O780C58O787C63O804C70O808C74O788C80O814,,
code-creation,Eval,10,264311,0xb5053368f8,5, node:internal/process/pre_execution:1:1,0xb5053364a0,~
script-source,439,node:internal/process/pre_execution,'use strict';\x0d\n\x0d\nconst {\x0d\n  NumberParseInt\x2C\x0d\n  ObjectDefineProperties\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectGetOwnPropertyDescriptor\x2C\x0d\n  SafeMap\x2C\x0d\n  SafeWeakMap\x2C\x0d\n  StringPrototypeStartsWith\x2C\x0d\n  globalThis\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  getOptionValue\x2C\x0d\n  getEmbedderOptions\x2C\x0d\n  refreshOptions\x2C\x0d\n} = require('internal/options');\x0d\nconst { reconnectZeroFillToggle } = require('internal/buffer');\x0d\nconst {\x0d\n  defineOperation\x2C\x0d\n  exposeInterface\x2C\x0d\n} = require('internal/util');\x0d\n\x0d\nconst {\x0d\n  ERR_MANIFEST_ASSERT_INTEGRITY\x2C\x0d\n} = require('internal/errors').codes;\x0d\nconst assert = require('internal/assert');\x0d\n\x0d\nconst {\x0d\n  addSerializeCallback\x2C\x0d\n  isBuildingSnapshot\x2C\x0d\n} = require('v8').startupSnapshot;\x0d\n\x0d\nfunction prepareMainThreadExecution(expandArgv1 = false\x2C initializeModules = true) {\x0d\n  prepareExecution({\x0d\n    expandArgv1\x2C\x0d\n    initializeModules\x2C\x0d\n    isMainThread: true\x0d\n  });\x0d\n}\x0d\n\x0d\nfunction prepareWorkerThreadExecution() {\x0d\n  prepareExecution({\x0d\n    expandArgv1: false\x2C\x0d\n    initializeModules: false\x2C  // Will need to initialize it after policy setup\x0d\n    isMainThread: false\x0d\n  });\x0d\n}\x0d\n\x0d\nfunction prepareExecution(options) {\x0d\n  const { expandArgv1\x2C initializeModules\x2C isMainThread } = options;\x0d\n\x0d\n  refreshRuntimeOptions();\x0d\n  reconnectZeroFillToggle();\x0d\n\x0d\n  // Patch the process object with legacy properties and normalizations\x0d\n  patchProcessObject(expandArgv1);\x0d\n  setupTraceCategoryState();\x0d\n  setupPerfHooks();\x0d\n  setupInspectorHooks();\x0d\n  setupWarningHandler();\x0d\n  setupFetch();\x0d\n  setupWebCrypto();\x0d\n  setupCustomEvent();\x0d\n\x0d\n  // Resolve the coverage directory to an absolute path\x2C and\x0d\n  // overwrite process.env so that the original path gets passed\x0d\n  // to child processes even when they switch cwd.\x0d\n  if (process.env.NODE_V8_COVERAGE) {\x0d\n    process.env.NODE_V8_COVERAGE =\x0d\n      setupCoverageHooks(process.env.NODE_V8_COVERAGE);\x0d\n  }\x0d\n\x0d\n  setupDebugEnv();\x0d\n  // Process initial diagnostic reporting configuration\x2C if present.\x0d\n  initializeReport();\x0d\n  initializeSourceMapsHandlers();\x0d\n  initializeDeprecations();\x0d\n  initializeWASI();\x0d\n  require('internal/dns/utils').initializeDns();\x0d\n\x0d\n  if (isMainThread) {\x0d\n    assert(internalBinding('worker').isMainThread);\x0d\n    // Worker threads will get the manifest in the message handler.\x0d\n    const policy = readPolicyFromDisk();\x0d\n    if (policy) {\x0d\n      require('internal/process/policy')\x0d\n        .setup(policy.manifestSrc\x2C policy.manifestURL);\x0d\n    }\x0d\n\x0d\n    // Print stack trace on `SIGINT` if option `--trace-sigint` presents.\x0d\n    setupStacktracePrinterOnSigint();\x0d\n    initializeReportSignalHandlers();  // Main-thread-only.\x0d\n    initializeHeapSnapshotSignalHandlers();\x0d\n    // If the process is spawned with env NODE_CHANNEL_FD\x2C it's probably\x0d\n    // spawned by our child_process module\x2C then initialize IPC.\x0d\n    // This attaches some internal event listeners and creates:\x0d\n    // process.send()\x2C process.channel\x2C process.connected\x2C\x0d\n    // process.disconnect().\x0d\n    setupChildProcessIpcChannel();\x0d\n    // If this is a worker in cluster mode\x2C start up the communication\x0d\n    // channel. This needs to be done before any user code gets executed\x0d\n    // (including preload modules).\x0d\n    initializeClusterIPC();\x0d\n\x0d\n    // TODO(joyeecheung): do this for worker threads as well.\x0d\n    require('internal/v8/startup_snapshot').runDeserializeCallbacks();\x0d\n  } else {\x0d\n    assert(!internalBinding('worker').isMainThread);\x0d\n    // The setup should be called in LOAD_SCRIPT message handler.\x0d\n    assert(!initializeModules);\x0d\n  }\x0d\n\x0d\n  if (initializeModules) {\x0d\n    setupUserModules();\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction setupUserModules() {\x0d\n  initializeCJSLoader();\x0d\n  initializeESMLoader();\x0d\n  const CJSLoader = require('internal/modules/cjs/loader');\x0d\n  assert(!CJSLoader.hasLoadedAnyUserCJSModule);\x0d\n  loadPreloadModules();\x0d\n  // Need to be done after --require setup.\x0d\n  initializeFrozenIntrinsics();\x0d\n}\x0d\n\x0d\nfunction refreshRuntimeOptions() {\x0d\n  refreshOptions();\x0d\n}\x0d\n\x0d\nfunction patchProcessObject(expandArgv1) {\x0d\n  const binding = internalBinding('process_methods');\x0d\n  binding.patchProcessObject(process);\x0d\n\x0d\n  require('internal/process/per_thread').refreshHrtimeBuffer();\x0d\n\x0d\n  ObjectDefineProperty(process\x2C 'argv0'\x2C {\x0d\n    __proto__: null\x2C\x0d\n    enumerable: true\x2C\x0d\n    // Only set it to true during snapshot building.\x0d\n    configurable: getOptionValue('--build-snapshot')\x2C\x0d\n    value: process.argv[0]\x0d\n  });\x0d\n\x0d\n  process.exitCode = undefined;\x0d\n  process._exiting = false;\x0d\n  process.argv[0] = process.execPath;\x0d\n\x0d\n  if (expandArgv1 && process.argv[1] &&\x0d\n      !StringPrototypeStartsWith(process.argv[1]\x2C '-')) {\x0d\n    // Expand process.argv[1] into a full path.\x0d\n    const path = require('path');\x0d\n    try {\x0d\n      process.argv[1] = path.resolve(process.argv[1]);\x0d\n    } catch {\x0d\n      // Continue regardless of error.\x0d\n    }\x0d\n  }\x0d\n\x0d\n  // We need to initialize the global console here again with process.stdout\x0d\n  // and friends for snapshot deserialization.\x0d\n  const globalConsole = require('internal/console/global');\x0d\n  const { initializeGlobalConsole } = require('internal/console/constructor');\x0d\n  initializeGlobalConsole(globalConsole);\x0d\n\x0d\n  // TODO(joyeecheung): most of these should be deprecated and removed\x2C\x0d\n  // except some that we need to be able to mutate during run time.\x0d\n  addReadOnlyProcessAlias('_eval'\x2C '--eval');\x0d\n  addReadOnlyProcessAlias('_print_eval'\x2C '--print');\x0d\n  addReadOnlyProcessAlias('_syntax_check_only'\x2C '--check');\x0d\n  addReadOnlyProcessAlias('_forceRepl'\x2C '--interactive');\x0d\n  addReadOnlyProcessAlias('_preload_modules'\x2C '--require');\x0d\n  addReadOnlyProcessAlias('noDeprecation'\x2C '--no-deprecation');\x0d\n  addReadOnlyProcessAlias('noProcessWarnings'\x2C '--no-warnings');\x0d\n  addReadOnlyProcessAlias('traceProcessWarnings'\x2C '--trace-warnings');\x0d\n  addReadOnlyProcessAlias('throwDeprecation'\x2C '--throw-deprecation');\x0d\n  addReadOnlyProcessAlias('profProcess'\x2C '--prof-process');\x0d\n  addReadOnlyProcessAlias('traceDeprecation'\x2C '--trace-deprecation');\x0d\n  addReadOnlyProcessAlias('_breakFirstLine'\x2C '--inspect-brk'\x2C false);\x0d\n  addReadOnlyProcessAlias('_breakNodeFirstLine'\x2C '--inspect-brk-node'\x2C false);\x0d\n}\x0d\n\x0d\nfunction addReadOnlyProcessAlias(name\x2C option\x2C enumerable = true) {\x0d\n  const value = getOptionValue(option);\x0d\n  if (value) {\x0d\n    ObjectDefineProperty(process\x2C name\x2C {\x0d\n      __proto__: null\x2C\x0d\n      writable: false\x2C\x0d\n      configurable: true\x2C\x0d\n      enumerable\x2C\x0d\n      value\x0d\n    });\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction setupWarningHandler() {\x0d\n  const {\x0d\n    onWarning\x2C\x0d\n    resetForSerialization\x0d\n  } = require('internal/process/warning');\x0d\n  if (getOptionValue('--warnings') &&\x0d\n    process.env.NODE_NO_WARNINGS !== '1') {\x0d\n    process.on('warning'\x2C onWarning);\x0d\n\x0d\n    // The code above would add the listener back during deserialization\x2C\x0d\n    // if applicable.\x0d\n    if (isBuildingSnapshot()) {\x0d\n      addSerializeCallback(() => {\x0d\n        process.removeListener('warning'\x2C onWarning);\x0d\n        resetForSerialization();\x0d\n      });\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\n// https://fetch.spec.whatwg.org/\x0d\nfunction setupFetch() {\x0d\n  if (process.config.variables.node_no_browser_globals ||\x0d\n      getOptionValue('--no-experimental-fetch')) {\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  let undici;\x0d\n  function lazyUndici() {\x0d\n    if (undici) {\x0d\n      return undici;\x0d\n    }\x0d\n\x0d\n    undici = require('internal/deps/undici/undici');\x0d\n    return undici;\x0d\n  }\x0d\n\x0d\n  async function fetch(input\x2C init = undefined) {\x0d\n    return lazyUndici().fetch(input\x2C init);\x0d\n  }\x0d\n\x0d\n  defineOperation(globalThis\x2C 'fetch'\x2C fetch);\x0d\n\x0d\n  function lazyInterface(name) {\x0d\n    return {\x0d\n      configurable: true\x2C\x0d\n      enumerable: false\x2C\x0d\n      get() {\x0d\n        return lazyUndici()[name];\x0d\n      }\x2C\x0d\n      set(value) {\x0d\n        exposeInterface(globalThis\x2C name\x2C value);\x0d\n      }\x0d\n    };\x0d\n  }\x0d\n\x0d\n  ObjectDefineProperties(globalThis\x2C {\x0d\n    FormData: lazyInterface('FormData')\x2C\x0d\n    Headers: lazyInterface('Headers')\x2C\x0d\n    Request: lazyInterface('Request')\x2C\x0d\n    Response: lazyInterface('Response')\x2C\x0d\n  });\x0d\n\x0d\n  // The WebAssembly Web API: https://webassembly.github.io/spec/web-api\x0d\n  const { wasmStreamingCallback } = require('internal/wasm_web_api');\x0d\n  internalBinding('wasm_web_api').setImplementation(wasmStreamingCallback);\x0d\n}\x0d\n\x0d\n// TODO(aduh95): move this to internal/bootstrap/browser when the CLI flag is\x0d\n//               removed.\x0d\nfunction setupWebCrypto() {\x0d\n  if (process.config.variables.node_no_browser_globals ||\x0d\n      !getOptionValue('--experimental-global-webcrypto')) {\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  let webcrypto;\x0d\n  ObjectDefineProperty(globalThis\x2C 'crypto'\x2C\x0d\n                       { __proto__: null\x2C ...ObjectGetOwnPropertyDescriptor({\x0d\n                         get crypto() {\x0d\n                           webcrypto ??= require('internal/crypto/webcrypto');\x0d\n                           return webcrypto.crypto;\x0d\n                         }\x0d\n                       }\x2C 'crypto') });\x0d\n  if (internalBinding('config').hasOpenSSL) {\x0d\n    webcrypto ??= require('internal/crypto/webcrypto');\x0d\n    exposeInterface(globalThis\x2C 'Crypto'\x2C webcrypto.Crypto);\x0d\n    exposeInterface(globalThis\x2C 'CryptoKey'\x2C webcrypto.CryptoKey);\x0d\n    exposeInterface(globalThis\x2C 'SubtleCrypto'\x2C webcrypto.SubtleCrypto);\x0d\n  }\x0d\n}\x0d\n\x0d\n// TODO(daeyeon): move this to internal/bootstrap/browser when the CLI flag is\x0d\n//                removed.\x0d\nfunction setupCustomEvent() {\x0d\n  if (process.config.variables.node_no_browser_globals ||\x0d\n      !getOptionValue('--experimental-global-customevent')) {\x0d\n    return;\x0d\n  }\x0d\n  const { CustomEvent } = require('internal/event_target');\x0d\n  exposeInterface(globalThis\x2C 'CustomEvent'\x2C CustomEvent);\x0d\n}\x0d\n\x0d\n// Setup User-facing NODE_V8_COVERAGE environment variable that writes\x0d\n// ScriptCoverage to a specified file.\x0d\nfunction setupCoverageHooks(dir) {\x0d\n  const cwd = require('internal/process/execution').tryGetCwd();\x0d\n  const { resolve } = require('path');\x0d\n  const coverageDirectory = resolve(cwd\x2C dir);\x0d\n  const { sourceMapCacheToObject } =\x0d\n    require('internal/source_map/source_map_cache');\x0d\n\x0d\n  if (process.features.inspector) {\x0d\n    internalBinding('profiler').setCoverageDirectory(coverageDirectory);\x0d\n    internalBinding('profiler').setSourceMapCacheGetter(sourceMapCacheToObject);\x0d\n  } else {\x0d\n    process.emitWarning('The inspector is disabled\x2C ' +\x0d\n                        'coverage could not be collected'\x2C\x0d\n                        'Warning');\x0d\n    return '';\x0d\n  }\x0d\n  return coverageDirectory;\x0d\n}\x0d\n\x0d\nfunction setupStacktracePrinterOnSigint() {\x0d\n  if (!getOptionValue('--trace-sigint')) {\x0d\n    return;\x0d\n  }\x0d\n  const { SigintWatchdog } = require('internal/watchdog');\x0d\n\x0d\n  const watchdog = new SigintWatchdog();\x0d\n  watchdog.start();\x0d\n}\x0d\n\x0d\nfunction initializeReport() {\x0d\n  const { report } = require('internal/process/report');\x0d\n  ObjectDefineProperty(process\x2C 'report'\x2C {\x0d\n    __proto__: null\x2C\x0d\n    enumerable: true\x2C\x0d\n    configurable: true\x2C\x0d\n    get() {\x0d\n      return report;\x0d\n    }\x0d\n  });\x0d\n}\x0d\n\x0d\nfunction setupDebugEnv() {\x0d\n  require('internal/util/debuglog').initializeDebugEnv(process.env.NODE_DEBUG);\x0d\n  if (getOptionValue('--expose-internals')) {\x0d\n    require('internal/bootstrap/loaders').BuiltinModule.exposeInternals();\x0d\n  }\x0d\n}\x0d\n\x0d\n// This has to be called after initializeReport() is called\x0d\nfunction initializeReportSignalHandlers() {\x0d\n  const { addSignalHandler } = require('internal/process/report');\x0d\n\x0d\n  addSignalHandler();\x0d\n}\x0d\n\x0d\nfunction initializeHeapSnapshotSignalHandlers() {\x0d\n  const signal = getOptionValue('--heapsnapshot-signal');\x0d\n\x0d\n  if (!signal)\x0d\n    return;\x0d\n\x0d\n  require('internal/validators').validateSignalName(signal);\x0d\n  const { writeHeapSnapshot } = require('v8');\x0d\n\x0d\n  function doWriteHeapSnapshot() {\x0d\n    writeHeapSnapshot();\x0d\n  }\x0d\n  process.on(signal\x2C doWriteHeapSnapshot);\x0d\n\x0d\n  // The code above would add the listener back during deserialization\x2C\x0d\n  // if applicable.\x0d\n  if (isBuildingSnapshot()) {\x0d\n    addSerializeCallback(() => {\x0d\n      process.removeListener(signal\x2C doWriteHeapSnapshot);\x0d\n    });\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction setupTraceCategoryState() {\x0d\n  const { isTraceCategoryEnabled } = internalBinding('trace_events');\x0d\n  const { toggleTraceCategoryState } = require('internal/process/per_thread');\x0d\n  toggleTraceCategoryState(isTraceCategoryEnabled('node.async_hooks'));\x0d\n}\x0d\n\x0d\nfunction setupPerfHooks() {\x0d\n  require('internal/perf/performance').refreshTimeOrigin();\x0d\n  require('internal/perf/utils').refreshTimeOrigin();\x0d\n}\x0d\n\x0d\nfunction setupInspectorHooks() {\x0d\n  // If Debugger.setAsyncCallStackDepth is sent during bootstrap\x2C\x0d\n  // we cannot immediately call into JS to enable the hooks\x2C which could\x0d\n  // interrupt the JS execution of bootstrap. So instead we save the\x0d\n  // notification in the inspector agent if it's sent in the middle of\x0d\n  // bootstrap\x2C and process the notification later here.\x0d\n  if (internalBinding('config').hasInspector) {\x0d\n    const {\x0d\n      enable\x2C\x0d\n      disable\x0d\n    } = require('internal/inspector_async_hook');\x0d\n    internalBinding('inspector').registerAsyncHook(enable\x2C disable);\x0d\n  }\x0d\n}\x0d\n\x0d\n// In general deprecations are initialized wherever the APIs are implemented\x2C\x0d\n// this is used to deprecate APIs implemented in C++ where the deprecation\x0d\n// utilities are not easily accessible.\x0d\nfunction initializeDeprecations() {\x0d\n  const { deprecate } = require('internal/util');\x0d\n  const pendingDeprecation = getOptionValue('--pending-deprecation');\x0d\n\x0d\n  // DEP0103: access to `process.binding('util').isX` type checkers\x0d\n  // TODO(addaleax): Turn into a full runtime deprecation.\x0d\n  const utilBinding = internalBinding('util');\x0d\n  const types = require('internal/util/types');\x0d\n  for (const name of [\x0d\n    'isArrayBuffer'\x2C\x0d\n    'isArrayBufferView'\x2C\x0d\n    'isAsyncFunction'\x2C\x0d\n    'isDataView'\x2C\x0d\n    'isDate'\x2C\x0d\n    'isExternal'\x2C\x0d\n    'isMap'\x2C\x0d\n    'isMapIterator'\x2C\x0d\n    'isNativeError'\x2C\x0d\n    'isPromise'\x2C\x0d\n    'isRegExp'\x2C\x0d\n    'isSet'\x2C\x0d\n    'isSetIterator'\x2C\x0d\n    'isTypedArray'\x2C\x0d\n    'isUint8Array'\x2C\x0d\n    'isAnyArrayBuffer'\x2C\x0d\n  ]) {\x0d\n    utilBinding[name] = pendingDeprecation ?\x0d\n      deprecate(types[name]\x2C\x0d\n                'Accessing native typechecking bindings of Node ' +\x0d\n                'directly is deprecated. ' +\x0d\n                `Please use \\`util.types.${name}\\` instead.`\x2C\x0d\n                'DEP0103') :\x0d\n      types[name];\x0d\n  }\x0d\n\x0d\n  // TODO(joyeecheung): this is a legacy property exposed to process.\x0d\n  // Now that we use the config binding to carry this information\x2C remove\x0d\n  // it from the process. We may consider exposing it properly in\x0d\n  // process.features.\x0d\n  const { noBrowserGlobals } = internalBinding('config');\x0d\n  if (noBrowserGlobals) {\x0d\n    ObjectDefineProperty(process\x2C '_noBrowserGlobals'\x2C {\x0d\n      __proto__: null\x2C\x0d\n      writable: false\x2C\x0d\n      enumerable: true\x2C\x0d\n      configurable: true\x2C\x0d\n      value: noBrowserGlobals\x0d\n    });\x0d\n  }\x0d\n\x0d\n  if (pendingDeprecation) {\x0d\n    process.binding = deprecate(process.binding\x2C\x0d\n                                'process.binding() is deprecated. ' +\x0d\n                                'Please use public APIs instead.'\x2C 'DEP0111');\x0d\n\x0d\n    process._tickCallback = deprecate(process._tickCallback\x2C\x0d\n                                      'process._tickCallback() is deprecated'\x2C\x0d\n                                      'DEP0134');\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction setupChildProcessIpcChannel() {\x0d\n  if (process.env.NODE_CHANNEL_FD) {\x0d\n    const assert = require('internal/assert');\x0d\n\x0d\n    const fd = NumberParseInt(process.env.NODE_CHANNEL_FD\x2C 10);\x0d\n    assert(fd >= 0);\x0d\n\x0d\n    // Make sure it's not accidentally inherited by child processes.\x0d\n    delete process.env.NODE_CHANNEL_FD;\x0d\n\x0d\n    const serializationMode =\x0d\n      process.env.NODE_CHANNEL_SERIALIZATION_MODE || 'json';\x0d\n    delete process.env.NODE_CHANNEL_SERIALIZATION_MODE;\x0d\n\x0d\n    require('child_process')._forkChild(fd\x2C serializationMode);\x0d\n    assert(process.send);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction initializeClusterIPC() {\x0d\n  if (process.argv[1] && process.env.NODE_UNIQUE_ID) {\x0d\n    const cluster = require('cluster');\x0d\n    cluster._setupWorker();\x0d\n    // Make sure it's not accidentally inherited by child processes.\x0d\n    delete process.env.NODE_UNIQUE_ID;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction readPolicyFromDisk() {\x0d\n  const experimentalPolicy = getOptionValue('--experimental-policy');\x0d\n  if (experimentalPolicy) {\x0d\n    process.emitWarning('Policies are experimental.'\x2C\x0d\n                        'ExperimentalWarning');\x0d\n    const { pathToFileURL\x2C URL } = require('internal/url');\x0d\n    // URL here as it is slightly different parsing\x0d\n    // no bare specifiers for now\x0d\n    let manifestURL;\x0d\n    if (require('path').isAbsolute(experimentalPolicy)) {\x0d\n      manifestURL = new URL(`file://${experimentalPolicy}`);\x0d\n    } else {\x0d\n      const cwdURL = pathToFileURL(process.cwd());\x0d\n      cwdURL.pathname += '/';\x0d\n      manifestURL = new URL(experimentalPolicy\x2C cwdURL);\x0d\n    }\x0d\n    const fs = require('fs');\x0d\n    const src = fs.readFileSync(manifestURL\x2C 'utf8');\x0d\n    const experimentalPolicyIntegrity = getOptionValue('--policy-integrity');\x0d\n    if (experimentalPolicyIntegrity) {\x0d\n      const SRI = require('internal/policy/sri');\x0d\n      const { createHash\x2C timingSafeEqual } = require('crypto');\x0d\n      const realIntegrities = new SafeMap();\x0d\n      const integrityEntries = SRI.parse(experimentalPolicyIntegrity);\x0d\n      let foundMatch = false;\x0d\n      for (let i = 0; i < integrityEntries.length; i++) {\x0d\n        const {\x0d\n          algorithm\x2C\x0d\n          value: expected\x0d\n        } = integrityEntries[i];\x0d\n        const hash = createHash(algorithm);\x0d\n        hash.update(src);\x0d\n        const digest = hash.digest();\x0d\n        if (digest.length === expected.length &&\x0d\n          timingSafeEqual(digest\x2C expected)) {\x0d\n          foundMatch = true;\x0d\n          break;\x0d\n        }\x0d\n        realIntegrities.set(algorithm\x2C digest.toString('base64'));\x0d\n      }\x0d\n      if (!foundMatch) {\x0d\n        throw new ERR_MANIFEST_ASSERT_INTEGRITY(manifestURL\x2C realIntegrities);\x0d\n      }\x0d\n    }\x0d\n    return {\x0d\n      manifestSrc: src\x2C manifestURL: manifestURL.href\x0d\n    };\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction initializeWASI() {\x0d\n  const { BuiltinModule } = require('internal/bootstrap/loaders');\x0d\n  const mod = BuiltinModule.map.get('wasi');\x0d\n  mod.canBeRequiredByUsers =\x0d\n    getOptionValue('--experimental-wasi-unstable-preview1');\x0d\n}\x0d\n\x0d\nfunction initializeCJSLoader() {\x0d\n  const CJSLoader = require('internal/modules/cjs/loader');\x0d\n  if (!getEmbedderOptions().noGlobalSearchPaths) {\x0d\n    CJSLoader.Module._initPaths();\x0d\n  }\x0d\n  // TODO(joyeecheung): deprecate this in favor of a proper hook?\x0d\n  CJSLoader.Module.runMain =\x0d\n    require('internal/modules/run_main').executeUserEntryPoint;\x0d\n}\x0d\n\x0d\nfunction initializeESMLoader() {\x0d\n  // Create this WeakMap in js-land because V8 has no C++ API for WeakMap.\x0d\n  internalBinding('module_wrap').callbackMap = new SafeWeakMap();\x0d\n\x0d\n  if (getEmbedderOptions().shouldNotRegisterESMLoader) return;\x0d\n\x0d\n  const {\x0d\n    setImportModuleDynamicallyCallback\x2C\x0d\n    setInitializeImportMetaObjectCallback\x0d\n  } = internalBinding('module_wrap');\x0d\n  const esm = require('internal/process/esm_loader');\x0d\n  // Setup per-isolate callbacks that locate data or callbacks that we keep\x0d\n  // track of for different ESM modules.\x0d\n  setInitializeImportMetaObjectCallback(esm.initializeImportMetaObject);\x0d\n  setImportModuleDynamicallyCallback(esm.importModuleDynamicallyCallback);\x0d\n\x0d\n  // Patch the vm module when --experimental-vm-modules is on.\x0d\n  // Please update the comments in vm.js when this block changes.\x0d\n  if (getOptionValue('--experimental-vm-modules')) {\x0d\n    const {\x0d\n      Module\x2C SourceTextModule\x2C SyntheticModule\x2C\x0d\n    } = require('internal/vm/module');\x0d\n    const vm = require('vm');\x0d\n    vm.Module = Module;\x0d\n    vm.SourceTextModule = SourceTextModule;\x0d\n    vm.SyntheticModule = SyntheticModule;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction initializeSourceMapsHandlers() {\x0d\n  const { setSourceMapsEnabled\x2C getSourceMapsEnabled } =\x0d\n    require('internal/source_map/source_map_cache');\x0d\n  process.setSourceMapsEnabled = setSourceMapsEnabled;\x0d\n  // Initialize the environment flag of source maps.\x0d\n  getSourceMapsEnabled();\x0d\n}\x0d\n\x0d\nfunction initializeFrozenIntrinsics() {\x0d\n  if (getOptionValue('--frozen-intrinsics')) {\x0d\n    process.emitWarning('The --frozen-intrinsics flag is experimental'\x2C\x0d\n                        'ExperimentalWarning');\x0d\n    require('internal/freeze_intrinsics')();\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction loadPreloadModules() {\x0d\n  // For user code\x2C we preload modules if `-r` is passed\x0d\n  const preloadModules = getOptionValue('--require');\x0d\n  if (preloadModules && preloadModules.length > 0) {\x0d\n    const {\x0d\n      Module: {\x0d\n        _preloadModules\x0d\n      }\x2C\x0d\n    } = require('internal/modules/cjs/loader');\x0d\n    _preloadModules(preloadModules);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction markBootstrapComplete() {\x0d\n  internalBinding('performance').markBootstrapComplete();\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  setupUserModules\x2C\x0d\n  prepareMainThreadExecution\x2C\x0d\n  prepareWorkerThreadExecution\x2C\x0d\n  markBootstrapComplete\x0d\n};\x0d\n
code-source-info,0xb5053368f8,439,0,20743,C0O0C4O20743,,
code-creation,Function,10,265706,0xb505337648,470, node:internal/process/pre_execution:1:1,0xb505336870,~
code-source-info,0xb505337648,439,0,20743,C0O0C254O28C260O47C266O74C272O99C278O134C284O146C290O162C296O192C302O299C308O299C313O236C319O255C325O278C331O365C337O365C342O337C348O447C354O447C359O405C365O425C371O523C377O523C382O549C387O487C393O573C399O573C403O573C405O665C411O665C416O678C421O615C427O640C433O20609C440O20631C446O20652C452O20683C458O20716C464O20624C469O20742,,
code-creation,LazyCompile,10,266067,0xb505339440,46,prepareMainThreadExecution node:internal/process/pre_execution:35:36,0xb505336928,~
code-source-info,0xb505339440,439,734,881,C20O787C30O811C36O829C40O787C45O880,,
code-creation,LazyCompile,10,266216,0xb50533abf8,347,prepareExecution node:internal/process/pre_execution:51:26,0xb5053369c8,~
code-source-info,0xb50533abf
code-creation,LazyCompile,10,266368,0xb50533af20,10,refreshRuntimeOptions node:internal/process/pre_execution:130:31,0xb505336a68,~
code-source-info,0xb50533af20,439,3887,3915,C0O3895C5O3895C9O3914,,
code-creation,LazyCompile,10,266426,0xb50533b010,22,refreshOptions node:internal/options:39:24,0x914792d770,~
script-source,87,node:internal/options,'use strict';\x0d\n\x0d\nconst {\x0d\n  getCLIOptions\x2C\x0d\n  getEmbedderOptions: getEmbedderOptionsFromBinding\x2C\x0d\n} = internalBinding('options');\x0d\n\x0d\nlet warnOnAllowUnauthorized = true;\x0d\n\x0d\nlet optionsMap;\x0d\nlet aliasesMap;\x0d\nlet embedderOptions;\x0d\n\x0d\n// getCLIOptions() would serialize the option values from C++ land.\x0d\n// It would error if the values are queried before bootstrap is\x0d\n// complete so that we don't accidentally include runtime-dependent\x0d\n// states into a runtime-independent snapshot.\x0d\nfunction getCLIOptionsFromBinding() {\x0d\n  if (!optionsMap) {\x0d\n    ({ options: optionsMap } = getCLIOptions());\x0d\n  }\x0d\n  return optionsMap;\x0d\n}\x0d\n\x0d\nfunction getAliasesFromBinding() {\x0d\n  if (!aliasesMap) {\x0d\n    ({ aliases: aliasesMap } = getCLIOptions());\x0d\n  }\x0d\n  return aliasesMap;\x0d\n}\x0d\n\x0d\nfunction getEmbedderOptions() {\x0d\n  if (!embedderOptions) {\x0d\n    embedderOptions = getEmbedderOptionsFromBinding();\x0d\n  }\x0d\n  return embedderOptions;\x0d\n}\x0d\n\x0d\nfunction refreshOptions() {\x0d\n  optionsMap = undefined;\x0d\n  aliasesMap = undefined;\x0d\n}\x0d\n\x0d\nfunction getOptionValue(optionName) {\x0d\n  const options = getCLIOptionsFromBinding();\x0d\n  if (optionName.startsWith('--no-')) {\x0d\n    const option = options.get('--' + optionName.slice(5));\x0d\n    return option && !option.value;\x0d\n  }\x0d\n  return options.get(optionName)?.value;\x0d\n}\x0d\n\x0d\nfunction getAllowUnauthorized() {\x0d\n  const allowUnauthorized = process.env.NODE_TLS_REJECT_UNAUTHORIZED === '0';\x0d\n\x0d\n  if (allowUnauthorized && warnOnAllowUnauthorized) {\x0d\n    warnOnAllowUnauthorized = false;\x0d\n    process.emitWarning(\x0d\n      'Setting the NODE_TLS_REJECT_UNAUTHORIZED ' +\x0d\n      'environment variable to \\'0\\' makes TLS connections ' +\x0d\n      'and HTTPS requests insecure by disabling ' +\x0d\n      'certificate verification.');\x0d\n  }\x0d\n  return allowUnauthorized;\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  get options() {\x0d\n    return getCLIOptionsFromBinding();\x0d\n  }\x2C\x0d\n  get aliases() {\x0d\n    return getAliasesFromBinding();\x0d\n  }\x2C\x0d\n  getOptionValue\x2C\x0d\n  getAllowUnauthorized\x2C\x0d\n  getEmbedderOptions\x2C\x0d\n  refreshOptions\x0d\n};\x0d\n
code-source-info,0xb50533b010,87,940,1001,C0O948C4O959C10O975C14O986C21O1000,,
code-creation,LazyCompile,10,266691,0xb50533b378,19,reconnectZeroFillToggle node:internal/buffer:1074:33,0x1adeb59aff8,~
script-source,31,node:internal/buffer,'use strict';\x0d\n\x0d\nconst {\x0d\n  BigInt\x2C\x0d\n  Float32Array\x2C\x0d\n  Float64Array\x2C\x0d\n  MathFloor\x2C\x0d\n  Number\x2C\x0d\n  Uint8Array\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  ERR_BUFFER_OUT_OF_BOUNDS\x2C\x0d\n  ERR_INVALID_ARG_TYPE\x2C\x0d\n  ERR_OUT_OF_RANGE\x0d\n} = require('internal/errors').codes;\x0d\nconst { validateNumber } = require('internal/validators');\x0d\nconst {\x0d\n  asciiSlice\x2C\x0d\n  base64Slice\x2C\x0d\n  base64urlSlice\x2C\x0d\n  latin1Slice\x2C\x0d\n  hexSlice\x2C\x0d\n  ucs2Slice\x2C\x0d\n  utf8Slice\x2C\x0d\n  asciiWrite\x2C\x0d\n  base64Write\x2C\x0d\n  base64urlWrite\x2C\x0d\n  latin1Write\x2C\x0d\n  hexWrite\x2C\x0d\n  ucs2Write\x2C\x0d\n  utf8Write\x2C\x0d\n  getZeroFillToggle\x0d\n} = internalBinding('buffer');\x0d\n\x0d\nconst {\x0d\n  privateSymbols: {\x0d\n    untransferable_object_private_symbol\x2C\x0d\n  }\x2C\x0d\n} = internalBinding('util');\x0d\n\x0d\n// Temporary buffers to convert numbers.\x0d\nconst float32Array = new Float32Array(1);\x0d\nconst uInt8Float32Array = new Uint8Array(float32Array.buffer);\x0d\nconst float64Array = new Float64Array(1);\x0d\nconst uInt8Float64Array = new Uint8Array(float64Array.buffer);\x0d\n\x0d\n// Check endianness.\x0d\nfloat32Array[0] = -1; // 0xBF800000\x0d\n// Either it is [0\x2C 0\x2C 128\x2C 191] or [191\x2C 128\x2C 0\x2C 0]. It is not possible to\x0d\n// check this with `os.endianness()` because that is determined at compile time.\x0d\nconst bigEndian = uInt8Float32Array[3] === 0;\x0d\n\x0d\nfunction checkBounds(buf\x2C offset\x2C byteLength) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  if (buf[offset] === undefined || buf[offset + byteLength] === undefined)\x0d\n    boundsError(offset\x2C buf.length - (byteLength + 1));\x0d\n}\x0d\n\x0d\nfunction checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C byteLength) {\x0d\n  if (value > max || value < min) {\x0d\n    const n = typeof min === 'bigint' ? 'n' : '';\x0d\n    let range;\x0d\n    if (byteLength > 3) {\x0d\n      if (min === 0 || min === 0n) {\x0d\n        range = `>= 0${n} and < 2${n} ** ${(byteLength + 1) * 8}${n}`;\x0d\n      } else {\x0d\n        range = `>= -(2${n} ** ${(byteLength + 1) * 8 - 1}${n}) and ` +\x0d\n                `< 2${n} ** ${(byteLength + 1) * 8 - 1}${n}`;\x0d\n      }\x0d\n    } else {\x0d\n      range = `>= ${min}${n} and <= ${max}${n}`;\x0d\n    }\x0d\n    throw new ERR_OUT_OF_RANGE('value'\x2C range\x2C value);\x0d\n  }\x0d\n  checkBounds(buf\x2C offset\x2C byteLength);\x0d\n}\x0d\n\x0d\nfunction boundsError(value\x2C length\x2C type) {\x0d\n  if (MathFloor(value) !== value) {\x0d\n    validateNumber(value\x2C type);\x0d\n    throw new ERR_OUT_OF_RANGE(type || 'offset'\x2C 'an integer'\x2C value);\x0d\n  }\x0d\n\x0d\n  if (length < 0)\x0d\n    throw new ERR_BUFFER_OUT_OF_BOUNDS();\x0d\n\x0d\n  throw new ERR_OUT_OF_RANGE(type || 'offset'\x2C\x0d\n                             `>= ${type ? 1 : 0} and <= ${length}`\x2C\x0d\n                             value);\x0d\n}\x0d\n\x0d\n// Read integers.\x0d\nfunction readBigUInt64LE(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 7];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 8);\x0d\n\x0d\n  const lo = first +\x0d\n    this[++offset] * 2 ** 8 +\x0d\n    this[++offset] * 2 ** 16 +\x0d\n    this[++offset] * 2 ** 24;\x0d\n\x0d\n  const hi = this[++offset] +\x0d\n    this[++offset] * 2 ** 8 +\x0d\n    this[++offset] * 2 ** 16 +\x0d\n    last * 2 ** 24;\x0d\n\x0d\n  return BigInt(lo) + (BigInt(hi) << 32n);\x0d\n}\x0d\n\x0d\nfunction readBigUInt64BE(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 7];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 8);\x0d\n\x0d\n  const hi = first * 2 ** 24 +\x0d\n    this[++offset] * 2 ** 16 +\x0d\n    this[++offset] * 2 ** 8 +\x0d\n    this[++offset];\x0d\n\x0d\n  const lo = this[++offset] * 2 ** 24 +\x0d\n    this[++offset] * 2 ** 16 +\x0d\n    this[++offset] * 2 ** 8 +\x0d\n    last;\x0d\n\x0d\n  return (BigInt(hi) << 32n) + BigInt(lo);\x0d\n}\x0d\n\x0d\nfunction readBigInt64LE(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 7];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 8);\x0d\n\x0d\n  const val = this[offset + 4] +\x0d\n    this[offset + 5] * 2 ** 8 +\x0d\n    this[offset + 6] * 2 ** 16 +\x0d\n    (last << 24); // Overflow\x0d\n  return (BigInt(val) << 32n) +\x0d\n    BigInt(first +\x0d\n    this[++offset] * 2 ** 8 +\x0d\n    this[++offset] * 2 ** 16 +\x0d\n    this[++offset] * 2 ** 24);\x0d\n}\x0d\n\x0d\nfunction readBigInt64BE(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 7];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 8);\x0d\n\x0d\n  const val = (first << 24) + // Overflow\x0d\n    this[++offset] * 2 ** 16 +\x0d\n    this[++offset] * 2 ** 8 +\x0d\n    this[++offset];\x0d\n  return (BigInt(val) << 32n) +\x0d\n    BigInt(this[++offset] * 2 ** 24 +\x0d\n    this[++offset] * 2 ** 16 +\x0d\n    this[++offset] * 2 ** 8 +\x0d\n    last);\x0d\n}\x0d\n\x0d\nfunction readUIntLE(offset\x2C byteLength) {\x0d\n  if (offset === undefined)\x0d\n    throw new ERR_INVALID_ARG_TYPE('offset'\x2C 'number'\x2C offset);\x0d\n  if (byteLength === 6)\x0d\n    return readUInt48LE(this\x2C offset);\x0d\n  if (byteLength === 5)\x0d\n    return readUInt40LE(this\x2C offset);\x0d\n  if (byteLength === 3)\x0d\n    return readUInt24LE(this\x2C offset);\x0d\n  if (byteLength === 4)\x0d\n    return this.readUInt32LE(offset);\x0d\n  if (byteLength === 2)\x0d\n    return this.readUInt16LE(offset);\x0d\n  if (byteLength === 1)\x0d\n    return this.readUInt8(offset);\x0d\n\x0d\n  boundsError(byteLength\x2C 6\x2C 'byteLength');\x0d\n}\x0d\n\x0d\nfunction readUInt48LE(buf\x2C offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = buf[offset];\x0d\n  const last = buf[offset + 5];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C buf.length - 6);\x0d\n\x0d\n  return first +\x0d\n    buf[++offset] * 2 ** 8 +\x0d\n    buf[++offset] * 2 ** 16 +\x0d\n    buf[++offset] * 2 ** 24 +\x0d\n    (buf[++offset] + last * 2 ** 8) * 2 ** 32;\x0d\n}\x0d\n\x0d\nfunction readUInt40LE(buf\x2C offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = buf[offset];\x0d\n  const last = buf[offset + 4];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C buf.length - 5);\x0d\n\x0d\n  return first +\x0d\n    buf[++offset] * 2 ** 8 +\x0d\n    buf[++offset] * 2 ** 16 +\x0d\n    buf[++offset] * 2 ** 24 +\x0d\n    last * 2 ** 32;\x0d\n}\x0d\n\x0d\nfunction readUInt32LE(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 3];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 4);\x0d\n\x0d\n  return first +\x0d\n    this[++offset] * 2 ** 8 +\x0d\n    this[++offset] * 2 ** 16 +\x0d\n    last * 2 ** 24;\x0d\n}\x0d\n\x0d\nfunction readUInt24LE(buf\x2C offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = buf[offset];\x0d\n  const last = buf[offset + 2];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C buf.length - 3);\x0d\n\x0d\n  return first + buf[++offset] * 2 ** 8 + last * 2 ** 16;\x0d\n}\x0d\n\x0d\nfunction readUInt16LE(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 1];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 2);\x0d\n\x0d\n  return first + last * 2 ** 8;\x0d\n}\x0d\n\x0d\nfunction readUInt8(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const val = this[offset];\x0d\n  if (val === undefined)\x0d\n    boundsError(offset\x2C this.length - 1);\x0d\n\x0d\n  return val;\x0d\n}\x0d\n\x0d\nfunction readUIntBE(offset\x2C byteLength) {\x0d\n  if (offset === undefined)\x0d\n    throw new ERR_INVALID_ARG_TYPE('offset'\x2C 'number'\x2C offset);\x0d\n  if (byteLength === 6)\x0d\n    return readUInt48BE(this\x2C offset);\x0d\n  if (byteLength === 5)\x0d\n    return readUInt40BE(this\x2C offset);\x0d\n  if (byteLength === 3)\x0d\n    return readUInt24BE(this\x2C offset);\x0d\n  if (byteLength === 4)\x0d\n    return this.readUInt32BE(offset);\x0d\n  if (byteLength === 2)\x0d\n    return this.readUInt16BE(offset);\x0d\n  if (byteLength === 1)\x0d\n    return this.readUInt8(offset);\x0d\n\x0d\n  boundsError(byteLength\x2C 6\x2C 'byteLength');\x0d\n}\x0d\n\x0d\nfunction readUInt48BE(buf\x2C offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = buf[offset];\x0d\n  const last = buf[offset + 5];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C buf.length - 6);\x0d\n\x0d\n  return (first * 2 ** 8 + buf[++offset]) * 2 ** 32 +\x0d\n    buf[++offset] * 2 ** 24 +\x0d\n    buf[++offset] * 2 ** 16 +\x0d\n    buf[++offset] * 2 ** 8 +\x0d\n    last;\x0d\n}\x0d\n\x0d\nfunction readUInt40BE(buf\x2C offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = buf[offset];\x0d\n  const last = buf[offset + 4];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C buf.length - 5);\x0d\n\x0d\n  return first * 2 ** 32 +\x0d\n    buf[++offset] * 2 ** 24 +\x0d\n    buf[++offset] * 2 ** 16 +\x0d\n    buf[++offset] * 2 ** 8 +\x0d\n    last;\x0d\n}\x0d\n\x0d\nfunction readUInt32BE(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 3];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 4);\x0d\n\x0d\n  return first * 2 ** 24 +\x0d\n    this[++offset] * 2 ** 16 +\x0d\n    this[++offset] * 2 ** 8 +\x0d\n    last;\x0d\n}\x0d\n\x0d\nfunction readUInt24BE(buf\x2C offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = buf[offset];\x0d\n  const last = buf[offset + 2];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C buf.length - 3);\x0d\n\x0d\n  return first * 2 ** 16 + buf[++offset] * 2 ** 8 + last;\x0d\n}\x0d\n\x0d\nfunction readUInt16BE(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 1];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 2);\x0d\n\x0d\n  return first * 2 ** 8 + last;\x0d\n}\x0d\n\x0d\nfunction readIntLE(offset\x2C byteLength) {\x0d\n  if (offset === undefined)\x0d\n    throw new ERR_INVALID_ARG_TYPE('offset'\x2C 'number'\x2C offset);\x0d\n  if (byteLength === 6)\x0d\n    return readInt48LE(this\x2C offset);\x0d\n  if (byteLength === 5)\x0d\n    return readInt40LE(this\x2C offset);\x0d\n  if (byteLength === 3)\x0d\n    return readInt24LE(this\x2C offset);\x0d\n  if (byteLength === 4)\x0d\n    return this.readInt32LE(offset);\x0d\n  if (byteLength === 2)\x0d\n    return this.readInt16LE(offset);\x0d\n  if (byteLength === 1)\x0d\n    return this.readInt8(offset);\x0d\n\x0d\n  boundsError(byteLength\x2C 6\x2C 'byteLength');\x0d\n}\x0d\n\x0d\nfunction readInt48LE(buf\x2C offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = buf[offset];\x0d\n  const last = buf[offset + 5];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C buf.length - 6);\x0d\n\x0d\n  const val = buf[offset + 4] + last * 2 ** 8;\x0d\n  return (val | (val & 2 ** 15) * 0x1fffe) * 2 ** 32 +\x0d\n    first +\x0d\n    buf[++offset] * 2 ** 8 +\x0d\n    buf[++offset] * 2 ** 16 +\x0d\n    buf[++offset] * 2 ** 24;\x0d\n}\x0d\n\x0d\nfunction readInt40LE(buf\x2C offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = buf[offset];\x0d\n  const last = buf[offset + 4];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C buf.length - 5);\x0d\n\x0d\n  return (last | (last & 2 ** 7) * 0x1fffffe) * 2 ** 32 +\x0d\n    first +\x0d\n    buf[++offset] * 2 ** 8 +\x0d\n    buf[++offset] * 2 ** 16 +\x0d\n    buf[++offset] * 2 ** 24;\x0d\n}\x0d\n\x0d\nfunction readInt32LE(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 3];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 4);\x0d\n\x0d\n  return first +\x0d\n    this[++offset] * 2 ** 8 +\x0d\n    this[++offset] * 2 ** 16 +\x0d\n    (last << 24); // Overflow\x0d\n}\x0d\n\x0d\nfunction readInt24LE(buf\x2C offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = buf[offset];\x0d\n  const last = buf[offset + 2];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C buf.length - 3);\x0d\n\x0d\n  const val = first + buf[++offset] * 2 ** 8 + last * 2 ** 16;\x0d\n  return val | (val & 2 ** 23) * 0x1fe;\x0d\n}\x0d\n\x0d\nfunction readInt16LE(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 1];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 2);\x0d\n\x0d\n  const val = first + last * 2 ** 8;\x0d\n  return val | (val & 2 ** 15) * 0x1fffe;\x0d\n}\x0d\n\x0d\nfunction readInt8(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const val = this[offset];\x0d\n  if (val === undefined)\x0d\n    boundsError(offset\x2C this.length - 1);\x0d\n\x0d\n  return val | (val & 2 ** 7) * 0x1fffffe;\x0d\n}\x0d\n\x0d\nfunction readIntBE(offset\x2C byteLength) {\x0d\n  if (offset === undefined)\x0d\n    throw new ERR_INVALID_ARG_TYPE('offset'\x2C 'number'\x2C offset);\x0d\n  if (byteLength === 6)\x0d\n    return readInt48BE(this\x2C offset);\x0d\n  if (byteLength === 5)\x0d\n    return readInt40BE(this\x2C offset);\x0d\n  if (byteLength === 3)\x0d\n    return readInt24BE(this\x2C offset);\x0d\n  if (byteLength === 4)\x0d\n    return this.readInt32BE(offset);\x0d\n  if (byteLength === 2)\x0d\n    return this.readInt16BE(offset);\x0d\n  if (byteLength === 1)\x0d\n    return this.readInt8(offset);\x0d\n\x0d\n  boundsError(byteLength\x2C 6\x2C 'byteLength');\x0d\n}\x0d\n\x0d\nfunction readInt48BE(buf\x2C offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = buf[offset];\x0d\n  const last = buf[offset + 5];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C buf.length - 6);\x0d\n\x0d\n  const val = buf[++offset] + first * 2 ** 8;\x0d\n  return (val | (val & 2 ** 15) * 0x1fffe) * 2 ** 32 +\x0d\n    buf[++offset] * 2 ** 24 +\x0d\n    buf[++offset] * 2 ** 16 +\x0d\n    buf[++offset] * 2 ** 8 +\x0d\n    last;\x0d\n}\x0d\n\x0d\nfunction readInt40BE(buf\x2C offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = buf[offset];\x0d\n  const last = buf[offset + 4];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C buf.length - 5);\x0d\n\x0d\n  return (first | (first & 2 ** 7) * 0x1fffffe) * 2 ** 32 +\x0d\n    buf[++offset] * 2 ** 24 +\x0d\n    buf[++offset] * 2 ** 16 +\x0d\n    buf[++offset] * 2 ** 8 +\x0d\n    last;\x0d\n}\x0d\n\x0d\nfunction readInt32BE(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 3];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 4);\x0d\n\x0d\n  return (first << 24) + // Overflow\x0d\n    this[++offset] * 2 ** 16 +\x0d\n    this[++offset] * 2 ** 8 +\x0d\n    last;\x0d\n}\x0d\n\x0d\nfunction readInt24BE(buf\x2C offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = buf[offset];\x0d\n  const last = buf[offset + 2];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C buf.length - 3);\x0d\n\x0d\n  const val = first * 2 ** 16 + buf[++offset] * 2 ** 8 + last;\x0d\n  return val | (val & 2 ** 23) * 0x1fe;\x0d\n}\x0d\n\x0d\nfunction readInt16BE(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 1];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 2);\x0d\n\x0d\n  const val = first * 2 ** 8 + last;\x0d\n  return val | (val & 2 ** 15) * 0x1fffe;\x0d\n}\x0d\n\x0d\n// Read floats\x0d\nfunction readFloatBackwards(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 3];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 4);\x0d\n\x0d\n  uInt8Float32Array[3] = first;\x0d\n  uInt8Float32Array[2] = this[++offset];\x0d\n  uInt8Float32Array[1] = this[++offset];\x0d\n  uInt8Float32Array[0] = last;\x0d\n  return float32Array[0];\x0d\n}\x0d\n\x0d\nfunction readFloatForwards(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 3];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 4);\x0d\n\x0d\n  uInt8Float32Array[0] = first;\x0d\n  uInt8Float32Array[1] = this[++offset];\x0d\n  uInt8Float32Array[2] = this[++offset];\x0d\n  uInt8Float32Array[3] = last;\x0d\n  return float32Array[0];\x0d\n}\x0d\n\x0d\nfunction readDoubleBackwards(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 7];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 8);\x0d\n\x0d\n  uInt8Float64Array[7] = first;\x0d\n  uInt8Float64Array[6] = this[++offset];\x0d\n  uInt8Float64Array[5] = this[++offset];\x0d\n  uInt8Float64Array[4] = this[++offset];\x0d\n  uInt8Float64Array[3] = this[++offset];\x0d\n  uInt8Float64Array[2] = this[++offset];\x0d\n  uInt8Float64Array[1] = this[++offset];\x0d\n  uInt8Float64Array[0] = last;\x0d\n  return float64Array[0];\x0d\n}\x0d\n\x0d\nfunction readDoubleForwards(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 7];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 8);\x0d\n\x0d\n  uInt8Float64Array[0] = first;\x0d\n  uInt8Float64Array[1] = this[++offset];\x0d\n  uInt8Float64Array[2] = this[++offset];\x0d\n  uInt8Float64Array[3] = this[++offset];\x0d\n  uInt8Float64Array[4] = this[++offset];\x0d\n  uInt8Float64Array[5] = this[++offset];\x0d\n  uInt8Float64Array[6] = this[++offset];\x0d\n  uInt8Float64Array[7] = last;\x0d\n  return float64Array[0];\x0d\n}\x0d\n\x0d\n// Write integers.\x0d\nfunction writeBigU_Int64LE(buf\x2C value\x2C offset\x2C min\x2C max) {\x0d\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 7);\x0d\n\x0d\n  let lo = Number(value & 0xffffffffn);\x0d\n  buf[offset++] = lo;\x0d\n  lo = lo >> 8;\x0d\n  buf[offset++] = lo;\x0d\n  lo = lo >> 8;\x0d\n  buf[offset++] = lo;\x0d\n  lo = lo >> 8;\x0d\n  buf[offset++] = lo;\x0d\n  let hi = Number(value >> 32n & 0xffffffffn);\x0d\n  buf[offset++] = hi;\x0d\n  hi = hi >> 8;\x0d\n  buf[offset++] = hi;\x0d\n  hi = hi >> 8;\x0d\n  buf[offset++] = hi;\x0d\n  hi = hi >> 8;\x0d\n  buf[offset++] = hi;\x0d\n  return offset;\x0d\n}\x0d\n\x0d\nfunction writeBigUInt64LE(value\x2C offset = 0) {\x0d\n  return writeBigU_Int64LE(this\x2C value\x2C offset\x2C 0n\x2C 0xffffffffffffffffn);\x0d\n}\x0d\n\x0d\nfunction writeBigU_Int64BE(buf\x2C value\x2C offset\x2C min\x2C max) {\x0d\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 7);\x0d\n\x0d\n  let lo = Number(value & 0xffffffffn);\x0d\n  buf[offset + 7] = lo;\x0d\n  lo = lo >> 8;\x0d\n  buf[offset + 6] = lo;\x0d\n  lo = lo >> 8;\x0d\n  buf[offset + 5] = lo;\x0d\n  lo = lo >> 8;\x0d\n  buf[offset + 4] = lo;\x0d\n  let hi = Number(value >> 32n & 0xffffffffn);\x0d\n  buf[offset + 3] = hi;\x0d\n  hi = hi >> 8;\x0d\n  buf[offset + 2] = hi;\x0d\n  hi = hi >> 8;\x0d\n  buf[offset + 1] = hi;\x0d\n  hi = hi >> 8;\x0d\n  buf[offset] = hi;\x0d\n  return offset + 8;\x0d\n}\x0d\n\x0d\nfunction writeBigUInt64BE(value\x2C offset = 0) {\x0d\n  return writeBigU_Int64BE(this\x2C value\x2C offset\x2C 0n\x2C 0xffffffffffffffffn);\x0d\n}\x0d\n\x0d\nfunction writeBigInt64LE(value\x2C offset = 0) {\x0d\n  return writeBigU_Int64LE(\x0d\n    this\x2C value\x2C offset\x2C -0x8000000000000000n\x2C 0x7fffffffffffffffn);\x0d\n}\x0d\n\x0d\nfunction writeBigInt64BE(value\x2C offset = 0) {\x0d\n  return writeBigU_Int64BE(\x0d\n    this\x2C value\x2C offset\x2C -0x8000000000000000n\x2C 0x7fffffffffffffffn);\x0d\n}\x0d\n\x0d\nfunction writeUIntLE(value\x2C offset\x2C byteLength) {\x0d\n  if (byteLength === 6)\x0d\n    return writeU_Int48LE(this\x2C value\x2C offset\x2C 0\x2C 0xffffffffffff);\x0d\n  if (byteLength === 5)\x0d\n    return writeU_Int40LE(this\x2C value\x2C offset\x2C 0\x2C 0xffffffffff);\x0d\n  if (byteLength === 3)\x0d\n    return writeU_Int24LE(this\x2C value\x2C offset\x2C 0\x2C 0xffffff);\x0d\n  if (byteLength === 4)\x0d\n    return writeU_Int32LE(this\x2C value\x2C offset\x2C 0\x2C 0xffffffff);\x0d\n  if (byteLength === 2)\x0d\n    return writeU_Int16LE(this\x2C value\x2C offset\x2C 0\x2C 0xffff);\x0d\n  if (byteLength === 1)\x0d\n    return writeU_Int8(this\x2C value\x2C offset\x2C 0\x2C 0xff);\x0d\n\x0d\n  boundsError(byteLength\x2C 6\x2C 'byteLength');\x0d\n}\x0d\n\x0d\nfunction writeU_Int48LE(buf\x2C value\x2C offset\x2C min\x2C max) {\x0d\n  value = +value;\x0d\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 5);\x0d\n\x0d\n  const newVal = MathFloor(value * 2 ** -32);\x0d\n  buf[offset++] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset++] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset++] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset++] = value;\x0d\n  buf[offset++] = newVal;\x0d\n  buf[offset++] = (newVal >>> 8);\x0d\n  return offset;\x0d\n}\x0d\n\x0d\nfunction writeU_Int40LE(buf\x2C value\x2C offset\x2C min\x2C max) {\x0d\n  value = +value;\x0d\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 4);\x0d\n\x0d\n  const newVal = value;\x0d\n  buf[offset++] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset++] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset++] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset++] = value;\x0d\n  buf[offset++] = MathFloor(newVal * 2 ** -32);\x0d\n  return offset;\x0d\n}\x0d\n\x0d\nfunction writeU_Int32LE(buf\x2C value\x2C offset\x2C min\x2C max) {\x0d\n  value = +value;\x0d\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 3);\x0d\n\x0d\n  buf[offset++] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset++] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset++] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset++] = value;\x0d\n  return offset;\x0d\n}\x0d\n\x0d\nfunction writeUInt32LE(value\x2C offset = 0) {\x0d\n  return writeU_Int32LE(this\x2C value\x2C offset\x2C 0\x2C 0xffffffff);\x0d\n}\x0d\n\x0d\nfunction writeU_Int24LE(buf\x2C value\x2C offset\x2C min\x2C max) {\x0d\n  value = +value;\x0d\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 2);\x0d\n\x0d\n  buf[offset++] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset++] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset++] = value;\x0d\n  return offset;\x0d\n}\x0d\n\x0d\nfunction writeU_Int16LE(buf\x2C value\x2C offset\x2C min\x2C max) {\x0d\n  value = +value;\x0d\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 1);\x0d\n\x0d\n  buf[offset++] = value;\x0d\n  buf[offset++] = (value >>> 8);\x0d\n  return offset;\x0d\n}\x0d\n\x0d\nfunction writeUInt16LE(value\x2C offset = 0) {\x0d\n  return writeU_Int16LE(this\x2C value\x2C offset\x2C 0\x2C 0xffff);\x0d\n}\x0d\n\x0d\nfunction writeU_Int8(buf\x2C value\x2C offset\x2C min\x2C max) {\x0d\n  value = +value;\x0d\n  // `checkInt()` can not be used here because it checks two entries.\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  if (value > max || value < min) {\x0d\n    throw new ERR_OUT_OF_RANGE('value'\x2C `>= ${min} and <= ${max}`\x2C value);\x0d\n  }\x0d\n  if (buf[offset] === undefined)\x0d\n    boundsError(offset\x2C buf.length - 1);\x0d\n\x0d\n  buf[offset] = value;\x0d\n  return offset + 1;\x0d\n}\x0d\n\x0d\nfunction writeUInt8(value\x2C offset = 0) {\x0d\n  return writeU_Int8(this\x2C value\x2C offset\x2C 0\x2C 0xff);\x0d\n}\x0d\n\x0d\nfunction writeUIntBE(value\x2C offset\x2C byteLength) {\x0d\n  if (byteLength === 6)\x0d\n    return writeU_Int48BE(this\x2C value\x2C offset\x2C 0\x2C 0xffffffffffff);\x0d\n  if (byteLength === 5)\x0d\n    return writeU_Int40BE(this\x2C value\x2C offset\x2C 0\x2C 0xffffffffff);\x0d\n  if (byteLength === 3)\x0d\n    return writeU_Int24BE(this\x2C value\x2C offset\x2C 0\x2C 0xffffff);\x0d\n  if (byteLength === 4)\x0d\n    return writeU_Int32BE(this\x2C value\x2C offset\x2C 0\x2C 0xffffffff);\x0d\n  if (byteLength === 2)\x0d\n    return writeU_Int16BE(this\x2C value\x2C offset\x2C 0\x2C 0xffff);\x0d\n  if (byteLength === 1)\x0d\n    return writeU_Int8(this\x2C value\x2C offset\x2C 0\x2C 0xff);\x0d\n\x0d\n  boundsError(byteLength\x2C 6\x2C 'byteLength');\x0d\n}\x0d\n\x0d\nfunction writeU_Int48BE(buf\x2C value\x2C offset\x2C min\x2C max) {\x0d\n  value = +value;\x0d\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 5);\x0d\n\x0d\n  const newVal = MathFloor(value * 2 ** -32);\x0d\n  buf[offset++] = (newVal >>> 8);\x0d\n  buf[offset++] = newVal;\x0d\n  buf[offset + 3] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset + 2] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset + 1] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset] = value;\x0d\n  return offset + 4;\x0d\n}\x0d\n\x0d\nfunction writeU_Int40BE(buf\x2C value\x2C offset\x2C min\x2C max) {\x0d\n  value = +value;\x0d\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 4);\x0d\n\x0d\n  buf[offset++] = MathFloor(value * 2 ** -32);\x0d\n  buf[offset + 3] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset + 2] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset + 1] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset] = value;\x0d\n  return offset + 4;\x0d\n}\x0d\n\x0d\nfunction writeU_Int32BE(buf\x2C value\x2C offset\x2C min\x2C max) {\x0d\n  value = +value;\x0d\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 3);\x0d\n\x0d\n  buf[offset + 3] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset + 2] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset + 1] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset] = value;\x0d\n  return offset + 4;\x0d\n}\x0d\n\x0d\nfunction writeUInt32BE(value\x2C offset = 0) {\x0d\n  return writeU_Int32BE(this\x2C value\x2C offset\x2C 0\x2C 0xffffffff);\x0d\n}\x0d\n\x0d\nfunction writeU_Int24BE(buf\x2C value\x2C offset\x2C min\x2C max) {\x0d\n  value = +value;\x0d\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 2);\x0d\n\x0d\n  buf[offset + 2] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset + 1] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset] = value;\x0d\n  return offset + 3;\x0d\n}\x0d\n\x0d\nfunction writeU_Int16BE(buf\x2C value\x2C offset\x2C min\x2C max) {\x0d\n  value = +value;\x0d\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 1);\x0d\n\x0d\n  buf[offset++] = (value >>> 8);\x0d\n  buf[offset++] = value;\x0d\n  return offset;\x0d\n}\x0d\n\x0d\nfunction writeUInt16BE(value\x2C offset = 0) {\x0d\n  return writeU_Int16BE(this\x2C value\x2C offset\x2C 0\x2C 0xffff);\x0d\n}\x0d\n\x0d\nfunction writeIntLE(value\x2C offset\x2C byteLength) {\x0d\n  if (byteLength === 6)\x0d\n    return writeU_Int48LE(this\x2C value\x2C offset\x2C -0x800000000000\x2C 0x7fffffffffff);\x0d\n  if (byteLength === 5)\x0d\n    return writeU_Int40LE(this\x2C value\x2C offset\x2C -0x8000000000\x2C 0x7fffffffff);\x0d\n  if (byteLength === 3)\x0d\n    return writeU_Int24LE(this\x2C value\x2C offset\x2C -0x800000\x2C 0x7fffff);\x0d\n  if (byteLength === 4)\x0d\n    return writeU_Int32LE(this\x2C value\x2C offset\x2C -0x80000000\x2C 0x7fffffff);\x0d\n  if (byteLength === 2)\x0d\n    return writeU_Int16LE(this\x2C value\x2C offset\x2C -0x8000\x2C 0x7fff);\x0d\n  if (byteLength === 1)\x0d\n    return writeU_Int8(this\x2C value\x2C offset\x2C -0x80\x2C 0x7f);\x0d\n\x0d\n  boundsError(byteLength\x2C 6\x2C 'byteLength');\x0d\n}\x0d\n\x0d\nfunction writeInt32LE(value\x2C offset = 0) {\x0d\n  return writeU_Int32LE(this\x2C value\x2C offset\x2C -0x80000000\x2C 0x7fffffff);\x0d\n}\x0d\n\x0d\nfunction writeInt16LE(value\x2C offset = 0) {\x0d\n  return writeU_Int16LE(this\x2C value\x2C offset\x2C -0x8000\x2C 0x7fff);\x0d\n}\x0d\n\x0d\nfunction writeInt8(value\x2C offset = 0) {\x0d\n  return writeU_Int8(this\x2C value\x2C offset\x2C -0x80\x2C 0x7f);\x0d\n}\x0d\n\x0d\nfunction writeIntBE(value\x2C offset\x2C byteLength) {\x0d\n  if (byteLength === 6)\x0d\n    return writeU_Int48BE(this\x2C value\x2C offset\x2C -0x800000000000\x2C 0x7fffffffffff);\x0d\n  if (byteLength === 5)\x0d\n    return writeU_Int40BE(this\x2C value\x2C offset\x2C -0x8000000000\x2C 0x7fffffffff);\x0d\n  if (byteLength === 3)\x0d\n    return writeU_Int24BE(this\x2C value\x2C offset\x2C -0x800000\x2C 0x7fffff);\x0d\n  if (byteLength === 4)\x0d\n    return writeU_Int32BE(this\x2C value\x2C offset\x2C -0x80000000\x2C 0x7fffffff);\x0d\n  if (byteLength === 2)\x0d\n    return writeU_Int16BE(this\x2C value\x2C offset\x2C -0x8000\x2C 0x7fff);\x0d\n  if (byteLength === 1)\x0d\n    return writeU_Int8(this\x2C value\x2C offset\x2C -0x80\x2C 0x7f);\x0d\n\x0d\n  boundsError(byteLength\x2C 6\x2C 'byteLength');\x0d\n}\x0d\n\x0d\nfunction writeInt32BE(value\x2C offset = 0) {\x0d\n  return writeU_Int32BE(this\x2C value\x2C offset\x2C -0x80000000\x2C 0x7fffffff);\x0d\n}\x0d\n\x0d\nfunction writeInt16BE(value\x2C offset = 0) {\x0d\n  return writeU_Int16BE(this\x2C value\x2C offset\x2C -0x8000\x2C 0x7fff);\x0d\n}\x0d\n\x0d\n// Write floats.\x0d\nfunction writeDoubleForwards(val\x2C offset = 0) {\x0d\n  val = +val;\x0d\n  checkBounds(this\x2C offset\x2C 7);\x0d\n\x0d\n  float64Array[0] = val;\x0d\n  this[offset++] = uInt8Float64Array[0];\x0d\n  this[offset++] = uInt8Float64Array[1];\x0d\n  this[offset++] = uInt8Float64Array[2];\x0d\n  this[offset++] = uInt8Float64Array[3];\x0d\n  this[offset++] = uInt8Float64Array[4];\x0d\n  this[offset++] = uInt8Float64Array[5];\x0d\n  this[offset++] = uInt8Float64Array[6];\x0d\n  this[offset++] = uInt8Float64Array[7];\x0d\n  return offset;\x0d\n}\x0d\n\x0d\nfunction writeDoubleBackwards(val\x2C offset = 0) {\x0d\n  val = +val;\x0d\n  checkBounds(this\x2C offset\x2C 7);\x0d\n\x0d\n  float64Array[0] = val;\x0d\n  this[offset++] = uInt8Float64Array[7];\x0d\n  this[offset++] = uInt8Float64Array[6];\x0d\n  this[offset++] = uInt8Float64Array[5];\x0d\n  this[offset++] = uInt8Float64Array[4];\x0d\n  this[offset++] = uInt8Float64Array[3];\x0d\n  this[offset++] = uInt8Float64Array[2];\x0d\n  this[offset++] = uInt8Float64Array[1];\x0d\n  this[offset++] = uInt8Float64Array[0];\x0d\n  return offset;\x0d\n}\x0d\n\x0d\nfunction writeFloatForwards(val\x2C offset = 0) {\x0d\n  val = +val;\x0d\n  checkBounds(this\x2C offset\x2C 3);\x0d\n\x0d\n  float32Array[0] = val;\x0d\n  this[offset++] = uInt8Float32Array[0];\x0d\n  this[offset++] = uInt8Float32Array[1];\x0d\n  this[offset++] = uInt8Float32Array[2];\x0d\n  this[offset++] = uInt8Float32Array[3];\x0d\n  return offset;\x0d\n}\x0d\n\x0d\nfunction writeFloatBackwards(val\x2C offset = 0) {\x0d\n  val = +val;\x0d\n  checkBounds(this\x2C offset\x2C 3);\x0d\n\x0d\n  float32Array[0] = val;\x0d\n  this[offset++] = uInt8Float32Array[3];\x0d\n  this[offset++] = uInt8Float32Array[2];\x0d\n  this[offset++] = uInt8Float32Array[1];\x0d\n  this[offset++] = uInt8Float32Array[0];\x0d\n  return offset;\x0d\n}\x0d\n\x0d\nclass FastBuffer extends Uint8Array {\x0d\n  // Using an explicit constructor here is necessary to avoid relying on\x0d\n  // `Array.prototype[Symbol.iterator]`\x2C which can be mutated by users.\x0d\n  // eslint-disable-next-line no-useless-constructor\x0d\n  constructor(bufferOrLength\x2C byteOffset\x2C length) {\x0d\n    super(bufferOrLength\x2C byteOffset\x2C length);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction addBufferPrototypeMethods(proto) {\x0d\n  proto.readBigUInt64LE = readBigUInt64LE;\x0d\n  proto.readBigUInt64BE = readBigUInt64BE;\x0d\n  proto.readBigUint64LE = readBigUInt64LE;\x0d\n  proto.readBigUint64BE = readBigUInt64BE;\x0d\n  proto.readBigInt64LE = readBigInt64LE;\x0d\n  proto.readBigInt64BE = readBigInt64BE;\x0d\n  proto.writeBigUInt64LE = writeBigUInt64LE;\x0d\n  proto.writeBigUInt64BE = writeBigUInt64BE;\x0d\n  proto.writeBigUint64LE = writeBigUInt64LE;\x0d\n  proto.writeBigUint64BE = writeBigUInt64BE;\x0d\n  proto.writeBigInt64LE = writeBigInt64LE;\x0d\n  proto.writeBigInt64BE = writeBigInt64BE;\x0d\n\x0d\n  proto.readUIntLE = readUIntLE;\x0d\n  proto.readUInt32LE = readUInt32LE;\x0d\n  proto.readUInt16LE = readUInt16LE;\x0d\n  proto.readUInt8 = readUInt8;\x0d\n  proto.readUIntBE = readUIntBE;\x0d\n  proto.readUInt32BE = readUInt32BE;\x0d\n  proto.readUInt16BE = readUInt16BE;\x0d\n  proto.readUintLE = readUIntLE;\x0d\n  proto.readUint32LE = readUInt32LE;\x0d\n  proto.readUint16LE = readUInt16LE;\x0d\n  proto.readUint8 = readUInt8;\x0d\n  proto.readUintBE = readUIntBE;\x0d\n  proto.readUint32BE = readUInt32BE;\x0d\n  proto.readUint16BE = readUInt16BE;\x0d\n  proto.readIntLE = readIntLE;\x0d\n  proto.readInt32LE = readInt32LE;\x0d\n  proto.readInt16LE = readInt16LE;\x0d\n  proto.readInt8 = readInt8;\x0d\n  proto.readIntBE = readIntBE;\x0d\n  proto.readInt32BE = readInt32BE;\x0d\n  proto.readInt16BE = readInt16BE;\x0d\n\x0d\n  proto.writeUIntLE = writeUIntLE;\x0d\n  proto.writeUInt32LE = writeUInt32LE;\x0d\n  proto.writeUInt16LE = writeUInt16LE;\x0d\n  proto.writeUInt8 = writeUInt8;\x0d\n  proto.writeUIntBE = writeUIntBE;\x0d\n  proto.writeUInt32BE = writeUInt32BE;\x0d\n  proto.writeUInt16BE = writeUInt16BE;\x0d\n  proto.writeUintLE = writeUIntLE;\x0d\n  proto.writeUint32LE = writeUInt32LE;\x0d\n  proto.writeUint16LE = writeUInt16LE;\x0d\n  proto.writeUint8 = writeUInt8;\x0d\n  proto.writeUintBE = writeUIntBE;\x0d\n  proto.writeUint32BE = writeUInt32BE;\x0d\n  proto.writeUint16BE = writeUInt16BE;\x0d\n  proto.writeIntLE = writeIntLE;\x0d\n  proto.writeInt32LE = writeInt32LE;\x0d\n  proto.writeInt16LE = writeInt16LE;\x0d\n  proto.writeInt8 = writeInt8;\x0d\n  proto.writeIntBE = writeIntBE;\x0d\n  proto.writeInt32BE = writeInt32BE;\x0d\n  proto.writeInt16BE = writeInt16BE;\x0d\n\x0d\n  proto.readFloatLE = bigEndian ? readFloatBackwards : readFloatForwards;\x0d\n  proto.readFloatBE = bigEndian ? readFloatForwards : readFloatBackwards;\x0d\n  proto.readDoubleLE = bigEndian ? readDoubleBackwards : readDoubleForwards;\x0d\n  proto.readDoubleBE = bigEndian ? readDoubleForwards : readDoubleBackwards;\x0d\n  proto.writeFloatLE = bigEndian ? writeFloatBackwards : writeFloatForwards;\x0d\n  proto.writeFloatBE = bigEndian ? writeFloatForwards : writeFloatBackwards;\x0d\n  proto.writeDoubleLE = bigEndian ? writeDoubleBackwards : writeDoubleForwards;\x0d\n  proto.writeDoubleBE = bigEndian ? writeDoubleForwards : writeDoubleBackwards;\x0d\n\x0d\n  proto.asciiSlice = asciiSlice;\x0d\n  proto.base64Slice = base64Slice;\x0d\n  proto.base64urlSlice = base64urlSlice;\x0d\n  proto.latin1Slice = latin1Slice;\x0d\n  proto.hexSlice = hexSlice;\x0d\n  proto.ucs2Slice = ucs2Slice;\x0d\n  proto.utf8Slice = utf8Slice;\x0d\n  proto.asciiWrite = asciiWrite;\x0d\n  proto.base64Write = base64Write;\x0d\n  proto.base64urlWrite = base64urlWrite;\x0d\n  proto.latin1Write = latin1Write;\x0d\n  proto.hexWrite = hexWrite;\x0d\n  proto.ucs2Write = ucs2Write;\x0d\n  proto.utf8Write = utf8Write;\x0d\n}\x0d\n\x0d\n// This would better be placed in internal/worker/io.js\x2C but that doesn't work\x0d\n// because Buffer needs this and that would introduce a cyclic dependency.\x0d\nfunction markAsUntransferable(obj) {\x0d\n  if ((typeof obj !== 'object' && typeof obj !== 'function') || obj === null)\x0d\n    return;  // This object is a primitive and therefore already untransferable.\x0d\n  obj[untransferable_object_private_symbol] = true;\x0d\n}\x0d\n\x0d\n// A toggle used to access the zero fill setting of the array buffer allocator\x0d\n// in C++.\x0d\n// |zeroFill| can be undefined when running inside an isolate where we\x0d\n// do not own the ArrayBuffer allocator.  Zero fill is always on in that case.\x0d\nlet zeroFill = getZeroFillToggle();\x0d\nfunction createUnsafeBuffer(size) {\x0d\n  zeroFill[0] = 0;\x0d\n  try {\x0d\n    return new FastBuffer(size);\x0d\n  } finally {\x0d\n    zeroFill[0] = 1;\x0d\n  }\x0d\n}\x0d\n\x0d\n// The connection between the JS land zero fill toggle and the\x0d\n// C++ one in the NodeArrayBufferAllocator gets lost if the toggle\x0d\n// is deserialized from the snapshot\x2C because V8 owns the underlying\x0d\n// memory of this toggle. This resets the connection.\x0d\nfunction reconnectZeroFillToggle() {\x0d\n  zeroFill = getZeroFillToggle();\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  FastBuffer\x2C\x0d\n  addBufferPrototypeMethods\x2C\x0d\n  markAsUntransferable\x2C\x0d\n  createUnsafeBuffer\x2C\x0d\n  readUInt16BE\x2C\x0d\n  readUInt32BE\x2C\x0d\n  reconnectZeroFillToggle\x0d\n};\x0d\n
code-source-info,0xb50533b378,31,31785,31827,C0O31793C5O31804C11O31802C18O31826,,
code-creation,LazyCompile,10,268979,0xb50533dc78,460,patchProcessObject node:internal/process/pre_execution:134:28,0xb505336ab8,~
code-source-info,0xb50533dc
code-creation,LazyCompile,10,269235,0xb50533e1c0,82,getOptionValue node:internal/options:44:24,0x914792d7c0,~
code-source-info,0xb50533e1c0,87,1028,1278,C0O1062C3O1062C7O1108C15O1108C22O1159C30O1181C38O1181C43O1168C47O1159C53O1197C55O1222C60O1228C61O1252C66O1252C74O1267C81O1275,,
code-creation,LazyCompile,10,269318,0xb50533e320,33,getCLIOptionsFromBinding node:internal/options:18:34,0x914792d5a8,~
code-source-info,0xb50533e320,87,514,620,C0O522C6O546C11O573C15O558C28O599C32O617,,
new,MemoryChunk,0x14dbcb80000,262144
code-creation,LazyCompile,10,270153,0xb50533e620,832,resolve node:path:158:10,0x2dbe93dae18,~
script-source,73,node:path,// Copyright Joyent\x2C Inc. and other Node contributors.\x0d\n//\x0d\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\x0d\n// copy of this software and associated documentation files (the\x0d\n// "Software")\x2C to deal in the Software without restriction\x2C including\x0d\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\x0d\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\x0d\n// persons to whom the Software is furnished to do so\x2C subject to the\x0d\n// following conditions:\x0d\n//\x0d\n// The above copyright notice and this permission notice shall be included\x0d\n// in all copies or substantial portions of the Software.\x0d\n//\x0d\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\x0d\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\x0d\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\x0d\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\x0d\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\x0d\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\x0d\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\x0d\n\x0d\n'use strict';\x0d\n\x0d\nconst {\x0d\n  FunctionPrototypeBind\x2C\x0d\n  StringPrototypeCharCodeAt\x2C\x0d\n  StringPrototypeIndexOf\x2C\x0d\n  StringPrototypeLastIndexOf\x2C\x0d\n  StringPrototypeReplace\x2C\x0d\n  StringPrototypeSlice\x2C\x0d\n  StringPrototypeToLowerCase\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  CHAR_UPPERCASE_A\x2C\x0d\n  CHAR_LOWERCASE_A\x2C\x0d\n  CHAR_UPPERCASE_Z\x2C\x0d\n  CHAR_LOWERCASE_Z\x2C\x0d\n  CHAR_DOT\x2C\x0d\n  CHAR_FORWARD_SLASH\x2C\x0d\n  CHAR_BACKWARD_SLASH\x2C\x0d\n  CHAR_COLON\x2C\x0d\n  CHAR_QUESTION_MARK\x2C\x0d\n} = require('internal/constants');\x0d\nconst {\x0d\n  validateObject\x2C\x0d\n  validateString\x2C\x0d\n} = require('internal/validators');\x0d\n\x0d\nconst platformIsWin32 = (process.platform === 'win32');\x0d\n\x0d\nfunction isPathSeparator(code) {\x0d\n  return code === CHAR_FORWARD_SLASH || code === CHAR_BACKWARD_SLASH;\x0d\n}\x0d\n\x0d\nfunction isPosixPathSeparator(code) {\x0d\n  return code === CHAR_FORWARD_SLASH;\x0d\n}\x0d\n\x0d\nfunction isWindowsDeviceRoot(code) {\x0d\n  return (code >= CHAR_UPPERCASE_A && code <= CHAR_UPPERCASE_Z) ||\x0d\n         (code >= CHAR_LOWERCASE_A && code <= CHAR_LOWERCASE_Z);\x0d\n}\x0d\n\x0d\n// Resolves . and .. elements in a path with directory names\x0d\nfunction normalizeString(path\x2C allowAboveRoot\x2C separator\x2C isPathSeparator) {\x0d\n  let res = '';\x0d\n  let lastSegmentLength = 0;\x0d\n  let lastSlash = -1;\x0d\n  let dots = 0;\x0d\n  let code = 0;\x0d\n  for (let i = 0; i <= path.length; ++i) {\x0d\n    if (i < path.length)\x0d\n      code = StringPrototypeCharCodeAt(path\x2C i);\x0d\n    else if (isPathSeparator(code))\x0d\n      break;\x0d\n    else\x0d\n      code = CHAR_FORWARD_SLASH;\x0d\n\x0d\n    if (isPathSeparator(code)) {\x0d\n      if (lastSlash === i - 1 || dots === 1) {\x0d\n        // NOOP\x0d\n      } else if (dots === 2) {\x0d\n        if (res.length < 2 || lastSegmentLength !== 2 ||\x0d\n            StringPrototypeCharCodeAt(res\x2C res.length - 1) !== CHAR_DOT ||\x0d\n            StringPrototypeCharCodeAt(res\x2C res.length - 2) !== CHAR_DOT) {\x0d\n          if (res.length > 2) {\x0d\n            const lastSlashIndex = StringPrototypeLastIndexOf(res\x2C separator);\x0d\n            if (lastSlashIndex === -1) {\x0d\n              res = '';\x0d\n              lastSegmentLength = 0;\x0d\n            } else {\x0d\n              res = StringPrototypeSlice(res\x2C 0\x2C lastSlashIndex);\x0d\n              lastSegmentLength =\x0d\n                res.length - 1 - StringPrototypeLastIndexOf(res\x2C separator);\x0d\n            }\x0d\n            lastSlash = i;\x0d\n            dots = 0;\x0d\n            continue;\x0d\n          } else if (res.length !== 0) {\x0d\n            res = '';\x0d\n            lastSegmentLength = 0;\x0d\n            lastSlash = i;\x0d\n            dots = 0;\x0d\n            continue;\x0d\n          }\x0d\n        }\x0d\n        if (allowAboveRoot) {\x0d\n          res += res.length > 0 ? `${separator}..` : '..';\x0d\n          lastSegmentLength = 2;\x0d\n        }\x0d\n      } else {\x0d\n        if (res.length > 0)\x0d\n          res += `${separator}${StringPrototypeSlice(path\x2C lastSlash + 1\x2C i)}`;\x0d\n        else\x0d\n          res = StringPrototypeSlice(path\x2C lastSlash + 1\x2C i);\x0d\n        lastSegmentLength = i - lastSlash - 1;\x0d\n      }\x0d\n      lastSlash = i;\x0d\n      dots = 0;\x0d\n    } else if (code === CHAR_DOT && dots !== -1) {\x0d\n      ++dots;\x0d\n    } else {\x0d\n      dots = -1;\x0d\n    }\x0d\n  }\x0d\n  return res;\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {string} sep\x0d\n * @param {{\x0d\n *  dir?: string;\x0d\n *  root?: string;\x0d\n *  base?: string;\x0d\n *  name?: string;\x0d\n *  ext?: string;\x0d\n *  }} pathObject\x0d\n * @returns {string}\x0d\n */\x0d\nfunction _format(sep\x2C pathObject) {\x0d\n  validateObject(pathObject\x2C 'pathObject');\x0d\n  const dir = pathObject.dir || pathObject.root;\x0d\n  const base = pathObject.base ||\x0d\n    `${pathObject.name || ''}${pathObject.ext || ''}`;\x0d\n  if (!dir) {\x0d\n    return base;\x0d\n  }\x0d\n  return dir === pathObject.root ? `${dir}${base}` : `${dir}${sep}${base}`;\x0d\n}\x0d\n\x0d\nconst win32 = {\x0d\n  /**\x0d\n   * path.resolve([from ...]\x2C to)\x0d\n   * @param {...string} args\x0d\n   * @returns {string}\x0d\n   */\x0d\n  resolve(...args) {\x0d\n    let resolvedDevice = '';\x0d\n    let resolvedTail = '';\x0d\n    let resolvedAbsolute = false;\x0d\n\x0d\n    for (let i = args.length - 1; i >= -1; i--) {\x0d\n      let path;\x0d\n      if (i >= 0) {\x0d\n        path = args[i];\x0d\n        validateString(path\x2C 'path');\x0d\n\x0d\n        // Skip empty entries\x0d\n        if (path.length === 0) {\x0d\n          continue;\x0d\n        }\x0d\n      } else if (resolvedDevice.length === 0) {\x0d\n        path = process.cwd();\x0d\n      } else {\x0d\n        // Windows has the concept of drive-specific current working\x0d\n        // directories. If we've resolved a drive letter but not yet an\x0d\n        // absolute path\x2C get cwd for that drive\x2C or the process cwd if\x0d\n        // the drive cwd is not available. We're sure the device is not\x0d\n        // a UNC path at this points\x2C because UNC paths are always absolute.\x0d\n        path = process.env[`=${resolvedDevice}`] || process.cwd();\x0d\n\x0d\n        // Verify that a cwd was found and that it actually points\x0d\n        // to our drive. If not\x2C default to the drive's root.\x0d\n        if (path === undefined ||\x0d\n            (StringPrototypeToLowerCase(StringPrototypeSlice(path\x2C 0\x2C 2)) !==\x0d\n            StringPrototypeToLowerCase(resolvedDevice) &&\x0d\n            StringPrototypeCharCodeAt(path\x2C 2) === CHAR_BACKWARD_SLASH)) {\x0d\n          path = `${resolvedDevice}\\\\`;\x0d\n        }\x0d\n      }\x0d\n\x0d\n      const len = path.length;\x0d\n      let rootEnd = 0;\x0d\n      let device = '';\x0d\n      let isAbsolute = false;\x0d\n      const code = StringPrototypeCharCodeAt(path\x2C 0);\x0d\n\x0d\n      // Try to match a root\x0d\n      if (len === 1) {\x0d\n        if (isPathSeparator(code)) {\x0d\n          // `path` contains just a path separator\x0d\n          rootEnd = 1;\x0d\n          isAbsolute = true;\x0d\n        }\x0d\n      } else if (isPathSeparator(code)) {\x0d\n        // Possible UNC root\x0d\n\x0d\n        // If we started with a separator\x2C we know we at least have an\x0d\n        // absolute path of some kind (UNC or otherwise)\x0d\n        isAbsolute = true;\x0d\n\x0d\n        if (isPathSeparator(StringPrototypeCharCodeAt(path\x2C 1))) {\x0d\n          // Matched double path separator at beginning\x0d\n          let j = 2;\x0d\n          let last = j;\x0d\n          // Match 1 or more non-path separators\x0d\n          while (j < len &&\x0d\n                 !isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\x0d\n            j++;\x0d\n          }\x0d\n          if (j < len && j !== last) {\x0d\n            const firstPart = StringPrototypeSlice(path\x2C last\x2C j);\x0d\n            // Matched!\x0d\n            last = j;\x0d\n            // Match 1 or more path separators\x0d\n            while (j < len &&\x0d\n                   isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\x0d\n              j++;\x0d\n            }\x0d\n            if (j < len && j !== last) {\x0d\n              // Matched!\x0d\n              last = j;\x0d\n              // Match 1 or more non-path separators\x0d\n              while (j < len &&\x0d\n                     !isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\x0d\n                j++;\x0d\n              }\x0d\n              if (j === len || j !== last) {\x0d\n                // We matched a UNC root\x0d\n                device =\x0d\n                  `\\\\\\\\${firstPart}\\\\${StringPrototypeSlice(path\x2C last\x2C j)}`;\x0d\n                rootEnd = j;\x0d\n              }\x0d\n            }\x0d\n          }\x0d\n        } else {\x0d\n          rootEnd = 1;\x0d\n        }\x0d\n      } else if (isWindowsDeviceRoot(code) &&\x0d\n                  StringPrototypeCharCodeAt(path\x2C 1) === CHAR_COLON) {\x0d\n        // Possible device root\x0d\n        device = StringPrototypeSlice(path\x2C 0\x2C 2);\x0d\n        rootEnd = 2;\x0d\n        if (len > 2 && isPathSeparator(StringPrototypeCharCodeAt(path\x2C 2))) {\x0d\n          // Treat separator following drive name as an absolute path\x0d\n          // indicator\x0d\n          isAbsolute = true;\x0d\n          rootEnd = 3;\x0d\n        }\x0d\n      }\x0d\n\x0d\n      if (device.length > 0) {\x0d\n        if (resolvedDevice.length > 0) {\x0d\n          if (StringPrototypeToLowerCase(device) !==\x0d\n              StringPrototypeToLowerCase(resolvedDevice))\x0d\n            // This path points to another device so it is not applicable\x0d\n            continue;\x0d\n        } else {\x0d\n          resolvedDevice = device;\x0d\n        }\x0d\n      }\x0d\n\x0d\n      if (resolvedAbsolute) {\x0d\n        if (resolvedDevice.length > 0)\x0d\n          break;\x0d\n      } else {\x0d\n        resolvedTail =\x0d\n          `${StringPrototypeSlice(path\x2C rootEnd)}\\\\${resolvedTail}`;\x0d\n        resolvedAbsolute = isAbsolute;\x0d\n        if (isAbsolute && resolvedDevice.length > 0) {\x0d\n          break;\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n\x0d\n    // At this point the path should be resolved to a full absolute path\x2C\x0d\n    // but handle relative paths to be safe (might happen when process.cwd()\x0d\n    // fails)\x0d\n\x0d\n    // Normalize the tail path\x0d\n    resolvedTail = normalizeString(resolvedTail\x2C !resolvedAbsolute\x2C '\\\\'\x2C\x0d\n                                   isPathSeparator);\x0d\n\x0d\n    return resolvedAbsolute ?\x0d\n      `${resolvedDevice}\\\\${resolvedTail}` :\x0d\n      `${resolvedDevice}${resolvedTail}` || '.';\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {string} path\x0d\n   * @returns {string}\x0d\n   */\x0d\n  normalize(path) {\x0d\n    validateString(path\x2C 'path');\x0d\n    const len = path.length;\x0d\n    if (len === 0)\x0d\n      return '.';\x0d\n    let rootEnd = 0;\x0d\n    let device;\x0d\n    let isAbsolute = false;\x0d\n    const code = StringPrototypeCharCodeAt(path\x2C 0);\x0d\n\x0d\n    // Try to match a root\x0d\n    if (len === 1) {\x0d\n      // `path` contains just a single char\x2C exit early to avoid\x0d\n      // unnecessary work\x0d\n      return isPosixPathSeparator(code) ? '\\\\' : path;\x0d\n    }\x0d\n    if (isPathSeparator(code)) {\x0d\n      // Possible UNC root\x0d\n\x0d\n      // If we started with a separator\x2C we know we at least have an absolute\x0d\n      // path of some kind (UNC or otherwise)\x0d\n      isAbsolute = true;\x0d\n\x0d\n      if (isPathSeparator(StringPrototypeCharCodeAt(path\x2C 1))) {\x0d\n        // Matched double path separator at beginning\x0d\n        let j = 2;\x0d\n        let last = j;\x0d\n        // Match 1 or more non-path separators\x0d\n        while (j < len &&\x0d\n               !isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\x0d\n          j++;\x0d\n        }\x0d\n        if (j < len && j !== last) {\x0d\n          const firstPart = StringPrototypeSlice(path\x2C last\x2C j);\x0d\n          // Matched!\x0d\n          last = j;\x0d\n          // Match 1 or more path separators\x0d\n          while (j < len &&\x0d\n                 isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\x0d\n            j++;\x0d\n          }\x0d\n          if (j < len && j !== last) {\x0d\n            // Matched!\x0d\n            last = j;\x0d\n            // Match 1 or more non-path separators\x0d\n            while (j < len &&\x0d\n                   !isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\x0d\n              j++;\x0d\n            }\x0d\n            if (j === len) {\x0d\n              // We matched a UNC root only\x0d\n              // Return the normalized version of the UNC root since there\x0d\n              // is nothing left to process\x0d\n              return `\\\\\\\\${firstPart}\\\\${StringPrototypeSlice(path\x2C last)}\\\\`;\x0d\n            }\x0d\n            if (j !== last) {\x0d\n              // We matched a UNC root with leftovers\x0d\n              device =\x0d\n                `\\\\\\\\${firstPart}\\\\${StringPrototypeSlice(path\x2C last\x2C j)}`;\x0d\n              rootEnd = j;\x0d\n            }\x0d\n          }\x0d\n        }\x0d\n      } else {\x0d\n        rootEnd = 1;\x0d\n      }\x0d\n    } else if (isWindowsDeviceRoot(code) &&\x0d\n               StringPrototypeCharCodeAt(path\x2C 1) === CHAR_COLON) {\x0d\n      // Possible device root\x0d\n      device = StringPrototypeSlice(path\x2C 0\x2C 2);\x0d\n      rootEnd = 2;\x0d\n      if (len > 2 && isPathSeparator(StringPrototypeCharCodeAt(path\x2C 2))) {\x0d\n        // Treat separator following drive name as an absolute path\x0d\n        // indicator\x0d\n        isAbsolute = true;\x0d\n        rootEnd = 3;\x0d\n      }\x0d\n    }\x0d\n\x0d\n    let tail = rootEnd < len ?\x0d\n      normalizeString(StringPrototypeSlice(path\x2C rootEnd)\x2C\x0d\n                      !isAbsolute\x2C '\\\\'\x2C isPathSeparator) :\x0d\n      '';\x0d\n    if (tail.length === 0 && !isAbsolute)\x0d\n      tail = '.';\x0d\n    if (tail.length > 0 &&\x0d\n        isPathSeparator(StringPrototypeCharCodeAt(path\x2C len - 1)))\x0d\n      tail += '\\\\';\x0d\n    if (device === undefined) {\x0d\n      return isAbsolute ? `\\\\${tail}` : tail;\x0d\n    }\x0d\n    return isAbsolute ? `${device}\\\\${tail}` : `${device}${tail}`;\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {string} path\x0d\n   * @returns {boolean}\x0d\n   */\x0d\n  isAbsolute(path) {\x0d\n    validateString(path\x2C 'path');\x0d\n    const len = path.length;\x0d\n    if (len === 0)\x0d\n      return false;\x0d\n\x0d\n    const code = StringPrototypeCharCodeAt(path\x2C 0);\x0d\n    return isPathSeparator(code) ||\x0d\n      // Possible device root\x0d\n      (len > 2 &&\x0d\n      isWindowsDeviceRoot(code) &&\x0d\n      StringPrototypeCharCodeAt(path\x2C 1) === CHAR_COLON &&\x0d\n      isPathSeparator(StringPrototypeCharCodeAt(path\x2C 2)));\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {...string} args\x0d\n   * @returns {string}\x0d\n   */\x0d\n  join(...args) {\x0d\n    if (args.length === 0)\x0d\n      return '.';\x0d\n\x0d\n    let joined;\x0d\n    let firstPart;\x0d\n    for (let i = 0; i < args.length; ++i) {\x0d\n      const arg = args[i];\x0d\n      validateString(arg\x2C 'path');\x0d\n      if (arg.length > 0) {\x0d\n        if (joined === undefined)\x0d\n          joined = firstPart = arg;\x0d\n        else\x0d\n          joined += `\\\\${arg}`;\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (joined === undefined)\x0d\n      return '.';\x0d\n\x0d\n    // Make sure that the joined path doesn't start with two slashes\x2C because\x0d\n    // normalize() will mistake it for a UNC path then.\x0d\n    //\x0d\n    // This step is skipped when it is very clear that the user actually\x0d\n    // intended to point at a UNC path. This is assumed when the first\x0d\n    // non-empty string arguments starts with exactly two slashes followed by\x0d\n    // at least one more non-slash character.\x0d\n    //\x0d\n    // Note that for normalize() to treat a path as a UNC path it needs to\x0d\n    // have at least 2 components\x2C so we don't filter for that here.\x0d\n    // This means that the user can use join to construct UNC paths from\x0d\n    // a server name and a share name; for example:\x0d\n    //   path.join('//server'\x2C 'share') -> '\\\\\\\\server\\\\share\\\\')\x0d\n    let needsReplace = true;\x0d\n    let slashCount = 0;\x0d\n    if (isPathSeparator(StringPrototypeCharCodeAt(firstPart\x2C 0))) {\x0d\n      ++slashCount;\x0d\n      const firstLen = firstPart.length;\x0d\n      if (firstLen > 1 &&\x0d\n          isPathSeparator(StringPrototypeCharCodeAt(firstPart\x2C 1))) {\x0d\n        ++slashCount;\x0d\n        if (firstLen > 2) {\x0d\n          if (isPathSeparator(StringPrototypeCharCodeAt(firstPart\x2C 2)))\x0d\n            ++slashCount;\x0d\n          else {\x0d\n            // We matched a UNC path in the first part\x0d\n            needsReplace = false;\x0d\n          }\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n    if (needsReplace) {\x0d\n      // Find any more consecutive slashes we need to replace\x0d\n      while (slashCount < joined.length &&\x0d\n             isPathSeparator(StringPrototypeCharCodeAt(joined\x2C slashCount))) {\x0d\n        slashCount++;\x0d\n      }\x0d\n\x0d\n      // Replace the slashes if needed\x0d\n      if (slashCount >= 2)\x0d\n        joined = `\\\\${StringPrototypeSlice(joined\x2C slashCount)}`;\x0d\n    }\x0d\n\x0d\n    return win32.normalize(joined);\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * It will solve the relative path from `from` to `to`\x2C for instance\x0d\n   * from = 'C:\\\\orandea\\\\test\\\\aaa'\x0d\n   * to = 'C:\\\\orandea\\\\impl\\\\bbb'\x0d\n   * The output of the function should be: '..\\\\..\\\\impl\\\\bbb'\x0d\n   * @param {string} from\x0d\n   * @param {string} to\x0d\n   * @returns {string}\x0d\n   */\x0d\n  relative(from\x2C to) {\x0d\n    validateString(from\x2C 'from');\x0d\n    validateString(to\x2C 'to');\x0d\n\x0d\n    if (from === to)\x0d\n      return '';\x0d\n\x0d\n    const fromOrig = win32.resolve(from);\x0d\n    const toOrig = win32.resolve(to);\x0d\n\x0d\n    if (fromOrig === toOrig)\x0d\n      return '';\x0d\n\x0d\n    from = StringPrototypeToLowerCase(fromOrig);\x0d\n    to = StringPrototypeToLowerCase(toOrig);\x0d\n\x0d\n    if (from === to)\x0d\n      return '';\x0d\n\x0d\n    // Trim any leading backslashes\x0d\n    let fromStart = 0;\x0d\n    while (fromStart < from.length &&\x0d\n           StringPrototypeCharCodeAt(from\x2C fromStart) === CHAR_BACKWARD_SLASH) {\x0d\n      fromStart++;\x0d\n    }\x0d\n    // Trim trailing backslashes (applicable to UNC paths only)\x0d\n    let fromEnd = from.length;\x0d\n    while (\x0d\n      fromEnd - 1 > fromStart &&\x0d\n      StringPrototypeCharCodeAt(from\x2C fromEnd - 1) === CHAR_BACKWARD_SLASH\x0d\n    ) {\x0d\n      fromEnd--;\x0d\n    }\x0d\n    const fromLen = fromEnd - fromStart;\x0d\n\x0d\n    // Trim any leading backslashes\x0d\n    let toStart = 0;\x0d\n    while (toStart < to.length &&\x0d\n           StringPrototypeCharCodeAt(to\x2C toStart) === CHAR_BACKWARD_SLASH) {\x0d\n      toStart++;\x0d\n    }\x0d\n    // Trim trailing backslashes (applicable to UNC paths only)\x0d\n    let toEnd = to.length;\x0d\n    while (toEnd - 1 > toStart &&\x0d\n           StringPrototypeCharCodeAt(to\x2C toEnd - 1) === CHAR_BACKWARD_SLASH) {\x0d\n      toEnd--;\x0d\n    }\x0d\n    const toLen = toEnd - toStart;\x0d\n\x0d\n    // Compare paths to find the longest common path from root\x0d\n    const length = fromLen < toLen ? fromLen : toLen;\x0d\n    let lastCommonSep = -1;\x0d\n    let i = 0;\x0d\n    for (; i < length; i++) {\x0d\n      const fromCode = StringPrototypeCharCodeAt(from\x2C fromStart + i);\x0d\n      if (fromCode !== StringPrototypeCharCodeAt(to\x2C toStart + i))\x0d\n        break;\x0d\n      else if (fromCode === CHAR_BACKWARD_SLASH)\x0d\n        lastCommonSep = i;\x0d\n    }\x0d\n\x0d\n    // We found a mismatch before the first common path separator was seen\x2C so\x0d\n    // return the original `to`.\x0d\n    if (i !== length) {\x0d\n      if (lastCommonSep === -1)\x0d\n        return toOrig;\x0d\n    } else {\x0d\n      if (toLen > length) {\x0d\n        if (StringPrototypeCharCodeAt(to\x2C toStart + i) ===\x0d\n            CHAR_BACKWARD_SLASH) {\x0d\n          // We get here if `from` is the exact base path for `to`.\x0d\n          // For example: from='C:\\\\foo\\\\bar'; to='C:\\\\foo\\\\bar\\\\baz'\x0d\n          return StringPrototypeSlice(toOrig\x2C toStart + i + 1);\x0d\n        }\x0d\n        if (i === 2) {\x0d\n          // We get here if `from` is the device root.\x0d\n          // For example: from='C:\\\\'; to='C:\\\\foo'\x0d\n          return StringPrototypeSlice(toOrig\x2C toStart + i);\x0d\n        }\x0d\n      }\x0d\n      if (fromLen > length) {\x0d\n        if (StringPrototypeCharCodeAt(from\x2C fromStart + i) ===\x0d\n            CHAR_BACKWARD_SLASH) {\x0d\n          // We get here if `to` is the exact base path for `from`.\x0d\n          // For example: from='C:\\\\foo\\\\bar'; to='C:\\\\foo'\x0d\n          lastCommonSep = i;\x0d\n        } else if (i === 2) {\x0d\n          // We get here if `to` is the device root.\x0d\n          // For example: from='C:\\\\foo\\\\bar'; to='C:\\\\'\x0d\n          lastCommonSep = 3;\x0d\n        }\x0d\n      }\x0d\n      if (lastCommonSep === -1)\x0d\n        lastCommonSep = 0;\x0d\n    }\x0d\n\x0d\n    let out = '';\x0d\n    // Generate the relative path based on the path difference between `to` and\x0d\n    // `from`\x0d\n    for (i = fromStart + lastCommonSep + 1; i <= fromEnd; ++i) {\x0d\n      if (i === fromEnd ||\x0d\n          StringPrototypeCharCodeAt(from\x2C i) === CHAR_BACKWARD_SLASH) {\x0d\n        out += out.length === 0 ? '..' : '\\\\..';\x0d\n      }\x0d\n    }\x0d\n\x0d\n    toStart += lastCommonSep;\x0d\n\x0d\n    // Lastly\x2C append the rest of the destination (`to`) path that comes after\x0d\n    // the common path parts\x0d\n    if (out.length > 0)\x0d\n      return `${out}${StringPrototypeSlice(toOrig\x2C toStart\x2C toEnd)}`;\x0d\n\x0d\n    if (StringPrototypeCharCodeAt(toOrig\x2C toStart) === CHAR_BACKWARD_SLASH)\x0d\n      ++toStart;\x0d\n    return StringPrototypeSlice(toOrig\x2C toStart\x2C toEnd);\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {string} path\x0d\n   * @returns {string}\x0d\n   */\x0d\n  toNamespacedPath(path) {\x0d\n    // Note: this will *probably* throw somewhere.\x0d\n    if (typeof path !== 'string' || path.length === 0)\x0d\n      return path;\x0d\n\x0d\n    const resolvedPath = win32.resolve(path);\x0d\n\x0d\n    if (resolvedPath.length <= 2)\x0d\n      return path;\x0d\n\x0d\n    if (StringPrototypeCharCodeAt(resolvedPath\x2C 0) === CHAR_BACKWARD_SLASH) {\x0d\n      // Possible UNC root\x0d\n      if (StringPrototypeCharCodeAt(resolvedPath\x2C 1) === CHAR_BACKWARD_SLASH) {\x0d\n        const code = StringPrototypeCharCodeAt(resolvedPath\x2C 2);\x0d\n        if (code !== CHAR_QUESTION_MARK && code !== CHAR_DOT) {\x0d\n          // Matched non-long UNC root\x2C convert the path to a long UNC path\x0d\n          return `\\\\\\\\?\\\\UNC\\\\${StringPrototypeSlice(resolvedPath\x2C 2)}`;\x0d\n        }\x0d\n      }\x0d\n    } else if (\x0d\n      isWindowsDeviceRoot(StringPrototypeCharCodeAt(resolvedPath\x2C 0)) &&\x0d\n      StringPrototypeCharCodeAt(resolvedPath\x2C 1) === CHAR_COLON &&\x0d\n      StringPrototypeCharCodeAt(resolvedPath\x2C 2) === CHAR_BACKWARD_SLASH\x0d\n    ) {\x0d\n      // Matched device root\x2C convert the path to a long UNC path\x0d\n      return `\\\\\\\\?\\\\${resolvedPath}`;\x0d\n    }\x0d\n\x0d\n    return path;\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {string} path\x0d\n   * @returns {string}\x0d\n   */\x0d\n  dirname(path) {\x0d\n    validateString(path\x2C 'path');\x0d\n    const len = path.length;\x0d\n    if (len === 0)\x0d\n      return '.';\x0d\n    let rootEnd = -1;\x0d\n    let offset = 0;\x0d\n    const code = StringPrototypeCharCodeAt(path\x2C 0);\x0d\n\x0d\n    if (len === 1) {\x0d\n      // `path` contains just a path separator\x2C exit early to avoid\x0d\n      // unnecessary work or a dot.\x0d\n      return isPathSeparator(code) ? path : '.';\x0d\n    }\x0d\n\x0d\n    // Try to match a root\x0d\n    if (isPathSeparator(code)) {\x0d\n      // Possible UNC root\x0d\n\x0d\n      rootEnd = offset = 1;\x0d\n\x0d\n      if (isPathSeparator(StringPrototypeCharCodeAt(path\x2C 1))) {\x0d\n        // Matched double path separator at beginning\x0d\n        let j = 2;\x0d\n        let last = j;\x0d\n        // Match 1 or more non-path separators\x0d\n        while (j < len &&\x0d\n               !isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\x0d\n          j++;\x0d\n        }\x0d\n        if (j < len && j !== last) {\x0d\n          // Matched!\x0d\n          last = j;\x0d\n          // Match 1 or more path separators\x0d\n          while (j < len &&\x0d\n                 isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\x0d\n            j++;\x0d\n          }\x0d\n          if (j < len && j !== last) {\x0d\n            // Matched!\x0d\n            last = j;\x0d\n            // Match 1 or more non-path separators\x0d\n            while (j < len &&\x0d\n                   !isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\x0d\n              j++;\x0d\n            }\x0d\n            if (j === len) {\x0d\n              // We matched a UNC root only\x0d\n              return path;\x0d\n            }\x0d\n            if (j !== last) {\x0d\n              // We matched a UNC root with leftovers\x0d\n\x0d\n              // Offset by 1 to include the separator after the UNC root to\x0d\n              // treat it as a "normal root" on top of a (UNC) root\x0d\n              rootEnd = offset = j + 1;\x0d\n            }\x0d\n          }\x0d\n        }\x0d\n      }\x0d\n    // Possible device root\x0d\n    } else if (isWindowsDeviceRoot(code) &&\x0d\n               StringPrototypeCharCodeAt(path\x2C 1) === CHAR_COLON) {\x0d\n      rootEnd =\x0d\n        len > 2 && isPathSeparator(StringPrototypeCharCodeAt(path\x2C 2)) ? 3 : 2;\x0d\n      offset = rootEnd;\x0d\n    }\x0d\n\x0d\n    let end = -1;\x0d\n    let matchedSlash = true;\x0d\n    for (let i = len - 1; i >= offset; --i) {\x0d\n      if (isPathSeparator(StringPrototypeCharCodeAt(path\x2C i))) {\x0d\n        if (!matchedSlash) {\x0d\n          end = i;\x0d\n          break;\x0d\n        }\x0d\n      } else {\x0d\n        // We saw the first non-path separator\x0d\n        matchedSlash = false;\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (end === -1) {\x0d\n      if (rootEnd === -1)\x0d\n        return '.';\x0d\n\x0d\n      end = rootEnd;\x0d\n    }\x0d\n    return StringPrototypeSlice(path\x2C 0\x2C end);\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {string} path\x0d\n   * @param {string} [suffix]\x0d\n   * @returns {string}\x0d\n   */\x0d\n  basename(path\x2C suffix) {\x0d\n    if (suffix !== undefined)\x0d\n      validateString(suffix\x2C 'ext');\x0d\n    validateString(path\x2C 'path');\x0d\n    let start = 0;\x0d\n    let end = -1;\x0d\n    let matchedSlash = true;\x0d\n\x0d\n    // Check for a drive letter prefix so as not to mistake the following\x0d\n    // path separator as an extra separator at the end of the path that can be\x0d\n    // disregarded\x0d\n    if (path.length >= 2 &&\x0d\n        isWindowsDeviceRoot(StringPrototypeCharCodeAt(path\x2C 0)) &&\x0d\n        StringPrototypeCharCodeAt(path\x2C 1) === CHAR_COLON) {\x0d\n      start = 2;\x0d\n    }\x0d\n\x0d\n    if (suffix !== undefined && suffix.length > 0 && suffix.length <= path.length) {\x0d\n      if (suffix === path)\x0d\n        return '';\x0d\n      let extIdx = suffix.length - 1;\x0d\n      let firstNonSlashEnd = -1;\x0d\n      for (let i = path.length - 1; i >= start; --i) {\x0d\n        const code = StringPrototypeCharCodeAt(path\x2C i);\x0d\n        if (isPathSeparator(code)) {\x0d\n          // If we reached a path separator that was not part of a set of path\x0d\n          // separators at the end of the string\x2C stop now\x0d\n          if (!matchedSlash) {\x0d\n            start = i + 1;\x0d\n            break;\x0d\n          }\x0d\n        } else {\x0d\n          if (firstNonSlashEnd === -1) {\x0d\n            // We saw the first non-path separator\x2C remember this index in case\x0d\n            // we need it if the extension ends up not matching\x0d\n            matchedSlash = false;\x0d\n            firstNonSlashEnd = i + 1;\x0d\n          }\x0d\n          if (extIdx >= 0) {\x0d\n            // Try to match the explicit extension\x0d\n            if (code === StringPrototypeCharCodeAt(suffix\x2C extIdx)) {\x0d\n              if (--extIdx === -1) {\x0d\n                // We matched the extension\x2C so mark this as the end of our path\x0d\n                // component\x0d\n                end = i;\x0d\n              }\x0d\n            } else {\x0d\n              // Extension does not match\x2C so our result is the entire path\x0d\n              // component\x0d\n              extIdx = -1;\x0d\n              end = firstNonSlashEnd;\x0d\n            }\x0d\n          }\x0d\n        }\x0d\n      }\x0d\n\x0d\n      if (start === end)\x0d\n        end = firstNonSlashEnd;\x0d\n      else if (end === -1)\x0d\n        end = path.length;\x0d\n      return StringPrototypeSlice(path\x2C start\x2C end);\x0d\n    }\x0d\n    for (let i = path.length - 1; i >= start; --i) {\x0d\n      if (isPathSeparator(StringPrototypeCharCodeAt(path\x2C i))) {\x0d\n        // If we reached a path separator that was not part of a set of path\x0d\n        // separators at the end of the string\x2C stop now\x0d\n        if (!matchedSlash) {\x0d\n          start = i + 1;\x0d\n          break;\x0d\n        }\x0d\n      } else if (end === -1) {\x0d\n        // We saw the first non-path separator\x2C mark this as the end of our\x0d\n        // path component\x0d\n        matchedSlash = false;\x0d\n        end = i + 1;\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (end === -1)\x0d\n      return '';\x0d\n    return StringPrototypeSlice(path\x2C start\x2C end);\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {string} path\x0d\n   * @returns {string}\x0d\n   */\x0d\n  extname(path) {\x0d\n    validateString(path\x2C 'path');\x0d\n    let start = 0;\x0d\n    let startDot = -1;\x0d\n    let startPart = 0;\x0d\n    let end = -1;\x0d\n    let matchedSlash = true;\x0d\n    // Track the state of characters (if any) we see before our first dot and\x0d\n    // after any path separator we find\x0d\n    let preDotState = 0;\x0d\n\x0d\n    // Check for a drive letter prefix so as not to mistake the following\x0d\n    // path separator as an extra separator at the end of the path that can be\x0d\n    // disregarded\x0d\n\x0d\n    if (path.length >= 2 &&\x0d\n        StringPrototypeCharCodeAt(path\x2C 1) === CHAR_COLON &&\x0d\n        isWindowsDeviceRoot(StringPrototypeCharCodeAt(path\x2C 0))) {\x0d\n      start = startPart = 2;\x0d\n    }\x0d\n\x0d\n    for (let i = path.length - 1; i >= start; --i) {\x0d\n      const code = StringPrototypeCharCodeAt(path\x2C i);\x0d\n      if (isPathSeparator(code)) {\x0d\n        // If we reached a path separator that was not part of a set of path\x0d\n        // separators at the end of the string\x2C stop now\x0d\n        if (!matchedSlash) {\x0d\n          startPart = i + 1;\x0d\n          break;\x0d\n        }\x0d\n        continue;\x0d\n      }\x0d\n      if (end === -1) {\x0d\n        // We saw the first non-path separator\x2C mark this as the end of our\x0d\n        // extension\x0d\n        matchedSlash = false;\x0d\n        end = i + 1;\x0d\n      }\x0d\n      if (code === CHAR_DOT) {\x0d\n        // If this is our first dot\x2C mark it as the start of our extension\x0d\n        if (startDot === -1)\x0d\n          startDot = i;\x0d\n        else if (preDotState !== 1)\x0d\n          preDotState = 1;\x0d\n      } else if (startDot !== -1) {\x0d\n        // We saw a non-dot and non-path separator before our dot\x2C so we should\x0d\n        // have a good chance at having a non-empty extension\x0d\n        preDotState = -1;\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (startDot === -1 ||\x0d\n        end === -1 ||\x0d\n        // We saw a non-dot character immediately before the dot\x0d\n        preDotState === 0 ||\x0d\n        // The (right-most) trimmed path component is exactly '..'\x0d\n        (preDotState === 1 &&\x0d\n         startDot === end - 1 &&\x0d\n         startDot === startPart + 1)) {\x0d\n      return '';\x0d\n    }\x0d\n    return StringPrototypeSlice(path\x2C startDot\x2C end);\x0d\n  }\x2C\x0d\n\x0d\n  format: FunctionPrototypeBind(_format\x2C null\x2C '\\\\')\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {string} path\x0d\n   * @returns {{\x0d\n   *  dir: string;\x0d\n   *  root: string;\x0d\n   *  base: string;\x0d\n   *  name: string;\x0d\n   *  ext: string;\x0d\n   *  }}\x0d\n   */\x0d\n  parse(path) {\x0d\n    validateString(path\x2C 'path');\x0d\n\x0d\n    const ret = { root: ''\x2C dir: ''\x2C base: ''\x2C ext: ''\x2C name: '' };\x0d\n    if (path.length === 0)\x0d\n      return ret;\x0d\n\x0d\n    const len = path.length;\x0d\n    let rootEnd = 0;\x0d\n    let code = StringPrototypeCharCodeAt(path\x2C 0);\x0d\n\x0d\n    if (len === 1) {\x0d\n      if (isPathSeparator(code)) {\x0d\n        // `path` contains just a path separator\x2C exit early to avoid\x0d\n        // unnecessary work\x0d\n        ret.root = ret.dir = path;\x0d\n        return ret;\x0d\n      }\x0d\n      ret.base = ret.name = path;\x0d\n      return ret;\x0d\n    }\x0d\n    // Try to match a root\x0d\n    if (isPathSeparator(code)) {\x0d\n      // Possible UNC root\x0d\n\x0d\n      rootEnd = 1;\x0d\n      if (isPathSeparator(StringPrototypeCharCodeAt(path\x2C 1))) {\x0d\n        // Matched double path separator at beginning\x0d\n        let j = 2;\x0d\n        let last = j;\x0d\n        // Match 1 or more non-path separators\x0d\n        while (j < len &&\x0d\n               !isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\x0d\n          j++;\x0d\n        }\x0d\n        if (j < len && j !== last) {\x0d\n          // Matched!\x0d\n          last = j;\x0d\n          // Match 1 or more path separators\x0d\n          while (j < len &&\x0d\n                 isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\x0d\n            j++;\x0d\n          }\x0d\n          if (j < len && j !== last) {\x0d\n            // Matched!\x0d\n            last = j;\x0d\n            // Match 1 or more non-path separators\x0d\n            while (j < len &&\x0d\n                   !isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\x0d\n              j++;\x0d\n            }\x0d\n            if (j === len) {\x0d\n              // We matched a UNC root only\x0d\n              rootEnd = j;\x0d\n            } else if (j !== last) {\x0d\n              // We matched a UNC root with leftovers\x0d\n              rootEnd = j + 1;\x0d\n            }\x0d\n          }\x0d\n        }\x0d\n      }\x0d\n    } else if (isWindowsDeviceRoot(code) &&\x0d\n               StringPrototypeCharCodeAt(path\x2C 1) === CHAR_COLON) {\x0d\n      // Possible device root\x0d\n      if (len <= 2) {\x0d\n        // `path` contains just a drive root\x2C exit early to avoid\x0d\n        // unnecessary work\x0d\n        ret.root = ret.dir = path;\x0d\n        return ret;\x0d\n      }\x0d\n      rootEnd = 2;\x0d\n      if (isPathSeparator(StringPrototypeCharCodeAt(path\x2C 2))) {\x0d\n        if (len === 3) {\x0d\n          // `path` contains just a drive root\x2C exit early to avoid\x0d\n          // unnecessary work\x0d\n          ret.root = ret.dir = path;\x0d\n          return ret;\x0d\n        }\x0d\n        rootEnd = 3;\x0d\n      }\x0d\n    }\x0d\n    if (rootEnd > 0)\x0d\n      ret.root = StringPrototypeSlice(path\x2C 0\x2C rootEnd);\x0d\n\x0d\n    let startDot = -1;\x0d\n    let startPart = rootEnd;\x0d\n    let end = -1;\x0d\n    let matchedSlash = true;\x0d\n    let i = path.length - 1;\x0d\n\x0d\n    // Track the state of characters (if any) we see before our first dot and\x0d\n    // after any path separator we find\x0d\n    let preDotState = 0;\x0d\n\x0d\n    // Get non-dir info\x0d\n    for (; i >= rootEnd; --i) {\x0d\n      code = StringPrototypeCharCodeAt(path\x2C i);\x0d\n      if (isPathSeparator(code)) {\x0d\n        // If we reached a path separator that was not part of a set of path\x0d\n        // separators at the end of the string\x2C stop now\x0d\n        if (!matchedSlash) {\x0d\n          startPart = i + 1;\x0d\n          break;\x0d\n        }\x0d\n        continue;\x0d\n      }\x0d\n      if (end === -1) {\x0d\n        // We saw the first non-path separator\x2C mark this as the end of our\x0d\n        // extension\x0d\n        matchedSlash = false;\x0d\n        end = i + 1;\x0d\n      }\x0d\n      if (code === CHAR_DOT) {\x0d\n        // If this is our first dot\x2C mark it as the start of our extension\x0d\n        if (startDot === -1)\x0d\n          startDot = i;\x0d\n        else if (preDotState !== 1)\x0d\n          preDotState = 1;\x0d\n      } else if (startDot !== -1) {\x0d\n        // We saw a non-dot and non-path separator before our dot\x2C so we should\x0d\n        // have a good chance at having a non-empty extension\x0d\n        preDotState = -1;\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (end !== -1) {\x0d\n      if (startDot === -1 ||\x0d\n          // We saw a non-dot character immediately before the dot\x0d\n          preDotState === 0 ||\x0d\n          // The (right-most) trimmed path component is exactly '..'\x0d\n          (preDotState === 1 &&\x0d\n           startDot === end - 1 &&\x0d\n           startDot === startPart + 1)) {\x0d\n        ret.base = ret.name = StringPrototypeSlice(path\x2C startPart\x2C end);\x0d\n      } else {\x0d\n        ret.name = StringPrototypeSlice(path\x2C startPart\x2C startDot);\x0d\n        ret.base = StringPrototypeSlice(path\x2C startPart\x2C end);\x0d\n        ret.ext = StringPrototypeSlice(path\x2C startDot\x2C end);\x0d\n      }\x0d\n    }\x0d\n\x0d\n    // If the directory is the root\x2C use the entire root as the `dir` including\x0d\n    // the trailing slash if any (`C:\\abc` -> `C:\\`). Otherwise\x2C strip out the\x0d\n    // trailing slash (`C:\\abc\\def` -> `C:\\abc`).\x0d\n    if (startPart > 0 && startPart !== rootEnd)\x0d\n      ret.dir = StringPrototypeSlice(path\x2C 0\x2C startPart - 1);\x0d\n    else\x0d\n      ret.dir = ret.root;\x0d\n\x0d\n    return ret;\x0d\n  }\x2C\x0d\n\x0d\n  sep: '\\\\'\x2C\x0d\n  delimiter: ';'\x2C\x0d\n  win32: null\x2C\x0d\n  posix: null\x0d\n};\x0d\n\x0d\nconst posixCwd = (() => {\x0d\n  if (platformIsWin32) {\x0d\n    // Converts Windows' backslash path separators to POSIX forward slashes\x0d\n    // and truncates any drive indicator\x0d\n    const regexp = /\\\\/g;\x0d\n    return () => {\x0d\n      const cwd = StringPrototypeReplace(process.cwd()\x2C regexp\x2C '/');\x0d\n      return StringPrototypeSlice(cwd\x2C StringPrototypeIndexOf(cwd\x2C '/'));\x0d\n    };\x0d\n  }\x0d\n\x0d\n  // We're already on POSIX\x2C no need for any transformations\x0d\n  return () => process.cwd();\x0d\n})();\x0d\n\x0d\nconst posix = {\x0d\n  /**\x0d\n   * path.resolve([from ...]\x2C to)\x0d\n   * @param {...string} args\x0d\n   * @returns {string}\x0d\n   */\x0d\n  resolve(...args) {\x0d\n    let resolvedPath = '';\x0d\n    let resolvedAbsolute = false;\x0d\n\x0d\n    for (let i = args.length - 1; i >= -1 && !resolvedAbsolute; i--) {\x0d\n      const path = i >= 0 ? args[i] : posixCwd();\x0d\n\x0d\n      validateString(path\x2C 'path');\x0d\n\x0d\n      // Skip empty entries\x0d\n      if (path.length === 0) {\x0d\n        continue;\x0d\n      }\x0d\n\x0d\n      resolvedPath = `${path}/${resolvedPath}`;\x0d\n      resolvedAbsolute =\x0d\n        StringPrototypeCharCodeAt(path\x2C 0) === CHAR_FORWARD_SLASH;\x0d\n    }\x0d\n\x0d\n    // At this point the path should be resolved to a full absolute path\x2C but\x0d\n    // handle relative paths to be safe (might happen when process.cwd() fails)\x0d\n\x0d\n    // Normalize the path\x0d\n    resolvedPath = normalizeString(resolvedPath\x2C !resolvedAbsolute\x2C '/'\x2C\x0d\n                                   isPosixPathSeparator);\x0d\n\x0d\n    if (resolvedAbsolute) {\x0d\n      return `/${resolvedPath}`;\x0d\n    }\x0d\n    return resolvedPath.length > 0 ? resolvedPath : '.';\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {string} path\x0d\n   * @returns {string}\x0d\n   */\x0d\n  normalize(path) {\x0d\n    validateString(path\x2C 'path');\x0d\n\x0d\n    if (path.length === 0)\x0d\n      return '.';\x0d\n\x0d\n    const isAbsolute =\x0d\n      StringPrototypeCharCodeAt(path\x2C 0) === CHAR_FORWARD_SLASH;\x0d\n    const trailingSeparator =\x0d\n      StringPrototypeCharCodeAt(path\x2C path.length - 1) === CHAR_FORWARD_SLASH;\x0d\n\x0d\n    // Normalize the path\x0d\n    path = normalizeString(path\x2C !isAbsolute\x2C '/'\x2C isPosixPathSeparator);\x0d\n\x0d\n    if (path.length === 0) {\x0d\n      if (isAbsolute)\x0d\n        return '/';\x0d\n      return trailingSeparator ? './' : '.';\x0d\n    }\x0d\n    if (trailingSeparator)\x0d\n      path += '/';\x0d\n\x0d\n    return isAbsolute ? `/${path}` : path;\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {string} path\x0d\n   * @returns {boolean}\x0d\n   */\x0d\n  isAbsolute(path) {\x0d\n    validateString(path\x2C 'path');\x0d\n    return path.length > 0 &&\x0d\n           StringPrototypeCharCodeAt(path\x2C 0) === CHAR_FORWARD_SLASH;\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {...string} args\x0d\n   * @returns {string}\x0d\n   */\x0d\n  join(...args) {\x0d\n    if (args.length === 0)\x0d\n      return '.';\x0d\n    let joined;\x0d\n    for (let i = 0; i < args.length; ++i) {\x0d\n      const arg = args[i];\x0d\n      validateString(arg\x2C 'path');\x0d\n      if (arg.length > 0) {\x0d\n        if (joined === undefined)\x0d\n          joined = arg;\x0d\n        else\x0d\n          joined += `/${arg}`;\x0d\n      }\x0d\n    }\x0d\n    if (joined === undefined)\x0d\n      return '.';\x0d\n    return posix.normalize(joined);\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {string} from\x0d\n   * @param {string} to\x0d\n   * @returns {string}\x0d\n   */\x0d\n  relative(from\x2C to) {\x0d\n    validateString(from\x2C 'from');\x0d\n    validateString(to\x2C 'to');\x0d\n\x0d\n    if (from === to)\x0d\n      return '';\x0d\n\x0d\n    // Trim leading forward slashes.\x0d\n    from = posix.resolve(from);\x0d\n    to = posix.resolve(to);\x0d\n\x0d\n    if (from === to)\x0d\n      return '';\x0d\n\x0d\n    const fromStart = 1;\x0d\n    const fromEnd = from.length;\x0d\n    const fromLen = fromEnd - fromStart;\x0d\n    const toStart = 1;\x0d\n    const toLen = to.length - toStart;\x0d\n\x0d\n    // Compare paths to find the longest common path from root\x0d\n    const length = (fromLen < toLen ? fromLen : toLen);\x0d\n    let lastCommonSep = -1;\x0d\n    let i = 0;\x0d\n    for (; i < length; i++) {\x0d\n      const fromCode = StringPrototypeCharCodeAt(from\x2C fromStart + i);\x0d\n      if (fromCode !== StringPrototypeCharCodeAt(to\x2C toStart + i))\x0d\n        break;\x0d\n      else if (fromCode === CHAR_FORWARD_SLASH)\x0d\n        lastCommonSep = i;\x0d\n    }\x0d\n    if (i === length) {\x0d\n      if (toLen > length) {\x0d\n        if (StringPrototypeCharCodeAt(to\x2C toStart + i) === CHAR_FORWARD_SLASH) {\x0d\n          // We get here if `from` is the exact base path for `to`.\x0d\n          // For example: from='/foo/bar'; to='/foo/bar/baz'\x0d\n          return StringPrototypeSlice(to\x2C toStart + i + 1);\x0d\n        }\x0d\n        if (i === 0) {\x0d\n          // We get here if `from` is the root\x0d\n          // For example: from='/'; to='/foo'\x0d\n          return StringPrototypeSlice(to\x2C toStart + i);\x0d\n        }\x0d\n      } else if (fromLen > length) {\x0d\n        if (StringPrototypeCharCodeAt(from\x2C fromStart + i) ===\x0d\n            CHAR_FORWARD_SLASH) {\x0d\n          // We get here if `to` is the exact base path for `from`.\x0d\n          // For example: from='/foo/bar/baz'; to='/foo/bar'\x0d\n          lastCommonSep = i;\x0d\n        } else if (i === 0) {\x0d\n          // We get here if `to` is the root.\x0d\n          // For example: from='/foo/bar'; to='/'\x0d\n          lastCommonSep = 0;\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n\x0d\n    let out = '';\x0d\n    // Generate the relative path based on the path difference between `to`\x0d\n    // and `from`.\x0d\n    for (i = fromStart + lastCommonSep + 1; i <= fromEnd; ++i) {\x0d\n      if (i === fromEnd ||\x0d\n          StringPrototypeCharCodeAt(from\x2C i) === CHAR_FORWARD_SLASH) {\x0d\n        out += out.length === 0 ? '..' : '/..';\x0d\n      }\x0d\n    }\x0d\n\x0d\n    // Lastly\x2C append the rest of the destination (`to`) path that comes after\x0d\n    // the common path parts.\x0d\n    return `${out}${StringPrototypeSlice(to\x2C toStart + lastCommonSep)}`;\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {string} path\x0d\n   * @returns {string}\x0d\n   */\x0d\n  toNamespacedPath(path) {\x0d\n    // Non-op on posix systems\x0d\n    return path;\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {string} path\x0d\n   * @returns {string}\x0d\n   */\x0d\n  dirname(path) {\x0d\n    validateString(path\x2C 'path');\x0d\n    if (path.length === 0)\x0d\n      return '.';\x0d\n    const hasRoot = StringPrototypeCharCodeAt(path\x2C 0) === CHAR_FORWARD_SLASH;\x0d\n    let end = -1;\x0d\n    let matchedSlash = true;\x0d\n    for (let i = path.length - 1; i >= 1; --i) {\x0d\n      if (StringPrototypeCharCodeAt(path\x2C i) === CHAR_FORWARD_SLASH) {\x0d\n        if (!matchedSlash) {\x0d\n          end = i;\x0d\n          break;\x0d\n        }\x0d\n      } else {\x0d\n        // We saw the first non-path separator\x0d\n        matchedSlash = false;\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (end === -1)\x0d\n      return hasRoot ? '/' : '.';\x0d\n    if (hasRoot && end === 1)\x0d\n      return '//';\x0d\n    return StringPrototypeSlice(path\x2C 0\x2C end);\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {string} path\x0d\n   * @param {string} [suffix]\x0d\n   * @returns {string}\x0d\n   */\x0d\n  basename(path\x2C suffix) {\x0d\n    if (suffix !== undefined)\x0d\n      validateString(suffix\x2C 'ext');\x0d\n    validateString(path\x2C 'path');\x0d\n\x0d\n    let start = 0;\x0d\n    let end = -1;\x0d\n    let matchedSlash = true;\x0d\n\x0d\n    if (suffix !== undefined && suffix.length > 0 && suffix.length <= path.length) {\x0d\n      if (suffix === path)\x0d\n        return '';\x0d\n      let extIdx = suffix.length - 1;\x0d\n      let firstNonSlashEnd = -1;\x0d\n      for (let i = path.length - 1; i >= 0; --i) {\x0d\n        const code = StringPrototypeCharCodeAt(path\x2C i);\x0d\n        if (code === CHAR_FORWARD_SLASH) {\x0d\n          // If we reached a path separator that was not part of a set of path\x0d\n          // separators at the end of the string\x2C stop now\x0d\n          if (!matchedSlash) {\x0d\n            start = i + 1;\x0d\n            break;\x0d\n          }\x0d\n        } else {\x0d\n          if (firstNonSlashEnd === -1) {\x0d\n            // We saw the first non-path separator\x2C remember this index in case\x0d\n            // we need it if the extension ends up not matching\x0d\n            matchedSlash = false;\x0d\n            firstNonSlashEnd = i + 1;\x0d\n          }\x0d\n          if (extIdx >= 0) {\x0d\n            // Try to match the explicit extension\x0d\n            if (code === StringPrototypeCharCodeAt(suffix\x2C extIdx)) {\x0d\n              if (--extIdx === -1) {\x0d\n                // We matched the extension\x2C so mark this as the end of our path\x0d\n                // component\x0d\n                end = i;\x0d\n              }\x0d\n            } else {\x0d\n              // Extension does not match\x2C so our result is the entire path\x0d\n              // component\x0d\n              extIdx = -1;\x0d\n              end = firstNonSlashEnd;\x0d\n            }\x0d\n          }\x0d\n        }\x0d\n      }\x0d\n\x0d\n      if (start === end)\x0d\n        end = firstNonSlashEnd;\x0d\n      else if (end === -1)\x0d\n        end = path.length;\x0d\n      return StringPrototypeSlice(path\x2C start\x2C end);\x0d\n    }\x0d\n    for (let i = path.length - 1; i >= 0; --i) {\x0d\n      if (StringPrototypeCharCodeAt(path\x2C i) === CHAR_FORWARD_SLASH) {\x0d\n        // If we reached a path separator that was not part of a set of path\x0d\n        // separators at the end of the string\x2C stop now\x0d\n        if (!matchedSlash) {\x0d\n          start = i + 1;\x0d\n          break;\x0d\n        }\x0d\n      } else if (end === -1) {\x0d\n        // We saw the first non-path separator\x2C mark this as the end of our\x0d\n        // path component\x0d\n        matchedSlash = false;\x0d\n        end = i + 1;\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (end === -1)\x0d\n      return '';\x0d\n    return StringPrototypeSlice(path\x2C start\x2C end);\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {string} path\x0d\n   * @returns {string}\x0d\n   */\x0d\n  extname(path) {\x0d\n    validateString(path\x2C 'path');\x0d\n    let startDot = -1;\x0d\n    let startPart = 0;\x0d\n    let end = -1;\x0d\n    let matchedSlash = true;\x0d\n    // Track the state of characters (if any) we see before our first dot and\x0d\n    // after any path separator we find\x0d\n    let preDotState = 0;\x0d\n    for (let i = path.length - 1; i >= 0; --i) {\x0d\n      const code = StringPrototypeCharCodeAt(path\x2C i);\x0d\n      if (code === CHAR_FORWARD_SLASH) {\x0d\n        // If we reached a path separator that was not part of a set of path\x0d\n        // separators at the end of the string\x2C stop now\x0d\n        if (!matchedSlash) {\x0d\n          startPart = i + 1;\x0d\n          break;\x0d\n        }\x0d\n        continue;\x0d\n      }\x0d\n      if (end === -1) {\x0d\n        // We saw the first non-path separator\x2C mark this as the end of our\x0d\n        // extension\x0d\n        matchedSlash = false;\x0d\n        end = i + 1;\x0d\n      }\x0d\n      if (code === CHAR_DOT) {\x0d\n        // If this is our first dot\x2C mark it as the start of our extension\x0d\n        if (startDot === -1)\x0d\n          startDot = i;\x0d\n        else if (preDotState !== 1)\x0d\n          preDotState = 1;\x0d\n      } else if (startDot !== -1) {\x0d\n        // We saw a non-dot and non-path separator before our dot\x2C so we should\x0d\n        // have a good chance at having a non-empty extension\x0d\n        preDotState = -1;\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (startDot === -1 ||\x0d\n        end === -1 ||\x0d\n        // We saw a non-dot character immediately before the dot\x0d\n        preDotState === 0 ||\x0d\n        // The (right-most) trimmed path component is exactly '..'\x0d\n        (preDotState === 1 &&\x0d\n         startDot === end - 1 &&\x0d\n         startDot === startPart + 1)) {\x0d\n      return '';\x0d\n    }\x0d\n    return StringPrototypeSlice(path\x2C startDot\x2C end);\x0d\n  }\x2C\x0d\n\x0d\n  format: FunctionPrototypeBind(_format\x2C null\x2C '/')\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {string} path\x0d\n   * @returns {{\x0d\n   *   dir: string;\x0d\n   *   root: string;\x0d\n   *   base: string;\x0d\n   *   name: string;\x0d\n   *   ext: string;\x0d\n   *   }}\x0d\n   */\x0d\n  parse(path) {\x0d\n    validateString(path\x2C 'path');\x0d\n\x0d\n    const ret = { root: ''\x2C dir: ''\x2C base: ''\x2C ext: ''\x2C name: '' };\x0d\n    if (path.length === 0)\x0d\n      return ret;\x0d\n    const isAbsolute =\x0d\n      StringPrototypeCharCodeAt(path\x2C 0) === CHAR_FORWARD_SLASH;\x0d\n    let start;\x0d\n    if (isAbsolute) {\x0d\n      ret.root = '/';\x0d\n      start = 1;\x0d\n    } else {\x0d\n      start = 0;\x0d\n    }\x0d\n    let startDot = -1;\x0d\n    let startPart = 0;\x0d\n    let end = -1;\x0d\n    let matchedSlash = true;\x0d\n    let i = path.length - 1;\x0d\n\x0d\n    // Track the state of characters (if any) we see before our first dot and\x0d\n    // after any path separator we find\x0d\n    let preDotState = 0;\x0d\n\x0d\n    // Get non-dir info\x0d\n    for (; i >= start; --i) {\x0d\n      const code = StringPrototypeCharCodeAt(path\x2C i);\x0d\n      if (code === CHAR_FORWARD_SLASH) {\x0d\n        // If we reached a path separator that was not part of a set of path\x0d\n        // separators at the end of the string\x2C stop now\x0d\n        if (!matchedSlash) {\x0d\n          startPart = i + 1;\x0d\n          break;\x0d\n        }\x0d\n        continue;\x0d\n      }\x0d\n      if (end === -1) {\x0d\n        // We saw the first non-path separator\x2C mark this as the end of our\x0d\n        // extension\x0d\n        matchedSlash = false;\x0d\n        end = i + 1;\x0d\n      }\x0d\n      if (code === CHAR_DOT) {\x0d\n        // If this is our first dot\x2C mark it as the start of our extension\x0d\n        if (startDot === -1)\x0d\n          startDot = i;\x0d\n        else if (preDotState !== 1)\x0d\n          preDotState = 1;\x0d\n      } else if (startDot !== -1) {\x0d\n        // We saw a non-dot and non-path separator before our dot\x2C so we should\x0d\n        // have a good chance at having a non-empty extension\x0d\n        preDotState = -1;\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (end !== -1) {\x0d\n      const start = startPart === 0 && isAbsolute ? 1 : startPart;\x0d\n      if (startDot === -1 ||\x0d\n          // We saw a non-dot character immediately before the dot\x0d\n          preDotState === 0 ||\x0d\n          // The (right-most) trimmed path component is exactly '..'\x0d\n          (preDotState === 1 &&\x0d\n          startDot === end - 1 &&\x0d\n          startDot === startPart + 1)) {\x0d\n        ret.base = ret.name = StringPrototypeSlice(path\x2C start\x2C end);\x0d\n      } else {\x0d\n        ret.name = StringPrototypeSlice(path\x2C start\x2C startDot);\x0d\n        ret.base = StringPrototypeSlice(path\x2C start\x2C end);\x0d\n        ret.ext = StringPrototypeSlice(path\x2C startDot\x2C end);\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (startPart > 0)\x0d\n      ret.dir = StringPrototypeSlice(path\x2C 0\x2C startPart - 1);\x0d\n    else if (isAbsolute)\x0d\n      ret.dir = '/';\x0d\n\x0d\n    return ret;\x0d\n  }\x2C\x0d\n\x0d\n  sep: '/'\x2C\x0d\n  delimiter: ':'\x2C\x0d\n  win32: null\x2C\x0d\n  posix: null\x0d\n};\x0d\n\x0d\nposix.win32 = win32.win32 = win32;\x0d\nposix.posix = win32.posix = posix;\x0d\n\x0d\n// Legacy internal API\x2C docs-only deprecated: DEP0080\x0d\nwin32._makeLong = win32.toNamespacedPath;\x0d\nposix._makeLong = posix.toNamespacedPath;\x0d\n\x0d\nmodule.exports = platformIsWin32 ? win32 : posix;\x0d\n
code-source-info,0xb50533e
tick,0x7ffaea9c07ae,273633,0,0x0,3,0x7ff726074500,0xb50533dd5a,0xb50533ac18,0xb505339468,0xb5053356e1
code-creation,LazyCompile,10,273668,0x14dbcb84228,17,isPathSeparator node:path:52:25,0x2dbe93daaa0,~
code-source-info,0x14dbcb84228,73,1794,1876,C0O1806C2O1822C4O1818C11O1853C13O1849C16O1873,,
code-creation,LazyCompile,10,273739,0x14dbcb84330,35,isWindowsDeviceRoot node:path:60:29,0x2dbe93dad28,~
code-source-info,0x14dbcb84330,73,1991,2136,C0O2003C2O2019C4O2016C11O2047C13O2044C20O2087C22O2084C29O2115C31O2112C34O2133,,
code-creation,LazyCompile,10,273827,0x14dbcb84450,40,wrappedCwd node:internal/bootstrap/switches/does_own_process_state:124:20,0x3541b4f98a8,~
script-source,133,node:internal/bootstrap/switches/does_own_process_state,'use strict';\x0d\n\x0d\nconst credentials = internalBinding('credentials');\x0d\nconst rawMethods = internalBinding('process_methods');\x0d\n\x0d\nprocess.abort = rawMethods.abort;\x0d\nprocess.umask = wrappedUmask;\x0d\nprocess.chdir = wrappedChdir;\x0d\nprocess.cwd = wrappedCwd;\x0d\n\x0d\nif (credentials.implementsPosixCredentials) {\x0d\n  const wrapped = wrapPosixCredentialSetters(credentials);\x0d\n\x0d\n  process.initgroups = wrapped.initgroups;\x0d\n  process.setgroups = wrapped.setgroups;\x0d\n  process.setegid = wrapped.setegid;\x0d\n  process.seteuid = wrapped.seteuid;\x0d\n  process.setgid = wrapped.setgid;\x0d\n  process.setuid = wrapped.setuid;\x0d\n}\x0d\n\x0d\n// ---- keep the attachment of the wrappers above so that it's easier to ----\x0d\n// ----              compare the setups side-by-side                    -----\x0d\n\x0d\nconst {\x0d\n  parseFileMode\x2C\x0d\n  validateArray\x2C\x0d\n  validateString\x0d\n} = require('internal/validators');\x0d\n\x0d\nfunction wrapPosixCredentialSetters(credentials) {\x0d\n  const {\x0d\n    codes: {\x0d\n      ERR_INVALID_ARG_TYPE\x2C\x0d\n      ERR_UNKNOWN_CREDENTIAL\x0d\n    }\x0d\n  } = require('internal/errors');\x0d\n  const {\x0d\n    validateUint32\x0d\n  } = require('internal/validators');\x0d\n\x0d\n  const {\x0d\n    initgroups: _initgroups\x2C\x0d\n    setgroups: _setgroups\x2C\x0d\n    setegid: _setegid\x2C\x0d\n    seteuid: _seteuid\x2C\x0d\n    setgid: _setgid\x2C\x0d\n    setuid: _setuid\x0d\n  } = credentials;\x0d\n\x0d\n  function initgroups(user\x2C extraGroup) {\x0d\n    validateId(user\x2C 'user');\x0d\n    validateId(extraGroup\x2C 'extraGroup');\x0d\n    // Result is 0 on success\x2C 1 if user is unknown\x2C 2 if group is unknown.\x0d\n    const result = _initgroups(user\x2C extraGroup);\x0d\n    if (result === 1) {\x0d\n      throw new ERR_UNKNOWN_CREDENTIAL('User'\x2C user);\x0d\n    } else if (result === 2) {\x0d\n      throw new ERR_UNKNOWN_CREDENTIAL('Group'\x2C extraGroup);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  function setgroups(groups) {\x0d\n    validateArray(groups\x2C 'groups');\x0d\n    for (let i = 0; i < groups.length; i++) {\x0d\n      validateId(groups[i]\x2C `groups[${i}]`);\x0d\n    }\x0d\n    // Result is 0 on success. A positive integer indicates that the\x0d\n    // corresponding group was not found.\x0d\n    const result = _setgroups(groups);\x0d\n    if (result > 0) {\x0d\n      throw new ERR_UNKNOWN_CREDENTIAL('Group'\x2C groups[result - 1]);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  function wrapIdSetter(type\x2C method) {\x0d\n    return function(id) {\x0d\n      validateId(id\x2C 'id');\x0d\n      if (typeof id === 'number') id >>>= 0;\x0d\n      // Result is 0 on success\x2C 1 if credential is unknown.\x0d\n      const result = method(id);\x0d\n      if (result === 1) {\x0d\n        throw new ERR_UNKNOWN_CREDENTIAL(type\x2C id);\x0d\n      }\x0d\n    };\x0d\n  }\x0d\n\x0d\n  function validateId(id\x2C name) {\x0d\n    if (typeof id === 'number') {\x0d\n      validateUint32(id\x2C name);\x0d\n    } else if (typeof id !== 'string') {\x0d\n      throw new ERR_INVALID_ARG_TYPE(name\x2C ['number'\x2C 'string']\x2C id);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return {\x0d\n    initgroups\x2C\x0d\n    setgroups\x2C\x0d\n    setegid: wrapIdSetter('Group'\x2C _setegid)\x2C\x0d\n    seteuid: wrapIdSetter('User'\x2C _seteuid)\x2C\x0d\n    setgid: wrapIdSetter('Group'\x2C _setgid)\x2C\x0d\n    setuid: wrapIdSetter('User'\x2C _setuid)\x0d\n  };\x0d\n}\x0d\n\x0d\n// Cache the working directory to prevent lots of lookups. If the working\x0d\n// directory is changed by `chdir`\x2C it'll be updated.\x0d\nlet cachedCwd = '';\x0d\n\x0d\nfunction wrappedChdir(directory) {\x0d\n  validateString(directory\x2C 'directory');\x0d\n  rawMethods.chdir(directory);\x0d\n  // Mark cache that it requires an update.\x0d\n  cachedCwd = '';\x0d\n}\x0d\n\x0d\nfunction wrappedUmask(mask) {\x0d\n  if (mask !== undefined) {\x0d\n    mask = parseFileMode(mask\x2C 'mask');\x0d\n  }\x0d\n  return rawMethods.umask(mask);\x0d\n}\x0d\n\x0d\nfunction wrappedCwd() {\x0d\n  if (cachedCwd === '')\x0d\n    cachedCwd = rawMethods.cwd();\x0d\n  return cachedCwd;\x0d\n}\x0d\n
code-source-info,0x14dbcb84450,133,3466,3554,C0O3474C7O3488C12O3501C17O3524C22O3524C29O3511C35O3534C39O3551,,
code-creation,LazyCompile,10,274264,0x14dbcb84ab8,442,normalizeString node:path:66:25,0x2dbe93dad78,~
code-source-info,0x14dbcb84ab
code-creation,LazyCompile,10,274639,0x14dbcb85360,385,initializeGlobalConsole node:internal/console/constructor:688:33,0x3893bcd6880,~
script-source,110,node:internal/console/constructor,'use strict';\x0d\n\x0d\n// The Console constructor is not actually used to construct the global\x0d\n// console. It's exported for backwards compatibility.\x0d\n\x0d\nconst {\x0d\n  ArrayFrom\x2C\x0d\n  ArrayIsArray\x2C\x0d\n  ArrayPrototypeForEach\x2C\x0d\n  ArrayPrototypePush\x2C\x0d\n  ArrayPrototypeUnshift\x2C\x0d\n  Boolean\x2C\x0d\n  ErrorCaptureStackTrace\x2C\x0d\n  FunctionPrototypeBind\x2C\x0d\n  MathFloor\x2C\x0d\n  Number\x2C\x0d\n  NumberPrototypeToFixed\x2C\x0d\n  ObjectCreate\x2C\x0d\n  ObjectDefineProperties\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectKeys\x2C\x0d\n  ObjectPrototypeHasOwnProperty\x2C\x0d\n  ObjectValues\x2C\x0d\n  ReflectApply\x2C\x0d\n  ReflectConstruct\x2C\x0d\n  ReflectOwnKeys\x2C\x0d\n  RegExpPrototypeSymbolReplace\x2C\x0d\n  SafeArrayIterator\x2C\x0d\n  SafeMap\x2C\x0d\n  SafeWeakMap\x2C\x0d\n  SafeSet\x2C\x0d\n  StringPrototypeIncludes\x2C\x0d\n  StringPrototypePadStart\x2C\x0d\n  StringPrototypeRepeat\x2C\x0d\n  StringPrototypeSlice\x2C\x0d\n  StringPrototypeSplit\x2C\x0d\n  Symbol\x2C\x0d\n  SymbolHasInstance\x2C\x0d\n  SymbolToStringTag\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst { trace } = internalBinding('trace_events');\x0d\nconst {\x0d\n  isStackOverflowError\x2C\x0d\n  codes: {\x0d\n    ERR_CONSOLE_WRITABLE_STREAM\x2C\x0d\n    ERR_INVALID_ARG_VALUE\x2C\x0d\n    ERR_INCOMPATIBLE_OPTION_PAIR\x2C\x0d\n  }\x2C\x0d\n} = require('internal/errors');\x0d\nconst {\x0d\n  validateArray\x2C\x0d\n  validateInteger\x2C\x0d\n  validateObject\x2C\x0d\n} = require('internal/validators');\x0d\nconst { previewEntries } = internalBinding('util');\x0d\nconst { Buffer: { isBuffer } } = require('buffer');\x0d\nconst {\x0d\n  inspect\x2C\x0d\n  formatWithOptions\x0d\n} = require('internal/util/inspect');\x0d\nconst {\x0d\n  isTypedArray\x2C isSet\x2C isMap\x2C isSetIterator\x2C isMapIterator\x2C\x0d\n} = require('internal/util/types');\x0d\nconst {\x0d\n  CHAR_LOWERCASE_B: kTraceBegin\x2C\x0d\n  CHAR_LOWERCASE_E: kTraceEnd\x2C\x0d\n  CHAR_LOWERCASE_N: kTraceInstant\x2C\x0d\n  CHAR_UPPERCASE_C: kTraceCount\x2C\x0d\n} = require('internal/constants');\x0d\nconst kCounts = Symbol('counts');\x0d\n\x0d\nconst kTraceConsoleCategory = 'node\x2Cnode.console';\x0d\n\x0d\nconst kSecond = 1000;\x0d\nconst kMinute = 60 * kSecond;\x0d\nconst kHour = 60 * kMinute;\x0d\nconst kMaxGroupIndentation = 1000;\x0d\n\x0d\n// Lazy loaded for startup performance.\x0d\nlet cliTable;\x0d\n\x0d\n// Track amount of indentation required via `console.group()`.\x0d\nconst kGroupIndent = Symbol('kGroupIndent');\x0d\nconst kGroupIndentationWidth = Symbol('kGroupIndentWidth');\x0d\nconst kFormatForStderr = Symbol('kFormatForStderr');\x0d\nconst kFormatForStdout = Symbol('kFormatForStdout');\x0d\nconst kGetInspectOptions = Symbol('kGetInspectOptions');\x0d\nconst kColorMode = Symbol('kColorMode');\x0d\nconst kIsConsole = Symbol('kIsConsole');\x0d\nconst kWriteToConsole = Symbol('kWriteToConsole');\x0d\nconst kBindProperties = Symbol('kBindProperties');\x0d\nconst kBindStreamsEager = Symbol('kBindStreamsEager');\x0d\nconst kBindStreamsLazy = Symbol('kBindStreamsLazy');\x0d\nconst kUseStdout = Symbol('kUseStdout');\x0d\nconst kUseStderr = Symbol('kUseStderr');\x0d\n\x0d\nconst optionsMap = new SafeWeakMap();\x0d\n\x0d\nfunction Console(options /* or: stdout\x2C stderr\x2C ignoreErrors = true */) {\x0d\n  // We have to test new.target here to see if this function is called\x0d\n  // with new\x2C because we need to define a custom instanceof to accommodate\x0d\n  // the global console.\x0d\n  if (new.target === undefined) {\x0d\n    return ReflectConstruct(Console\x2C arguments);\x0d\n  }\x0d\n\x0d\n  if (!options || typeof options.write === 'function') {\x0d\n    options = {\x0d\n      stdout: options\x2C\x0d\n      stderr: arguments[1]\x2C\x0d\n      ignoreErrors: arguments[2]\x0d\n    };\x0d\n  }\x0d\n\x0d\n  const {\x0d\n    stdout\x2C\x0d\n    stderr = stdout\x2C\x0d\n    ignoreErrors = true\x2C\x0d\n    colorMode = 'auto'\x2C\x0d\n    inspectOptions\x2C\x0d\n    groupIndentation\x2C\x0d\n  } = options;\x0d\n\x0d\n  if (!stdout || typeof stdout.write !== 'function') {\x0d\n    throw new ERR_CONSOLE_WRITABLE_STREAM('stdout');\x0d\n  }\x0d\n  if (!stderr || typeof stderr.write !== 'function') {\x0d\n    throw new ERR_CONSOLE_WRITABLE_STREAM('stderr');\x0d\n  }\x0d\n\x0d\n  if (typeof colorMode !== 'boolean' && colorMode !== 'auto')\x0d\n    throw new ERR_INVALID_ARG_VALUE('colorMode'\x2C colorMode);\x0d\n\x0d\n  if (groupIndentation !== undefined) {\x0d\n    validateInteger(groupIndentation\x2C 'groupIndentation'\x2C\x0d\n                    0\x2C kMaxGroupIndentation);\x0d\n  }\x0d\n\x0d\n  if (inspectOptions !== undefined) {\x0d\n    validateObject(inspectOptions\x2C 'options.inspectOptions');\x0d\n\x0d\n    if (inspectOptions.colors !== undefined &&\x0d\n        options.colorMode !== undefined) {\x0d\n      throw new ERR_INCOMPATIBLE_OPTION_PAIR(\x0d\n        'options.inspectOptions.color'\x2C 'colorMode');\x0d\n    }\x0d\n    optionsMap.set(this\x2C inspectOptions);\x0d\n  }\x0d\n\x0d\n  // Bind the prototype functions to this Console instance\x0d\n  ArrayPrototypeForEach(ObjectKeys(Console.prototype)\x2C (key) => {\x0d\n    // We have to bind the methods grabbed from the instance instead of from\x0d\n    // the prototype so that users extending the Console can override them\x0d\n    // from the prototype chain of the subclass.\x0d\n    this[key] = FunctionPrototypeBind(this[key]\x2C this);\x0d\n    ObjectDefineProperty(this[key]\x2C 'name'\x2C {\x0d\n      __proto__: null\x2C\x0d\n      value: key\x0d\n    });\x0d\n  });\x0d\n\x0d\n  this[kBindStreamsEager](stdout\x2C stderr);\x0d\n  this[kBindProperties](ignoreErrors\x2C colorMode\x2C groupIndentation);\x0d\n}\x0d\n\x0d\nconst consolePropAttributes = {\x0d\n  writable: true\x2C\x0d\n  enumerable: false\x2C\x0d\n  configurable: true\x0d\n};\x0d\n\x0d\n// Fixup global.console instanceof global.console.Console\x0d\nObjectDefineProperty(Console\x2C SymbolHasInstance\x2C {\x0d\n  __proto__: null\x2C\x0d\n  value(instance) {\x0d\n    return instance[kIsConsole];\x0d\n  }\x0d\n});\x0d\n\x0d\nconst kColorInspectOptions = { colors: true };\x0d\nconst kNoColorInspectOptions = {};\x0d\n\x0d\nObjectDefineProperties(Console.prototype\x2C {\x0d\n  [kBindStreamsEager]: {\x0d\n    __proto__: null\x2C\x0d\n    ...consolePropAttributes\x2C\x0d\n    // Eager version for the Console constructor\x0d\n    value: function(stdout\x2C stderr) {\x0d\n      ObjectDefineProperties(this\x2C {\x0d\n        '_stdout': { __proto__: null\x2C ...consolePropAttributes\x2C value: stdout }\x2C\x0d\n        '_stderr': { __proto__: null\x2C ...consolePropAttributes\x2C value: stderr }\x2C\x0d\n      });\x0d\n    }\x0d\n  }\x2C\x0d\n  [kBindStreamsLazy]: {\x0d\n    __proto__: null\x2C\x0d\n    ...consolePropAttributes\x2C\x0d\n    // Lazily load the stdout and stderr from an object so we don't\x0d\n    // create the stdio streams when they are not even accessed\x0d\n    value: function(object) {\x0d\n      let stdout;\x0d\n      let stderr;\x0d\n      ObjectDefineProperties(this\x2C {\x0d\n        '_stdout': {\x0d\n          __proto__: null\x2C\x0d\n          enumerable: false\x2C\x0d\n          configurable: true\x2C\x0d\n          get() {\x0d\n            if (!stdout) stdout = object.stdout;\x0d\n            return stdout;\x0d\n          }\x2C\x0d\n          set(value) { stdout = value; }\x0d\n        }\x2C\x0d\n        '_stderr': {\x0d\n          __proto__: null\x2C\x0d\n          enumerable: false\x2C\x0d\n          configurable: true\x2C\x0d\n          get() {\x0d\n            if (!stderr) { stderr = object.stderr; }\x0d\n            return stderr;\x0d\n          }\x2C\x0d\n          set(value) { stderr = value; }\x0d\n        }\x0d\n      });\x0d\n    }\x0d\n  }\x2C\x0d\n  [kBindProperties]: {\x0d\n    __proto__: null\x2C\x0d\n    ...consolePropAttributes\x2C\x0d\n    value: function(ignoreErrors\x2C colorMode\x2C groupIndentation = 2) {\x0d\n      ObjectDefineProperties(this\x2C {\x0d\n        '_stdoutErrorHandler': {\x0d\n          __proto__: null\x2C\x0d\n          ...consolePropAttributes\x2C\x0d\n          value: createWriteErrorHandler(this\x2C kUseStdout)\x0d\n        }\x2C\x0d\n        '_stderrErrorHandler': {\x0d\n          ...consolePropAttributes\x2C\x0d\n          __proto__: null\x2C\x0d\n          value: createWriteErrorHandler(this\x2C kUseStderr)\x0d\n        }\x2C\x0d\n        '_ignoreErrors': {\x0d\n          __proto__: null\x2C\x0d\n          ...consolePropAttributes\x2C\x0d\n          value: Boolean(ignoreErrors)\x0d\n        }\x2C\x0d\n        '_times': { __proto__: null\x2C ...consolePropAttributes\x2C value: new SafeMap() }\x2C\x0d\n        // Corresponds to https://console.spec.whatwg.org/#count-map\x0d\n        [kCounts]: { __proto__: null\x2C ...consolePropAttributes\x2C value: new SafeMap() }\x2C\x0d\n        [kColorMode]: { __proto__: null\x2C ...consolePropAttributes\x2C value: colorMode }\x2C\x0d\n        [kIsConsole]: { __proto__: null\x2C ...consolePropAttributes\x2C value: true }\x2C\x0d\n        [kGroupIndent]: { __proto__: null\x2C ...consolePropAttributes\x2C value: '' }\x2C\x0d\n        [kGroupIndentationWidth]: {\x0d\n          __proto__: null\x2C\x0d\n          ...consolePropAttributes\x2C\x0d\n          value: groupIndentation\x0d\n        }\x2C\x0d\n        [SymbolToStringTag]: {\x0d\n          __proto__: null\x2C\x0d\n          writable: false\x2C\x0d\n          enumerable: false\x2C\x0d\n          configurable: true\x2C\x0d\n          value: 'console'\x0d\n        }\x0d\n      });\x0d\n    }\x0d\n  }\x2C\x0d\n  [kWriteToConsole]: {\x0d\n    __proto__: null\x2C\x0d\n    ...consolePropAttributes\x2C\x0d\n    value: function(streamSymbol\x2C string) {\x0d\n      const ignoreErrors = this._ignoreErrors;\x0d\n      const groupIndent = this[kGroupIndent];\x0d\n\x0d\n      const useStdout = streamSymbol === kUseStdout;\x0d\n      const stream = useStdout ? this._stdout : this._stderr;\x0d\n      const errorHandler = useStdout ?\x0d\n        this._stdoutErrorHandler : this._stderrErrorHandler;\x0d\n\x0d\n      if (groupIndent.length !== 0) {\x0d\n        if (StringPrototypeIncludes(string\x2C '\\n')) {\x0d\n          string = RegExpPrototypeSymbolReplace(/\\n/g\x2C string\x2C `\\n${groupIndent}`);\x0d\n        }\x0d\n        string = groupIndent + string;\x0d\n      }\x0d\n      string += '\\n';\x0d\n\x0d\n      if (ignoreErrors === false) return stream.write(string);\x0d\n\x0d\n      // There may be an error occurring synchronously (e.g. for files or TTYs\x0d\n      // on POSIX systems) or asynchronously (e.g. pipes on POSIX systems)\x2C so\x0d\n      // handle both situations.\x0d\n      try {\x0d\n        // Add and later remove a noop error handler to catch synchronous\x0d\n        // errors.\x0d\n        if (stream.listenerCount('error') === 0)\x0d\n          stream.once('error'\x2C noop);\x0d\n\x0d\n        stream.write(string\x2C errorHandler);\x0d\n      } catch (e) {\x0d\n        // Console is a debugging utility\x2C so it swallowing errors is not\x0d\n        // desirable even in edge cases such as low stack space.\x0d\n        if (isStackOverflowError(e))\x0d\n          throw e;\x0d\n        // Sorry\x2C there's no proper way to pass along the error here.\x0d\n      } finally {\x0d\n        stream.removeListener('error'\x2C noop);\x0d\n      }\x0d\n    }\x0d\n  }\x2C\x0d\n  [kGetInspectOptions]: {\x0d\n    __proto__: null\x2C\x0d\n    ...consolePropAttributes\x2C\x0d\n    value: function(stream) {\x0d\n      let color = this[kColorMode];\x0d\n      if (color === 'auto') {\x0d\n        color = stream.isTTY && (\x0d\n          typeof stream.getColorDepth === 'function' ?\x0d\n            stream.getColorDepth() > 2 : true);\x0d\n      }\x0d\n\x0d\n      const options = optionsMap.get(this);\x0d\n      if (options) {\x0d\n        if (options.colors === undefined) {\x0d\n          options.colors = color;\x0d\n        }\x0d\n        return options;\x0d\n      }\x0d\n\x0d\n      return color ? kColorInspectOptions : kNoColorInspectOptions;\x0d\n    }\x0d\n  }\x2C\x0d\n  [kFormatForStdout]: {\x0d\n    __proto__: null\x2C\x0d\n    ...consolePropAttributes\x2C\x0d\n    value: function(args) {\x0d\n      const opts = this[kGetInspectOptions](this._stdout);\x0d\n      ArrayPrototypeUnshift(args\x2C opts);\x0d\n      return ReflectApply(formatWithOptions\x2C null\x2C args);\x0d\n    }\x0d\n  }\x2C\x0d\n  [kFormatForStderr]: {\x0d\n    __proto__: null\x2C\x0d\n    ...consolePropAttributes\x2C\x0d\n    value: function(args) {\x0d\n      const opts = this[kGetInspectOptions](this._stderr);\x0d\n      ArrayPrototypeUnshift(args\x2C opts);\x0d\n      return ReflectApply(formatWithOptions\x2C null\x2C args);\x0d\n    }\x0d\n  }\x2C\x0d\n});\x0d\n\x0d\n// Make a function that can serve as the callback passed to `stream.write()`.\x0d\nfunction createWriteErrorHandler(instance\x2C streamSymbol) {\x0d\n  return (err) => {\x0d\n    // This conditional evaluates to true if and only if there was an error\x0d\n    // that was not already emitted (which happens when the _write callback\x0d\n    // is invoked asynchronously).\x0d\n    const stream = streamSymbol === kUseStdout ?\x0d\n      instance._stdout : instance._stderr;\x0d\n    if (err !== null && !stream._writableState.errorEmitted) {\x0d\n      // If there was an error\x2C it will be emitted on `stream` as\x0d\n      // an `error` event. Adding a `once` listener will keep that error\x0d\n      // from becoming an uncaught exception\x2C but since the handler is\x0d\n      // removed after the event\x2C non-console.* writes won't be affected.\x0d\n      // we are only adding noop if there is no one else listening for 'error'\x0d\n      if (stream.listenerCount('error') === 0) {\x0d\n        stream.once('error'\x2C noop);\x0d\n      }\x0d\n    }\x0d\n  };\x0d\n}\x0d\n\x0d\nconst consoleMethods = {\x0d\n  log(...args) {\x0d\n    this[kWriteToConsole](kUseStdout\x2C this[kFormatForStdout](args));\x0d\n  }\x2C\x0d\n\x0d\n\x0d\n  warn(...args) {\x0d\n    this[kWriteToConsole](kUseStderr\x2C this[kFormatForStderr](args));\x0d\n  }\x2C\x0d\n\x0d\n\x0d\n  dir(object\x2C options) {\x0d\n    this[kWriteToConsole](kUseStdout\x2C inspect(object\x2C {\x0d\n      customInspect: false\x2C\x0d\n      ...this[kGetInspectOptions](this._stdout)\x2C\x0d\n      ...options\x0d\n    }));\x0d\n  }\x2C\x0d\n\x0d\n  time(label = 'default') {\x0d\n    // Coerces everything other than Symbol to a string\x0d\n    label = `${label}`;\x0d\n    if (this._times.has(label)) {\x0d\n      process.emitWarning(`Label '${label}' already exists for console.time()`);\x0d\n      return;\x0d\n    }\x0d\n    trace(kTraceBegin\x2C kTraceConsoleCategory\x2C `time::${label}`\x2C 0);\x0d\n    this._times.set(label\x2C process.hrtime());\x0d\n  }\x2C\x0d\n\x0d\n  timeEnd(label = 'default') {\x0d\n    // Coerces everything other than Symbol to a string\x0d\n    label = `${label}`;\x0d\n    const found = timeLogImpl(this\x2C 'timeEnd'\x2C label);\x0d\n    trace(kTraceEnd\x2C kTraceConsoleCategory\x2C `time::${label}`\x2C 0);\x0d\n    if (found) {\x0d\n      this._times.delete(label);\x0d\n    }\x0d\n  }\x2C\x0d\n\x0d\n  timeLog(label = 'default'\x2C ...data) {\x0d\n    // Coerces everything other than Symbol to a string\x0d\n    label = `${label}`;\x0d\n    timeLogImpl(this\x2C 'timeLog'\x2C label\x2C data);\x0d\n    trace(kTraceInstant\x2C kTraceConsoleCategory\x2C `time::${label}`\x2C 0);\x0d\n  }\x2C\x0d\n\x0d\n  trace: function trace(...args) {\x0d\n    const err = {\x0d\n      name: 'Trace'\x2C\x0d\n      message: this[kFormatForStderr](args)\x0d\n    };\x0d\n    ErrorCaptureStackTrace(err\x2C trace);\x0d\n    this.error(err.stack);\x0d\n  }\x2C\x0d\n\x0d\n  assert(expression\x2C ...args) {\x0d\n    if (!expression) {\x0d\n      args[0] = `Assertion failed${args.length === 0 ? '' : `: ${args[0]}`}`;\x0d\n      // The arguments will be formatted in warn() again\x0d\n      ReflectApply(this.warn\x2C this\x2C args);\x0d\n    }\x0d\n  }\x2C\x0d\n\x0d\n  // Defined by: https://console.spec.whatwg.org/#clear\x0d\n  clear() {\x0d\n    // It only makes sense to clear if _stdout is a TTY.\x0d\n    // Otherwise\x2C do nothing.\x0d\n    if (this._stdout.isTTY && process.env.TERM !== 'dumb') {\x0d\n      // The require is here intentionally to avoid readline being\x0d\n      // required too early when console is first loaded.\x0d\n      const {\x0d\n        cursorTo\x2C\x0d\n        clearScreenDown\x2C\x0d\n      } = require('internal/readline/callbacks');\x0d\n      cursorTo(this._stdout\x2C 0\x2C 0);\x0d\n      clearScreenDown(this._stdout);\x0d\n    }\x0d\n  }\x2C\x0d\n\x0d\n  // Defined by: https://console.spec.whatwg.org/#count\x0d\n  count(label = 'default') {\x0d\n    // Ensures that label is a string\x2C and only things that can be\x0d\n    // coerced to strings. e.g. Symbol is not allowed\x0d\n    label = `${label}`;\x0d\n    const counts = this[kCounts];\x0d\n    let count = counts.get(label);\x0d\n    if (count === undefined)\x0d\n      count = 1;\x0d\n    else\x0d\n      count++;\x0d\n    counts.set(label\x2C count);\x0d\n    trace(kTraceCount\x2C kTraceConsoleCategory\x2C `count::${label}`\x2C 0\x2C count);\x0d\n    this.log(`${label}: ${count}`);\x0d\n  }\x2C\x0d\n\x0d\n  // Defined by: https://console.spec.whatwg.org/#countreset\x0d\n  countReset(label = 'default') {\x0d\n    const counts = this[kCounts];\x0d\n    if (!counts.has(label)) {\x0d\n      process.emitWarning(`Count for '${label}' does not exist`);\x0d\n      return;\x0d\n    }\x0d\n    trace(kTraceCount\x2C kTraceConsoleCategory\x2C `count::${label}`\x2C 0\x2C 0);\x0d\n    counts.delete(`${label}`);\x0d\n  }\x2C\x0d\n\x0d\n  group(...data) {\x0d\n    if (data.length > 0) {\x0d\n      ReflectApply(this.log\x2C this\x2C data);\x0d\n    }\x0d\n    this[kGroupIndent] +=\x0d\n      StringPrototypeRepeat(' '\x2C this[kGroupIndentationWidth]);\x0d\n  }\x2C\x0d\n\x0d\n  groupEnd() {\x0d\n    this[kGroupIndent] = StringPrototypeSlice(\x0d\n      this[kGroupIndent]\x2C\x0d\n      0\x2C\x0d\n      this[kGroupIndent].length - this[kGroupIndentationWidth]\x0d\n    );\x0d\n  }\x2C\x0d\n\x0d\n  // https://console.spec.whatwg.org/#table\x0d\n  table(tabularData\x2C properties) {\x0d\n    if (properties !== undefined)\x0d\n      validateArray(properties\x2C 'properties');\x0d\n\x0d\n    if (tabularData === null || typeof tabularData !== 'object')\x0d\n      return this.log(tabularData);\x0d\n\x0d\n    cliTable ??= require('internal/cli_table');\x0d\n    const final = (k\x2C v) => this.log(cliTable(k\x2C v));\x0d\n\x0d\n    const _inspect = (v) => {\x0d\n      const depth = v !== null &&\x0d\n                    typeof v === 'object' &&\x0d\n                    !isArray(v) &&\x0d\n                    ObjectKeys(v).length > 2 ? -1 : 0;\x0d\n      const opt = {\x0d\n        depth\x2C\x0d\n        maxArrayLength: 3\x2C\x0d\n        breakLength: Infinity\x2C\x0d\n        ...this[kGetInspectOptions](this._stdout)\x0d\n      };\x0d\n      return inspect(v\x2C opt);\x0d\n    };\x0d\n    const getIndexArray = (length) => ArrayFrom(\x0d\n      { length }\x2C (_\x2C i) => _inspect(i));\x0d\n\x0d\n    const mapIter = isMapIterator(tabularData);\x0d\n    let isKeyValue = false;\x0d\n    let i = 0;\x0d\n    if (mapIter) {\x0d\n      const res = previewEntries(tabularData\x2C true);\x0d\n      tabularData = res[0];\x0d\n      isKeyValue = res[1];\x0d\n    }\x0d\n\x0d\n    if (isKeyValue || isMap(tabularData)) {\x0d\n      const keys = [];\x0d\n      const values = [];\x0d\n      let length = 0;\x0d\n      if (mapIter) {\x0d\n        for (; i < tabularData.length / 2; ++i) {\x0d\n          ArrayPrototypePush(keys\x2C _inspect(tabularData[i * 2]));\x0d\n          ArrayPrototypePush(values\x2C _inspect(tabularData[i * 2 + 1]));\x0d\n          length++;\x0d\n        }\x0d\n      } else {\x0d\n        for (const { 0: k\x2C 1: v } of tabularData) {\x0d\n          ArrayPrototypePush(keys\x2C _inspect(k));\x0d\n          ArrayPrototypePush(values\x2C _inspect(v));\x0d\n          length++;\x0d\n        }\x0d\n      }\x0d\n      return final([\x0d\n        iterKey\x2C keyKey\x2C valuesKey\x2C\x0d\n      ]\x2C [\x0d\n        getIndexArray(length)\x2C\x0d\n        keys\x2C\x0d\n        values\x2C\x0d\n      ]);\x0d\n    }\x0d\n\x0d\n    const setIter = isSetIterator(tabularData);\x0d\n    if (setIter)\x0d\n      tabularData = previewEntries(tabularData);\x0d\n\x0d\n    const setlike = setIter || mapIter || isSet(tabularData);\x0d\n    if (setlike) {\x0d\n      const values = [];\x0d\n      let length = 0;\x0d\n      for (const v of tabularData) {\x0d\n        ArrayPrototypePush(values\x2C _inspect(v));\x0d\n        length++;\x0d\n      }\x0d\n      return final([iterKey\x2C valuesKey]\x2C [getIndexArray(length)\x2C values]);\x0d\n    }\x0d\n\x0d\n    const map = ObjectCreate(null);\x0d\n    let hasPrimitives = false;\x0d\n    const valuesKeyArray = [];\x0d\n    const indexKeyArray = ObjectKeys(tabularData);\x0d\n\x0d\n    for (; i < indexKeyArray.length; i++) {\x0d\n      const item = tabularData[indexKeyArray[i]];\x0d\n      const primitive = item === null ||\x0d\n          (typeof item !== 'function' && typeof item !== 'object');\x0d\n      if (properties === undefined && primitive) {\x0d\n        hasPrimitives = true;\x0d\n        valuesKeyArray[i] = _inspect(item);\x0d\n      } else {\x0d\n        const keys = properties || ObjectKeys(item);\x0d\n        for (const key of keys) {\x0d\n          map[key] ??= [];\x0d\n          if ((primitive && properties) ||\x0d\n               !ObjectPrototypeHasOwnProperty(item\x2C key))\x0d\n            map[key][i] = '';\x0d\n          else\x0d\n            map[key][i] = _inspect(item[key]);\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n\x0d\n    const keys = ObjectKeys(map);\x0d\n    const values = ObjectValues(map);\x0d\n    if (hasPrimitives) {\x0d\n      ArrayPrototypePush(keys\x2C valuesKey);\x0d\n      ArrayPrototypePush(values\x2C valuesKeyArray);\x0d\n    }\x0d\n    ArrayPrototypeUnshift(keys\x2C indexKey);\x0d\n    ArrayPrototypeUnshift(values\x2C indexKeyArray);\x0d\n\x0d\n    return final(keys\x2C values);\x0d\n  }\x2C\x0d\n};\x0d\n\x0d\n// Returns true if label was found\x0d\nfunction timeLogImpl(self\x2C name\x2C label\x2C data) {\x0d\n  const time = self._times.get(label);\x0d\n  if (time === undefined) {\x0d\n    process.emitWarning(`No such label '${label}' for console.${name}()`);\x0d\n    return false;\x0d\n  }\x0d\n  const duration = process.hrtime(time);\x0d\n  const ms = duration[0] * 1000 + duration[1] / 1e6;\x0d\n\x0d\n  const formatted = formatTime(ms);\x0d\n\x0d\n  if (data === undefined) {\x0d\n    self.log('%s: %s'\x2C label\x2C formatted);\x0d\n  } else {\x0d\n    self.log('%s: %s'\x2C label\x2C formatted\x2C ...new SafeArrayIterator(data));\x0d\n  }\x0d\n  return true;\x0d\n}\x0d\n\x0d\nfunction pad(value) {\x0d\n  return StringPrototypePadStart(`${value}`\x2C 2\x2C '0');\x0d\n}\x0d\n\x0d\nfunction formatTime(ms) {\x0d\n  let hours = 0;\x0d\n  let minutes = 0;\x0d\n  let seconds = 0;\x0d\n\x0d\n  if (ms >= kSecond) {\x0d\n    if (ms >= kMinute) {\x0d\n      if (ms >= kHour) {\x0d\n        hours = MathFloor(ms / kHour);\x0d\n        ms = ms % kHour;\x0d\n      }\x0d\n      minutes = MathFloor(ms / kMinute);\x0d\n      ms = ms % kMinute;\x0d\n    }\x0d\n    seconds = ms / kSecond;\x0d\n  }\x0d\n\x0d\n  if (hours !== 0 || minutes !== 0) {\x0d\n    ({ 0: seconds\x2C 1: ms } = StringPrototypeSplit(\x0d\n      NumberPrototypeToFixed(seconds\x2C 3)\x2C\x0d\n      '.'\x0d\n    ));\x0d\n    const res = hours !== 0 ? `${hours}:${pad(minutes)}` : minutes;\x0d\n    return `${res}:${pad(seconds)}.${ms} (${hours !== 0 ? 'h:m' : ''}m:ss.mmm)`;\x0d\n  }\x0d\n\x0d\n  if (seconds !== 0) {\x0d\n    return `${NumberPrototypeToFixed(seconds\x2C 3)}s`;\x0d\n  }\x0d\n\x0d\n  return `${Number(NumberPrototypeToFixed(ms\x2C 3))}ms`;\x0d\n}\x0d\n\x0d\nconst keyKey = 'Key';\x0d\nconst valuesKey = 'Values';\x0d\nconst indexKey = '(index)';\x0d\nconst iterKey = '(iteration index)';\x0d\n\x0d\nconst isArray = (v) => ArrayIsArray(v) || isTypedArray(v) || isBuffer(v);\x0d\n\x0d\nfunction noop() {}\x0d\n\x0d\nfor (const method of ReflectOwnKeys(consoleMethods))\x0d\n  Console.prototype[method] = consoleMethods[method];\x0d\n\x0d\nConsole.prototype.debug = Console.prototype.log;\x0d\nConsole.prototype.info = Console.prototype.log;\x0d\nConsole.prototype.dirxml = Console.prototype.log;\x0d\nConsole.prototype.error = Console.prototype.warn;\x0d\nConsole.prototype.groupCollapsed = Console.prototype.group;\x0d\n\x0d\nfunction initializeGlobalConsole(globalConsole) {\x0d\n  globalConsole[kBindStreamsLazy](process);\x0d\n  globalConsole[kBindProperties](true\x2C 'auto');\x0d\n\x0d\n  const {\x0d\n    addSerializeCallback\x2C\x0d\n    isBuildingSnapshot\x2C\x0d\n  } = require('v8').startupSnapshot;\x0d\n\x0d\n  if (!internalBinding('config').hasInspector || !isBuildingSnapshot()) {\x0d\n    return;\x0d\n  }\x0d\n  const { console: consoleFromVM } = internalBinding('inspector');\x0d\n  const nodeConsoleKeys = ObjectKeys(Console.prototype);\x0d\n  const vmConsoleKeys = ObjectKeys(consoleFromVM);\x0d\n  const originalKeys = new SafeSet(vmConsoleKeys.concat(nodeConsoleKeys));\x0d\n  const inspectorConsoleKeys = new SafeSet();\x0d\n  for (const key of ObjectKeys(globalConsole)) {\x0d\n    if (!originalKeys.has(key)) {\x0d\n      inspectorConsoleKeys.add(key);\x0d\n    }\x0d\n  }\x0d\n  // During deserialization these should be reinstalled to console by\x0d\n  // V8 when the inspector client is created.\x0d\n  addSerializeCallback(() => {\x0d\n    for (const key of inspectorConsoleKeys) {\x0d\n      globalConsole[key] = undefined;\x0d\n    }\x0d\n  });\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  Console\x2C\x0d\n  kBindStreamsLazy\x2C\x0d\n  kBindProperties\x2C\x0d\n  initializeGlobalConsole\x2C\x0d\n  formatTime // exported for tests\x0d\n};\x0d\n
code-source-info,0x14dbcb85360,110,21096,22094,C0O21096C12O21117C19O21131C21O21130C30O21148C35O21162C42O21176C44O21175C53O21192C59O21280C67O21280C72O21293C77O21226C82O21253C87O21316C95O21321C100O21346C106O21364C111O21393C112O21400C113O21444C121O21444C126O21426C131O21501C143O21520C148O21501C153O21557C160O21557C165O21608C172O21634C177O21634C185O21608C191O21692C198O21692C203O21692C205O21728C215O21728C244O21721C274O21721C277O21780C283O21780C293O21799C297O21820C303O21820C308O21710C374O21963C379O21963C384O22093,,
code-creation,LazyCompile,10,276305,0x14dbcb87028,94,value node:internal/console/constructor:201:20,0x3893bcd5ed8,~
code-source-info,0x14dbcb87028,110,5933,6592,C0O5933C15O5955C16O5955C18O5974C19O5974C21O5989C33O6040C38O6142C46O6253C60O6316C65O6418C73O6533C87O5989C93O6591,,
code-creation,LazyCompile,10,276480,0x14dbcb876e0,414,value node:internal/console/constructor:231:20,0x3893bcd5f98,~
code-source-info,0x14dbcb876e0,110,6696,8126,C17O6753C27O6816C34O6860C52O6931C55O6901C73O7003C86O7102C89O7072C104O7152C111O7196C126O7237C129O7237C144O7290C151O7312C166O7346C169O7342C187O7439C191O7449C198O7471C213O7505C216O7501C235O7528C239O7541C246O7563C261O7593C275O7616C279O7629C286O7651C300O7681C314O7699C318O7714C325O7736C340O7766C354O7782C358O7807C365O7851C380O7892C394O7931C398O7951C407O6753C413O8125,,
code-creation,LazyCompile,10,276620,0x14dbcb87b50,18,createWriteErrorHandler node:internal/console/constructor:355:33,0x3893bcd6240,~
code-source-info,0x14dbcb87b50,110,11006,11881,C0O11006C13O11036C17O11878,,
code-creation,LazyCompile,10,276762,0x14dbcb87d58,25,isBuildingSnapshot node:internal/v8/startup_snapshot:17:28,0x9147929d40,~
script-source,84,node:internal/v8/startup_snapshot,'use strict';\x0d\n\x0d\nconst {\x0d\n  validateFunction\x2C\x0d\n} = require('internal/validators');\x0d\nconst {\x0d\n  ERR_NOT_BUILDING_SNAPSHOT\x2C\x0d\n  ERR_DUPLICATE_STARTUP_SNAPSHOT_MAIN_FUNCTION\x0d\n} = require('internal/errors');\x0d\n\x0d\nconst {\x0d\n  setSerializeCallback\x2C\x0d\n  setDeserializeCallback\x2C\x0d\n  setDeserializeMainFunction: _setDeserializeMainFunction\x2C\x0d\n} = internalBinding('mksnapshot');\x0d\n\x0d\nfunction isBuildingSnapshot() {\x0d\n  // For now this is the only way to build a snapshot.\x0d\n  return require('internal/options').getOptionValue('--build-snapshot');\x0d\n}\x0d\n\x0d\nfunction throwIfNotBuildingSnapshot() {\x0d\n  if (!isBuildingSnapshot()) {\x0d\n    throw new ERR_NOT_BUILDING_SNAPSHOT();\x0d\n  }\x0d\n}\x0d\n\x0d\nconst deserializeCallbacks = [];\x0d\nlet deserializeCallbackIsSet = false;\x0d\nfunction runDeserializeCallbacks() {\x0d\n  while (deserializeCallbacks.length > 0) {\x0d\n    const { 0: callback\x2C 1: data } = deserializeCallbacks.shift();\x0d\n    callback(data);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction addDeserializeCallback(callback\x2C data) {\x0d\n  throwIfNotBuildingSnapshot();\x0d\n  validateFunction(callback\x2C 'callback');\x0d\n  if (!deserializeCallbackIsSet) {\x0d\n    // TODO(joyeecheung): when the main function handling is done in JS\x2C\x0d\n    // the deserialize callbacks can always be invoked. For now only\x0d\n    // store it in C++ when it's actually used to avoid unnecessary\x0d\n    // C++ -> JS costs.\x0d\n    setDeserializeCallback(runDeserializeCallbacks);\x0d\n    deserializeCallbackIsSet = true;\x0d\n  }\x0d\n  deserializeCallbacks.push([callback\x2C data]);\x0d\n}\x0d\n\x0d\nconst serializeCallbacks = [];\x0d\nfunction runSerializeCallbacks() {\x0d\n  while (serializeCallbacks.length > 0) {\x0d\n    const { 0: callback\x2C 1: data } = serializeCallbacks.shift();\x0d\n    callback(data);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction addSerializeCallback(callback\x2C data) {\x0d\n  throwIfNotBuildingSnapshot();\x0d\n  validateFunction(callback\x2C 'callback');\x0d\n  serializeCallbacks.push([callback\x2C data]);\x0d\n}\x0d\n\x0d\nfunction initializeCallbacks() {\x0d\n  // Only run the serialize callbacks in snapshot building mode\x2C otherwise\x0d\n  // they throw.\x0d\n  if (isBuildingSnapshot()) {\x0d\n    setSerializeCallback(runSerializeCallbacks);\x0d\n  }\x0d\n}\x0d\n\x0d\nlet deserializeMainIsSet = false;\x0d\nfunction setDeserializeMainFunction(callback\x2C data) {\x0d\n  throwIfNotBuildingSnapshot();\x0d\n  // TODO(joyeecheung): In lib/internal/bootstrap/node.js\x2C create a default\x0d\n  // main function to run the lib/internal/main scripts and make sure that\x0d\n  // the main function set in the snapshot building process takes precedence.\x0d\n  validateFunction(callback\x2C 'callback');\x0d\n  if (deserializeMainIsSet) {\x0d\n    throw new ERR_DUPLICATE_STARTUP_SNAPSHOT_MAIN_FUNCTION();\x0d\n  }\x0d\n  deserializeMainIsSet = true;\x0d\n\x0d\n  _setDeserializeMainFunction(function deserializeMain() {\x0d\n    const {\x0d\n      prepareMainThreadExecution\x2C\x0d\n      markBootstrapComplete\x0d\n    } = require('internal/process/pre_execution');\x0d\n\x0d\n    // This should be in sync with run_main_module.js until we make that\x0d\n    // a built-in main function.\x0d\n    prepareMainThreadExecution(true);\x0d\n    markBootstrapComplete();\x0d\n    callback(data);\x0d\n  });\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  initializeCallbacks\x2C\x0d\n  runDeserializeCallbacks\x2C\x0d\n  // Exposed to require('v8').startupSnapshot\x0d\n  namespace: {\x0d\n    addDeserializeCallback\x2C\x0d\n    addSerializeCallback\x2C\x0d\n    setDeserializeMainFunction\x2C\x0d\n    isBuildingSnapshot\x0d\n  }\x0d\n};\x0d\n
code-source-info,0x14dbcb87d58,84,392,529,C0O456C6O463C11O490C19O491C24O526,,
code-creation,LazyCompile,10,277088,0x14dbcb88248,63,addReadOnlyProcessAlias node:internal/process/pre_execution:186:33,0xb505336b08,~
code-source-info,0x14dbcb88248,439,6115,6374,C16O6168C21O6168C26O6195C28O6213C36O6243C43O6333C49O6352C56O6213C62O6373,,
code-creation,LazyCompile,10,277180,0x14dbcb88488,46,setupTraceCategoryState node:internal/process/pre_execution:382:33,0xb505336f50,~
code-source-info,0x14dbcb88488,439,11906,12137,C0O11949C6O11949C11O11922C16O12022C22O12022C27O11993C32O12065C35O12090C40O12065C45O12136,,
code-creation,LazyCompile,10,277299,0x14dbcb88620,77,toggleTraceCategoryState node:internal/process/per_thread:397:34,0x1adeb5a8f20,~
script-source,37,node:internal/process/per_thread,'use strict';\x0d\n\x0d\n// This files contains process bootstrappers that can be\x0d\n// run when setting up each thread\x2C including the main\x0d\n// thread and the worker threads.\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeEvery\x2C\x0d\n  ArrayPrototypeForEach\x2C\x0d\n  ArrayPrototypeIncludes\x2C\x0d\n  ArrayPrototypeMap\x2C\x0d\n  ArrayPrototypePush\x2C\x0d\n  ArrayPrototypeSplice\x2C\x0d\n  BigUint64Array\x2C\x0d\n  Float64Array\x2C\x0d\n  NumberMAX_SAFE_INTEGER\x2C\x0d\n  ObjectFreeze\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ReflectApply\x2C\x0d\n  RegExpPrototypeExec\x2C\x0d\n  SafeArrayIterator\x2C\x0d\n  Set\x2C\x0d\n  SetPrototypeEntries\x2C\x0d\n  SetPrototypeValues\x2C\x0d\n  StringPrototypeEndsWith\x2C\x0d\n  StringPrototypeReplace\x2C\x0d\n  StringPrototypeSlice\x2C\x0d\n  StringPrototypeStartsWith\x2C\x0d\n  Symbol\x2C\x0d\n  SymbolIterator\x2C\x0d\n  Uint32Array\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  errnoException\x2C\x0d\n  codes: {\x0d\n    ERR_ASSERTION\x2C\x0d\n    ERR_INVALID_ARG_TYPE\x2C\x0d\n    ERR_INVALID_ARG_VALUE\x2C\x0d\n    ERR_OUT_OF_RANGE\x2C\x0d\n    ERR_UNKNOWN_SIGNAL\x0d\n  }\x0d\n} = require('internal/errors');\x0d\nconst format = require('internal/util/inspect').format;\x0d\nconst {\x0d\n  validateArray\x2C\x0d\n  validateNumber\x2C\x0d\n  validateObject\x2C\x0d\n} = require('internal/validators');\x0d\nconst constants = internalBinding('constants').os.signals;\x0d\n\x0d\nconst {\x0d\n  handleProcessExit\x2C\x0d\n} = require('internal/modules/esm/handle_process_exit');\x0d\n\x0d\nconst kInternal = Symbol('internal properties');\x0d\n\x0d\nfunction assert(x\x2C msg) {\x0d\n  if (!x) throw new ERR_ASSERTION(msg || 'assertion error');\x0d\n}\x0d\n\x0d\nconst binding = internalBinding('process_methods');\x0d\n\x0d\nlet hrValues;\x0d\nlet hrBigintValues;\x0d\n\x0d\nfunction refreshHrtimeBuffer() {\x0d\n  // The 3 entries filled in by the original process.hrtime contains\x0d\n  // the upper/lower 32 bits of the second part of the value\x2C\x0d\n  // and the remaining nanoseconds of the value.\x0d\n  hrValues = new Uint32Array(binding.hrtimeBuffer);\x0d\n  // Use a BigUint64Array in the closure because this is actually a bit\x0d\n  // faster than simply returning a BigInt from C++ in V8 7.1.\x0d\n  hrBigintValues = new BigUint64Array(binding.hrtimeBuffer\x2C 0\x2C 1);\x0d\n}\x0d\n\x0d\n// Create the buffers.\x0d\nrefreshHrtimeBuffer();\x0d\n\x0d\nfunction hrtime(time) {\x0d\n  binding.hrtime();\x0d\n\x0d\n  if (time !== undefined) {\x0d\n    validateArray(time\x2C 'time');\x0d\n    if (time.length !== 2) {\x0d\n      throw new ERR_OUT_OF_RANGE('time'\x2C 2\x2C time.length);\x0d\n    }\x0d\n\x0d\n    const sec = (hrValues[0] * 0x100000000 + hrValues[1]) - time[0];\x0d\n    const nsec = hrValues[2] - time[1];\x0d\n    const needsBorrow = nsec < 0;\x0d\n    return [needsBorrow ? sec - 1 : sec\x2C needsBorrow ? nsec + 1e9 : nsec];\x0d\n  }\x0d\n\x0d\n  return [\x0d\n    hrValues[0] * 0x100000000 + hrValues[1]\x2C\x0d\n    hrValues[2]\x2C\x0d\n  ];\x0d\n}\x0d\n\x0d\nfunction hrtimeBigInt() {\x0d\n  binding.hrtimeBigInt();\x0d\n  return hrBigintValues[0];\x0d\n}\x0d\n\x0d\n// The execution of this function itself should not cause any side effects.\x0d\nfunction wrapProcessMethods(binding) {\x0d\n  const {\x0d\n    cpuUsage: _cpuUsage\x2C\x0d\n    memoryUsage: _memoryUsage\x2C\x0d\n    rss\x2C\x0d\n    resourceUsage: _resourceUsage\x0d\n  } = binding;\x0d\n\x0d\n  function _rawDebug(...args) {\x0d\n    binding._rawDebug(ReflectApply(format\x2C null\x2C args));\x0d\n  }\x0d\n\x0d\n  // Create the argument array that will be passed to the native function.\x0d\n  const cpuValues = new Float64Array(2);\x0d\n\x0d\n  // Replace the native function with the JS version that calls the native\x0d\n  // function.\x0d\n  function cpuUsage(prevValue) {\x0d\n    // If a previous value was passed in\x2C ensure it has the correct shape.\x0d\n    if (prevValue) {\x0d\n      if (!previousValueIsValid(prevValue.user)) {\x0d\n        validateObject(prevValue\x2C 'prevValue');\x0d\n\x0d\n        validateNumber(prevValue.user\x2C 'prevValue.user');\x0d\n        throw new ERR_INVALID_ARG_VALUE.RangeError('prevValue.user'\x2C\x0d\n                                                   prevValue.user);\x0d\n      }\x0d\n\x0d\n      if (!previousValueIsValid(prevValue.system)) {\x0d\n        validateNumber(prevValue.system\x2C 'prevValue.system');\x0d\n        throw new ERR_INVALID_ARG_VALUE.RangeError('prevValue.system'\x2C\x0d\n                                                   prevValue.system);\x0d\n      }\x0d\n    }\x0d\n\x0d\n    // Call the native function to get the current values.\x0d\n    _cpuUsage(cpuValues);\x0d\n\x0d\n    // If a previous value was passed in\x2C return diff of current from previous.\x0d\n    if (prevValue) {\x0d\n      return {\x0d\n        user: cpuValues[0] - prevValue.user\x2C\x0d\n        system: cpuValues[1] - prevValue.system\x0d\n      };\x0d\n    }\x0d\n\x0d\n    // If no previous value passed in\x2C return current value.\x0d\n    return {\x0d\n      user: cpuValues[0]\x2C\x0d\n      system: cpuValues[1]\x0d\n    };\x0d\n  }\x0d\n\x0d\n  // Ensure that a previously passed in value is valid. Currently\x2C the native\x0d\n  // implementation always returns numbers <= Number.MAX_SAFE_INTEGER.\x0d\n  function previousValueIsValid(num) {\x0d\n    return typeof num === 'number' &&\x0d\n        num <= NumberMAX_SAFE_INTEGER &&\x0d\n        num >= 0;\x0d\n  }\x0d\n\x0d\n  const memValues = new Float64Array(5);\x0d\n  function memoryUsage() {\x0d\n    _memoryUsage(memValues);\x0d\n    return {\x0d\n      rss: memValues[0]\x2C\x0d\n      heapTotal: memValues[1]\x2C\x0d\n      heapUsed: memValues[2]\x2C\x0d\n      external: memValues[3]\x2C\x0d\n      arrayBuffers: memValues[4]\x0d\n    };\x0d\n  }\x0d\n\x0d\n  memoryUsage.rss = rss;\x0d\n\x0d\n  function exit(code) {\x0d\n    process.off('exit'\x2C handleProcessExit);\x0d\n\x0d\n    if (code || code === 0)\x0d\n      process.exitCode = code;\x0d\n\x0d\n    if (!process._exiting) {\x0d\n      process._exiting = true;\x0d\n      process.emit('exit'\x2C process.exitCode || 0);\x0d\n    }\x0d\n    // FIXME(joyeecheung): This is an undocumented API that gets monkey-patched\x0d\n    // in the user land. Either document it\x2C or deprecate it in favor of a\x0d\n    // better public alternative.\x0d\n    process.reallyExit(process.exitCode || 0);\x0d\n  }\x0d\n\x0d\n  function kill(pid\x2C sig) {\x0d\n    let err;\x0d\n\x0d\n    // eslint-disable-next-line eqeqeq\x0d\n    if (pid != (pid | 0)) {\x0d\n      throw new ERR_INVALID_ARG_TYPE('pid'\x2C 'number'\x2C pid);\x0d\n    }\x0d\n\x0d\n    // Preserve null signal\x0d\n    if (sig === (sig | 0)) {\x0d\n      // XXX(joyeecheung): we have to use process._kill here because\x0d\n      // it's monkey-patched by tests.\x0d\n      err = process._kill(pid\x2C sig);\x0d\n    } else {\x0d\n      sig = sig || 'SIGTERM';\x0d\n      if (constants[sig]) {\x0d\n        err = process._kill(pid\x2C constants[sig]);\x0d\n      } else {\x0d\n        throw new ERR_UNKNOWN_SIGNAL(sig);\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (err)\x0d\n      throw errnoException(err\x2C 'kill');\x0d\n\x0d\n    return true;\x0d\n  }\x0d\n\x0d\n  const resourceValues = new Float64Array(16);\x0d\n  function resourceUsage() {\x0d\n    _resourceUsage(resourceValues);\x0d\n    return {\x0d\n      userCPUTime: resourceValues[0]\x2C\x0d\n      systemCPUTime: resourceValues[1]\x2C\x0d\n      maxRSS: resourceValues[2]\x2C\x0d\n      sharedMemorySize: resourceValues[3]\x2C\x0d\n      unsharedDataSize: resourceValues[4]\x2C\x0d\n      unsharedStackSize: resourceValues[5]\x2C\x0d\n      minorPageFault: resourceValues[6]\x2C\x0d\n      majorPageFault: resourceValues[7]\x2C\x0d\n      swappedOut: resourceValues[8]\x2C\x0d\n      fsRead: resourceValues[9]\x2C\x0d\n      fsWrite: resourceValues[10]\x2C\x0d\n      ipcSent: resourceValues[11]\x2C\x0d\n      ipcReceived: resourceValues[12]\x2C\x0d\n      signalsCount: resourceValues[13]\x2C\x0d\n      voluntaryContextSwitches: resourceValues[14]\x2C\x0d\n      involuntaryContextSwitches: resourceValues[15]\x0d\n    };\x0d\n  }\x0d\n\x0d\n\x0d\n  return {\x0d\n    _rawDebug\x2C\x0d\n    cpuUsage\x2C\x0d\n    resourceUsage\x2C\x0d\n    memoryUsage\x2C\x0d\n    kill\x2C\x0d\n    exit\x0d\n  };\x0d\n}\x0d\n\x0d\nconst replaceUnderscoresRegex = /_/g;\x0d\nconst leadingDashesRegex = /^--?/;\x0d\nconst trailingValuesRegex = /=.*$/;\x0d\n\x0d\n// This builds the initial process.allowedNodeEnvironmentFlags\x0d\n// from data in the config binding.\x0d\nfunction buildAllowedFlags() {\x0d\n  const {\x0d\n    envSettings: { kAllowedInEnvironment }\x2C\x0d\n    types: { kBoolean }\x2C\x0d\n  } = internalBinding('options');\x0d\n  const { options\x2C aliases } = require('internal/options');\x0d\n\x0d\n  const allowedNodeEnvironmentFlags = [];\x0d\n  for (const { 0: name\x2C 1: info } of options) {\x0d\n    if (info.envVarSettings === kAllowedInEnvironment) {\x0d\n      ArrayPrototypePush(allowedNodeEnvironmentFlags\x2C name);\x0d\n      if (info.type === kBoolean) {\x0d\n        const negatedName = `--no-${name.slice(2)}`;\x0d\n        ArrayPrototypePush(allowedNodeEnvironmentFlags\x2C negatedName);\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  function isAccepted(to) {\x0d\n    if (!StringPrototypeStartsWith(to\x2C '-') || to === '--') return true;\x0d\n    const recursiveExpansion = aliases.get(to);\x0d\n    if (recursiveExpansion) {\x0d\n      if (recursiveExpansion[0] === to)\x0d\n        ArrayPrototypeSplice(recursiveExpansion\x2C 0\x2C 1);\x0d\n      return ArrayPrototypeEvery(recursiveExpansion\x2C isAccepted);\x0d\n    }\x0d\n    return options.get(to).envVarSettings === kAllowedInEnvironment;\x0d\n  }\x0d\n  for (const { 0: from\x2C 1: expansion } of aliases) {\x0d\n    if (ArrayPrototypeEvery(expansion\x2C isAccepted)) {\x0d\n      let canonical = from;\x0d\n      if (StringPrototypeEndsWith(canonical\x2C '='))\x0d\n        canonical = StringPrototypeSlice(canonical\x2C 0\x2C canonical.length - 1);\x0d\n      if (StringPrototypeEndsWith(canonical\x2C ' <arg>'))\x0d\n        canonical = StringPrototypeSlice(canonical\x2C 0\x2C canonical.length - 4);\x0d\n      ArrayPrototypePush(allowedNodeEnvironmentFlags\x2C canonical);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  const trimLeadingDashes =\x0d\n    (flag) => StringPrototypeReplace(flag\x2C leadingDashesRegex\x2C '');\x0d\n\x0d\n  // Save these for comparison against flags provided to\x0d\n  // process.allowedNodeEnvironmentFlags.has() which lack leading dashes.\x0d\n  const nodeFlags = ArrayPrototypeMap(allowedNodeEnvironmentFlags\x2C\x0d\n                                      trimLeadingDashes);\x0d\n\x0d\n  class NodeEnvironmentFlagsSet extends Set {\x0d\n    constructor(array) {\x0d\n      super();\x0d\n      this[kInternal] = { array };\x0d\n    }\x0d\n\x0d\n    add() {\x0d\n      // No-op\x2C `Set` API compatible\x0d\n      return this;\x0d\n    }\x0d\n\x0d\n    delete() {\x0d\n      // No-op\x2C `Set` API compatible\x0d\n      return false;\x0d\n    }\x0d\n\x0d\n    clear() {\x0d\n      // No-op\x2C `Set` API compatible\x0d\n    }\x0d\n\x0d\n    has(key) {\x0d\n      // This will return `true` based on various possible\x0d\n      // permutations of a flag\x2C including present/missing leading\x0d\n      // dash(es) and/or underscores-for-dashes.\x0d\n      // Strips any values after `=`\x2C inclusive.\x0d\n      // TODO(addaleax): It might be more flexible to run the option parser\x0d\n      // on a dummy option set and see whether it rejects the argument or\x0d\n      // not.\x0d\n      if (typeof key === 'string') {\x0d\n        key = StringPrototypeReplace(key\x2C replaceUnderscoresRegex\x2C '-');\x0d\n        if (RegExpPrototypeExec(leadingDashesRegex\x2C key) !== null) {\x0d\n          key = StringPrototypeReplace(key\x2C trailingValuesRegex\x2C '');\x0d\n          return ArrayPrototypeIncludes(this[kInternal].array\x2C key);\x0d\n        }\x0d\n        return ArrayPrototypeIncludes(nodeFlags\x2C key);\x0d\n      }\x0d\n      return false;\x0d\n    }\x0d\n\x0d\n    entries() {\x0d\n      this[kInternal].set ??=\x0d\n        new Set(new SafeArrayIterator(this[kInternal].array));\x0d\n      return SetPrototypeEntries(this[kInternal].set);\x0d\n    }\x0d\n\x0d\n    forEach(callback\x2C thisArg = undefined) {\x0d\n      ArrayPrototypeForEach(\x0d\n        this[kInternal].array\x2C\x0d\n        (v) => ReflectApply(callback\x2C thisArg\x2C [v\x2C v\x2C this])\x0d\n      );\x0d\n    }\x0d\n\x0d\n    get size() {\x0d\n      return this[kInternal].array.length;\x0d\n    }\x0d\n\x0d\n    values() {\x0d\n      this[kInternal].set ??=\x0d\n        new Set(new SafeArrayIterator(this[kInternal].array));\x0d\n      return SetPrototypeValues(this[kInternal].set);\x0d\n    }\x0d\n  }\x0d\n  const flagSetValues = NodeEnvironmentFlagsSet.prototype.values;\x0d\n  ObjectDefineProperty(NodeEnvironmentFlagsSet.prototype\x2C SymbolIterator\x2C {\x0d\n    __proto__: null\x2C\x0d\n    value: flagSetValues\x2C\x0d\n  });\x0d\n  ObjectDefineProperty(NodeEnvironmentFlagsSet.prototype\x2C 'keys'\x2C {\x0d\n    __proto__: null\x2C\x0d\n    value: flagSetValues\x2C\x0d\n  });\x0d\n\x0d\n  ObjectFreeze(NodeEnvironmentFlagsSet.prototype.constructor);\x0d\n  ObjectFreeze(NodeEnvironmentFlagsSet.prototype);\x0d\n\x0d\n  return ObjectFreeze(new NodeEnvironmentFlagsSet(\x0d\n    allowedNodeEnvironmentFlags\x0d\n  ));\x0d\n}\x0d\n\x0d\n// Lazy load internal/trace_events_async_hooks only if the async_hooks\x0d\n// trace event category is enabled.\x0d\nlet traceEventsAsyncHook;\x0d\n// Dynamically enable/disable the traceEventsAsyncHook\x0d\nfunction toggleTraceCategoryState(asyncHooksEnabled) {\x0d\n  if (asyncHooksEnabled) {\x0d\n    if (!traceEventsAsyncHook) {\x0d\n      traceEventsAsyncHook =\x0d\n        require('internal/trace_events_async_hooks').createHook();\x0d\n    }\x0d\n    traceEventsAsyncHook.enable();\x0d\n  } else if (traceEventsAsyncHook) {\x0d\n    traceEventsAsyncHook.disable();\x0d\n  }\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  toggleTraceCategoryState\x2C\x0d\n  assert\x2C\x0d\n  buildAllowedFlags\x2C\x0d\n  wrapProcessMethods\x2C\x0d\n  hrtime\x2C\x0d\n  hrtimeBigInt\x2C\x0d\n  refreshHrtimeBuffer\x2C\x0d\n};\x0d\n
code-source-info,0x14dbcb88620,37,11761,12068,C0O11786C4O11816C10O11852C16O11884C21O11928C26O11929C33O11873C39O11955C44O11976C49O11976C55O11996C61O12029C66O12050C71O12050C76O12067,,
code-creation,LazyCompile,10,278174,0x14dbcb894f0,42,setupPerfHooks node:internal/process/pre_execution:388:24,0xb505336fa0,~
code-source-info,0x14dbcb894f0,439,12164,12287,C0O12172C6O12172C11O12208C16O12209C20O12233C26O12233C31O12263C36O12264C41O12286,,
new,MemoryChunk,0x7ff6a66c0000,262144
code-creation,Function,11,278414,0x7ff6a66c3080,628,requireBuiltin node:internal/bootstrap/loaders:356:24,0x1f81b719798,^
script-source,15,node:internal/bootstrap/loaders,// This file creates the internal module & binding loaders used by built-in\x0d\n// modules. In contrast\x2C user land modules are loaded using\x0d\n// lib/internal/modules/cjs/loader.js (CommonJS Modules) or\x0d\n// lib/internal/modules/esm/* (ES Modules).\x0d\n//\x0d\n// This file is compiled and run by node.cc before bootstrap/node.js\x0d\n// was called\x2C therefore the loaders are bootstrapped before we start to\x0d\n// actually bootstrap Node.js. It creates the following objects:\x0d\n//\x0d\n// C++ binding loaders:\x0d\n// - process.binding(): the legacy C++ binding loader\x2C accessible from user land\x0d\n//   because it is an object attached to the global process object.\x0d\n//   These C++ bindings are created using NODE_BUILTIN_MODULE_CONTEXT_AWARE()\x0d\n//   and have their nm_flags set to NM_F_BUILTIN. We do not make any guarantees\x0d\n//   about the stability of these bindings\x2C but still have to take care of\x0d\n//   compatibility issues caused by them from time to time.\x0d\n// - process._linkedBinding(): intended to be used by embedders to add\x0d\n//   additional C++ bindings in their applications. These C++ bindings\x0d\n//   can be created using NODE_MODULE_CONTEXT_AWARE_CPP() with the flag\x0d\n//   NM_F_LINKED.\x0d\n// - internalBinding(): the private internal C++ binding loader\x2C inaccessible\x0d\n//   from user land unless through `require('internal/test/binding')`.\x0d\n//   These C++ bindings are created using NODE_MODULE_CONTEXT_AWARE_INTERNAL()\x0d\n//   and have their nm_flags set to NM_F_INTERNAL.\x0d\n//\x0d\n// Internal JavaScript module loader:\x0d\n// - BuiltinModule: a minimal module system used to load the JavaScript core\x0d\n//   modules found in lib/**/*.js and deps/**/*.js. All core modules are\x0d\n//   compiled into the node binary via node_javascript.cc generated by js2c.py\x2C\x0d\n//   so they can be loaded faster without the cost of I/O. This class makes the\x0d\n//   lib/internal/*\x2C deps/internal/* modules and internalBinding() available by\x0d\n//   default to core modules\x2C and lets the core modules require itself via\x0d\n//   require('internal/bootstrap/loaders') even when this file is not written in\x0d\n//   CommonJS style.\x0d\n//\x0d\n// Other objects:\x0d\n// - process.moduleLoadList: an array recording the bindings and the modules\x0d\n//   loaded in the process and the order in which they are loaded.\x0d\n\x0d\n'use strict';\x0d\n\x0d\n// This file is compiled as if it's wrapped in a function with arguments\x0d\n// passed by node::RunBootstrapping()\x0d\n/* global process\x2C getLinkedBinding\x2C getInternalBinding\x2C primordials */\x0d\n\x0d\nconst {\x0d\n  ArrayFrom\x2C\x0d\n  ArrayPrototypeMap\x2C\x0d\n  ArrayPrototypePush\x2C\x0d\n  ArrayPrototypeSlice\x2C\x0d\n  Error\x2C\x0d\n  ObjectCreate\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectKeys\x2C\x0d\n  ObjectPrototypeHasOwnProperty\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  ReflectGet\x2C\x0d\n  SafeMap\x2C\x0d\n  SafeSet\x2C\x0d\n  String\x2C\x0d\n  StringPrototypeStartsWith\x2C\x0d\n  TypeError\x2C\x0d\n} = primordials;\x0d\n\x0d\n// Set up process.moduleLoadList.\x0d\nconst moduleLoadList = [];\x0d\nObjectDefineProperty(process\x2C 'moduleLoadList'\x2C {\x0d\n  __proto__: null\x2C\x0d\n  value: moduleLoadList\x2C\x0d\n  configurable: true\x2C\x0d\n  enumerable: true\x2C\x0d\n  writable: false\x0d\n});\x0d\n\x0d\n\x0d\n// internalBindingAllowlist contains the name of internalBinding modules\x0d\n// that are allowed for access via process.binding()... This is used\x0d\n// to provide a transition path for modules that are being moved over to\x0d\n// internalBinding.\x0d\nconst internalBindingAllowlist = new SafeSet([\x0d\n  'async_wrap'\x2C\x0d\n  'buffer'\x2C\x0d\n  'cares_wrap'\x2C\x0d\n  'config'\x2C\x0d\n  'constants'\x2C\x0d\n  'contextify'\x2C\x0d\n  'crypto'\x2C\x0d\n  'fs'\x2C\x0d\n  'fs_event_wrap'\x2C\x0d\n  'http_parser'\x2C\x0d\n  'icu'\x2C\x0d\n  'inspector'\x2C\x0d\n  'js_stream'\x2C\x0d\n  'natives'\x2C\x0d\n  'os'\x2C\x0d\n  'pipe_wrap'\x2C\x0d\n  'process_wrap'\x2C\x0d\n  'signal_wrap'\x2C\x0d\n  'spawn_sync'\x2C\x0d\n  'stream_wrap'\x2C\x0d\n  'tcp_wrap'\x2C\x0d\n  'tls_wrap'\x2C\x0d\n  'tty_wrap'\x2C\x0d\n  'udp_wrap'\x2C\x0d\n  'url'\x2C\x0d\n  'util'\x2C\x0d\n  'uv'\x2C\x0d\n  'v8'\x2C\x0d\n  'zlib'\x2C\x0d\n]);\x0d\n\x0d\nconst runtimeDeprecatedList = new SafeSet([\x0d\n  'async_wrap'\x2C\x0d\n  'crypto'\x2C\x0d\n  'http_parser'\x2C\x0d\n  'signal_wrap'\x2C\x0d\n  'url'\x2C\x0d\n  'v8'\x2C\x0d\n]);\x0d\n\x0d\nconst legacyWrapperList = new SafeSet([\x0d\n  'util'\x2C\x0d\n]);\x0d\n\x0d\n// Modules that can only be imported via the node: scheme.\x0d\nconst schemelessBlockList = new SafeSet([\x0d\n  'test'\x2C\x0d\n]);\x0d\n\x0d\n// Set up process.binding() and process._linkedBinding().\x0d\n{\x0d\n  const bindingObj = ObjectCreate(null);\x0d\n\x0d\n  process.binding = function binding(module) {\x0d\n    module = String(module);\x0d\n    // Deprecated specific process.binding() modules\x2C but not all\x2C allow\x0d\n    // selective fallback to internalBinding for the deprecated ones.\x0d\n    if (internalBindingAllowlist.has(module)) {\x0d\n      if (runtimeDeprecatedList.has(module)) {\x0d\n        runtimeDeprecatedList.delete(module);\x0d\n        process.emitWarning(\x0d\n          `Access to process.binding('${module}') is deprecated.`\x2C\x0d\n          'DeprecationWarning'\x2C\x0d\n          'DEP0111');\x0d\n      }\x0d\n      if (legacyWrapperList.has(module)) {\x0d\n        return requireBuiltin('internal/legacy/processbinding')[module]();\x0d\n      }\x0d\n      return internalBinding(module);\x0d\n    }\x0d\n    // eslint-disable-next-line no-restricted-syntax\x0d\n    throw new Error(`No such module: ${module}`);\x0d\n  };\x0d\n\x0d\n  process._linkedBinding = function _linkedBinding(module) {\x0d\n    module = String(module);\x0d\n    let mod = bindingObj[module];\x0d\n    if (typeof mod !== 'object')\x0d\n      mod = bindingObj[module] = getLinkedBinding(module);\x0d\n    return mod;\x0d\n  };\x0d\n}\x0d\n\x0d\n// Set up internalBinding() in the closure.\x0d\n/**\x0d\n * @type {InternalBinding}\x0d\n */\x0d\nlet internalBinding;\x0d\n{\x0d\n  const bindingObj = ObjectCreate(null);\x0d\n  // eslint-disable-next-line no-global-assign\x0d\n  internalBinding = function internalBinding(module) {\x0d\n    let mod = bindingObj[module];\x0d\n    if (typeof mod !== 'object') {\x0d\n      mod = bindingObj[module] = getInternalBinding(module);\x0d\n      ArrayPrototypePush(moduleLoadList\x2C `Internal Binding ${module}`);\x0d\n    }\x0d\n    return mod;\x0d\n  };\x0d\n}\x0d\n\x0d\nconst loaderId = 'internal/bootstrap/loaders';\x0d\nconst {\x0d\n  builtinIds\x2C\x0d\n  compileFunction\x0d\n} = internalBinding('builtins');\x0d\n\x0d\nconst getOwn = (target\x2C property\x2C receiver) => {\x0d\n  return ObjectPrototypeHasOwnProperty(target\x2C property) ?\x0d\n    ReflectGet(target\x2C property\x2C receiver) :\x0d\n    undefined;\x0d\n};\x0d\n\x0d\n/**\x0d\n * An internal abstraction for the built-in JavaScript modules of Node.js.\x0d\n * Be careful not to expose this to user land unless --expose-internals is\x0d\n * used\x2C in which case there is no compatibility guarantee about this class.\x0d\n */\x0d\nclass BuiltinModule {\x0d\n  /**\x0d\n   * A map from the module IDs to the module instances.\x0d\n   * @type {Map<string\x2C BuiltinModule>}\x0d\n   */\x0d\n  static map = new SafeMap(\x0d\n    ArrayPrototypeMap(builtinIds\x2C (id) => [id\x2C new BuiltinModule(id)])\x0d\n  );\x0d\n\x0d\n  constructor(id) {\x0d\n    this.filename = `${id}.js`;\x0d\n    this.id = id;\x0d\n    this.canBeRequiredByUsers = !StringPrototypeStartsWith(id\x2C 'internal/');\x0d\n\x0d\n    // The CJS exports object of the module.\x0d\n    this.exports = {};\x0d\n    // States used to work around circular dependencies.\x0d\n    this.loaded = false;\x0d\n    this.loading = false;\x0d\n\x0d\n    // The following properties are used by the ESM implementation and only\x0d\n    // initialized when the built-in module is loaded by users.\x0d\n    /**\x0d\n     * The C++ ModuleWrap binding used to interface with the ESM implementation.\x0d\n     * @type {ModuleWrap|undefined}\x0d\n     */\x0d\n    this.module = undefined;\x0d\n    /**\x0d\n     * Exported names for the ESM imports.\x0d\n     * @type {string[]|undefined}\x0d\n     */\x0d\n    this.exportKeys = undefined;\x0d\n  }\x0d\n\x0d\n  // To be called during pre-execution when --expose-internals is on.\x0d\n  // Enables the user-land module loader to access internal modules.\x0d\n  static exposeInternals() {\x0d\n    for (const { 0: id\x2C 1: mod } of BuiltinModule.map) {\x0d\n      // Do not expose this to user land even with --expose-internals.\x0d\n      if (id !== loaderId) {\x0d\n        mod.canBeRequiredByUsers = true;\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  static exists(id) {\x0d\n    return BuiltinModule.map.has(id);\x0d\n  }\x0d\n\x0d\n  static canBeRequiredByUsers(id) {\x0d\n    const mod = BuiltinModule.map.get(id);\x0d\n    return mod && mod.canBeRequiredByUsers;\x0d\n  }\x0d\n\x0d\n  // Determine if a core module can be loaded without the node: prefix. This\x0d\n  // function does not validate if the module actually exists.\x0d\n  static canBeRequiredWithoutScheme(id) {\x0d\n    return !schemelessBlockList.has(id);\x0d\n  }\x0d\n\x0d\n  static getSchemeOnlyModuleNames() {\x0d\n    return ArrayFrom(schemelessBlockList);\x0d\n  }\x0d\n\x0d\n  // Used by user-land module loaders to compile and load builtins.\x0d\n  compileForPublicLoader() {\x0d\n    if (!this.canBeRequiredByUsers) {\x0d\n      // No code because this is an assertion against bugs\x0d\n      // eslint-disable-next-line no-restricted-syntax\x0d\n      throw new Error(`Should not compile ${this.id} for public use`);\x0d\n    }\x0d\n    this.compileForInternalLoader();\x0d\n    if (!this.exportKeys) {\x0d\n      // When using --expose-internals\x2C we do not want to reflect the named\x0d\n      // exports from core modules as this can trigger unnecessary getters.\x0d\n      const internal = StringPrototypeStartsWith(this.id\x2C 'internal/');\x0d\n      this.exportKeys = internal ? [] : ObjectKeys(this.exports);\x0d\n    }\x0d\n    this.getESMFacade();\x0d\n    this.syncExports();\x0d\n    return this.exports;\x0d\n  }\x0d\n\x0d\n  getESMFacade() {\x0d\n    if (this.module) return this.module;\x0d\n    const { ModuleWrap } = internalBinding('module_wrap');\x0d\n    // TODO(aduh95): move this to C++\x2C alongside the initialization of the class.\x0d\n    ObjectSetPrototypeOf(ModuleWrap.prototype\x2C null);\x0d\n    const url = `node:${this.id}`;\x0d\n    const builtin = this;\x0d\n    const exportsKeys = ArrayPrototypeSlice(this.exportKeys);\x0d\n    ArrayPrototypePush(exportsKeys\x2C 'default');\x0d\n    this.module = new ModuleWrap(\x0d\n      url\x2C undefined\x2C exportsKeys\x2C\x0d\n      function() {\x0d\n        builtin.syncExports();\x0d\n        this.setExport('default'\x2C builtin.exports);\x0d\n      });\x0d\n    // Ensure immediate sync execution to capture exports now\x0d\n    this.module.instantiate();\x0d\n    this.module.evaluate(-1\x2C false);\x0d\n    return this.module;\x0d\n  }\x0d\n\x0d\n  // Provide named exports for all builtin libraries so that the libraries\x0d\n  // may be imported in a nicer way for ESM users. The default export is left\x0d\n  // as the entire namespace (module.exports) and updates when this function is\x0d\n  // called so that APMs and other behavior are supported.\x0d\n  syncExports() {\x0d\n    const names = this.exportKeys;\x0d\n    if (this.module) {\x0d\n      for (let i = 0; i < names.length; i++) {\x0d\n        const exportName = names[i];\x0d\n        if (exportName === 'default') continue;\x0d\n        this.module.setExport(exportName\x2C\x0d\n                              getOwn(this.exports\x2C exportName\x2C this.exports));\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  compileForInternalLoader() {\x0d\n    if (this.loaded || this.loading) {\x0d\n      return this.exports;\x0d\n    }\x0d\n\x0d\n    const id = this.id;\x0d\n    this.loading = true;\x0d\n\x0d\n    try {\x0d\n      const requireFn = StringPrototypeStartsWith(this.id\x2C 'internal/deps/') ?\x0d\n        requireWithFallbackInDeps : requireBuiltin;\x0d\n\x0d\n      const fn = compileFunction(id);\x0d\n      // Arguments must match the parameters specified in\x0d\n      // BuiltinLoader::LookupAndCompile().\x0d\n      fn(this.exports\x2C requireFn\x2C this\x2C process\x2C internalBinding\x2C primordials);\x0d\n\x0d\n      this.loaded = true;\x0d\n    } finally {\x0d\n      this.loading = false;\x0d\n    }\x0d\n\x0d\n    // "NativeModule" is a legacy name of "BuiltinModule". We keep it\x0d\n    // here to avoid breaking users who parse process.moduleLoadList.\x0d\n    ArrayPrototypePush(moduleLoadList\x2C `NativeModule ${id}`);\x0d\n    return this.exports;\x0d\n  }\x0d\n}\x0d\n\x0d\n// Think of this as module.exports in this file even though it is not\x0d\n// written in CommonJS style.\x0d\nconst loaderExports = {\x0d\n  internalBinding\x2C\x0d\n  BuiltinModule\x2C\x0d\n  require: requireBuiltin\x0d\n};\x0d\n\x0d\nfunction requireBuiltin(id) {\x0d\n  if (id === loaderId) {\x0d\n    return loaderExports;\x0d\n  }\x0d\n\x0d\n  const mod = BuiltinModule.map.get(id);\x0d\n  // Can't load the internal errors module from here\x2C have to use a raw error.\x0d\n  // eslint-disable-next-line no-restricted-syntax\x0d\n  if (!mod) throw new TypeError(`Missing internal module '${id}'`);\x0d\n  return mod.compileForInternalLoader();\x0d\n}\x0d\n\x0d\n// Allow internal modules from dependencies to require\x0d\n// other modules from dependencies by providing fallbacks.\x0d\nfunction requireWithFallbackInDeps(request) {\x0d\n  if (!BuiltinModule.map.has(request)) {\x0d\n    request = `internal/deps/${request}`;\x0d\n  }\x0d\n  return requireBuiltin(request);\x0d\n}\x0d\n\x0d\n// Pass the exports back to C++ land for C++ internals to use.\x0d\nreturn loaderExports;\x0d\n
code-source-info,0x7ff6a66c3080,15,11507,11861,,,
code-creation,Function,11,279257,0x7ff6a66c3380,204,isPathSeparator node:path:52:25,0x2dbe93daaa0,^
code-source-info,0x7ff6a66c3380,73,1794,1876,,,
code-creation,Function,11,279328,0x7ff6a66c3500,3008,normalizeString node:path:66:25,0x2dbe93dad78,^
code-source-info,0x7ff6a66c3500,73,2226,4212,,,
code-creation,Function,11,279365,0x7ff6a66c4140,556,getOptionValue node:internal/options:44:24,0x914792d7c0,^
code-source-info,0x7ff6a66c4140,87,1028,1278,,,
code-creation,LazyCompile,10,279475,0x14dbcb8a4c8,42,refreshTimeOrigin node:internal/perf/performance:227:27,0x3893bce5318,~
script-source,118,node:internal/perf/performance,'use strict';\x0d\n\x0d\nconst {\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectDefineProperties\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  codes: {\x0d\n    ERR_ILLEGAL_CONSTRUCTOR\x2C\x0d\n    ERR_MISSING_ARGS\x0d\n  }\x0d\n} = require('internal/errors');\x0d\n\x0d\nconst {\x0d\n  EventTarget\x2C\x0d\n  Event\x2C\x0d\n  kTrustEvent\x2C\x0d\n} = require('internal/event_target');\x0d\n\x0d\nconst { now } = require('internal/perf/utils');\x0d\n\x0d\nconst { markResourceTiming } = require('internal/perf/resource_timing');\x0d\n\x0d\nconst {\x0d\n  mark\x2C\x0d\n  measure\x2C\x0d\n  clearMarkTimings\x2C\x0d\n} = require('internal/perf/usertiming');\x0d\nconst {\x0d\n  clearEntriesFromBuffer\x2C\x0d\n  filterBufferMapByNameAndType\x2C\x0d\n  setResourceTimingBufferSize\x2C\x0d\n  setDispatchBufferFull\x2C\x0d\n} = require('internal/perf/observe');\x0d\n\x0d\nconst eventLoopUtilization = require('internal/perf/event_loop_utilization');\x0d\nconst nodeTiming = require('internal/perf/nodetiming');\x0d\nconst timerify = require('internal/perf/timerify');\x0d\nconst { customInspectSymbol: kInspect } = require('internal/util');\x0d\nconst { inspect } = require('util');\x0d\n\x0d\nconst {\x0d\n  getTimeOriginTimestamp\x0d\n} = internalBinding('performance');\x0d\n\x0d\nclass Performance extends EventTarget {\x0d\n  constructor() {\x0d\n    throw new ERR_ILLEGAL_CONSTRUCTOR();\x0d\n  }\x0d\n\x0d\n  [kInspect](depth\x2C options) {\x0d\n    if (depth < 0) return this;\x0d\n\x0d\n    const opts = {\x0d\n      ...options\x2C\x0d\n      depth: options.depth == null ? null : options.depth - 1\x0d\n    };\x0d\n\x0d\n    return `Performance ${inspect({\x0d\n      nodeTiming: this.nodeTiming\x2C\x0d\n      timeOrigin: this.timeOrigin\x2C\x0d\n    }\x2C opts)}`;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction toJSON() {\x0d\n  return {\x0d\n    nodeTiming: this.nodeTiming\x2C\x0d\n    timeOrigin: this.timeOrigin\x2C\x0d\n    eventLoopUtilization: this.eventLoopUtilization()\x0d\n  };\x0d\n}\x0d\n\x0d\nfunction clearMarks(name) {\x0d\n  if (name !== undefined) {\x0d\n    name = `${name}`;\x0d\n  }\x0d\n  clearMarkTimings(name);\x0d\n  clearEntriesFromBuffer('mark'\x2C name);\x0d\n}\x0d\n\x0d\nfunction clearMeasures(name) {\x0d\n  if (name !== undefined) {\x0d\n    name = `${name}`;\x0d\n  }\x0d\n  clearEntriesFromBuffer('measure'\x2C name);\x0d\n}\x0d\n\x0d\nfunction clearResourceTimings(name) {\x0d\n  if (name !== undefined) {\x0d\n    name = `${name}`;\x0d\n  }\x0d\n  clearEntriesFromBuffer('resource'\x2C name);\x0d\n}\x0d\n\x0d\nfunction getEntries() {\x0d\n  return filterBufferMapByNameAndType();\x0d\n}\x0d\n\x0d\nfunction getEntriesByName(name) {\x0d\n  if (arguments.length === 0) {\x0d\n    throw new ERR_MISSING_ARGS('name');\x0d\n  }\x0d\n  name = `${name}`;\x0d\n  return filterBufferMapByNameAndType(name\x2C undefined);\x0d\n}\x0d\n\x0d\nfunction getEntriesByType(type) {\x0d\n  if (arguments.length === 0) {\x0d\n    throw new ERR_MISSING_ARGS('type');\x0d\n  }\x0d\n  type = `${type}`;\x0d\n  return filterBufferMapByNameAndType(undefined\x2C type);\x0d\n}\x0d\n\x0d\nclass InternalPerformance extends EventTarget {}\x0d\nInternalPerformance.prototype.constructor = Performance.prototype.constructor;\x0d\nObjectSetPrototypeOf(InternalPerformance.prototype\x2C Performance.prototype);\x0d\n\x0d\nObjectDefineProperties(Performance.prototype\x2C {\x0d\n  clearMarks: {\x0d\n    __proto__: null\x2C\x0d\n    configurable: true\x2C\x0d\n    enumerable: false\x2C\x0d\n    value: clearMarks\x2C\x0d\n  }\x2C\x0d\n  clearMeasures: {\x0d\n    __proto__: null\x2C\x0d\n    configurable: true\x2C\x0d\n    enumerable: false\x2C\x0d\n    value: clearMeasures\x2C\x0d\n  }\x2C\x0d\n  clearResourceTimings: {\x0d\n    __proto__: null\x2C\x0d\n    configurable: true\x2C\x0d\n    enumerable: false\x2C\x0d\n    value: clearResourceTimings\x2C\x0d\n  }\x2C\x0d\n  eventLoopUtilization: {\x0d\n    __proto__: null\x2C\x0d\n    configurable: true\x2C\x0d\n    enumerable: false\x2C\x0d\n    value: eventLoopUtilization\x2C\x0d\n  }\x2C\x0d\n  getEntries: {\x0d\n    __proto__: null\x2C\x0d\n    configurable: true\x2C\x0d\n    enumerable: false\x2C\x0d\n    value: getEntries\x2C\x0d\n  }\x2C\x0d\n  getEntriesByName: {\x0d\n    __proto__: null\x2C\x0d\n    configurable: true\x2C\x0d\n    enumerable: false\x2C\x0d\n    value: getEntriesByName\x2C\x0d\n  }\x2C\x0d\n  getEntriesByType: {\x0d\n    __proto__: null\x2C\x0d\n    configurable: true\x2C\x0d\n    enumerable: false\x2C\x0d\n    value: getEntriesByType\x2C\x0d\n  }\x2C\x0d\n  mark: {\x0d\n    __proto__: null\x2C\x0d\n    configurable: true\x2C\x0d\n    enumerable: false\x2C\x0d\n    value: mark\x2C\x0d\n  }\x2C\x0d\n  measure: {\x0d\n    __proto__: null\x2C\x0d\n    configurable: true\x2C\x0d\n    enumerable: false\x2C\x0d\n    value: measure\x2C\x0d\n  }\x2C\x0d\n  nodeTiming: {\x0d\n    __proto__: null\x2C\x0d\n    configurable: true\x2C\x0d\n    enumerable: false\x2C\x0d\n    value: nodeTiming\x2C\x0d\n  }\x2C\x0d\n  // In the browser\x2C this function is not public.  However\x2C it must be used inside fetch\x0d\n  // which is a Node.js dependency\x2C not a internal module\x0d\n  markResourceTiming: {\x0d\n    __proto__: null\x2C\x0d\n    configurable: true\x2C\x0d\n    enumerable: false\x2C\x0d\n    value: markResourceTiming\x2C\x0d\n  }\x2C\x0d\n  now: {\x0d\n    __proto__: null\x2C\x0d\n    configurable: true\x2C\x0d\n    enumerable: false\x2C\x0d\n    value: now\x2C\x0d\n  }\x2C\x0d\n  setResourceTimingBufferSize: {\x0d\n    __proto__: null\x2C\x0d\n    configurable: true\x2C\x0d\n    enumerable: false\x2C\x0d\n    value: setResourceTimingBufferSize\x0d\n  }\x2C\x0d\n  timerify: {\x0d\n    __proto__: null\x2C\x0d\n    configurable: true\x2C\x0d\n    enumerable: false\x2C\x0d\n    value: timerify\x2C\x0d\n  }\x2C\x0d\n  // This would be updated during pre-execution in case\x0d\n  // the process is launched from a snapshot.\x0d\n  // TODO(joyeecheung): we may want to warn about access to\x0d\n  // this during snapshot building.\x0d\n  timeOrigin: {\x0d\n    __proto__: null\x2C\x0d\n    configurable: true\x2C\x0d\n    enumerable: true\x2C\x0d\n    value: getTimeOriginTimestamp()\x2C\x0d\n  }\x2C\x0d\n  toJSON: {\x0d\n    __proto__: null\x2C\x0d\n    configurable: true\x2C\x0d\n    enumerable: true\x2C\x0d\n    value: toJSON\x2C\x0d\n  }\x0d\n});\x0d\n\x0d\nfunction refreshTimeOrigin() {\x0d\n  ObjectDefineProperty(Performance.prototype\x2C 'timeOrigin'\x2C {\x0d\n    __proto__: null\x2C\x0d\n    configurable: true\x2C\x0d\n    enumerable: true\x2C\x0d\n    value: getTimeOriginTimestamp()\x2C\x0d\n  });\x0d\n}\x0d\n\x0d\nconst performance = new InternalPerformance();\x0d\n\x0d\nfunction dispatchBufferFull(type) {\x0d\n  const event = new Event(type\x2C {\x0d\n    [kTrustEvent]: true\x0d\n  });\x0d\n  performance.dispatchEvent(event);\x0d\n}\x0d\nsetDispatchBufferFull(dispatchBufferFull);\x0d\n\x0d\nmodule.exports = {\x0d\n  Performance\x2C\x0d\n  performance\x2C\x0d\n  refreshTimeOrigin\x0d\n};\x0d\n
code-source-info,0x14dbcb8a4c8,118,5204,5389,C0O5212C7O5233C10O5245C25O5354C28O5354C35O5212C41O5388,,
code-creation,LazyCompile,10,280013,0x14dbcb8ae08,19,refreshTimeOrigin node:internal/perf/utils:25:27,0x113713d7f58,~
script-source,52,node:internal/perf/utils,'use strict';\x0d\n\x0d\nconst binding = internalBinding('performance');\x0d\nconst {\x0d\n  milestones\x2C\x0d\n  getTimeOrigin\x2C\x0d\n} = binding;\x0d\n\x0d\n// TODO(joyeecheung): we may want to warn about access to\x0d\n// this during snapshot building.\x0d\nlet timeOrigin = getTimeOrigin();\x0d\n\x0d\nfunction now() {\x0d\n  const hr = process.hrtime();\x0d\n  return (hr[0] * 1000 + hr[1] / 1e6) - timeOrigin;\x0d\n}\x0d\n\x0d\nfunction getMilestoneTimestamp(milestoneIdx) {\x0d\n  const ns = milestones[milestoneIdx];\x0d\n  if (ns === -1)\x0d\n    return ns;\x0d\n  return ns / 1e6 - timeOrigin;\x0d\n}\x0d\n\x0d\nfunction refreshTimeOrigin() {\x0d\n  timeOrigin = getTimeOrigin();\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  now\x2C\x0d\n  getMilestoneTimestamp\x2C\x0d\n  refreshTimeOrigin\x0d\n};\x0d\n
code-source-info,0x14dbcb8ae08,52,549,589,C0O557C5O570C11O568C18O588,,
code-creation,LazyCompile,10,280167,0x14dbcb8b078,62,setupInspectorHooks node:internal/process/pre_execution:393:29,0xb505336ff0,~
code-source-info,0x14dbcb8b078,439,12319,12885,C0O12668C6O12672C11O12697C17O12766C23O12766C28O12734C33O12749C38O12813C44O12813C49O12841C54O12842C61O12884,,
code-creation,Eval,10,280331,0x14dbcb8b418,5, node:internal/inspector_async_hook:1:1,0x14dbcb8b260,~
script-source,440,node:internal/inspector_async_hook,'use strict';\x0d\n\x0d\nlet hook;\x0d\nlet config;\x0d\n\x0d\nconst {\x0d\n  SafeSet\x2C\x0d\n} = primordials;\x0d\n\x0d\nfunction lazyHookCreation() {\x0d\n  const inspector = internalBinding('inspector');\x0d\n  const { createHook } = require('async_hooks');\x0d\n  config = internalBinding('config');\x0d\n\x0d\n  hook = createHook({\x0d\n    init(asyncId\x2C type\x2C triggerAsyncId\x2C resource) {\x0d\n    // It's difficult to tell which tasks will be recurring and which won't\x2C\x0d\n    // therefore we mark all tasks as recurring. Based on the discussion\x0d\n    // in https://github.com/nodejs/node/pull/13870#discussion_r124515293\x2C\x0d\n    // this should be fine as long as we call asyncTaskCanceled() too.\x0d\n      const recurring = true;\x0d\n      if (type === 'PROMISE')\x0d\n        this.promiseIds.add(asyncId);\x0d\n      else\x0d\n        inspector.asyncTaskScheduled(type\x2C asyncId\x2C recurring);\x0d\n    }\x2C\x0d\n\x0d\n    before(asyncId) {\x0d\n      if (this.promiseIds.has(asyncId))\x0d\n        return;\x0d\n      inspector.asyncTaskStarted(asyncId);\x0d\n    }\x2C\x0d\n\x0d\n    after(asyncId) {\x0d\n      if (this.promiseIds.has(asyncId))\x0d\n        return;\x0d\n      inspector.asyncTaskFinished(asyncId);\x0d\n    }\x2C\x0d\n\x0d\n    destroy(asyncId) {\x0d\n      if (this.promiseIds.has(asyncId))\x0d\n        return this.promiseIds.delete(asyncId);\x0d\n      inspector.asyncTaskCanceled(asyncId);\x0d\n    }\x2C\x0d\n  });\x0d\n\x0d\n  hook.promiseIds = new SafeSet();\x0d\n}\x0d\n\x0d\nfunction enable() {\x0d\n  if (hook === undefined) lazyHookCreation();\x0d\n  if (config.bits < 64) {\x0d\n    // V8 Inspector stores task ids as (void*) pointers.\x0d\n    // async_hooks store ids as 64bit numbers.\x0d\n    // As a result\x2C we cannot reliably translate async_hook ids to V8 async_task\x0d\n    // ids on 32bit platforms.\x0d\n    process.emitWarning(\x0d\n      'Warning: Async stack traces in debugger are not available ' +\x0d\n      `on ${config.bits}bit platforms. The feature is disabled.`\x2C\x0d\n      {\x0d\n        code: 'INSPECTOR_ASYNC_STACK_TRACES_NOT_AVAILABLE'\x2C\x0d\n      });\x0d\n  } else {\x0d\n    hook.enable();\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction disable() {\x0d\n  if (hook === undefined) lazyHookCreation();\x0d\n  hook.disable();\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  enable\x2C\x0d\n  disable\x0d\n};\x0d\n
code-source-info,0x14dbcb8b418,440,0,2048,C0O0C4O2048,,
code-creation,Function,10,280533,0x14dbcb8b638,79, node:internal/inspector_async_hook:1:1,0x14dbcb8b390,~
code-source-info,0x14dbcb8b638,440,0,2048,C0O0C42O21C43O21C45O32C46O32C48O54C54O2002C61O2024C67O2035C73O2017C78O2047,,
code-creation,LazyCompile,10,280707,0x14dbcb8bbc8,126,setupWarningHandler node:internal/process/pre_execution:199:29,0xb505336b58,~
code-source-info,0x14dbcb8bbc8,439,6406,6915,C0O6406C11O6472C19O6472C24O6427C30O6443C36O6512C46O6516C57O6561C62O6565C69O6582C74O6598C79O6606C90O6606C96O6737C103O6741C108O6772C120O6772C125O6914,,
code-creation,LazyCompile,10,280870,0x14dbcb8c118,202,setupFetch node:internal/process/pre_execution:220:20,0xb505336ba8,~
code-source-info,0x14dbcb8c118,439,6973,8129,C0O6973C24O6981C29O6993C34O7000C39O7010C49O7044C55O7044C61O7094C62O7101C63O7116C64O7116C66O7388C77O7404C86O7388C91O7695C102O7718C113O7747C124O7788C135O7828C146O7869C154O7695C159O8016C167O8016C172O7990C177O8053C185O8053C190O8084C195O8085C201O8128,,
code-creation,LazyCompile,10,280991,0x14dbcb8c388,5,get node:internal/bootstrap/node:174:6,0x1f81b71de60,~
script-source,16,node:internal/bootstrap/node,// Hello\x2C and welcome to hacking node.js!\x0d\n//\x0d\n// This file is invoked by `Realm::BootstrapNode()` in `src/node_realm.cc`\x2C\x0d\n// and is responsible for setting up Node.js core before main scripts\x0d\n// under `lib/internal/main/` are executed.\x0d\n//\x0d\n// By default\x2C Node.js binaries come with an embedded V8 startup snapshot\x0d\n// that is generated at build-time with a `node_mksnapshot` executable.\x0d\n// The snapshot generation code can be found in `SnapshotBuilder::Generate()`\x0d\n// from `src/node_snapshotable.cc`.\x0d\n// This snapshot captures the V8 heap initialized by scripts under\x0d\n// `lib/internal/bootstrap/`\x2C including this file. When initializing the main\x0d\n// thread\x2C Node.js deserializes the heap from the snapshot\x2C instead of actually\x0d\n// running this script and others in `lib/internal/bootstrap/`. To disable this\x0d\n// behavior\x2C pass `--no-node-snapshot` when starting the process so that\x0d\n// Node.js actually runs this script to initialize the heap.\x0d\n//\x0d\n// This script is expected not to perform any asynchronous operations itself\x0d\n// when being executed - those should be done in either\x0d\n// `lib/internal/process/pre_execution.js` or in main scripts. It should not\x0d\n// query any run-time states (e.g. command line arguments\x2C environment\x0d\n// variables) when being executed - functions in this script that are invoked\x0d\n// at a later time can\x2C however\x2C query those states lazily.\x0d\n// The majority of the code here focuses on setting up the global object and\x0d\n// the process object in a synchronous\x2C environment-independent manner.\x0d\n//\x0d\n// Scripts run before this file:\x0d\n// - `lib/internal/per_context/primordials.js`: this saves copies of JavaScript\x0d\n//   builtins that won't be affected by user land monkey-patching for internal\x0d\n//   modules to use.\x0d\n// - `lib/internal/per_context/domexception.js`: implementation of the\x0d\n//   `DOMException` class.\x0d\n// - `lib/internal/per_context/messageport.js`: JS-side components of the\x0d\n//   `MessagePort` implementation.\x0d\n// - `lib/internal/bootstrap/loaders.js`: this sets up internal binding and\x0d\n//   module loaders\x2C including `process.binding()`\x2C `process._linkedBinding()`\x2C\x0d\n//   `internalBinding()` and `BuiltinModule`.\x0d\n//\x0d\n// The initialization done in this script is included in both the main thread\x0d\n// and the worker threads. After this\x2C further initialization is done based\x0d\n// on the configuration of the Node.js instance by executing the scripts in\x0d\n// `lib/internal/bootstrap/switches/`.\x0d\n//\x0d\n// Then\x2C depending on how the Node.js instance is launched\x2C one of the main\x0d\n// scripts in `lib/internal/main` will be selected by C++ to start the actual\x0d\n// execution. They may run additional setups exported by\x0d\n// `lib/internal/process/pre_execution.js` depending on the run-time states.\x0d\n\x0d\n'use strict';\x0d\n\x0d\n// This file is compiled as if it's wrapped in a function with arguments\x0d\n// passed by `BuiltinLoader::CompileAndCall()`.\x0d\n/* global process\x2C require\x2C internalBinding\x2C primordials */\x0d\n\x0d\nsetupPrepareStackTrace();\x0d\n\x0d\nconst {\x0d\n  Array\x2C\x0d\n  ArrayPrototypeConcat\x2C\x0d\n  ArrayPrototypeFill\x2C\x0d\n  FunctionPrototypeCall\x2C\x0d\n  JSONParse\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectGetPrototypeOf\x2C\x0d\n  ObjectPreventExtensions\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  ReflectGet\x2C\x0d\n  ReflectSet\x2C\x0d\n  SymbolToStringTag\x2C\x0d\n  globalThis\x2C\x0d\n} = primordials;\x0d\nconst config = internalBinding('config');\x0d\nconst internalTimers = require('internal/timers');\x0d\nconst {\x0d\n  defineOperation\x2C\x0d\n  deprecate\x2C\x0d\n  exposeInterface\x2C\x0d\n} = require('internal/util');\x0d\nconst {\x0d\n  privateSymbols: {\x0d\n    exiting_aliased_Uint32Array\x2C\x0d\n  }\x2C\x0d\n} = internalBinding('util');\x0d\n\x0d\nsetupProcessObject();\x0d\n\x0d\nsetupGlobalProxy();\x0d\nsetupBuffer();\x0d\n\x0d\nprocess.domain = null;\x0d\n{\x0d\n  const exitingAliasedUint32Array = process[exiting_aliased_Uint32Array];\x0d\n  ObjectDefineProperty(process\x2C '_exiting'\x2C {\x0d\n    __proto__: null\x2C\x0d\n    get() {\x0d\n      return exitingAliasedUint32Array[0] === 1;\x0d\n    }\x2C\x0d\n    set(value) {\x0d\n      exitingAliasedUint32Array[0] = value ? 1 : 0;\x0d\n    }\x2C\x0d\n    enumerable: true\x2C\x0d\n    configurable: true\x2C\x0d\n  });\x0d\n}\x0d\nprocess._exiting = false;\x0d\n\x0d\n// TODO(@jasnell): Once this has gone through one full major\x0d\n// release cycle\x2C remove the Proxy and setter and update the\x0d\n// getter to either return a read-only object or always return\x0d\n// a freshly parsed version of nativeModule.config.\x0d\n\x0d\nconst deprecationHandler = {\x0d\n  warned: false\x2C\x0d\n  message: 'Setting process.config is deprecated. ' +\x0d\n           'In the future the property will be read-only.'\x2C\x0d\n  code: 'DEP0150'\x2C\x0d\n  maybeWarn() {\x0d\n    if (!this.warned) {\x0d\n      process.emitWarning(this.message\x2C {\x0d\n        type: 'DeprecationWarning'\x2C\x0d\n        code: this.code\x0d\n      });\x0d\n      this.warned = true;\x0d\n    }\x0d\n  }\x2C\x0d\n\x0d\n  defineProperty(target\x2C key\x2C descriptor) {\x0d\n    this.maybeWarn();\x0d\n    return ObjectDefineProperty(target\x2C key\x2C descriptor);\x0d\n  }\x2C\x0d\n\x0d\n  deleteProperty(target\x2C key) {\x0d\n    this.maybeWarn();\x0d\n    delete target[key];\x0d\n  }\x2C\x0d\n\x0d\n  preventExtensions(target) {\x0d\n    this.maybeWarn();\x0d\n    return ObjectPreventExtensions(target);\x0d\n  }\x2C\x0d\n\x0d\n  set(target\x2C key\x2C value) {\x0d\n    this.maybeWarn();\x0d\n    return ReflectSet(target\x2C key\x2C value);\x0d\n  }\x2C\x0d\n\x0d\n  get(target\x2C key\x2C receiver) {\x0d\n    const val = ReflectGet(target\x2C key\x2C receiver);\x0d\n    if (val != null && typeof val === 'object') {\x0d\n      // eslint-disable-next-line node-core/prefer-primordials\x0d\n      return new Proxy(val\x2C deprecationHandler);\x0d\n    }\x0d\n    return val;\x0d\n  }\x2C\x0d\n\x0d\n  setPrototypeOf(target\x2C proto) {\x0d\n    this.maybeWarn();\x0d\n    return ObjectSetPrototypeOf(target\x2C proto);\x0d\n  }\x0d\n};\x0d\n\x0d\n// process.config is serialized config.gypi\x0d\nconst binding = internalBinding('builtins');\x0d\n\x0d\n// eslint-disable-next-line node-core/prefer-primordials\x0d\nlet processConfig = new Proxy(\x0d\n  JSONParse(binding.config)\x2C\x0d\n  deprecationHandler);\x0d\n\x0d\nObjectDefineProperty(process\x2C 'config'\x2C {\x0d\n  __proto__: null\x2C\x0d\n  enumerable: true\x2C\x0d\n  configurable: true\x2C\x0d\n  get() { return processConfig; }\x2C\x0d\n  set(value) {\x0d\n    deprecationHandler.maybeWarn();\x0d\n    processConfig = value;\x0d\n  }\x0d\n});\x0d\n\x0d\nrequire('internal/worker/js_transferable').setup();\x0d\n\x0d\n// Bootstrappers for all threads\x2C including worker threads and main thread\x0d\nconst perThreadSetup = require('internal/process/per_thread');\x0d\nconst rawMethods = internalBinding('process_methods');\x0d\n\x0d\n// Set up methods on the process object for all threads\x0d\n{\x0d\n  process.dlopen = rawMethods.dlopen;\x0d\n  process.uptime = rawMethods.uptime;\x0d\n\x0d\n  // TODO(joyeecheung): either remove them or make them public\x0d\n  process._getActiveRequests = rawMethods._getActiveRequests;\x0d\n  process._getActiveHandles = rawMethods._getActiveHandles;\x0d\n\x0d\n  process.getActiveResourcesInfo = function() {\x0d\n    const timerCounts = internalTimers.getTimerCounts();\x0d\n    return ArrayPrototypeConcat(\x0d\n      rawMethods._getActiveRequestsInfo()\x2C\x0d\n      rawMethods._getActiveHandlesInfo()\x2C\x0d\n      ArrayPrototypeFill(new Array(timerCounts.timeoutCount)\x2C 'Timeout')\x2C\x0d\n      ArrayPrototypeFill(new Array(timerCounts.immediateCount)\x2C 'Immediate'));\x0d\n  };\x0d\n\x0d\n  // TODO(joyeecheung): remove these\x0d\n  process.reallyExit = rawMethods.reallyExit;\x0d\n  process._kill = rawMethods._kill;\x0d\n\x0d\n  const wrapped = perThreadSetup.wrapProcessMethods(rawMethods);\x0d\n  process._rawDebug = wrapped._rawDebug;\x0d\n  process.cpuUsage = wrapped.cpuUsage;\x0d\n  process.resourceUsage = wrapped.resourceUsage;\x0d\n  process.memoryUsage = wrapped.memoryUsage;\x0d\n  process.kill = wrapped.kill;\x0d\n  process.exit = wrapped.exit;\x0d\n\x0d\n  process.hrtime = perThreadSetup.hrtime;\x0d\n  process.hrtime.bigint = perThreadSetup.hrtimeBigInt;\x0d\n\x0d\n  process.openStdin = function() {\x0d\n    process.stdin.resume();\x0d\n    return process.stdin;\x0d\n  };\x0d\n}\x0d\n\x0d\nconst credentials = internalBinding('credentials');\x0d\nif (credentials.implementsPosixCredentials) {\x0d\n  process.getuid = credentials.getuid;\x0d\n  process.geteuid = credentials.geteuid;\x0d\n  process.getgid = credentials.getgid;\x0d\n  process.getegid = credentials.getegid;\x0d\n  process.getgroups = credentials.getgroups;\x0d\n}\x0d\n\x0d\n// Setup the callbacks that node::AsyncWrap will call when there are hooks to\x0d\n// process. They use the same functions as the JS embedder API. These callbacks\x0d\n// are setup immediately to prevent async_wrap.setupHooks() from being hijacked\x0d\n// and the cost of doing so is negligible.\x0d\nconst { nativeHooks } = require('internal/async_hooks');\x0d\ninternalBinding('async_wrap').setupHooks(nativeHooks);\x0d\n\x0d\nconst {\x0d\n  setupTaskQueue\x2C\x0d\n  queueMicrotask\x0d\n} = require('internal/process/task_queues');\x0d\n\x0d\n// Non-standard extensions:\x0d\nconst { BroadcastChannel } = require('internal/worker/io');\x0d\nexposeInterface(globalThis\x2C 'BroadcastChannel'\x2C BroadcastChannel);\x0d\n\x0d\ndefineOperation(globalThis\x2C 'queueMicrotask'\x2C queueMicrotask);\x0d\n\x0d\nconst timers = require('timers');\x0d\ndefineOperation(globalThis\x2C 'clearImmediate'\x2C timers.clearImmediate);\x0d\ndefineOperation(globalThis\x2C 'setImmediate'\x2C timers.setImmediate);\x0d\n\x0d\nconst {\x0d\n  structuredClone\x2C\x0d\n} = require('internal/structured_clone');\x0d\ndefineOperation(globalThis\x2C 'structuredClone'\x2C structuredClone);\x0d\n\x0d\n// Set the per-Environment callback that will be called\x0d\n// when the TrackingTraceStateObserver updates trace state.\x0d\n// Note that when NODE_USE_V8_PLATFORM is true\x2C the observer is\x0d\n// attached to the per-process TracingController.\x0d\nconst { setTraceCategoryStateUpdateHandler } = internalBinding('trace_events');\x0d\nsetTraceCategoryStateUpdateHandler(perThreadSetup.toggleTraceCategoryState);\x0d\n\x0d\n// process.allowedNodeEnvironmentFlags\x0d\nObjectDefineProperty(process\x2C 'allowedNodeEnvironmentFlags'\x2C {\x0d\n  __proto__: null\x2C\x0d\n  get() {\x0d\n    const flags = perThreadSetup.buildAllowedFlags();\x0d\n    process.allowedNodeEnvironmentFlags = flags;\x0d\n    return process.allowedNodeEnvironmentFlags;\x0d\n  }\x2C\x0d\n  // If the user tries to set this to another value\x2C override\x0d\n  // this completely to that value.\x0d\n  set(value) {\x0d\n    ObjectDefineProperty(this\x2C 'allowedNodeEnvironmentFlags'\x2C {\x0d\n      __proto__: null\x2C\x0d\n      value\x2C\x0d\n      configurable: true\x2C\x0d\n      enumerable: true\x2C\x0d\n      writable: true\x0d\n    });\x0d\n  }\x2C\x0d\n  enumerable: true\x2C\x0d\n  configurable: true\x0d\n});\x0d\n\x0d\n// process.assert\x0d\nprocess.assert = deprecate(\x0d\n  perThreadSetup.assert\x2C\x0d\n  'process.assert() is deprecated. Please use the `assert` module instead.'\x2C\x0d\n  'DEP0100');\x0d\n\x0d\n// TODO(joyeecheung): this property has not been well-maintained\x2C should we\x0d\n// deprecate it in favor of a better API?\x0d\nconst { isDebugBuild\x2C hasOpenSSL\x2C hasInspector } = config;\x0d\nconst features = {\x0d\n  inspector: hasInspector\x2C\x0d\n  debug: isDebugBuild\x2C\x0d\n  uv: true\x2C\x0d\n  ipv6: true\x2C  // TODO(bnoordhuis) ping libuv\x0d\n  tls_alpn: hasOpenSSL\x2C\x0d\n  tls_sni: hasOpenSSL\x2C\x0d\n  tls_ocsp: hasOpenSSL\x2C\x0d\n  tls: hasOpenSSL\x2C\x0d\n  // This needs to be dynamic because --no-node-snapshot disables the\x0d\n  // code cache even if the binary is built with embedded code cache.\x0d\n  get cached_builtins() {\x0d\n    return binding.hasCachedBuiltins();\x0d\n  }\x0d\n};\x0d\n\x0d\nObjectDefineProperty(process\x2C 'features'\x2C {\x0d\n  __proto__: null\x2C\x0d\n  enumerable: true\x2C\x0d\n  writable: false\x2C\x0d\n  configurable: false\x2C\x0d\n  value: features\x0d\n});\x0d\n\x0d\n{\x0d\n  const {\x0d\n    onGlobalUncaughtException\x2C\x0d\n    setUncaughtExceptionCaptureCallback\x2C\x0d\n    hasUncaughtExceptionCaptureCallback\x0d\n  } = require('internal/process/execution');\x0d\n\x0d\n  // For legacy reasons this is still called `_fatalException`\x2C even\x0d\n  // though it is now a global uncaught exception handler.\x0d\n  // The C++ land node::errors::TriggerUncaughtException grabs it\x0d\n  // from the process object because it has been monkey-patchable.\x0d\n  // TODO(joyeecheung): investigate whether process._fatalException\x0d\n  // can be deprecated.\x0d\n  process._fatalException = onGlobalUncaughtException;\x0d\n  process.setUncaughtExceptionCaptureCallback =\x0d\n    setUncaughtExceptionCaptureCallback;\x0d\n  process.hasUncaughtExceptionCaptureCallback =\x0d\n    hasUncaughtExceptionCaptureCallback;\x0d\n}\x0d\n\x0d\nconst { emitWarning } = require('internal/process/warning');\x0d\nprocess.emitWarning = emitWarning;\x0d\n\x0d\n// We initialize the tick callbacks and the timer callbacks last during\x0d\n// bootstrap to make sure that any operation done before this are synchronous.\x0d\n// If any ticks or timers are scheduled before this they are unlikely to work.\x0d\n{\x0d\n  const { nextTick\x2C runNextTicks } = setupTaskQueue();\x0d\n  process.nextTick = nextTick;\x0d\n  // Used to emulate a tick manually in the JS land.\x0d\n  // A better name for this function would be `runNextTicks` but\x0d\n  // it has been exposed to the process object so we keep this legacy name\x0d\n  // TODO(joyeecheung): either remove it or make it public\x0d\n  process._tickCallback = runNextTicks;\x0d\n\x0d\n  const { setupTimers } = internalBinding('timers');\x0d\n  const {\x0d\n    processImmediate\x2C\x0d\n    processTimers\x2C\x0d\n  } = internalTimers.getTimerCallbacks(runNextTicks);\x0d\n  // Sets two per-Environment callbacks that will be run from libuv:\x0d\n  // - processImmediate will be run in the callback of the per-Environment\x0d\n  //   check handle.\x0d\n  // - processTimers will be run in the callback of the per-Environment timer.\x0d\n  setupTimers(processImmediate\x2C processTimers);\x0d\n  // Note: only after this point are the timers effective\x0d\n}\x0d\n\x0d\n// Preload modules so that they are included in the builtin snapshot.\x0d\nrequire('fs');\x0d\nrequire('v8');\x0d\nrequire('vm');\x0d\nrequire('url');\x0d\nrequire('internal/options');\x0d\nif (config.hasOpenSSL) {\x0d\n  require('crypto');\x0d\n}\x0d\n\x0d\nfunction setupPrepareStackTrace() {\x0d\n  const {\x0d\n    setEnhanceStackForFatalException\x2C\x0d\n    setPrepareStackTraceCallback\x0d\n  } = internalBinding('errors');\x0d\n  const {\x0d\n    prepareStackTrace\x2C\x0d\n    fatalExceptionStackEnhancers: {\x0d\n      beforeInspector\x2C\x0d\n      afterInspector\x0d\n    }\x0d\n  } = require('internal/errors');\x0d\n  // Tell our PrepareStackTraceCallback passed to the V8 API\x0d\n  // to call prepareStackTrace().\x0d\n  setPrepareStackTraceCallback(prepareStackTrace);\x0d\n  // Set the function used to enhance the error stack for printing\x0d\n  setEnhanceStackForFatalException(beforeInspector\x2C afterInspector);\x0d\n}\x0d\n\x0d\nfunction setupProcessObject() {\x0d\n  const EventEmitter = require('events');\x0d\n  const origProcProto = ObjectGetPrototypeOf(process);\x0d\n  ObjectSetPrototypeOf(origProcProto\x2C EventEmitter.prototype);\x0d\n  FunctionPrototypeCall(EventEmitter\x2C process);\x0d\n  ObjectDefineProperty(process\x2C SymbolToStringTag\x2C {\x0d\n    __proto__: null\x2C\x0d\n    enumerable: false\x2C\x0d\n    writable: true\x2C\x0d\n    configurable: false\x2C\x0d\n    value: 'process'\x0d\n  });\x0d\n\x0d\n  // Create global.process as getters so that we have a\x0d\n  // deprecation path for these in ES Modules.\x0d\n  // See https://github.com/nodejs/node/pull/26334.\x0d\n  let _process = process;\x0d\n  ObjectDefineProperty(globalThis\x2C 'process'\x2C {\x0d\n    __proto__: null\x2C\x0d\n    get() {\x0d\n      return _process;\x0d\n    }\x2C\x0d\n    set(value) {\x0d\n      _process = value;\x0d\n    }\x2C\x0d\n    enumerable: false\x2C\x0d\n    configurable: true\x2C\x0d\n  });\x0d\n}\x0d\n\x0d\nfunction setupGlobalProxy() {\x0d\n  ObjectDefineProperty(globalThis\x2C SymbolToStringTag\x2C {\x0d\n    __proto__: null\x2C\x0d\n    value: 'global'\x2C\x0d\n    writable: false\x2C\x0d\n    enumerable: false\x2C\x0d\n    configurable: true\x0d\n  });\x0d\n  globalThis.global = globalThis;\x0d\n}\x0d\n\x0d\nfunction setupBuffer() {\x0d\n  const {\x0d\n    Buffer\x2C\x0d\n  } = require('buffer');\x0d\n  const bufferBinding = internalBinding('buffer');\x0d\n\x0d\n  // Only after this point can C++ use Buffer::New()\x0d\n  bufferBinding.setBufferPrototype(Buffer.prototype);\x0d\n  delete bufferBinding.setBufferPrototype;\x0d\n  delete bufferBinding.zeroFill;\x0d\n\x0d\n  // Create global.Buffer as getters so that we have a\x0d\n  // deprecation path for these in ES Modules.\x0d\n  // See https://github.com/nodejs/node/pull/26334.\x0d\n  let _Buffer = Buffer;\x0d\n  ObjectDefineProperty(globalThis\x2C 'Buffer'\x2C {\x0d\n    __proto__: null\x2C\x0d\n    get() {\x0d\n      return _Buffer;\x0d\n    }\x2C\x0d\n    set(value) {\x0d\n      _Buffer = value;\x0d\n    }\x2C\x0d\n    enumerable: false\x2C\x0d\n    configurable: true\x2C\x0d\n  });\x0d\n}\x0d\n
code-source-info,0x14dbcb8c388,16,5847,5875,C0O5852C4O5873,,
code-creation,LazyCompile,10,282073,0x14dbcb8d348,52,get node:internal/bootstrap/node:147:6,0x1f81b71ddc0,~
code-source-info,0x14dbcb8d348,16,5102,5373,C0O5145C14O5145C20O5185C29O5302C35O5324C43O5309C48O5344C49O5357C51O5368,,
code-creation,LazyCompile,10,282185,0x14dbcb8d5e8,33,lazyInterface node:internal/process/pre_execution:242:25,0x14dbcb8bf70,~
code-source-info,0x14dbcb8d5e8,439,7460,7689,C0O7460C9O7474C14O7543C22O7604C32O7684,,
code-creation,Eval,10,282359,0x14dbcb8dac0,5, node:internal/wasm_web_api:1:1,0x14dbcb8d918,~
script-source,441,node:internal/wasm_web_api,'use strict';\x0d\n\x0d\nconst {\x0d\n  PromiseResolve\x2C\x0d\n} = primordials;\x0d\nconst {\x0d\n  ERR_INVALID_ARG_TYPE\x2C\x0d\n  ERR_WEBASSEMBLY_RESPONSE\x2C\x0d\n} = require('internal/errors').codes;\x0d\n\x0d\nlet undici;\x0d\nfunction lazyUndici() {\x0d\n  return undici ??= require('internal/deps/undici/undici');\x0d\n}\x0d\n\x0d\n// This is essentially an implementation of a v8::WasmStreamingCallback\x2C except\x0d\n// that it is implemented in JavaScript because the fetch() implementation is\x0d\n// difficult to use from C++. See lib/internal/process/pre_execution.js and\x0d\n// src/node_wasm_web_api.cc that interact with this function.\x0d\nfunction wasmStreamingCallback(streamState\x2C source) {\x0d\n  (async () => {\x0d\n    const response = await PromiseResolve(source);\x0d\n    if (!(response instanceof lazyUndici().Response)) {\x0d\n      throw new ERR_INVALID_ARG_TYPE(\x0d\n        'source'\x2C ['Response'\x2C 'Promise resolving to Response']\x2C response);\x0d\n    }\x0d\n\x0d\n    const contentType = response.headers.get('Content-Type');\x0d\n    if (contentType !== 'application/wasm') {\x0d\n      throw new ERR_WEBASSEMBLY_RESPONSE(\x0d\n        `has unsupported MIME type '${contentType}'`);\x0d\n    }\x0d\n\x0d\n    if (!response.ok) {\x0d\n      throw new ERR_WEBASSEMBLY_RESPONSE(\x0d\n        `has status code ${response.status}`);\x0d\n    }\x0d\n\x0d\n    if (response.bodyUsed !== false) {\x0d\n      throw new ERR_WEBASSEMBLY_RESPONSE('body has already been used');\x0d\n    }\x0d\n\x0d\n    if (response.url) {\x0d\n      streamState.setURL(response.url);\x0d\n    }\x0d\n\x0d\n    // Pass all data from the response body to the WebAssembly compiler.\x0d\n    const { body } = response;\x0d\n    if (body != null) {\x0d\n      for await (const chunk of body) {\x0d\n        streamState.push(chunk);\x0d\n      }\x0d\n    }\x0d\n  })().then(() => {\x0d\n    // No error occurred. Tell the implementation that the stream has ended.\x0d\n    streamState.finish();\x0d\n  }\x2C (err) => {\x0d\n    // An error occurred\x2C either because the given object was not a valid\x0d\n    // and usable Response or because a network error occurred.\x0d\n    streamState.abort(err);\x0d\n  });\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  wasmStreamingCallback\x0d\n};\x0d\n
code-source-info,0x14dbcb8dac0,441,0,2013,C0O0C4O2013,,
code-creation,Function,10,282531,0x14dbcb8dc58,88, node:internal/wasm_web_api:1:1,0x14dbcb8da38,~
code-source-info,0x14dbcb8dc58,441,0,2013,C0O0C32O28C38O130C44O130C49O156C54O74C60O99C66O171C67O171C69O1964C76O1986C82O1979C87O2012,,
code-creation,LazyCompile,10,282724,0x14dbcb8e630,256,setupWebCrypto node:internal/process/pre_execution:269:24,0xb505336c58,~
code-source-info,0x14dbcb8e630,439,8262,9108,C0O8262C8O8270C13O8282C18O8289C23O8299C33O8334C39O8334C45O8392C46O8399C47O8414C48O8414C50O8428C61O8449C76O8517C107O8517C120O8428C125O8796C133O8800C138O8825C144O8845C158O8859C162O8855C164O8902C175O8918C184O8950C189O8902C194O8964C205O8980C214O9015C219O8964C224O9032C235O9048C244O9086C249O9032C255O9107,,
code-creation,LazyCompile,10,282845,0x14dbcb8e938,74,setupCustomEvent node:internal/process/pre_execution:293:26,0xb505336cd0,~
code-source-info,0x14dbcb8e938,439,9245,9513,C0O9253C3O9265C8O9272C13O9282C21O9317C27O9317C33O9377C34O9384C35O9417C41O9417C46O9401C51O9454C58O9470C67O9454C73O9512,,
code-creation,LazyCompile,10,282934,0x14dbcb8eb30,75,setupDebugEnv node:internal/process/pre_execution:345:23,0xb505336e38,~
code-source-info,0x14dbcb8eb30,439,10844,11060,C0O10852C6O10852C11O10885C19O10913C24O10917C29O10886C34O10933C42O10937C48O10982C54O10982C59O11019C64O11033C69O11034C74O11059,,
code-creation,LazyCompile,10,283068,0x14dbcb8eeb0,159,initializeDebugEnv node:internal/util/debuglog:22:28,0x3a8997afd18,~
script-source,28,node:internal/util/debuglog,'use strict';\x0d\n\x0d\nconst {\x0d\n  ObjectCreate\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  RegExp\x2C\x0d\n  RegExpPrototypeExec\x2C\x0d\n  SafeArrayIterator\x2C\x0d\n  StringPrototypeToLowerCase\x2C\x0d\n  StringPrototypeToUpperCase\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst { inspect\x2C format\x2C formatWithOptions } = require('internal/util/inspect');\x0d\n\x0d\n// `debugImpls` and `testEnabled` are deliberately not initialized so any call\x0d\n// to `debuglog()` before `initializeDebugEnv()` is called will throw.\x0d\nlet debugImpls;\x0d\nlet testEnabled;\x0d\n\x0d\n\x0d\n// `debugEnv` is initial value of process.env.NODE_DEBUG\x0d\nfunction initializeDebugEnv(debugEnv) {\x0d\n  debugImpls = ObjectCreate(null);\x0d\n  if (debugEnv) {\x0d\n    // This is run before any user code\x2C it's OK not to use primordials.\x0d\n    debugEnv = debugEnv.replace(/[|\\\\{}()[\\]^$+?.]/g\x2C '\\\\$&')\x0d\n      .replaceAll('*'\x2C '.*')\x0d\n      .replaceAll('\x2C'\x2C '$|^');\x0d\n    const debugEnvRegex = new RegExp(`^${debugEnv}$`\x2C 'i');\x0d\n    testEnabled = (str) => RegExpPrototypeExec(debugEnvRegex\x2C str) !== null;\x0d\n  } else {\x0d\n    testEnabled = () => false;\x0d\n  }\x0d\n}\x0d\n\x0d\n// Emits warning when user sets\x0d\n// NODE_DEBUG=http or NODE_DEBUG=http2.\x0d\nfunction emitWarningIfNeeded(set) {\x0d\n  if ('HTTP' === set || 'HTTP2' === set) {\x0d\n    process.emitWarning('Setting the NODE_DEBUG environment variable ' +\x0d\n      'to \\'' + StringPrototypeToLowerCase(set) + '\\' can expose sensitive ' +\x0d\n      'data (such as passwords\x2C tokens and authentication headers) ' +\x0d\n      'in the resulting log.');\x0d\n  }\x0d\n}\x0d\n\x0d\nconst noop = () => {};\x0d\n\x0d\nfunction debuglogImpl(enabled\x2C set) {\x0d\n  if (debugImpls[set] === undefined) {\x0d\n    if (enabled) {\x0d\n      const pid = process.pid;\x0d\n      emitWarningIfNeeded(set);\x0d\n      debugImpls[set] = function debug(...args) {\x0d\n        const colors = process.stderr.hasColors && process.stderr.hasColors();\x0d\n        const msg = formatWithOptions({ colors }\x2C ...args);\x0d\n        const coloredPID = inspect(pid\x2C { colors });\x0d\n        process.stderr.write(format('%s %s: %s\\n'\x2C set\x2C coloredPID\x2C msg));\x0d\n      };\x0d\n    } else {\x0d\n      debugImpls[set] = noop;\x0d\n    }\x0d\n  }\x0d\n  return debugImpls[set];\x0d\n}\x0d\n\x0d\n// debuglogImpl depends on process.pid and process.env.NODE_DEBUG\x2C\x0d\n// so it needs to be called lazily in top scopes of internal modules\x0d\n// that may be loaded before these run time states are allowed to\x0d\n// be accessed.\x0d\nfunction debuglog(set\x2C cb) {\x0d\n  function init() {\x0d\n    set = StringPrototypeToUpperCase(set);\x0d\n    enabled = testEnabled(set);\x0d\n  }\x0d\n  let debug = (...args) => {\x0d\n    init();\x0d\n    // Only invokes debuglogImpl() when the debug function is\x0d\n    // called for the first time.\x0d\n    debug = debuglogImpl(enabled\x2C set);\x0d\n    if (typeof cb === 'function')\x0d\n      cb(debug);\x0d\n    switch (args.length) {\x0d\n      case 1: return debug(args[0]);\x0d\n      case 2: return debug(args[0]\x2C args[1]);\x0d\n      default: return debug(...new SafeArrayIterator(args));\x0d\n    }\x0d\n  };\x0d\n  let enabled;\x0d\n  let test = () => {\x0d\n    init();\x0d\n    test = () => enabled;\x0d\n    return enabled;\x0d\n  };\x0d\n  const logger = (...args) => {\x0d\n    switch (args.length) {\x0d\n      case 1: return debug(args[0]);\x0d\n      case 2: return debug(args[0]\x2C args[1]);\x0d\n      default: return debug(...new SafeArrayIterator(args));\x0d\n    }\x0d\n  };\x0d\n  ObjectDefineProperty(logger\x2C 'enabled'\x2C {\x0d\n    __proto__: null\x2C\x0d\n    get() {\x0d\n      return test();\x0d\n    }\x2C\x0d\n    configurable: true\x2C\x0d\n    enumerable: true\x0d\n  });\x0d\n  return logger;\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  debuglog\x2C\x0d\n  initializeDebugEnv\x0d\n};\x0d\n
code-source-info,0x14dbcb8eeb0,28,567,1024,C0O583C7O596C14O594C20O619C31O734C44O734C51O779C62O780C69O809C80O810C88O861C100O876C116O861C121O861C123O900C132O912C144O990C151O1002C158O1023,,
code-creation,LazyCompile,10,283436,0x14dbcb8f558,62,initializeReport node:internal/process/pre_execution:333:26,0xb505336dc0,~
code-source-info,0x14dbcb8f558,439,10589,10818,C0O10589C8O10616C16O10616C21O10605C27O10655C42O10676C47O10772C55O10655C61O10817,,
code-creation,Eval,10,283640,0x14dbcb8fad0,5, node:internal/process/report:1:1,0x14dbcb8f8d8,~
script-source,442,node:internal/process/report,'use strict';\x0d\nconst {\x0d\n  ERR_SYNTHETIC\x0d\n} = require('internal/errors').codes;\x0d\nconst {\x0d\n  validateBoolean\x2C\x0d\n  validateObject\x2C\x0d\n  validateSignalName\x2C\x0d\n  validateString\x2C\x0d\n} = require('internal/validators');\x0d\nconst nr = internalBinding('report');\x0d\nconst {\x0d\n  JSONParse\x2C\x0d\n} = primordials;\x0d\nconst report = {\x0d\n  writeReport(file\x2C err) {\x0d\n    if (typeof file === 'object' && file !== null) {\x0d\n      err = file;\x0d\n      file = undefined;\x0d\n    } else if (file !== undefined) {\x0d\n      validateString(file\x2C 'file');\x0d\n    }\x0d\n\x0d\n    if (err === undefined) {\x0d\n      err = new ERR_SYNTHETIC();\x0d\n    } else {\x0d\n      validateObject(err\x2C 'err');\x0d\n    }\x0d\n\x0d\n    return nr.writeReport('JavaScript API'\x2C 'API'\x2C file\x2C err);\x0d\n  }\x2C\x0d\n  getReport(err) {\x0d\n    if (err === undefined)\x0d\n      err = new ERR_SYNTHETIC();\x0d\n    else\x0d\n      validateObject(err\x2C 'err');\x0d\n\x0d\n    return JSONParse(nr.getReport(err));\x0d\n  }\x2C\x0d\n  get directory() {\x0d\n    return nr.getDirectory();\x0d\n  }\x2C\x0d\n  set directory(dir) {\x0d\n    validateString(dir\x2C 'directory');\x0d\n    nr.setDirectory(dir);\x0d\n  }\x2C\x0d\n  get filename() {\x0d\n    return nr.getFilename();\x0d\n  }\x2C\x0d\n  set filename(name) {\x0d\n    validateString(name\x2C 'filename');\x0d\n    nr.setFilename(name);\x0d\n  }\x2C\x0d\n  get compact() {\x0d\n    return nr.getCompact();\x0d\n  }\x2C\x0d\n  set compact(b) {\x0d\n    validateBoolean(b\x2C 'compact');\x0d\n    nr.setCompact(b);\x0d\n  }\x2C\x0d\n  get signal() {\x0d\n    return nr.getSignal();\x0d\n  }\x2C\x0d\n  set signal(sig) {\x0d\n    validateSignalName(sig\x2C 'signal');\x0d\n    removeSignalHandler();\x0d\n    addSignalHandler(sig);\x0d\n    nr.setSignal(sig);\x0d\n  }\x2C\x0d\n  get reportOnFatalError() {\x0d\n    return nr.shouldReportOnFatalError();\x0d\n  }\x2C\x0d\n  set reportOnFatalError(trigger) {\x0d\n    validateBoolean(trigger\x2C 'trigger');\x0d\n\x0d\n    nr.setReportOnFatalError(trigger);\x0d\n  }\x2C\x0d\n  get reportOnSignal() {\x0d\n    return nr.shouldReportOnSignal();\x0d\n  }\x2C\x0d\n  set reportOnSignal(trigger) {\x0d\n    validateBoolean(trigger\x2C 'trigger');\x0d\n\x0d\n    nr.setReportOnSignal(trigger);\x0d\n    removeSignalHandler();\x0d\n    addSignalHandler();\x0d\n  }\x2C\x0d\n  get reportOnUncaughtException() {\x0d\n    return nr.shouldReportOnUncaughtException();\x0d\n  }\x2C\x0d\n  set reportOnUncaughtException(trigger) {\x0d\n    validateBoolean(trigger\x2C 'trigger');\x0d\n\x0d\n    nr.setReportOnUncaughtException(trigger);\x0d\n  }\x0d\n};\x0d\n\x0d\nfunction addSignalHandler(sig) {\x0d\n  if (nr.shouldReportOnSignal()) {\x0d\n    if (typeof sig !== 'string')\x0d\n      sig = nr.getSignal();\x0d\n\x0d\n    process.on(sig\x2C signalHandler);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction removeSignalHandler() {\x0d\n  const sig = nr.getSignal();\x0d\n\x0d\n  if (sig)\x0d\n    process.removeListener(sig\x2C signalHandler);\x0d\n}\x0d\n\x0d\nfunction signalHandler(sig) {\x0d\n  nr.writeReport(sig\x2C 'Signal'\x2C null\x2C '');\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  addSignalHandler\x2C\x0d\n  report\x0d\n};\x0d\n
code-source-info,0x14dbcb8fad0,442,0,2666,C0O0C4O2666,,
code-creation,Function,10,283879,0x14dbcb905e0,306, node:internal/process/report:1:1,0x14dbcb8fa48,~
code-source-info,0x14dbcb905e0,442,0,2666,C0O0C48O45C51O45C56O71C61O26C67O174C70O174C75O91C81O111C87O130C93O153C99O218C102O218C106O218C108O257C114O302C119O307C127O709C281O2611C288O2633C294O2654C300O2626C305O2665,,
code-creation,LazyCompile,10,284147,0x14dbcb92270,35,initializeSourceMapsHandlers node:internal/process/pre_execution:596:38,0xb505337270,~
code-source-info,0x14dbcb92270,439,19620,19876,C0O19688C6O19688C11O19636C16O19658C21O19740C26O19769C30O19850C34O19875,,
code-creation,Eval,10,284551,0x14dbcb92eb8,5, node:internal/source_map/source_map_cache:1:1,0x14dbcb92ae0,~
script-source,443,node:internal/source_map/source_map_cache,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeMap\x2C\x0d\n  JSONParse\x2C\x0d\n  ObjectCreate\x2C\x0d\n  ObjectKeys\x2C\x0d\n  ObjectGetOwnPropertyDescriptor\x2C\x0d\n  ObjectPrototypeHasOwnProperty\x2C\x0d\n  RegExpPrototypeExec\x2C\x0d\n  RegExpPrototypeSymbolSplit\x2C\x0d\n  SafeMap\x2C\x0d\n  StringPrototypeSplit\x2C\x0d\n} = primordials;\x0d\n\x0d\nfunction ObjectGetValueSafe(obj\x2C key) {\x0d\n  const desc = ObjectGetOwnPropertyDescriptor(obj\x2C key);\x0d\n  return ObjectPrototypeHasOwnProperty(desc\x2C 'value') ? desc.value : undefined;\x0d\n}\x0d\n\x0d\n// See https://sourcemaps.info/spec.html for SourceMap V3 specification.\x0d\nconst { Buffer } = require('buffer');\x0d\nlet debug = require('internal/util/debuglog').debuglog('source_map'\x2C (fn) => {\x0d\n  debug = fn;\x0d\n});\x0d\nconst fs = require('fs');\x0d\nconst { getOptionValue } = require('internal/options');\x0d\nconst { IterableWeakMap } = require('internal/util/iterable_weak_map');\x0d\nconst {\x0d\n  normalizeReferrerURL\x2C\x0d\n} = require('internal/modules/cjs/helpers');\x0d\nconst { validateBoolean } = require('internal/validators');\x0d\nconst { setMaybeCacheGeneratedSourceMap } = internalBinding('errors');\x0d\n\x0d\n// Since the CJS module cache is mutable\x2C which leads to memory leaks when\x0d\n// modules are deleted\x2C we use a WeakMap so that the source map cache will\x0d\n// be purged automatically:\x0d\nconst cjsSourceMapCache = new IterableWeakMap();\x0d\n// The esm cache is not mutable\x2C so we can use a Map without memory concerns:\x0d\nconst esmSourceMapCache = new SafeMap();\x0d\n// The generated sources is not mutable\x2C so we can use a Map without memory concerns:\x0d\nconst generatedSourceMapCache = new SafeMap();\x0d\nconst kLeadingProtocol = /^\\w+:\\/\\//;\x0d\nconst kSourceMappingURLMagicComment = /\\/[*/]#\\s+sourceMappingURL=(?<sourceMappingURL>[^\\s]+)/g;\x0d\nconst kSourceURLMagicComment = /\\/[*/]#\\s+sourceURL=(?<sourceURL>[^\\s]+)/g;\x0d\n\x0d\nconst { fileURLToPath\x2C pathToFileURL\x2C URL } = require('internal/url');\x0d\nlet SourceMap;\x0d\n\x0d\nlet sourceMapsEnabled;\x0d\nfunction getSourceMapsEnabled() {\x0d\n  if (sourceMapsEnabled === undefined) {\x0d\n    setSourceMapsEnabled(getOptionValue('--enable-source-maps'));\x0d\n  }\x0d\n  return sourceMapsEnabled;\x0d\n}\x0d\n\x0d\nfunction setSourceMapsEnabled(val) {\x0d\n  validateBoolean(val\x2C 'val');\x0d\n\x0d\n  const {\x0d\n    setSourceMapsEnabled\x2C\x0d\n    setPrepareStackTraceCallback\x0d\n  } = internalBinding('errors');\x0d\n  setSourceMapsEnabled(val);\x0d\n  if (val) {\x0d\n    const {\x0d\n      prepareStackTrace\x0d\n    } = require('internal/source_map/prepare_stack_trace');\x0d\n    setPrepareStackTraceCallback(prepareStackTrace);\x0d\n  } else if (sourceMapsEnabled !== undefined) {\x0d\n    // Reset prepare stack trace callback only when disabling source maps.\x0d\n    const {\x0d\n      prepareStackTrace\x2C\x0d\n    } = require('internal/errors');\x0d\n    setPrepareStackTraceCallback(prepareStackTrace);\x0d\n  }\x0d\n\x0d\n  sourceMapsEnabled = val;\x0d\n}\x0d\n\x0d\nfunction extractSourceURLMagicComment(content) {\x0d\n  let match;\x0d\n  let matchSourceURL;\x0d\n  // A while loop is used here to get the last occurrence of sourceURL.\x0d\n  // This is needed so that we don't match sourceURL in string literals.\x0d\n  while ((match = RegExpPrototypeExec(kSourceURLMagicComment\x2C content))) {\x0d\n    matchSourceURL = match;\x0d\n  }\x0d\n  if (matchSourceURL == null) {\x0d\n    return null;\x0d\n  }\x0d\n  let sourceURL = matchSourceURL.groups.sourceURL;\x0d\n  if (sourceURL != null && RegExpPrototypeExec(kLeadingProtocol\x2C sourceURL) === null) {\x0d\n    sourceURL = pathToFileURL(sourceURL).href;\x0d\n  }\x0d\n  return sourceURL;\x0d\n}\x0d\n\x0d\nfunction extractSourceMapURLMagicComment(content) {\x0d\n  let match;\x0d\n  let lastMatch;\x0d\n  // A while loop is used here to get the last occurrence of sourceMappingURL.\x0d\n  // This is needed so that we don't match sourceMappingURL in string literals.\x0d\n  while ((match = RegExpPrototypeExec(kSourceMappingURLMagicComment\x2C content))) {\x0d\n    lastMatch = match;\x0d\n  }\x0d\n  if (lastMatch == null) {\x0d\n    return null;\x0d\n  }\x0d\n  return lastMatch.groups.sourceMappingURL;\x0d\n}\x0d\n\x0d\nfunction maybeCacheSourceMap(filename\x2C content\x2C cjsModuleInstance\x2C isGeneratedSource\x2C sourceURL\x2C sourceMapURL) {\x0d\n  const sourceMapsEnabled = getSourceMapsEnabled();\x0d\n  if (!(process.env.NODE_V8_COVERAGE || sourceMapsEnabled)) return;\x0d\n  try {\x0d\n    filename = normalizeReferrerURL(filename);\x0d\n  } catch (err) {\x0d\n    // This is most likely an invalid filename in sourceURL of [eval]-wrapper.\x0d\n    debug(err);\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  if (sourceMapURL === undefined) {\x0d\n    sourceMapURL = extractSourceMapURLMagicComment(content);\x0d\n  }\x0d\n\x0d\n  // Bail out when there is no source map url.\x0d\n  if (typeof sourceMapURL !== 'string') {\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  if (sourceURL === undefined) {\x0d\n    sourceURL = extractSourceURLMagicComment(content);\x0d\n  }\x0d\n\x0d\n  const data = dataFromUrl(filename\x2C sourceMapURL);\x0d\n  const url = data ? null : sourceMapURL;\x0d\n  if (cjsModuleInstance) {\x0d\n    cjsSourceMapCache.set(cjsModuleInstance\x2C {\x0d\n      filename\x2C\x0d\n      lineLengths: lineLengths(content)\x2C\x0d\n      data\x2C\x0d\n      url\x2C\x0d\n      sourceURL\x2C\x0d\n    });\x0d\n  } else if (isGeneratedSource) {\x0d\n    const entry = {\x0d\n      lineLengths: lineLengths(content)\x2C\x0d\n      data\x2C\x0d\n      url\x2C\x0d\n      sourceURL\x0d\n    };\x0d\n    generatedSourceMapCache.set(filename\x2C entry);\x0d\n    if (sourceURL) {\x0d\n      generatedSourceMapCache.set(sourceURL\x2C entry);\x0d\n    }\x0d\n  } else {\x0d\n    // If there is no cjsModuleInstance and is not generated source assume we are in a\x0d\n    // "modules/esm" context.\x0d\n    const entry = {\x0d\n      lineLengths: lineLengths(content)\x2C\x0d\n      data\x2C\x0d\n      url\x2C\x0d\n      sourceURL\x2C\x0d\n    };\x0d\n    esmSourceMapCache.set(filename\x2C entry);\x0d\n    if (sourceURL) {\x0d\n      esmSourceMapCache.set(sourceURL\x2C entry);\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction maybeCacheGeneratedSourceMap(content) {\x0d\n  const sourceMapsEnabled = getSourceMapsEnabled();\x0d\n  if (!(process.env.NODE_V8_COVERAGE || sourceMapsEnabled)) return;\x0d\n\x0d\n  const sourceURL = extractSourceURLMagicComment(content);\x0d\n  if (sourceURL === null) {\x0d\n    return;\x0d\n  }\x0d\n  try {\x0d\n    maybeCacheSourceMap(sourceURL\x2C content\x2C null\x2C true\x2C sourceURL);\x0d\n  } catch (err) {\x0d\n    // This can happen if the filename is not a valid URL.\x0d\n    // If we fail to cache the source map\x2C we should not fail the whole process.\x0d\n    debug(err);\x0d\n  }\x0d\n}\x0d\nsetMaybeCacheGeneratedSourceMap(maybeCacheGeneratedSourceMap);\x0d\n\x0d\nfunction dataFromUrl(sourceURL\x2C sourceMappingURL) {\x0d\n  try {\x0d\n    const url = new URL(sourceMappingURL);\x0d\n    switch (url.protocol) {\x0d\n      case 'data:':\x0d\n        return sourceMapFromDataUrl(sourceURL\x2C url.pathname);\x0d\n      default:\x0d\n        debug(`unknown protocol ${url.protocol}`);\x0d\n        return null;\x0d\n    }\x0d\n  } catch (err) {\x0d\n    debug(err);\x0d\n    // If no scheme is present\x2C we assume we are dealing with a file path.\x0d\n    const mapURL = new URL(sourceMappingURL\x2C sourceURL).href;\x0d\n    return sourceMapFromFile(mapURL);\x0d\n  }\x0d\n}\x0d\n\x0d\n// Cache the length of each line in the file that a source map was extracted\x0d\n// from. This allows translation from byte offset V8 coverage reports\x2C\x0d\n// to line/column offset Source Map V3.\x0d\nfunction lineLengths(content) {\x0d\n  // We purposefully keep \\r as part of the line-length calculation\x2C in\x0d\n  // cases where there is a \\r\\n separator\x2C so that this can be taken into\x0d\n  // account in coverage calculations.\x0d\n  return ArrayPrototypeMap(RegExpPrototypeSymbolSplit(/\\n|\\u2028|\\u2029/\x2C content)\x2C (line) => {\x0d\n    return line.length;\x0d\n  });\x0d\n}\x0d\n\x0d\nfunction sourceMapFromFile(mapURL) {\x0d\n  try {\x0d\n    const content = fs.readFileSync(fileURLToPath(mapURL)\x2C 'utf8');\x0d\n    const data = JSONParse(content);\x0d\n    return sourcesToAbsolute(mapURL\x2C data);\x0d\n  } catch (err) {\x0d\n    debug(err);\x0d\n    return null;\x0d\n  }\x0d\n}\x0d\n\x0d\n// data:[<mediatype>][;base64]\x2C<data> see:\x0d\n// https://tools.ietf.org/html/rfc2397#section-2\x0d\nfunction sourceMapFromDataUrl(sourceURL\x2C url) {\x0d\n  const { 0: format\x2C 1: data } = StringPrototypeSplit(url\x2C '\x2C');\x0d\n  const splitFormat = StringPrototypeSplit(format\x2C ';');\x0d\n  const contentType = splitFormat[0];\x0d\n  const base64 = splitFormat[splitFormat.length - 1] === 'base64';\x0d\n  if (contentType === 'application/json') {\x0d\n    const decodedData = base64 ?\x0d\n      Buffer.from(data\x2C 'base64').toString('utf8') : data;\x0d\n    try {\x0d\n      const parsedData = JSONParse(decodedData);\x0d\n      return sourcesToAbsolute(sourceURL\x2C parsedData);\x0d\n    } catch (err) {\x0d\n      debug(err);\x0d\n      return null;\x0d\n    }\x0d\n  } else {\x0d\n    debug(`unknown content-type ${contentType}`);\x0d\n    return null;\x0d\n  }\x0d\n}\x0d\n\x0d\n// If the sources are not absolute URLs after prepending of the "sourceRoot"\x2C\x0d\n// the sources are resolved relative to the SourceMap (like resolving script\x0d\n// src in a html document).\x0d\nfunction sourcesToAbsolute(baseURL\x2C data) {\x0d\n  data.sources = data.sources.map((source) => {\x0d\n    source = (data.sourceRoot || '') + source;\x0d\n    return new URL(source\x2C baseURL).href;\x0d\n  });\x0d\n  // The sources array is now resolved to absolute URLs\x2C sourceRoot should\x0d\n  // be updated to noop.\x0d\n  data.sourceRoot = '';\x0d\n  return data;\x0d\n}\x0d\n\x0d\n// WARNING: The `sourceMapCacheToObject` and `appendCJSCache` run during\x0d\n// shutdown. In particular\x2C they also run when Workers are terminated\x2C making\x0d\n// it important that they do not call out to any user-provided code\x2C including\x0d\n// built-in prototypes that might have been tampered with.\x0d\n\x0d\n// Get serialized representation of source-map cache\x2C this is used\x0d\n// to persist a cache of source-maps to disk when NODE_V8_COVERAGE is enabled.\x0d\nfunction sourceMapCacheToObject() {\x0d\n  const obj = ObjectCreate(null);\x0d\n\x0d\n  for (const { 0: k\x2C 1: v } of esmSourceMapCache) {\x0d\n    obj[k] = v;\x0d\n  }\x0d\n\x0d\n  appendCJSCache(obj);\x0d\n\x0d\n  if (ObjectKeys(obj).length === 0) {\x0d\n    return undefined;\x0d\n  }\x0d\n  return obj;\x0d\n}\x0d\n\x0d\nfunction appendCJSCache(obj) {\x0d\n  for (const value of cjsSourceMapCache) {\x0d\n    obj[ObjectGetValueSafe(value\x2C 'filename')] = {\x0d\n      lineLengths: ObjectGetValueSafe(value\x2C 'lineLengths')\x2C\x0d\n      data: ObjectGetValueSafe(value\x2C 'data')\x2C\x0d\n      url: ObjectGetValueSafe(value\x2C 'url')\x0d\n    };\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction findSourceMap(sourceURL) {\x0d\n  if (RegExpPrototypeExec(kLeadingProtocol\x2C sourceURL) === null) {\x0d\n    sourceURL = pathToFileURL(sourceURL).href;\x0d\n  }\x0d\n  if (!SourceMap) {\x0d\n    SourceMap = require('internal/source_map/source_map').SourceMap;\x0d\n  }\x0d\n  let sourceMap = esmSourceMapCache.get(sourceURL) ?? generatedSourceMapCache.get(sourceURL);\x0d\n  if (sourceMap === undefined) {\x0d\n    for (const value of cjsSourceMapCache) {\x0d\n      const filename = ObjectGetValueSafe(value\x2C 'filename');\x0d\n      const cachedSourceURL = ObjectGetValueSafe(value\x2C 'sourceURL');\x0d\n      if (sourceURL === filename || sourceURL === cachedSourceURL) {\x0d\n        sourceMap = {\x0d\n          data: ObjectGetValueSafe(value\x2C 'data')\x0d\n        };\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n  if (sourceMap && sourceMap.data) {\x0d\n    return new SourceMap(sourceMap.data);\x0d\n  }\x0d\n  return undefined;\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  findSourceMap\x2C\x0d\n  getSourceMapsEnabled\x2C\x0d\n  setSourceMapsEnabled\x2C\x0d\n  maybeCacheSourceMap\x2C\x0d\n  sourceMapCacheToObject\x2C\x0d\n};\x0d\n
code-source-info,0x14dbcb92eb8,443,0,10757,C0O0C4O10757,,
code-creation,Function,10,285392,0x14dbcb93660,512, node:internal/source_map/source_map_cache:1:1,0x14dbcb92e30,~
code-source-info,0x14dbcb93660,443,0,10757,C0O0C182O28C188O50C194O64C200O81C206O96C212O131C218O165C224O189C230O220C235O232C241O553C247O553C252O542C258O585C264O585C269O618C282O619C288O585C290O684C296O684C300O684C302O727C308O727C313O708C319O785C325O785C330O765C335O868C341O868C346O841C352O938C358O938C363O918C369O1015C375O1015C380O979C385O1252C387O1252C392O1252C394O1381C396O1381C401O1381C403O1516C405O1516C410O1516C412O1557C416O1557C418O1609C422O1609C424O1700C428O1700C430O1794C436O1794C441O1756C447O1771C453O1786C459O1824C460O1824C462O1842C463O1842C465O6024C469O10614C476O10636C482O10654C488O10679C494O10704C500O10728C506O10629C511O10756,,
code-creation,Eval,10,285748,0x14dbcb94ac8,5, node:internal/util/iterable_weak_map:1:1,0x14dbcb94868,~
script-source,444,node:internal/util/iterable_weak_map,'use strict';\x0d\n\x0d\nconst {\x0d\n  ObjectFreeze\x2C\x0d\n  SafeFinalizationRegistry\x2C\x0d\n  SafeSet\x2C\x0d\n  SafeWeakMap\x2C\x0d\n  SafeWeakRef\x2C\x0d\n  SymbolIterator\x2C\x0d\n} = primordials;\x0d\n\x0d\n// This class is modified from the example code in the WeakRefs specification:\x0d\n// https://github.com/tc39/proposal-weakrefs\x0d\n// Licensed under ECMA's MIT-style license\x2C see:\x0d\n// https://github.com/tc39/ecma262/blob/HEAD/LICENSE.md\x0d\nclass IterableWeakMap {\x0d\n  #weakMap = new SafeWeakMap();\x0d\n  #refSet = new SafeSet();\x0d\n  #finalizationGroup = new SafeFinalizationRegistry(cleanup);\x0d\n\x0d\n  set(key\x2C value) {\x0d\n    const entry = this.#weakMap.get(key);\x0d\n    if (entry) {\x0d\n      // If there's already an entry for the object represented by "key"\x2C\x0d\n      // the value can be updated without creating a new WeakRef:\x0d\n      this.#weakMap.set(key\x2C { value\x2C ref: entry.ref });\x0d\n    } else {\x0d\n      const ref = new SafeWeakRef(key);\x0d\n      this.#weakMap.set(key\x2C { value\x2C ref });\x0d\n      this.#refSet.add(ref);\x0d\n      this.#finalizationGroup.register(key\x2C {\x0d\n        set: this.#refSet\x2C\x0d\n        ref\x0d\n      }\x2C ref);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  get(key) {\x0d\n    return this.#weakMap.get(key)?.value;\x0d\n  }\x0d\n\x0d\n  has(key) {\x0d\n    return this.#weakMap.has(key);\x0d\n  }\x0d\n\x0d\n  delete(key) {\x0d\n    const entry = this.#weakMap.get(key);\x0d\n    if (!entry) {\x0d\n      return false;\x0d\n    }\x0d\n    this.#weakMap.delete(key);\x0d\n    this.#refSet.delete(entry.ref);\x0d\n    this.#finalizationGroup.unregister(entry.ref);\x0d\n    return true;\x0d\n  }\x0d\n\x0d\n  [SymbolIterator]() {\x0d\n    const iterator = this.#refSet[SymbolIterator]();\x0d\n\x0d\n    const next = () => {\x0d\n      const result = iterator.next();\x0d\n      if (result.done) return result;\x0d\n      const key = result.value.deref();\x0d\n      if (key == null) return next();\x0d\n      const { value } = this.#weakMap.get(key);\x0d\n      return { done: false\x2C value };\x0d\n    };\x0d\n\x0d\n    return {\x0d\n      [SymbolIterator]() { return this; }\x2C\x0d\n      next\x2C\x0d\n    };\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction cleanup({ set\x2C ref }) {\x0d\n  set.delete(ref);\x0d\n}\x0d\n\x0d\nObjectFreeze(IterableWeakMap.prototype);\x0d\n\x0d\nmodule.exports = {\x0d\n  IterableWeakMap\x2C\x0d\n};\x0d\n
code-source-info,0x14dbcb94ac8,444,0,2042,C0O0C4O2042,,
code-creation,Function,10,285941,0x14dbcb95228,196, node:internal/util/iterable_weak_map:1:1,0x14dbcb94a40,~
code-source-info,0x14dbcb95228,444,0,2042,C0O0C26O28C31O45C37O74C43O86C49O102C55O118C134O1448C168O1983C173O1954C177O1998C184O2020C190O2013C195O2041,,
code-creation,Function,10,285984,0x14dbcb953a8,66,<instance_members_initializer> node:internal/util/iterable_weak_map:16:1,0x14dbcb94d50,~
code-source-info,0x14dbcb953a8,444,388,1891,C3O426C10O426C22O458C29O458C41O497C55O497C65O1891,,
tick,0x7ff726103aae,286283,1,0x7ff725a6ef10,2,0x7ff7264a2ab0,0x1f81b7195d6,0x7ff6a66c32e1,0x14dbcb937b5,0x1f81b7195f7,0x7ff6a66c32e1,0x14dbcb92276,0xb50533ac83,0xb505339468,0xb5053356e1
code-creation,Eval,10,286544,0x14dbcb95fe0,5, node:internal/modules/cjs/helpers:1:1,0x14dbcb95d18,~
script-source,445,node:internal/modules/cjs/helpers,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeForEach\x2C\x0d\n  ArrayPrototypeJoin\x2C\x0d\n  ArrayPrototypeSome\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectPrototypeHasOwnProperty\x2C\x0d\n  SafeMap\x2C\x0d\n  SafeSet\x2C\x0d\n  StringPrototypeCharCodeAt\x2C\x0d\n  StringPrototypeIncludes\x2C\x0d\n  StringPrototypeSlice\x2C\x0d\n  StringPrototypeStartsWith\x2C\x0d\n} = primordials;\x0d\nconst {\x0d\n  ERR_MANIFEST_DEPENDENCY_MISSING\x2C\x0d\n  ERR_UNKNOWN_BUILTIN_MODULE\x0d\n} = require('internal/errors').codes;\x0d\nconst { BuiltinModule } = require('internal/bootstrap/loaders');\x0d\n\x0d\nconst { validateString } = require('internal/validators');\x0d\nconst path = require('path');\x0d\nconst { pathToFileURL\x2C fileURLToPath\x2C URL } = require('internal/url');\x0d\n\x0d\nconst { getOptionValue } = require('internal/options');\x0d\nconst { setOwnProperty } = require('internal/util');\x0d\nconst userConditions = getOptionValue('--conditions');\x0d\n\x0d\nlet debug = require('internal/util/debuglog').debuglog('module'\x2C (fn) => {\x0d\n  debug = fn;\x0d\n});\x0d\n\x0d\nconst noAddons = getOptionValue('--no-addons');\x0d\nconst addonConditions = noAddons ? [] : ['node-addons'];\x0d\n\x0d\n// TODO: Use this set when resolving pkg#exports conditions in loader.js.\x0d\nconst cjsConditions = new SafeSet([\x0d\n  'require'\x2C\x0d\n  'node'\x2C\x0d\n  ...addonConditions\x2C\x0d\n  ...userConditions\x2C\x0d\n]);\x0d\n\x0d\nfunction loadBuiltinModule(filename\x2C request) {\x0d\n  const mod = BuiltinModule.map.get(filename);\x0d\n  if (mod?.canBeRequiredByUsers) {\x0d\n    debug('load built-in module %s'\x2C request);\x0d\n    // compileForPublicLoader() throws if mod.canBeRequiredByUsers is false:\x0d\n    mod.compileForPublicLoader();\x0d\n    return mod;\x0d\n  }\x0d\n}\x0d\n\x0d\n// Invoke with makeRequireFunction(module) where |module| is the Module object\x0d\n// to use as the context for the require() function.\x0d\n// Use redirects to set up a mapping from a policy and restrict dependencies\x0d\nconst urlToFileCache = new SafeMap();\x0d\nfunction makeRequireFunction(mod\x2C redirects) {\x0d\n  const Module = mod.constructor;\x0d\n\x0d\n  let require;\x0d\n  if (redirects) {\x0d\n    const id = mod.filename || mod.id;\x0d\n    const conditions = cjsConditions;\x0d\n    const { resolve\x2C reaction } = redirects;\x0d\n    require = function require(specifier) {\x0d\n      let missing = true;\x0d\n      const destination = resolve(specifier\x2C conditions);\x0d\n      if (destination === true) {\x0d\n        missing = false;\x0d\n      } else if (destination) {\x0d\n        const href = destination.href;\x0d\n        if (destination.protocol === 'node:') {\x0d\n          const specifier = destination.pathname;\x0d\n          const mod = loadBuiltinModule(specifier\x2C href);\x0d\n          if (mod && mod.canBeRequiredByUsers) {\x0d\n            return mod.exports;\x0d\n          }\x0d\n          throw new ERR_UNKNOWN_BUILTIN_MODULE(specifier);\x0d\n        } else if (destination.protocol === 'file:') {\x0d\n          let filepath;\x0d\n          if (urlToFileCache.has(href)) {\x0d\n            filepath = urlToFileCache.get(href);\x0d\n          } else {\x0d\n            filepath = fileURLToPath(destination);\x0d\n            urlToFileCache.set(href\x2C filepath);\x0d\n          }\x0d\n          return mod.require(filepath);\x0d\n        }\x0d\n      }\x0d\n      if (missing) {\x0d\n        reaction(new ERR_MANIFEST_DEPENDENCY_MISSING(\x0d\n          id\x2C\x0d\n          specifier\x2C\x0d\n          ArrayPrototypeJoin([...conditions]\x2C '\x2C ')\x0d\n        ));\x0d\n      }\x0d\n      return mod.require(specifier);\x0d\n    };\x0d\n  } else {\x0d\n    require = function require(path) {\x0d\n      return mod.require(path);\x0d\n    };\x0d\n  }\x0d\n\x0d\n  function resolve(request\x2C options) {\x0d\n    validateString(request\x2C 'request');\x0d\n    return Module._resolveFilename(request\x2C mod\x2C false\x2C options);\x0d\n  }\x0d\n\x0d\n  require.resolve = resolve;\x0d\n\x0d\n  function paths(request) {\x0d\n    validateString(request\x2C 'request');\x0d\n    return Module._resolveLookupPaths(request\x2C mod);\x0d\n  }\x0d\n\x0d\n  resolve.paths = paths;\x0d\n\x0d\n  setOwnProperty(require\x2C 'main'\x2C process.mainModule);\x0d\n\x0d\n  // Enable support to add extra extension types.\x0d\n  require.extensions = Module._extensions;\x0d\n\x0d\n  require.cache = Module._cache;\x0d\n\x0d\n  return require;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Remove byte order marker. This catches EF BB BF (the UTF-8 BOM)\x0d\n * because the buffer-to-string conversion in `fs.readFileSync()`\x0d\n * translates it to FEFF\x2C the UTF-16 BOM.\x0d\n */\x0d\nfunction stripBOM(content) {\x0d\n  if (StringPrototypeCharCodeAt(content) === 0xFEFF) {\x0d\n    content = StringPrototypeSlice(content\x2C 1);\x0d\n  }\x0d\n  return content;\x0d\n}\x0d\n\x0d\nfunction addBuiltinLibsToObject(object\x2C dummyModuleName) {\x0d\n  // Make built-in modules available directly (loaded lazily).\x0d\n  const Module = require('internal/modules/cjs/loader').Module;\x0d\n  const { builtinModules } = Module;\x0d\n\x0d\n  // To require built-in modules in user-land and ignore modules whose\x0d\n  // `canBeRequiredByUsers` is false. So we create a dummy module object and not\x0d\n  // use `require()` directly.\x0d\n  const dummyModule = new Module(dummyModuleName);\x0d\n\x0d\n  ArrayPrototypeForEach(builtinModules\x2C (name) => {\x0d\n    // Neither add underscored modules\x2C nor ones that contain slashes (e.g.\x2C\x0d\n    // 'fs/promises') or ones that are already defined.\x0d\n    if (StringPrototypeStartsWith(name\x2C '_') ||\x0d\n        StringPrototypeIncludes(name\x2C '/') ||\x0d\n        ObjectPrototypeHasOwnProperty(object\x2C name)) {\x0d\n      return;\x0d\n    }\x0d\n    // Goals of this mechanism are:\x0d\n    // - Lazy loading of built-in modules\x0d\n    // - Having all built-in modules available as non-enumerable properties\x0d\n    // - Allowing the user to re-assign these variables as if there were no\x0d\n    //   pre-existing globals with the same name.\x0d\n\x0d\n    const setReal = (val) => {\x0d\n      // Deleting the property before re-assigning it disables the\x0d\n      // getter/setter mechanism.\x0d\n      delete object[name];\x0d\n      object[name] = val;\x0d\n    };\x0d\n\x0d\n    ObjectDefineProperty(object\x2C name\x2C {\x0d\n      __proto__: null\x2C\x0d\n      get: () => {\x0d\n        const lib = dummyModule.require(name);\x0d\n\x0d\n        try {\x0d\n          // Override the current getter/setter and set up a new\x0d\n          // non-enumerable property.\x0d\n          ObjectDefineProperty(object\x2C name\x2C {\x0d\n            __proto__: null\x2C\x0d\n            get: () => lib\x2C\x0d\n            set: setReal\x2C\x0d\n            configurable: true\x2C\x0d\n            enumerable: false\x2C\x0d\n          });\x0d\n        } catch {\x0d\n          // If the property is no longer configurable\x2C ignore the error.\x0d\n        }\x0d\n\x0d\n        return lib;\x0d\n      }\x2C\x0d\n      set: setReal\x2C\x0d\n      configurable: true\x2C\x0d\n      enumerable: false\x0d\n    });\x0d\n  });\x0d\n}\x0d\n\x0d\n/**\x0d\n *\x0d\n * @param {string | URL} referrer\x0d\n * @returns {string}\x0d\n */\x0d\nfunction normalizeReferrerURL(referrer) {\x0d\n  if (typeof referrer === 'string' && path.isAbsolute(referrer)) {\x0d\n    return pathToFileURL(referrer).href;\x0d\n  }\x0d\n  return new URL(referrer).href;\x0d\n}\x0d\n\x0d\n// For error messages only - used to check if ESM syntax is in use.\x0d\nfunction hasEsmSyntax(code) {\x0d\n  debug('Checking for ESM syntax');\x0d\n  const parser = require('internal/deps/acorn/acorn/dist/acorn').Parser;\x0d\n  let root;\x0d\n  try {\x0d\n    root = parser.parse(code\x2C { sourceType: 'module'\x2C ecmaVersion: 'latest' });\x0d\n  } catch {\x0d\n    return false;\x0d\n  }\x0d\n\x0d\n  return ArrayPrototypeSome(root.body\x2C (stmt) =>\x0d\n    stmt.type === 'ExportDefaultDeclaration' ||\x0d\n    stmt.type === 'ExportNamedDeclaration' ||\x0d\n    stmt.type === 'ImportDeclaration' ||\x0d\n    stmt.type === 'ExportAllDeclaration');\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  addBuiltinLibsToObject\x2C\x0d\n  cjsConditions\x2C\x0d\n  hasEsmSyntax\x2C\x0d\n  loadBuiltinModule\x2C\x0d\n  makeRequireFunction\x2C\x0d\n  normalizeReferrerURL\x2C\x0d\n  stripBOM\x2C\x0d\n};\x0d\n
code-source-info,0x14dbcb95fe0,445,0,7287,C0O0C4O7287,,
code-creation,Function,10,287073,0x14dbcb96570,556, node:internal/modules/cjs/helpers:1:1,0x14dbcb95f58,~
code-source-info,0x14dbcb96570,445,0,7287,C0O0C107O28C113O54C119O77C125O100C131O125C137O159C142O171C147O183C153O213C159O241C165O266C171O391C177O391C182O417C187O323C193O359C199O452C205O452C210O434C216O521C222O521C227O502C233O567C239O567C243O567C245O631C251O631C256O593C262O608C268O623C274O686C280O686C285O667C290O743C296O743C301O724C307O793C310O793C315O840C321O840C326O873C339O874C345O840C347O943C350O943C355O999C366O1132C373O1177C374O1177C430O1200C485O1132C490O1132C492O1780C494O1780C499O1780C501O7117C508O7139C514O7166C520O7184C526O7201C532O7223C538O7247C544O7272C550O7132C555O7286,,
code-creation,LazyCompile,10,287360,0x14dbcb97260,16,IterableWeakMap node:internal/util/iterable_weak_map:16:1,0x14dbcb94b48,~
code-source-info,0x14dbcb97260,444,388,388,C0O388C15O388,,
code-creation,LazyCompile,10,287531,0x14dbcb97828,31,getSourceMapsEnabled node:internal/source_map/source_map_cache:51:30,0x14dbcb92f38,~
code-source-info,0x14dbcb97828,443,1891,2041,C0O1899C6O1943C11O1964C17O1964C22O1943C26O2013C30O2038,,
code-creation,LazyCompile,10,287621,0x14dbcb98428,100,setSourceMapsEnabled node:internal/source_map/source_map_cache:58:30,0x14dbcb92f88,~
code-source-info,0x14dbcb98428,443,2074,2711,C0O2085C8O2085C13O2195C19O2195C24O2132C29O2159C34O2225C38O2255C42O2313C48O2313C53O2286C58O2370C64O2429C70O2592C76O2592C81O2564C86O2625C90O2684C92O2702C99O2710,,
code-creation,LazyCompile,10,287734,0x14dbcb985a0,30,validateBoolean node:internal/validators:217:25,0x3a899792d38,~
script-source,22,node:internal/validators,/* eslint jsdoc/require-jsdoc: "error" */\x0d\n\x0d\n'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayIsArray\x2C\x0d\n  ArrayPrototypeIncludes\x2C\x0d\n  ArrayPrototypeJoin\x2C\x0d\n  ArrayPrototypeMap\x2C\x0d\n  NumberIsInteger\x2C\x0d\n  NumberIsNaN\x2C\x0d\n  NumberMAX_SAFE_INTEGER\x2C\x0d\n  NumberMIN_SAFE_INTEGER\x2C\x0d\n  NumberParseInt\x2C\x0d\n  ObjectPrototypeHasOwnProperty\x2C\x0d\n  RegExpPrototypeExec\x2C\x0d\n  String\x2C\x0d\n  StringPrototypeToUpperCase\x2C\x0d\n  StringPrototypeTrim\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  hideStackFrames\x2C\x0d\n  codes: {\x0d\n    ERR_SOCKET_BAD_PORT\x2C\x0d\n    ERR_INVALID_ARG_TYPE\x2C\x0d\n    ERR_INVALID_ARG_VALUE\x2C\x0d\n    ERR_OUT_OF_RANGE\x2C\x0d\n    ERR_UNKNOWN_SIGNAL\x2C\x0d\n  }\x0d\n} = require('internal/errors');\x0d\nconst { normalizeEncoding } = require('internal/util');\x0d\nconst {\x0d\n  isAsyncFunction\x2C\x0d\n  isArrayBufferView\x0d\n} = require('internal/util/types');\x0d\nconst { signals } = internalBinding('constants').os;\x0d\n\x0d\n/**\x0d\n * @param {*} value\x0d\n * @returns {boolean}\x0d\n */\x0d\nfunction isInt32(value) {\x0d\n  return value === (value | 0);\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {*} value\x0d\n * @returns {boolean}\x0d\n */\x0d\nfunction isUint32(value) {\x0d\n  return value === (value >>> 0);\x0d\n}\x0d\n\x0d\nconst octalReg = /^[0-7]+$/;\x0d\nconst modeDesc = 'must be a 32-bit unsigned integer or an octal string';\x0d\n\x0d\n/**\x0d\n * Parse and validate values that will be converted into mode_t (the S_*\x0d\n * constants). Only valid numbers and octal strings are allowed. They could be\x0d\n * converted to 32-bit unsigned integers or non-negative signed integers in the\x0d\n * C++ land\x2C but any value higher than 0o777 will result in platform-specific\x0d\n * behaviors.\x0d\n *\x0d\n * @param {*} value Values to be validated\x0d\n * @param {string} name Name of the argument\x0d\n * @param {number} [def] If specified\x2C will be returned for invalid values\x0d\n * @returns {number}\x0d\n */\x0d\nfunction parseFileMode(value\x2C name\x2C def) {\x0d\n  value ??= def;\x0d\n  if (typeof value === 'string') {\x0d\n    if (RegExpPrototypeExec(octalReg\x2C value) === null) {\x0d\n      throw new ERR_INVALID_ARG_VALUE(name\x2C value\x2C modeDesc);\x0d\n    }\x0d\n    value = NumberParseInt(value\x2C 8);\x0d\n  }\x0d\n\x0d\n  validateUint32(value\x2C name);\x0d\n  return value;\x0d\n}\x0d\n\x0d\n/**\x0d\n * @callback validateInteger\x0d\n * @param {*} value\x0d\n * @param {string} name\x0d\n * @param {number} [min]\x0d\n * @param {number} [max]\x0d\n * @returns {asserts value is number}\x0d\n */\x0d\n\x0d\n/** @type {validateInteger} */\x0d\nconst validateInteger = hideStackFrames(\x0d\n  (value\x2C name\x2C min = NumberMIN_SAFE_INTEGER\x2C max = NumberMAX_SAFE_INTEGER) => {\x0d\n    if (typeof value !== 'number')\x0d\n      throw new ERR_INVALID_ARG_TYPE(name\x2C 'number'\x2C value);\x0d\n    if (!NumberIsInteger(value))\x0d\n      throw new ERR_OUT_OF_RANGE(name\x2C 'an integer'\x2C value);\x0d\n    if (value < min || value > max)\x0d\n      throw new ERR_OUT_OF_RANGE(name\x2C `>= ${min} && <= ${max}`\x2C value);\x0d\n  }\x0d\n);\x0d\n\x0d\n/**\x0d\n * @callback validateInt32\x0d\n * @param {*} value\x0d\n * @param {string} name\x0d\n * @param {number} [min]\x0d\n * @param {number} [max]\x0d\n * @returns {asserts value is number}\x0d\n */\x0d\n\x0d\n/** @type {validateInt32} */\x0d\nconst validateInt32 = hideStackFrames(\x0d\n  (value\x2C name\x2C min = -2147483648\x2C max = 2147483647) => {\x0d\n    // The defaults for min and max correspond to the limits of 32-bit integers.\x0d\n    if (typeof value !== 'number') {\x0d\n      throw new ERR_INVALID_ARG_TYPE(name\x2C 'number'\x2C value);\x0d\n    }\x0d\n    if (!NumberIsInteger(value)) {\x0d\n      throw new ERR_OUT_OF_RANGE(name\x2C 'an integer'\x2C value);\x0d\n    }\x0d\n    if (value < min || value > max) {\x0d\n      throw new ERR_OUT_OF_RANGE(name\x2C `>= ${min} && <= ${max}`\x2C value);\x0d\n    }\x0d\n  }\x0d\n);\x0d\n\x0d\n/**\x0d\n * @callback validateUint32\x0d\n * @param {*} value\x0d\n * @param {string} name\x0d\n * @param {number|boolean} [positive=false]\x0d\n * @returns {asserts value is number}\x0d\n */\x0d\n\x0d\n/** @type {validateUint32} */\x0d\nconst validateUint32 = hideStackFrames((value\x2C name\x2C positive = false) => {\x0d\n  if (typeof value !== 'number') {\x0d\n    throw new ERR_INVALID_ARG_TYPE(name\x2C 'number'\x2C value);\x0d\n  }\x0d\n  if (!NumberIsInteger(value)) {\x0d\n    throw new ERR_OUT_OF_RANGE(name\x2C 'an integer'\x2C value);\x0d\n  }\x0d\n  const min = positive ? 1 : 0;\x0d\n  // 2 ** 32 === 4294967296\x0d\n  const max = 4_294_967_295;\x0d\n  if (value < min || value > max) {\x0d\n    throw new ERR_OUT_OF_RANGE(name\x2C `>= ${min} && <= ${max}`\x2C value);\x0d\n  }\x0d\n});\x0d\n\x0d\n/**\x0d\n * @callback validateString\x0d\n * @param {*} value\x0d\n * @param {string} name\x0d\n * @returns {asserts value is string}\x0d\n */\x0d\n\x0d\n/** @type {validateString} */\x0d\nfunction validateString(value\x2C name) {\x0d\n  if (typeof value !== 'string')\x0d\n    throw new ERR_INVALID_ARG_TYPE(name\x2C 'string'\x2C value);\x0d\n}\x0d\n\x0d\n/**\x0d\n * @callback validateNumber\x0d\n * @param {*} value\x0d\n * @param {string} name\x0d\n * @param {number} [min]\x0d\n * @param {number} [max]\x0d\n * @returns {asserts value is number}\x0d\n */\x0d\n\x0d\n/** @type {validateNumber} */\x0d\nfunction validateNumber(value\x2C name\x2C min = undefined\x2C max) {\x0d\n  if (typeof value !== 'number')\x0d\n    throw new ERR_INVALID_ARG_TYPE(name\x2C 'number'\x2C value);\x0d\n\x0d\n  if ((min != null && value < min) || (max != null && value > max) ||\x0d\n      ((min != null || max != null) && NumberIsNaN(value))) {\x0d\n    throw new ERR_OUT_OF_RANGE(\x0d\n      name\x2C\x0d\n      `${min != null ? `>= ${min}` : ''}${min != null && max != null ? ' && ' : ''}${max != null ? `<= ${max}` : ''}`\x2C\x0d\n      value);\x0d\n  }\x0d\n}\x0d\n\x0d\n/**\x0d\n * @callback validateOneOf\x0d\n * @template T\x0d\n * @param {T} value\x0d\n * @param {string} name\x0d\n * @param {T[]} oneOf\x0d\n */\x0d\n\x0d\n/** @type {validateOneOf} */\x0d\nconst validateOneOf = hideStackFrames((value\x2C name\x2C oneOf) => {\x0d\n  if (!ArrayPrototypeIncludes(oneOf\x2C value)) {\x0d\n    const allowed = ArrayPrototypeJoin(\x0d\n      ArrayPrototypeMap(oneOf\x2C (v) =>\x0d\n        (typeof v === 'string' ? `'${v}'` : String(v)))\x2C\x0d\n      '\x2C ');\x0d\n    const reason = 'must be one of: ' + allowed;\x0d\n    throw new ERR_INVALID_ARG_VALUE(name\x2C value\x2C reason);\x0d\n  }\x0d\n});\x0d\n\x0d\n/**\x0d\n * @callback validateBoolean\x0d\n * @param {*} value\x0d\n * @param {string} name\x0d\n * @returns {asserts value is boolean}\x0d\n */\x0d\n\x0d\n/** @type {validateBoolean} */\x0d\nfunction validateBoolean(value\x2C name) {\x0d\n  if (typeof value !== 'boolean')\x0d\n    throw new ERR_INVALID_ARG_TYPE(name\x2C 'boolean'\x2C value);\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {?object} options\x0d\n * @param {string} key\x0d\n * @param {boolean} defaultValue\x0d\n * @returns {boolean}\x0d\n */\x0d\nfunction getOwnPropertyValueOrDefault(options\x2C key\x2C defaultValue) {\x0d\n  return options == null || !ObjectPrototypeHasOwnProperty(options\x2C key) ?\x0d\n    defaultValue :\x0d\n    options[key];\x0d\n}\x0d\n\x0d\n/**\x0d\n * @callback validateObject\x0d\n * @param {*} value\x0d\n * @param {string} name\x0d\n * @param {{\x0d\n *   allowArray?: boolean\x2C\x0d\n *   allowFunction?: boolean\x2C\x0d\n *   nullable?: boolean\x0d\n * }} [options]\x0d\n */\x0d\n\x0d\n/** @type {validateObject} */\x0d\nconst validateObject = hideStackFrames(\x0d\n  (value\x2C name\x2C options = null) => {\x0d\n    const allowArray = getOwnPropertyValueOrDefault(options\x2C 'allowArray'\x2C false);\x0d\n    const allowFunction = getOwnPropertyValueOrDefault(options\x2C 'allowFunction'\x2C false);\x0d\n    const nullable = getOwnPropertyValueOrDefault(options\x2C 'nullable'\x2C false);\x0d\n    if ((!nullable && value === null) ||\x0d\n        (!allowArray && ArrayIsArray(value)) ||\x0d\n        (typeof value !== 'object' && (\x0d\n          !allowFunction || typeof value !== 'function'\x0d\n        ))) {\x0d\n      throw new ERR_INVALID_ARG_TYPE(name\x2C 'Object'\x2C value);\x0d\n    }\x0d\n  });\x0d\n\x0d\n/**\x0d\n * @callback validateDictionary - We are using the Web IDL Standard definition\x0d\n *                                of "dictionary" here\x2C which means any value\x0d\n *                                whose Type is either Undefined\x2C Null\x2C or\x0d\n *                                Object (which includes functions).\x0d\n * @param {*} value\x0d\n * @param {string} name\x0d\n * @see https://webidl.spec.whatwg.org/#es-dictionary\x0d\n * @see https://tc39.es/ecma262/#table-typeof-operator-results\x0d\n */\x0d\n\x0d\n/** @type {validateDictionary} */\x0d\nconst validateDictionary = hideStackFrames(\x0d\n  (value\x2C name) => {\x0d\n    if (value != null && typeof value !== 'object' && typeof value !== 'function') {\x0d\n      throw new ERR_INVALID_ARG_TYPE(name\x2C 'a dictionary'\x2C value);\x0d\n    }\x0d\n  });\x0d\n\x0d\n/**\x0d\n * @callback validateArray\x0d\n * @param {*} value\x0d\n * @param {string} name\x0d\n * @param {number} [minLength]\x0d\n * @returns {asserts value is any[]}\x0d\n */\x0d\n\x0d\n/** @type {validateArray} */\x0d\nconst validateArray = hideStackFrames((value\x2C name\x2C minLength = 0) => {\x0d\n  if (!ArrayIsArray(value)) {\x0d\n    throw new ERR_INVALID_ARG_TYPE(name\x2C 'Array'\x2C value);\x0d\n  }\x0d\n  if (value.length < minLength) {\x0d\n    const reason = `must be longer than ${minLength}`;\x0d\n    throw new ERR_INVALID_ARG_VALUE(name\x2C value\x2C reason);\x0d\n  }\x0d\n});\x0d\n\x0d\n/**\x0d\n * @callback validateStringArray\x0d\n * @param {*} value\x0d\n * @param {string} name\x0d\n * @returns {asserts value is string[]}\x0d\n */\x0d\n\x0d\n/** @type {validateStringArray} */\x0d\nfunction validateStringArray(value\x2C name) {\x0d\n  validateArray(value\x2C name);\x0d\n  for (let i = 0; i < value.length; i++) {\x0d\n    validateString(value[i]\x2C `${name}[${i}]`);\x0d\n  }\x0d\n}\x0d\n\x0d\n/**\x0d\n * @callback validateBooleanArray\x0d\n * @param {*} value\x0d\n * @param {string} name\x0d\n * @returns {asserts value is boolean[]}\x0d\n */\x0d\n\x0d\n/** @type {validateBooleanArray} */\x0d\nfunction validateBooleanArray(value\x2C name) {\x0d\n  validateArray(value\x2C name);\x0d\n  for (let i = 0; i < value.length; i++) {\x0d\n    validateBoolean(value[i]\x2C `${name}[${i}]`);\x0d\n  }\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {*} signal\x0d\n * @param {string} [name='signal']\x0d\n * @returns {asserts signal is keyof signals}\x0d\n */\x0d\nfunction validateSignalName(signal\x2C name = 'signal') {\x0d\n  validateString(signal\x2C name);\x0d\n\x0d\n  if (signals[signal] === undefined) {\x0d\n    if (signals[StringPrototypeToUpperCase(signal)] !== undefined) {\x0d\n      throw new ERR_UNKNOWN_SIGNAL(signal +\x0d\n                                   ' (signals must use all capital letters)');\x0d\n    }\x0d\n\x0d\n    throw new ERR_UNKNOWN_SIGNAL(signal);\x0d\n  }\x0d\n}\x0d\n\x0d\n/**\x0d\n * @callback validateBuffer\x0d\n * @param {*} buffer\x0d\n * @param {string} [name='buffer']\x0d\n * @returns {asserts buffer is ArrayBufferView}\x0d\n */\x0d\n\x0d\n/** @type {validateBuffer} */\x0d\nconst validateBuffer = hideStackFrames((buffer\x2C name = 'buffer') => {\x0d\n  if (!isArrayBufferView(buffer)) {\x0d\n    throw new ERR_INVALID_ARG_TYPE(name\x2C\x0d\n                                   ['Buffer'\x2C 'TypedArray'\x2C 'DataView']\x2C\x0d\n                                   buffer);\x0d\n  }\x0d\n});\x0d\n\x0d\n/**\x0d\n * @param {string} data\x0d\n * @param {string} encoding\x0d\n */\x0d\nfunction validateEncoding(data\x2C encoding) {\x0d\n  const normalizedEncoding = normalizeEncoding(encoding);\x0d\n  const length = data.length;\x0d\n\x0d\n  if (normalizedEncoding === 'hex' && length % 2 !== 0) {\x0d\n    throw new ERR_INVALID_ARG_VALUE('encoding'\x2C encoding\x2C\x0d\n                                    `is invalid for data of length ${length}`);\x0d\n  }\x0d\n}\x0d\n\x0d\n/**\x0d\n * Check that the port number is not NaN when coerced to a number\x2C\x0d\n * is an integer and that it falls within the legal range of port numbers.\x0d\n * @param {*} port\x0d\n * @param {string} [name='Port']\x0d\n * @param {boolean} [allowZero=true]\x0d\n * @returns {number}\x0d\n */\x0d\nfunction validatePort(port\x2C name = 'Port'\x2C allowZero = true) {\x0d\n  if ((typeof port !== 'number' && typeof port !== 'string') ||\x0d\n      (typeof port === 'string' && StringPrototypeTrim(port).length === 0) ||\x0d\n      +port !== (+port >>> 0) ||\x0d\n      port > 0xFFFF ||\x0d\n      (port === 0 && !allowZero)) {\x0d\n    throw new ERR_SOCKET_BAD_PORT(name\x2C port\x2C allowZero);\x0d\n  }\x0d\n  return port | 0;\x0d\n}\x0d\n\x0d\n/**\x0d\n * @callback validateAbortSignal\x0d\n * @param {*} signal\x0d\n * @param {string} name\x0d\n */\x0d\n\x0d\n/** @type {validateAbortSignal} */\x0d\nconst validateAbortSignal = hideStackFrames((signal\x2C name) => {\x0d\n  if (signal !== undefined &&\x0d\n      (signal === null ||\x0d\n       typeof signal !== 'object' ||\x0d\n       !('aborted' in signal))) {\x0d\n    throw new ERR_INVALID_ARG_TYPE(name\x2C 'AbortSignal'\x2C signal);\x0d\n  }\x0d\n});\x0d\n\x0d\n/**\x0d\n * @callback validateFunction\x0d\n * @param {*} value\x0d\n * @param {string} name\x0d\n * @returns {asserts value is Function}\x0d\n */\x0d\n\x0d\n/** @type {validateFunction} */\x0d\nconst validateFunction = hideStackFrames((value\x2C name) => {\x0d\n  if (typeof value !== 'function')\x0d\n    throw new ERR_INVALID_ARG_TYPE(name\x2C 'Function'\x2C value);\x0d\n});\x0d\n\x0d\n/**\x0d\n * @callback validatePlainFunction\x0d\n * @param {*} value\x0d\n * @param {string} name\x0d\n * @returns {asserts value is Function}\x0d\n */\x0d\n\x0d\n/** @type {validatePlainFunction} */\x0d\nconst validatePlainFunction = hideStackFrames((value\x2C name) => {\x0d\n  if (typeof value !== 'function' || isAsyncFunction(value))\x0d\n    throw new ERR_INVALID_ARG_TYPE(name\x2C 'Function'\x2C value);\x0d\n});\x0d\n\x0d\n/**\x0d\n * @callback validateUndefined\x0d\n * @param {*} value\x0d\n * @param {string} name\x0d\n * @returns {asserts value is undefined}\x0d\n */\x0d\n\x0d\n/** @type {validateUndefined} */\x0d\nconst validateUndefined = hideStackFrames((value\x2C name) => {\x0d\n  if (value !== undefined)\x0d\n    throw new ERR_INVALID_ARG_TYPE(name\x2C 'undefined'\x2C value);\x0d\n});\x0d\n\x0d\n/**\x0d\n * @template T\x0d\n * @param {T} value\x0d\n * @param {string} name\x0d\n * @param {T[]} union\x0d\n */\x0d\nfunction validateUnion(value\x2C name\x2C union) {\x0d\n  if (!ArrayPrototypeIncludes(union\x2C value)) {\x0d\n    throw new ERR_INVALID_ARG_TYPE(name\x2C `('${ArrayPrototypeJoin(union\x2C '|')}')`\x2C value);\x0d\n  }\x0d\n}\x0d\n\x0d\nconst linkValueRegExp = /^(?:<[^>]*>;)\\s*(?:rel=(")?[^;"]*\\1;?)\\s*(?:(?:as|anchor|title|crossorigin|disabled|fetchpriority|rel|referrerpolicy)=(")?[^;"]*\\2)?$/;\x0d\n\x0d\n/**\x0d\n * @param {any} value\x0d\n * @param {string} name\x0d\n */\x0d\nfunction validateLinkHeaderFormat(value\x2C name) {\x0d\n  if (\x0d\n    typeof value === 'undefined' ||\x0d\n    !RegExpPrototypeExec(linkValueRegExp\x2C value)\x0d\n  ) {\x0d\n    throw new ERR_INVALID_ARG_VALUE(\x0d\n      name\x2C\x0d\n      value\x2C\x0d\n      'must be an array or string of format "</styles.css>; rel=preload; as=style"'\x0d\n    );\x0d\n  }\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {any} hints\x0d\n * @return {string}\x0d\n */\x0d\nfunction validateLinkHeaderValue(hints) {\x0d\n  if (typeof hints === 'string') {\x0d\n    validateLinkHeaderFormat(hints\x2C 'hints');\x0d\n    return hints;\x0d\n  } else if (ArrayIsArray(hints)) {\x0d\n    const hintsLength = hints.length;\x0d\n    let result = '';\x0d\n\x0d\n    if (hintsLength === 0) {\x0d\n      return result;\x0d\n    }\x0d\n\x0d\n    for (let i = 0; i < hintsLength; i++) {\x0d\n      const link = hints[i];\x0d\n      validateLinkHeaderFormat(link\x2C 'hints');\x0d\n      result += link;\x0d\n\x0d\n      if (i !== hintsLength - 1) {\x0d\n        result += '\x2C ';\x0d\n      }\x0d\n    }\x0d\n\x0d\n    return result;\x0d\n  }\x0d\n\x0d\n  throw new ERR_INVALID_ARG_VALUE(\x0d\n    'hints'\x2C\x0d\n    hints\x2C\x0d\n    'must be an array or string of format "</styles.css>; rel=preload; as=style"'\x0d\n  );\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  isInt32\x2C\x0d\n  isUint32\x2C\x0d\n  parseFileMode\x2C\x0d\n  validateArray\x2C\x0d\n  validateStringArray\x2C\x0d\n  validateBooleanArray\x2C\x0d\n  validateBoolean\x2C\x0d\n  validateBuffer\x2C\x0d\n  validateDictionary\x2C\x0d\n  validateEncoding\x2C\x0d\n  validateFunction\x2C\x0d\n  validateInt32\x2C\x0d\n  validateInteger\x2C\x0d\n  validateNumber\x2C\x0d\n  validateObject\x2C\x0d\n  validateOneOf\x2C\x0d\n  validatePlainFunction\x2C\x0d\n  validatePort\x2C\x0d\n  validateSignalName\x2C\x0d\n  validateString\x2C\x0d\n  validateUint32\x2C\x0d\n  validateUndefined\x2C\x0d\n  validateUnion\x2C\x0d\n  validateAbortSignal\x2C\x0d\n  validateLinkHeaderValue\x0d\n};\x0d\n
code-source-info,0x14dbcb985a0,22,5812,5926,C0O5831C6O5868C22O5874C27O5868C29O5925,,
code-creation,LazyCompile,10,288905,0x14dbcb99c08,358,initializeDeprecations node:internal/process/pre_execution:411:32,0xb505337040,~
code-source-info,0x14dbcb99c08,439,13116,15095,C0O13146C6O13146C11O13132C16O13202C24O13202C29O13397C35O13397C40O13439C46O13439C51O13493C80O13485C108O13485C111O13829C122O13849C126O13892C137O13967C148O14059C159O14013C168O13877C177O14120C180O13847C184O13474C249O14404C255O14404C260O14383C265O14434C267O14463C278O14484C285O14630C289O14463C294O14666C298O14697C304O14733C314O14811C321O14715C326O14713C330O14900C336O14942C347O14924C352O14922C357O15094,,
code-creation,LazyCompile,10,289051,0x14dbcb99f50,53,initializeWASI node:internal/process/pre_execution:550:24,0xb505337180,~
code-source-info,0x14dbcb99f50,439,17864,18077,C0O17898C6O17898C11O17880C16O17966C21O17970C29O17970C35O17986C37O18018C43O18018C47O18011C52O18076,,
code-creation,Eval,10,289504,0x14dbcb9b318,5, node:internal/dns/utils:1:1,0x14dbcb9af40,~
script-source,446,node:internal/dns/utils,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeForEach\x2C\x0d\n  ArrayPrototypeJoin\x2C\x0d\n  ArrayPrototypeMap\x2C\x0d\n  ArrayPrototypePush\x2C\x0d\n  FunctionPrototypeBind\x2C\x0d\n  NumberParseInt\x2C\x0d\n  RegExpPrototypeExec\x2C\x0d\n  RegExpPrototypeSymbolReplace\x2C\x0d\n  ObjectCreate\x2C\x0d\n  Symbol\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst errors = require('internal/errors');\x0d\nconst { isIP } = require('internal/net');\x0d\nconst { getOptionValue } = require('internal/options');\x0d\nconst {\x0d\n  validateArray\x2C\x0d\n  validateInt32\x2C\x0d\n  validateOneOf\x2C\x0d\n  validateString\x2C\x0d\n} = require('internal/validators');\x0d\nlet binding;\x0d\nfunction lazyBinding() {\x0d\n  binding ??= internalBinding('cares_wrap');\x0d\n  return binding;\x0d\n}\x0d\nconst IANA_DNS_PORT = 53;\x0d\nconst IPv6RE = /^\\[([^[\\]]*)\\]/;\x0d\nconst addrSplitRE = /(^.+?)(?::(\\d+))?$/;\x0d\nconst {\x0d\n  ERR_DNS_SET_SERVERS_FAILED\x2C\x0d\n  ERR_INVALID_ARG_VALUE\x2C\x0d\n  ERR_INVALID_IP_ADDRESS\x2C\x0d\n} = errors.codes;\x0d\n\x0d\nconst {\x0d\n  addSerializeCallback\x2C\x0d\n  addDeserializeCallback\x2C\x0d\n  isBuildingSnapshot\x2C\x0d\n} = require('v8').startupSnapshot;\x0d\n\x0d\nfunction validateTimeout(options) {\x0d\n  const { timeout = -1 } = { ...options };\x0d\n  validateInt32(timeout\x2C 'options.timeout'\x2C -1);\x0d\n  return timeout;\x0d\n}\x0d\n\x0d\nfunction validateTries(options) {\x0d\n  const { tries = 4 } = { ...options };\x0d\n  validateInt32(tries\x2C 'options.tries'\x2C 1);\x0d\n  return tries;\x0d\n}\x0d\n\x0d\nconst kSerializeResolver = Symbol('dns:resolver:serialize');\x0d\nconst kDeserializeResolver = Symbol('dns:resolver:deserialize');\x0d\nconst kSnapshotStates = Symbol('dns:resolver:config');\x0d\nconst kInitializeHandle = Symbol('dns:resolver:initializeHandle');\x0d\nconst kSetServersInteral = Symbol('dns:resolver:setServers');\x0d\n\x0d\n// Resolver instances correspond 1:1 to c-ares channels.\x0d\n\x0d\nclass ResolverBase {\x0d\n  constructor(options = undefined) {\x0d\n    const timeout = validateTimeout(options);\x0d\n    const tries = validateTries(options);\x0d\n    // If we are building snapshot\x2C save the states of the resolver along\x0d\n    // the way.\x0d\n    if (isBuildingSnapshot()) {\x0d\n      this[kSnapshotStates] = { timeout\x2C tries };\x0d\n    }\x0d\n    this[kInitializeHandle](timeout\x2C tries);\x0d\n  }\x0d\n\x0d\n  [kInitializeHandle](timeout\x2C tries) {\x0d\n    const { ChannelWrap } = lazyBinding();\x0d\n    this._handle = new ChannelWrap(timeout\x2C tries);\x0d\n  }\x0d\n\x0d\n  cancel() {\x0d\n    this._handle.cancel();\x0d\n  }\x0d\n\x0d\n  getServers() {\x0d\n    return ArrayPrototypeMap(this._handle.getServers() || []\x2C (val) => {\x0d\n      if (!val[1] || val[1] === IANA_DNS_PORT)\x0d\n        return val[0];\x0d\n\x0d\n      const host = isIP(val[0]) === 6 ? `[${val[0]}]` : val[0];\x0d\n      return `${host}:${val[1]}`;\x0d\n    });\x0d\n  }\x0d\n\x0d\n  setServers(servers) {\x0d\n    validateArray(servers\x2C 'servers');\x0d\n\x0d\n    // Cache the original servers because in the event of an error while\x0d\n    // setting the servers\x2C c-ares won't have any servers available for\x0d\n    // resolution.\x0d\n    const newSet = [];\x0d\n    ArrayPrototypeForEach(servers\x2C (serv\x2C index) => {\x0d\n      validateString(serv\x2C `servers[${index}]`);\x0d\n      let ipVersion = isIP(serv);\x0d\n\x0d\n      if (ipVersion !== 0)\x0d\n        return ArrayPrototypePush(newSet\x2C [ipVersion\x2C serv\x2C IANA_DNS_PORT]);\x0d\n\x0d\n      const match = RegExpPrototypeExec(IPv6RE\x2C serv);\x0d\n\x0d\n      // Check for an IPv6 in brackets.\x0d\n      if (match) {\x0d\n        ipVersion = isIP(match[1]);\x0d\n\x0d\n        if (ipVersion !== 0) {\x0d\n          const port = NumberParseInt(\x0d\n            RegExpPrototypeSymbolReplace(addrSplitRE\x2C serv\x2C '$2')) || IANA_DNS_PORT;\x0d\n          return ArrayPrototypePush(newSet\x2C [ipVersion\x2C match[1]\x2C port]);\x0d\n        }\x0d\n      }\x0d\n\x0d\n      // addr::port\x0d\n      const addrSplitMatch = RegExpPrototypeExec(addrSplitRE\x2C serv);\x0d\n\x0d\n      if (addrSplitMatch) {\x0d\n        const hostIP = addrSplitMatch[1];\x0d\n        const port = addrSplitMatch[2] || IANA_DNS_PORT;\x0d\n\x0d\n        ipVersion = isIP(hostIP);\x0d\n\x0d\n        if (ipVersion !== 0) {\x0d\n          return ArrayPrototypePush(\x0d\n            newSet\x2C [ipVersion\x2C hostIP\x2C NumberParseInt(port)]);\x0d\n        }\x0d\n      }\x0d\n\x0d\n      throw new ERR_INVALID_IP_ADDRESS(serv);\x0d\n    });\x0d\n\x0d\n    this[kSetServersInteral](newSet\x2C servers);\x0d\n  }\x0d\n\x0d\n  [kSetServersInteral](newSet\x2C servers) {\x0d\n    const orig = this._handle.getServers() || [];\x0d\n    const errorNumber = this._handle.setServers(newSet);\x0d\n\x0d\n    if (errorNumber !== 0) {\x0d\n      // Reset the servers to the old servers\x2C because ares probably unset them.\x0d\n      this._handle.setServers(ArrayPrototypeJoin(orig\x2C '\x2C'));\x0d\n      const { strerror } = lazyBinding();\x0d\n      const err = strerror(errorNumber);\x0d\n      throw new ERR_DNS_SET_SERVERS_FAILED(err\x2C servers);\x0d\n    }\x0d\n\x0d\n    if (isBuildingSnapshot()) {\x0d\n      this[kSnapshotStates].servers = newSet;\x0d\n    }\x0d\n  }\x0d\n\x0d\n\x0d\n  setLocalAddress(ipv4\x2C ipv6) {\x0d\n    validateString(ipv4\x2C 'ipv4');\x0d\n\x0d\n    if (ipv6 !== undefined) {\x0d\n      validateString(ipv6\x2C 'ipv6');\x0d\n    }\x0d\n\x0d\n    this._handle.setLocalAddress(ipv4\x2C ipv6);\x0d\n\x0d\n    if (isBuildingSnapshot()) {\x0d\n      this[kSnapshotStates].localAddress = { ipv4\x2C ipv6 };\x0d\n    }\x0d\n  }\x0d\n\x0d\n  // TODO(joyeecheung): consider exposing this if custom DNS resolvers\x0d\n  // end up being useful for snapshot users.\x0d\n  [kSerializeResolver]() {\x0d\n    this._handle = null;  // We'll restore it during deserialization.\x0d\n    addDeserializeCallback(function deserializeResolver(resolver) {\x0d\n      resolver[kDeserializeResolver]();\x0d\n    }\x2C this);\x0d\n  }\x0d\n\x0d\n  [kDeserializeResolver]() {\x0d\n    const { timeout\x2C tries\x2C localAddress\x2C servers } = this[kSnapshotStates];\x0d\n    this[kInitializeHandle](timeout\x2C tries);\x0d\n    if (localAddress) {\x0d\n      const { ipv4\x2C ipv6 } = localAddress;\x0d\n      this._handle.setLocalAddress(ipv4\x2C ipv6);\x0d\n    }\x0d\n    if (servers) {\x0d\n      this[kSetServersInteral](servers\x2C servers);\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\nlet defaultResolver;\x0d\nlet dnsOrder;\x0d\n\x0d\nfunction initializeDns() {\x0d\n  const orderFromCLI = getOptionValue('--dns-result-order');\x0d\n  if (!orderFromCLI) {\x0d\n    dnsOrder ??= 'verbatim';\x0d\n  } else {\x0d\n    // Allow the deserialized application to override order from CLI.\x0d\n    dnsOrder = orderFromCLI;\x0d\n  }\x0d\n\x0d\n  if (!isBuildingSnapshot()) {\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  addSerializeCallback(() => {\x0d\n    defaultResolver?.[kSerializeResolver]();\x0d\n  });\x0d\n}\x0d\n\x0d\nconst resolverKeys = [\x0d\n  'getServers'\x2C\x0d\n  'resolve'\x2C\x0d\n  'resolve4'\x2C\x0d\n  'resolve6'\x2C\x0d\n  'resolveAny'\x2C\x0d\n  'resolveCaa'\x2C\x0d\n  'resolveCname'\x2C\x0d\n  'resolveMx'\x2C\x0d\n  'resolveNaptr'\x2C\x0d\n  'resolveNs'\x2C\x0d\n  'resolvePtr'\x2C\x0d\n  'resolveSoa'\x2C\x0d\n  'resolveSrv'\x2C\x0d\n  'resolveTxt'\x2C\x0d\n  'reverse'\x2C\x0d\n];\x0d\n\x0d\nfunction getDefaultResolver() {\x0d\n  // We do this here instead of pre-execution so that the default resolver is\x0d\n  // only ever created when the user loads any dns module.\x0d\n  if (defaultResolver === undefined) {\x0d\n    defaultResolver = new ResolverBase();\x0d\n  }\x0d\n  return defaultResolver;\x0d\n}\x0d\n\x0d\nfunction setDefaultResolver(resolver) {\x0d\n  defaultResolver = resolver;\x0d\n}\x0d\n\x0d\nfunction bindDefaultResolver(target\x2C source) {\x0d\n  const defaultResolver = getDefaultResolver();\x0d\n  ArrayPrototypeForEach(resolverKeys\x2C (key) => {\x0d\n    target[key] = FunctionPrototypeBind(source[key]\x2C defaultResolver);\x0d\n  });\x0d\n}\x0d\n\x0d\nfunction validateHints(hints) {\x0d\n  const { AI_ADDRCONFIG\x2C AI_ALL\x2C AI_V4MAPPED } = lazyBinding();\x0d\n  if ((hints & ~(AI_ADDRCONFIG | AI_ALL | AI_V4MAPPED)) !== 0) {\x0d\n    throw new ERR_INVALID_ARG_VALUE('hints'\x2C hints);\x0d\n  }\x0d\n}\x0d\n\x0d\nlet invalidHostnameWarningEmitted = false;\x0d\nfunction emitInvalidHostnameWarning(hostname) {\x0d\n  if (!invalidHostnameWarningEmitted) {\x0d\n    process.emitWarning(\x0d\n      `The provided hostname "${hostname}" is not a valid ` +\x0d\n      'hostname\x2C and is supported in the dns module solely for compatibility.'\x2C\x0d\n      'DeprecationWarning'\x2C\x0d\n      'DEP0118'\x0d\n    );\x0d\n    invalidHostnameWarningEmitted = true;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction getDefaultVerbatim() {\x0d\n  return dnsOrder !== 'ipv4first';\x0d\n}\x0d\n\x0d\nfunction setDefaultResultOrder(value) {\x0d\n  validateOneOf(value\x2C 'dnsOrder'\x2C ['verbatim'\x2C 'ipv4first']);\x0d\n  dnsOrder = value;\x0d\n}\x0d\n\x0d\nfunction createResolverClass(resolver) {\x0d\n  const resolveMap = ObjectCreate(null);\x0d\n\x0d\n  class Resolver extends ResolverBase {}\x0d\n\x0d\n  Resolver.prototype.resolveAny = resolveMap.ANY = resolver('queryAny');\x0d\n  Resolver.prototype.resolve4 = resolveMap.A = resolver('queryA');\x0d\n  Resolver.prototype.resolve6 = resolveMap.AAAA = resolver('queryAaaa');\x0d\n  Resolver.prototype.resolveCaa = resolveMap.CAA = resolver('queryCaa');\x0d\n  Resolver.prototype.resolveCname = resolveMap.CNAME = resolver('queryCname');\x0d\n  Resolver.prototype.resolveMx = resolveMap.MX = resolver('queryMx');\x0d\n  Resolver.prototype.resolveNs = resolveMap.NS = resolver('queryNs');\x0d\n  Resolver.prototype.resolveTxt = resolveMap.TXT = resolver('queryTxt');\x0d\n  Resolver.prototype.resolveSrv = resolveMap.SRV = resolver('querySrv');\x0d\n  Resolver.prototype.resolvePtr = resolveMap.PTR = resolver('queryPtr');\x0d\n  Resolver.prototype.resolveNaptr = resolveMap.NAPTR = resolver('queryNaptr');\x0d\n  Resolver.prototype.resolveSoa = resolveMap.SOA = resolver('querySoa');\x0d\n  Resolver.prototype.reverse = resolver('getHostByAddr');\x0d\n\x0d\n  return {\x0d\n    resolveMap\x2C\x0d\n    Resolver\x0d\n  };\x0d\n}\x0d\n\x0d\n// ERROR CODES\x0d\nconst errorCodes = {\x0d\n  NODATA: 'ENODATA'\x2C\x0d\n  FORMERR: 'EFORMERR'\x2C\x0d\n  SERVFAIL: 'ESERVFAIL'\x2C\x0d\n  NOTFOUND: 'ENOTFOUND'\x2C\x0d\n  NOTIMP: 'ENOTIMP'\x2C\x0d\n  REFUSED: 'EREFUSED'\x2C\x0d\n  BADQUERY: 'EBADQUERY'\x2C\x0d\n  BADNAME: 'EBADNAME'\x2C\x0d\n  BADFAMILY: 'EBADFAMILY'\x2C\x0d\n  BADRESP: 'EBADRESP'\x2C\x0d\n  CONNREFUSED: 'ECONNREFUSED'\x2C\x0d\n  TIMEOUT: 'ETIMEOUT'\x2C\x0d\n  EOF: 'EOF'\x2C\x0d\n  FILE: 'EFILE'\x2C\x0d\n  NOMEM: 'ENOMEM'\x2C\x0d\n  DESTRUCTION: 'EDESTRUCTION'\x2C\x0d\n  BADSTR: 'EBADSTR'\x2C\x0d\n  BADFLAGS: 'EBADFLAGS'\x2C\x0d\n  NONAME: 'ENONAME'\x2C\x0d\n  BADHINTS: 'EBADHINTS'\x2C\x0d\n  NOTINITIALIZED: 'ENOTINITIALIZED'\x2C\x0d\n  LOADIPHLPAPI: 'ELOADIPHLPAPI'\x2C\x0d\n  ADDRGETNETWORKPARAMS: 'EADDRGETNETWORKPARAMS'\x2C\x0d\n  CANCELLED: 'ECANCELLED'\x2C\x0d\n};\x0d\n\x0d\nmodule.exports = {\x0d\n  bindDefaultResolver\x2C\x0d\n  getDefaultResolver\x2C\x0d\n  setDefaultResolver\x2C\x0d\n  validateHints\x2C\x0d\n  validateTimeout\x2C\x0d\n  validateTries\x2C\x0d\n  emitInvalidHostnameWarning\x2C\x0d\n  getDefaultVerbatim\x2C\x0d\n  setDefaultResultOrder\x2C\x0d\n  errorCodes\x2C\x0d\n  createResolverClass\x2C\x0d\n  initializeDns\x0d\n};\x0d\n
code-source-info,0x14dbcb9b318,446,0,9830,C0O0C4O9830,,
code-creation,Function,10,290254,0x14dbcb9c390,619, node:internal/dns/utils:1:1,0x14dbcb9b290,~
code-source-info,0x14dbcb9c390,446,0,9830,C0O0C182O28C188O54C194O77C200O99C206O122C212O148C218O167C224O191C230O224C236O241C241O285C244O285C249O331C252O331C257O322C263O384C266O384C271O365C277O500C280O500C285O425C291O443C297O461C303O479C309O537C310O537C312O663C314O663C316O683C320O683C322O722C326O722C328O849C333O756C339O787C345O813C351O947C354O947C359O960C364O870C370O895C376O922C382O1306C385O1306C389O1306C391O1370C394O1370C398O1370C400O1431C403O1431C407O1431C409O1489C412O1489C416O1489C418O1558C421O1558C425O1558C437O2045C465O3974C481O4973C491O5204C512O1656C514O5572C515O5572C517O5594C518O5594C520O6034C524O6034C526O7154C527O7154C529O8902C534O9544C541O9566C547O9590C553O9613C559O9636C565O9654C571O9674C577O9692C583O9723C589O9746C595O9772C601O9787C607O9811C613O9559C618O9829,,
code-creation,Eval,10,290661,0x14dbcb9dcf8,5, node:internal/net:1:1,0x14dbcb9db30,~
script-source,447,node:internal/net,'use strict';\x0d\n\x0d\nconst {\x0d\n  RegExp\x2C\x0d\n  RegExpPrototypeTest\x2C\x0d\n  Symbol\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst Buffer = require('buffer').Buffer;\x0d\nconst { writeBuffer } = internalBinding('fs');\x0d\nconst errors = require('internal/errors');\x0d\n\x0d\n// IPv4 Segment\x0d\nconst v4Seg = '(?:[0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])';\x0d\nconst v4Str = `(${v4Seg}[.]){3}${v4Seg}`;\x0d\nconst IPv4Reg = new RegExp(`^${v4Str}$`);\x0d\n\x0d\n// IPv6 Segment\x0d\nconst v6Seg = '(?:[0-9a-fA-F]{1\x2C4})';\x0d\nconst IPv6Reg = new RegExp('^(' +\x0d\n  `(?:${v6Seg}:){7}(?:${v6Seg}|:)|` +\x0d\n  `(?:${v6Seg}:){6}(?:${v4Str}|:${v6Seg}|:)|` +\x0d\n  `(?:${v6Seg}:){5}(?::${v4Str}|(:${v6Seg}){1\x2C2}|:)|` +\x0d\n  `(?:${v6Seg}:){4}(?:(:${v6Seg}){0\x2C1}:${v4Str}|(:${v6Seg}){1\x2C3}|:)|` +\x0d\n  `(?:${v6Seg}:){3}(?:(:${v6Seg}){0\x2C2}:${v4Str}|(:${v6Seg}){1\x2C4}|:)|` +\x0d\n  `(?:${v6Seg}:){2}(?:(:${v6Seg}){0\x2C3}:${v4Str}|(:${v6Seg}){1\x2C5}|:)|` +\x0d\n  `(?:${v6Seg}:){1}(?:(:${v6Seg}){0\x2C4}:${v4Str}|(:${v6Seg}){1\x2C6}|:)|` +\x0d\n  `(?::((?::${v6Seg}){0\x2C5}:${v4Str}|(?::${v6Seg}){1\x2C7}|:))` +\x0d\n')(%[0-9a-zA-Z-.:]{1\x2C})?$');\x0d\n\x0d\nfunction isIPv4(s) {\x0d\n  // TODO(aduh95): Replace RegExpPrototypeTest with RegExpPrototypeExec when it\x0d\n  // no longer creates a perf regression in the dns benchmark.\x0d\n  // eslint-disable-next-line node-core/avoid-prototype-pollution\x0d\n  return RegExpPrototypeTest(IPv4Reg\x2C s);\x0d\n}\x0d\n\x0d\nfunction isIPv6(s) {\x0d\n  // TODO(aduh95): Replace RegExpPrototypeTest with RegExpPrototypeExec when it\x0d\n  // no longer creates a perf regression in the dns benchmark.\x0d\n  // eslint-disable-next-line node-core/avoid-prototype-pollution\x0d\n  return RegExpPrototypeTest(IPv6Reg\x2C s);\x0d\n}\x0d\n\x0d\nfunction isIP(s) {\x0d\n  if (isIPv4(s)) return 4;\x0d\n  if (isIPv6(s)) return 6;\x0d\n  return 0;\x0d\n}\x0d\n\x0d\nfunction makeSyncWrite(fd) {\x0d\n  return function(chunk\x2C enc\x2C cb) {\x0d\n    if (enc !== 'buffer')\x0d\n      chunk = Buffer.from(chunk\x2C enc);\x0d\n\x0d\n    this._handle.bytesWritten += chunk.length;\x0d\n\x0d\n    const ctx = {};\x0d\n    writeBuffer(fd\x2C chunk\x2C 0\x2C chunk.length\x2C null\x2C undefined\x2C ctx);\x0d\n    if (ctx.errno !== undefined) {\x0d\n      const ex = errors.uvException(ctx);\x0d\n      ex.errno = ctx.errno;\x0d\n      return cb(ex);\x0d\n    }\x0d\n    cb();\x0d\n  };\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  kWrapConnectedHandle: Symbol('wrapConnectedHandle')\x2C\x0d\n  isIP\x2C\x0d\n  isIPv4\x2C\x0d\n  isIPv6\x2C\x0d\n  makeSyncWrite\x2C\x0d\n  normalizedArgsSymbol: Symbol('normalizedArgs')\x0d\n};\x0d\n
code-source-info,0x14dbcb9dcf8,447,0,2298,C0O0C4O2298,,
code-creation,Function,10,290888,0x14dbcb9e108,628, node:internal/net:1:1,0x14dbcb9dc70,~
code-source-info,0x14dbcb9e108,447,0,2298,C0O0C45O28C50O39C56O63C61O107C64O107C69O124C73O107C75O158C78O158C83O142C89O197C92O197C96O197C98O259C101O330C106O334C119O349C124O375C129O390C142O375C147O375C149O435C152O476C160O503C173O519C183O492C192O542C205O558C218O568C228O531C237O591C250O608C263O619C273O580C282O648C295O666C308O681C321O692C331O637C340O721C353O739C366O754C379O765C389O710C398O794C411O812C424O827C437O838C447O783C456O867C469O885C482O900C495O911C505O856C514O946C527O961C540O974C550O929C556O992C562O476C567O476C569O2119C577O2163C587O2197C593O2206C599O2217C605O2228C612O2268C622O2134C627O2297,,
code-creation,LazyCompile,10,291282,0x14dbcb9eaf0,72,initializeDns node:internal/dns/utils:201:23,0x14dbcb9b438,~
code-source-info,0x14dbcb9eaf0,446,5629,6009,C0O5658C8O5658C13O5699C15O5725C28O5734C36O5838C38O5847C44O5873C49O5878C54O5907C55O5914C56O5925C66O5925C71O6008,,
code-creation,LazyCompile,10,291371,0x14dbcb9f758,21,assert node:internal/assert:11:16,0x3a8997aece8,~
script-source,27,node:internal/assert,'use strict';\x0d\n\x0d\nlet error;\x0d\nfunction lazyError() {\x0d\n  if (!error) {\x0d\n    error = require('internal/errors').codes.ERR_INTERNAL_ASSERTION;\x0d\n  }\x0d\n  return error;\x0d\n}\x0d\n\x0d\nfunction assert(value\x2C message) {\x0d\n  if (!value) {\x0d\n    const ERR_INTERNAL_ASSERTION = lazyError();\x0d\n    throw new ERR_INTERNAL_ASSERTION(message);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction fail(message) {\x0d\n  const ERR_INTERNAL_ASSERTION = lazyError();\x0d\n  throw new ERR_INTERNAL_ASSERTION(message);\x0d\n}\x0d\n\x0d\nassert.fail = fail;\x0d\n\x0d\nmodule.exports = assert;\x0d\n
code-source-info,0x14dbcb9f758,27,182,322,C0O204C4O254C7O254C11O272C13O278C18O272C20O321,,
code-creation,LazyCompile,10,291577,0x14dbcb9fb78,446,readPolicyFromDisk node:internal/process/pre_execution:500:28,0xb505337130,~
code-source-info,0x14dbcb9fb78,439,15993,17837,C0O16028C10O16028C15O16072C17O16103C21O16111C35O16111C41O16238C49O16238C55O16215C60O16230C65O16360C67O16378C75O16382C81O16397C87O16398C94O16439C100O16471C108O16453C116O16530C120O16552C126O16552C132O16530C138O16567C149O16583C153O16598C161O16612C167O16672C175O16672C180O16707C190O16707C197O16783C207O16783C212O16826C214O16880C222O16880C227O16959C235O16959C241O16927C246O16939C251O17009C257O17009C263O17060C269O17060C275O17120C277O17147C279O17171C283O17152C288O17265C290O17281C295O17214C300O17243C305O17308C311O17345C317O17345C322O17387C328O17387C334O17417C340O17437C344O17424C349O17458C356O17506C358O17536C360O17579C366O17601C376O17601C383O17579C389O17180C394O17134C397O17638C401O17666C415O17672C420O17666C421O17758C429O17787C433O17817C443O17829C445O17836,,
code-creation,LazyCompile,10,291736,0x14dbcb9ff68,49,setupStacktracePrinterOnSigint node:internal/process/pre_execution:323:40,0xb505336d70,~
code-source-info,0x14dbcb9ff68,439,10366,10560,C0O10374C8O10379C14O10420C15O10427C16O10463C22O10463C27O10444C32O10515C38O10549C43O10549C48O10559,,
code-creation,LazyCompile,10,291804,0x14dbcba0090,21,initializeReportSignalHandlers node:internal/process/pre_execution:353:40,0xb505336e88,~
code-source-info,0x14dbcba0090,439,11164,11264,C0O11201C6O11201C11O11180C16O11242C20O11263,,
code-creation,LazyCompile,10,291877,0x14dbcba0198,57,addSignalHandler node:internal/process/report:98:26,0x14dbcb8fb00,~
code-source-info,0x14dbcba0198,442,2241,2394,C0O2252C5O2259C10O2259C16O2290C22O2326C27O2335C32O2335C38O2355C41O2363C49O2363C56O2393,,
code-creation,LazyCompile,10,291972,0x14dbcba07f0,136,initializeHeapSnapshotSignalHandlers node:internal/process/pre_execution:359:46,0xb505336ed8,~
code-source-info,0x14dbcba07f0,439,11313,11870,C0O11313C17O11336C27O11336C31O11336C33O11382C37O11400C38O11407C39O11413C47O11413C52O11443C60O11444C65O11505C73O11505C78O11483C84O11592C89O11600C100O11600C106O11732C113O11736C118O11765C130O11765C135O11869,,
code-creation,LazyCompile,10,292089,0x14dbcba0ad0,138,setupChildProcessIpcChannel node:internal/process/pre_execution:472:37,0xb505337090,~
code-source-info,0x14dbcba0ad0,439,15135,15681,C0O15143C3O15155C8O15159C14O15198C20O15198C25O15244C33O15267C38O15271C46O15244C52O15298C53O15308C57O15298C61O15392C64O15407C73O15468C76O15476C81O15480C90O15528C93O15543C102O15587C108O15587C113O15611C118O15612C124O15652C127O15667C132O15652C137O15680,,
code-creation,LazyCompile,10,292199,0x14dbcba0ce0,63,initializeClusterIPC node:internal/process/pre_execution:491:30,0xb5053370e0,~
code-source-info,0x14dbcba0ce0,439,15714,15962,C0O15722C3O15734C10O15738C18O15753C23O15757C29O15796C35O15796C40O15829C45O15829C49O15920C52O15935C62O15961,,
code-creation,LazyCompile,10,292277,0x14dbcba0e38,53,runDeserializeCallbacks node:internal/v8/startup_snapshot:30:33,0x9147929f18,~
code-source-info,0x14dbcba0e38,84,765,911,C0O808C5O801C11O808C16O853C21O874C26O874C31O831C37O844C44O888C48O773C52O910,,
code-creation,LazyCompile,10,292349,0x14dbcba0fa0,52,setupUserModules node:internal/process/pre_execution:120:26,0xb505336a18,~
code-source-info,0x14dbcba0fa0,439,3581,3853,C0O3589C3O3589C6O3615C9O3615C12O3659C18O3659C23O3702C28O3720C34O3702C38O3751C41O3751C44O3821C47O3821C51O3852,,
code-creation,LazyCompile,10,292423,0x14dbcba11a8,66,initializeCJSLoader node:internal/process/pre_execution:557:29,0xb5053371d0,~
code-source-info,0x14dbcba11a8,439,18109,18432,C0O18135C6O18135C11O18178C16O18183C20O18203C26O18242C31O18249C36O18249C40O18348C51O18370C56O18406C60O18363C65O18431,,
code-creation,Eval,10,293801,0x14dbcba4030,5, node:internal/modules/cjs/loader:1:1,0x14dbcba2aa8,~
script-source,448,node:internal/modules/cjs/loader,// Copyright Joyent\x2C Inc. and other Node contributors.\x0d\n//\x0d\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\x0d\n// copy of this software and associated documentation files (the\x0d\n// "Software")\x2C to deal in the Software without restriction\x2C including\x0d\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\x0d\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\x0d\n// persons to whom the Software is furnished to do so\x2C subject to the\x0d\n// following conditions:\x0d\n//\x0d\n// The above copyright notice and this permission notice shall be included\x0d\n// in all copies or substantial portions of the Software.\x0d\n//\x0d\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\x0d\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\x0d\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\x0d\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\x0d\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\x0d\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\x0d\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\x0d\n\x0d\n'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayIsArray\x2C\x0d\n  ArrayPrototypeConcat\x2C\x0d\n  ArrayPrototypeFilter\x2C\x0d\n  ArrayPrototypeIncludes\x2C\x0d\n  ArrayPrototypeIndexOf\x2C\x0d\n  ArrayPrototypeJoin\x2C\x0d\n  ArrayPrototypeMap\x2C\x0d\n  ArrayPrototypePush\x2C\x0d\n  ArrayPrototypeSlice\x2C\x0d\n  ArrayPrototypeSplice\x2C\x0d\n  ArrayPrototypeUnshift\x2C\x0d\n  ArrayPrototypeUnshiftApply\x2C\x0d\n  ArrayPrototypeFlatMap\x2C\x0d\n  Boolean\x2C\x0d\n  Error\x2C\x0d\n  JSONParse\x2C\x0d\n  ObjectCreate\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectFreeze\x2C\x0d\n  ObjectGetOwnPropertyDescriptor\x2C\x0d\n  ObjectGetPrototypeOf\x2C\x0d\n  ObjectKeys\x2C\x0d\n  ObjectPrototype\x2C\x0d\n  ObjectPrototypeHasOwnProperty\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  Proxy\x2C\x0d\n  ReflectApply\x2C\x0d\n  ReflectSet\x2C\x0d\n  RegExpPrototypeExec\x2C\x0d\n  SafeMap\x2C\x0d\n  SafeSet\x2C\x0d\n  SafeWeakMap\x2C\x0d\n  String\x2C\x0d\n  StringPrototypeCharAt\x2C\x0d\n  StringPrototypeCharCodeAt\x2C\x0d\n  StringPrototypeEndsWith\x2C\x0d\n  StringPrototypeLastIndexOf\x2C\x0d\n  StringPrototypeIndexOf\x2C\x0d\n  StringPrototypeRepeat\x2C\x0d\n  StringPrototypeSlice\x2C\x0d\n  StringPrototypeSplit\x2C\x0d\n  StringPrototypeStartsWith\x2C\x0d\n} = primordials;\x0d\n\x0d\n// Map used to store CJS parsing data.\x0d\nconst cjsParseCache = new SafeWeakMap();\x0d\n\x0d\n// Set first due to cycle with ESM loader functions.\x0d\nmodule.exports = {\x0d\n  wrapSafe\x2C Module\x2C toRealPath\x2C readPackageScope\x2C cjsParseCache\x2C\x0d\n  get hasLoadedAnyUserCJSModule() { return hasLoadedAnyUserCJSModule; }\x0d\n};\x0d\n\x0d\nconst { BuiltinModule } = require('internal/bootstrap/loaders');\x0d\nconst {\x0d\n  maybeCacheSourceMap\x2C\x0d\n} = require('internal/source_map/source_map_cache');\x0d\nconst { pathToFileURL\x2C fileURLToPath\x2C isURLInstance } = require('internal/url');\x0d\nconst {\x0d\n  deprecate\x2C\x0d\n  emitExperimentalWarning\x2C\x0d\n  kEmptyObject\x2C\x0d\n  filterOwnProperties\x2C\x0d\n  setOwnProperty\x2C\x0d\n} = require('internal/util');\x0d\nconst { Script } = require('vm');\x0d\nconst { internalCompileFunction } = require('internal/vm');\x0d\nconst assert = require('internal/assert');\x0d\nconst fs = require('fs');\x0d\nconst internalFS = require('internal/fs/utils');\x0d\nconst path = require('path');\x0d\nconst { sep } = path;\x0d\nconst { internalModuleStat } = internalBinding('fs');\x0d\nconst packageJsonReader = require('internal/modules/package_json_reader');\x0d\nconst { safeGetenv } = internalBinding('credentials');\x0d\nconst {\x0d\n  cjsConditions\x2C\x0d\n  hasEsmSyntax\x2C\x0d\n  loadBuiltinModule\x2C\x0d\n  makeRequireFunction\x2C\x0d\n  normalizeReferrerURL\x2C\x0d\n  stripBOM\x2C\x0d\n} = require('internal/modules/cjs/helpers');\x0d\nconst { getOptionValue } = require('internal/options');\x0d\nconst preserveSymlinks = getOptionValue('--preserve-symlinks');\x0d\nconst preserveSymlinksMain = getOptionValue('--preserve-symlinks-main');\x0d\nconst shouldReportRequiredModules = process.env.WATCH_REPORT_DEPENDENCIES;\x0d\n// Do not eagerly grab .manifest\x2C it may be in TDZ\x0d\nconst policy = getOptionValue('--experimental-policy') ?\x0d\n  require('internal/process/policy') :\x0d\n  null;\x0d\n\x0d\n// Whether any user-provided CJS modules had been loaded (executed).\x0d\n// Used for internal assertions.\x0d\nlet hasLoadedAnyUserCJSModule = false;\x0d\n\x0d\nconst {\x0d\n  codes: {\x0d\n    ERR_INVALID_ARG_VALUE\x2C\x0d\n    ERR_INVALID_MODULE_SPECIFIER\x2C\x0d\n    ERR_REQUIRE_ESM\x2C\x0d\n    ERR_UNKNOWN_BUILTIN_MODULE\x2C\x0d\n  }\x2C\x0d\n  setArrowMessage\x2C\x0d\n} = require('internal/errors');\x0d\nconst { validateString } = require('internal/validators');\x0d\nconst pendingDeprecation = getOptionValue('--pending-deprecation');\x0d\n\x0d\nconst {\x0d\n  CHAR_BACKWARD_SLASH\x2C\x0d\n  CHAR_COLON\x2C\x0d\n  CHAR_DOT\x2C\x0d\n  CHAR_FORWARD_SLASH\x2C\x0d\n} = require('internal/constants');\x0d\n\x0d\nconst {\x0d\n  isProxy\x0d\n} = require('internal/util/types');\x0d\n\x0d\nconst asyncESM = require('internal/process/esm_loader');\x0d\nconst { enrichCJSError } = require('internal/modules/esm/translators');\x0d\nconst { kEvaluated } = internalBinding('module_wrap');\x0d\nconst {\x0d\n  encodedSepRegEx\x2C\x0d\n  packageExportsResolve\x2C\x0d\n  packageImportsResolve\x0d\n} = require('internal/modules/esm/resolve');\x0d\n\x0d\nconst isWindows = process.platform === 'win32';\x0d\n\x0d\nconst relativeResolveCache = ObjectCreate(null);\x0d\n\x0d\nlet requireDepth = 0;\x0d\nlet statCache = null;\x0d\nlet isPreloading = false;\x0d\n\x0d\nfunction stat(filename) {\x0d\n  filename = path.toNamespacedPath(filename);\x0d\n  if (statCache !== null) {\x0d\n    const result = statCache.get(filename);\x0d\n    if (result !== undefined) return result;\x0d\n  }\x0d\n  const result = internalModuleStat(filename);\x0d\n  if (statCache !== null && result >= 0) {\x0d\n    // Only set cache when `internalModuleStat(filename)` succeeds.\x0d\n    statCache.set(filename\x2C result);\x0d\n  }\x0d\n  return result;\x0d\n}\x0d\n\x0d\nlet _stat = stat;\x0d\nObjectDefineProperty(Module\x2C '_stat'\x2C {\x0d\n  __proto__: null\x2C\x0d\n  get() { return _stat; }\x2C\x0d\n  set(stat) {\x0d\n    emitExperimentalWarning('Module._stat');\x0d\n    _stat = stat;\x0d\n    return true;\x0d\n  }\x2C\x0d\n  configurable: true\x2C\x0d\n});\x0d\n\x0d\nfunction updateChildren(parent\x2C child\x2C scan) {\x0d\n  const children = parent?.children;\x0d\n  if (children && !(scan && ArrayPrototypeIncludes(children\x2C child)))\x0d\n    ArrayPrototypePush(children\x2C child);\x0d\n}\x0d\n\x0d\nfunction reportModuleToWatchMode(filename) {\x0d\n  if (shouldReportRequiredModules && process.send) {\x0d\n    process.send({ 'watch:require': [filename] });\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction reportModuleNotFoundToWatchMode(basePath\x2C extensions) {\x0d\n  if (shouldReportRequiredModules && process.send) {\x0d\n    process.send({ 'watch:require': ArrayPrototypeMap(extensions\x2C (ext) => path.resolve(`${basePath}${ext}`)) });\x0d\n  }\x0d\n}\x0d\n\x0d\nconst moduleParentCache = new SafeWeakMap();\x0d\nfunction Module(id = ''\x2C parent) {\x0d\n  this.id = id;\x0d\n  this.path = path.dirname(id);\x0d\n  setOwnProperty(this\x2C 'exports'\x2C {});\x0d\n  moduleParentCache.set(this\x2C parent);\x0d\n  updateChildren(parent\x2C this\x2C false);\x0d\n  this.filename = null;\x0d\n  this.loaded = false;\x0d\n  this.children = [];\x0d\n}\x0d\n\x0d\nconst builtinModules = [];\x0d\nfor (const { 0: id\x2C 1: mod } of BuiltinModule.map) {\x0d\n  if (mod.canBeRequiredByUsers &&\x0d\n    BuiltinModule.canBeRequiredWithoutScheme(id)) {\x0d\n    ArrayPrototypePush(builtinModules\x2C id);\x0d\n  }\x0d\n}\x0d\n\x0d\nconst allBuiltins = new SafeSet(\x0d\n  ArrayPrototypeFlatMap(builtinModules\x2C (bm) => [bm\x2C `node:${bm}`])\x0d\n);\x0d\nBuiltinModule.getSchemeOnlyModuleNames().forEach((builtin) => allBuiltins.add(`node:${builtin}`));\x0d\n\x0d\nObjectFreeze(builtinModules);\x0d\nModule.builtinModules = builtinModules;\x0d\n\x0d\nModule._cache = ObjectCreate(null);\x0d\nModule._pathCache = ObjectCreate(null);\x0d\nModule._extensions = ObjectCreate(null);\x0d\nlet modulePaths = [];\x0d\nModule.globalPaths = [];\x0d\n\x0d\nlet patched = false;\x0d\n\x0d\n// eslint-disable-next-line func-style\x0d\nlet wrap = function(script) {\x0d\n  return Module.wrapper[0] + script + Module.wrapper[1];\x0d\n};\x0d\n\x0d\nconst wrapper = [\x0d\n  '(function (exports\x2C require\x2C module\x2C __filename\x2C __dirname) { '\x2C\x0d\n  '\\n});'\x2C\x0d\n];\x0d\n\x0d\nlet wrapperProxy = new Proxy(wrapper\x2C {\x0d\n  __proto__: null\x2C\x0d\n\x0d\n  set(target\x2C property\x2C value\x2C receiver) {\x0d\n    patched = true;\x0d\n    return ReflectSet(target\x2C property\x2C value\x2C receiver);\x0d\n  }\x2C\x0d\n\x0d\n  defineProperty(target\x2C property\x2C descriptor) {\x0d\n    patched = true;\x0d\n    return ObjectDefineProperty(target\x2C property\x2C descriptor);\x0d\n  }\x0d\n});\x0d\n\x0d\nObjectDefineProperty(Module\x2C 'wrap'\x2C {\x0d\n  __proto__: null\x2C\x0d\n  get() {\x0d\n    return wrap;\x0d\n  }\x2C\x0d\n\x0d\n  set(value) {\x0d\n    patched = true;\x0d\n    wrap = value;\x0d\n  }\x0d\n});\x0d\n\x0d\nObjectDefineProperty(Module\x2C 'wrapper'\x2C {\x0d\n  __proto__: null\x2C\x0d\n  get() {\x0d\n    return wrapperProxy;\x0d\n  }\x2C\x0d\n\x0d\n  set(value) {\x0d\n    patched = true;\x0d\n    wrapperProxy = value;\x0d\n  }\x0d\n});\x0d\n\x0d\nconst isPreloadingDesc = { get() { return isPreloading; } };\x0d\nObjectDefineProperty(Module.prototype\x2C 'isPreloading'\x2C isPreloadingDesc);\x0d\nObjectDefineProperty(BuiltinModule.prototype\x2C 'isPreloading'\x2C isPreloadingDesc);\x0d\n\x0d\nfunction getModuleParent() {\x0d\n  return moduleParentCache.get(this);\x0d\n}\x0d\n\x0d\nfunction setModuleParent(value) {\x0d\n  moduleParentCache.set(this\x2C value);\x0d\n}\x0d\n\x0d\nObjectDefineProperty(Module.prototype\x2C 'parent'\x2C {\x0d\n  __proto__: null\x2C\x0d\n  get: pendingDeprecation ? deprecate(\x0d\n    getModuleParent\x2C\x0d\n    'module.parent is deprecated due to accuracy issues. Please use ' +\x0d\n      'require.main to find program entry point instead.'\x2C\x0d\n    'DEP0144'\x0d\n  ) : getModuleParent\x2C\x0d\n  set: pendingDeprecation ? deprecate(\x0d\n    setModuleParent\x2C\x0d\n    'module.parent is deprecated due to accuracy issues. Please use ' +\x0d\n      'require.main to find program entry point instead.'\x2C\x0d\n    'DEP0144'\x0d\n  ) : setModuleParent\x2C\x0d\n});\x0d\n\x0d\nlet debug = require('internal/util/debuglog').debuglog('module'\x2C (fn) => {\x0d\n  debug = fn;\x0d\n});\x0d\nModule._debug = deprecate(debug\x2C 'Module._debug is deprecated.'\x2C 'DEP0077');\x0d\n\x0d\n// Given a module name\x2C and a list of paths to test\x2C returns the first\x0d\n// matching file in the following precedence.\x0d\n//\x0d\n// require("a.<ext>")\x0d\n//   -> a.<ext>\x0d\n//\x0d\n// require("a")\x0d\n//   -> a\x0d\n//   -> a.<ext>\x0d\n//   -> a/index.<ext>\x0d\n\x0d\nconst packageJsonCache = new SafeMap();\x0d\n\x0d\nfunction readPackage(requestPath) {\x0d\n  const jsonPath = path.resolve(requestPath\x2C 'package.json');\x0d\n\x0d\n  const existing = packageJsonCache.get(jsonPath);\x0d\n  if (existing !== undefined) return existing;\x0d\n\x0d\n  const result = packageJsonReader.read(jsonPath);\x0d\n  const json = result.containsKeys === false ? '{}' : result.string;\x0d\n  if (json === undefined) {\x0d\n    packageJsonCache.set(jsonPath\x2C false);\x0d\n    return false;\x0d\n  }\x0d\n\x0d\n  try {\x0d\n    const filtered = filterOwnProperties(JSONParse(json)\x2C [\x0d\n      'name'\x2C\x0d\n      'main'\x2C\x0d\n      'exports'\x2C\x0d\n      'imports'\x2C\x0d\n      'type'\x2C\x0d\n    ]);\x0d\n    packageJsonCache.set(jsonPath\x2C filtered);\x0d\n    return filtered;\x0d\n  } catch (e) {\x0d\n    e.path = jsonPath;\x0d\n    e.message = 'Error parsing ' + jsonPath + ': ' + e.message;\x0d\n    throw e;\x0d\n  }\x0d\n}\x0d\n\x0d\nlet _readPackage = readPackage;\x0d\nObjectDefineProperty(Module\x2C '_readPackage'\x2C {\x0d\n  __proto__: null\x2C\x0d\n  get() { return _readPackage; }\x2C\x0d\n  set(readPackage) {\x0d\n    emitExperimentalWarning('Module._readPackage');\x0d\n    _readPackage = readPackage;\x0d\n    return true;\x0d\n  }\x2C\x0d\n  configurable: true\x2C\x0d\n});\x0d\n\x0d\nfunction readPackageScope(checkPath) {\x0d\n  const rootSeparatorIndex = StringPrototypeIndexOf(checkPath\x2C sep);\x0d\n  let separatorIndex;\x0d\n  do {\x0d\n    separatorIndex = StringPrototypeLastIndexOf(checkPath\x2C sep);\x0d\n    checkPath = StringPrototypeSlice(checkPath\x2C 0\x2C separatorIndex);\x0d\n    if (StringPrototypeEndsWith(checkPath\x2C sep + 'node_modules'))\x0d\n      return false;\x0d\n    const pjson = _readPackage(checkPath + sep);\x0d\n    if (pjson) return {\x0d\n      data: pjson\x2C\x0d\n      path: checkPath\x2C\x0d\n    };\x0d\n  } while (separatorIndex > rootSeparatorIndex);\x0d\n  return false;\x0d\n}\x0d\n\x0d\nfunction tryPackage(requestPath\x2C exts\x2C isMain\x2C originalPath) {\x0d\n  const pkg = _readPackage(requestPath)?.main;\x0d\n\x0d\n  if (!pkg) {\x0d\n    return tryExtensions(path.resolve(requestPath\x2C 'index')\x2C exts\x2C isMain);\x0d\n  }\x0d\n\x0d\n  const filename = path.resolve(requestPath\x2C pkg);\x0d\n  let actual = tryFile(filename\x2C isMain) ||\x0d\n    tryExtensions(filename\x2C exts\x2C isMain) ||\x0d\n    tryExtensions(path.resolve(filename\x2C 'index')\x2C exts\x2C isMain);\x0d\n  if (actual === false) {\x0d\n    actual = tryExtensions(path.resolve(requestPath\x2C 'index')\x2C exts\x2C isMain);\x0d\n    if (!actual) {\x0d\n      // eslint-disable-next-line no-restricted-syntax\x0d\n      const err = new Error(\x0d\n        `Cannot find module '${filename}'. ` +\x0d\n        'Please verify that the package.json has a valid "main" entry'\x0d\n      );\x0d\n      err.code = 'MODULE_NOT_FOUND';\x0d\n      err.path = path.resolve(requestPath\x2C 'package.json');\x0d\n      err.requestPath = originalPath;\x0d\n      // TODO(BridgeAR): Add the requireStack as well.\x0d\n      throw err;\x0d\n    } else {\x0d\n      const jsonPath = path.resolve(requestPath\x2C 'package.json');\x0d\n      process.emitWarning(\x0d\n        `Invalid 'main' field in '${jsonPath}' of '${pkg}'. ` +\x0d\n          'Please either fix that or report it to the module author'\x2C\x0d\n        'DeprecationWarning'\x2C\x0d\n        'DEP0128'\x0d\n      );\x0d\n    }\x0d\n  }\x0d\n  return actual;\x0d\n}\x0d\n\x0d\n// In order to minimize unnecessary lstat() calls\x2C\x0d\n// this cache is a list of known-real paths.\x0d\n// Set to an empty Map to reset.\x0d\nconst realpathCache = new SafeMap();\x0d\n\x0d\n// Check if the file exists and is not a directory\x0d\n// if using --preserve-symlinks and isMain is false\x2C\x0d\n// keep symlinks intact\x2C otherwise resolve to the\x0d\n// absolute realpath.\x0d\nfunction tryFile(requestPath\x2C isMain) {\x0d\n  const rc = _stat(requestPath);\x0d\n  if (rc !== 0) return;\x0d\n  if (preserveSymlinks && !isMain) {\x0d\n    return path.resolve(requestPath);\x0d\n  }\x0d\n  return toRealPath(requestPath);\x0d\n}\x0d\n\x0d\nfunction toRealPath(requestPath) {\x0d\n  return fs.realpathSync(requestPath\x2C {\x0d\n    [internalFS.realpathCacheKey]: realpathCache\x0d\n  });\x0d\n}\x0d\n\x0d\n// Given a path\x2C check if the file exists with any of the set extensions\x0d\nfunction tryExtensions(p\x2C exts\x2C isMain) {\x0d\n  for (let i = 0; i < exts.length; i++) {\x0d\n    const filename = tryFile(p + exts[i]\x2C isMain);\x0d\n\x0d\n    if (filename) {\x0d\n      return filename;\x0d\n    }\x0d\n  }\x0d\n  return false;\x0d\n}\x0d\n\x0d\n// Find the longest (possibly multi-dot) extension registered in\x0d\n// Module._extensions\x0d\nfunction findLongestRegisteredExtension(filename) {\x0d\n  const name = path.basename(filename);\x0d\n  let currentExtension;\x0d\n  let index;\x0d\n  let startIndex = 0;\x0d\n  while ((index = StringPrototypeIndexOf(name\x2C '.'\x2C startIndex)) !== -1) {\x0d\n    startIndex = index + 1;\x0d\n    if (index === 0) continue; // Skip dotfiles like .gitignore\x0d\n    currentExtension = StringPrototypeSlice(name\x2C index);\x0d\n    if (Module._extensions[currentExtension]) return currentExtension;\x0d\n  }\x0d\n  return '.js';\x0d\n}\x0d\n\x0d\nfunction trySelfParentPath(parent) {\x0d\n  if (!parent) return false;\x0d\n\x0d\n  if (parent.filename) {\x0d\n    return parent.filename;\x0d\n  } else if (parent.id === '<repl>' || parent.id === 'internal/preload') {\x0d\n    try {\x0d\n      return process.cwd() + path.sep;\x0d\n    } catch {\x0d\n      return false;\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction trySelf(parentPath\x2C request) {\x0d\n  if (!parentPath) return false;\x0d\n\x0d\n  const { data: pkg\x2C path: pkgPath } = readPackageScope(parentPath) || {};\x0d\n  if (!pkg || pkg.exports === undefined) return false;\x0d\n  if (typeof pkg.name !== 'string') return false;\x0d\n\x0d\n  let expansion;\x0d\n  if (request === pkg.name) {\x0d\n    expansion = '.';\x0d\n  } else if (StringPrototypeStartsWith(request\x2C `${pkg.name}/`)) {\x0d\n    expansion = '.' + StringPrototypeSlice(request\x2C pkg.name.length);\x0d\n  } else {\x0d\n    return false;\x0d\n  }\x0d\n\x0d\n  try {\x0d\n    return finalizeEsmResolution(packageExportsResolve(\x0d\n      pathToFileURL(pkgPath + '/package.json')\x2C expansion\x2C pkg\x2C\x0d\n      pathToFileURL(parentPath)\x2C cjsConditions)\x2C parentPath\x2C pkgPath);\x0d\n  } catch (e) {\x0d\n    if (e.code === 'ERR_MODULE_NOT_FOUND')\x0d\n      throw createEsmNotFoundErr(request\x2C pkgPath + '/package.json');\x0d\n    throw e;\x0d\n  }\x0d\n}\x0d\n\x0d\n// This only applies to requests of a specific form:\x0d\n// 1. name/.*\x0d\n// 2. @scope/name/.*\x0d\nconst EXPORTS_PATTERN = /^((?:@[^/\\\\%]+\\/)?[^./\\\\%][^/\\\\%]*)(\\/.*)?$/;\x0d\nfunction resolveExports(nmPath\x2C request) {\x0d\n  // The implementation's behavior is meant to mirror resolution in ESM.\x0d\n  const { 1: name\x2C 2: expansion = '' } =\x0d\n    RegExpPrototypeExec(EXPORTS_PATTERN\x2C request) || kEmptyObject;\x0d\n  if (!name)\x0d\n    return;\x0d\n  const pkgPath = path.resolve(nmPath\x2C name);\x0d\n  const pkg = _readPackage(pkgPath);\x0d\n  if (pkg?.exports != null) {\x0d\n    try {\x0d\n      return finalizeEsmResolution(packageExportsResolve(\x0d\n        pathToFileURL(pkgPath + '/package.json')\x2C '.' + expansion\x2C pkg\x2C null\x2C\x0d\n        cjsConditions)\x2C null\x2C pkgPath);\x0d\n    } catch (e) {\x0d\n      if (e.code === 'ERR_MODULE_NOT_FOUND')\x0d\n        throw createEsmNotFoundErr(request\x2C pkgPath + '/package.json');\x0d\n      throw e;\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {string} request a relative or absolute file path\x0d\n * @param {Array<string>} paths file system directories to search as file paths\x0d\n * @param {boolean} isMain if the request is the main app entry point\x0d\n * @returns {string | false}\x0d\n */\x0d\nModule._findPath = function(request\x2C paths\x2C isMain) {\x0d\n  const absoluteRequest = path.isAbsolute(request);\x0d\n  if (absoluteRequest) {\x0d\n    paths = [''];\x0d\n  } else if (!paths || paths.length === 0) {\x0d\n    return false;\x0d\n  }\x0d\n\x0d\n  const cacheKey = request + '\\x00' + ArrayPrototypeJoin(paths\x2C '\\x00');\x0d\n  const entry = Module._pathCache[cacheKey];\x0d\n  if (entry)\x0d\n    return entry;\x0d\n\x0d\n  let exts;\x0d\n  const trailingSlash = request.length > 0 &&\x0d\n    (StringPrototypeCharCodeAt(request\x2C request.length - 1) === CHAR_FORWARD_SLASH || (\x0d\n      StringPrototypeCharCodeAt(request\x2C request.length - 1) === CHAR_DOT &&\x0d\n      (\x0d\n        request.length === 1 ||\x0d\n        StringPrototypeCharCodeAt(request\x2C request.length - 2) === CHAR_FORWARD_SLASH ||\x0d\n        (StringPrototypeCharCodeAt(request\x2C request.length - 2) === CHAR_DOT && (\x0d\n          request.length === 2 ||\x0d\n          StringPrototypeCharCodeAt(request\x2C request.length - 3) === CHAR_FORWARD_SLASH\x0d\n        ))\x0d\n      )\x0d\n    ));\x0d\n\x0d\n  const isRelative = StringPrototypeCharCodeAt(request\x2C 0) === CHAR_DOT &&\x0d\n    (\x0d\n      request.length === 1 ||\x0d\n      StringPrototypeCharCodeAt(request\x2C 1) === CHAR_FORWARD_SLASH ||\x0d\n      (isWindows && StringPrototypeCharCodeAt(request\x2C 1) === CHAR_BACKWARD_SLASH) ||\x0d\n      (StringPrototypeCharCodeAt(request\x2C 1) === CHAR_DOT && ((\x0d\n        request.length === 2 ||\x0d\n        StringPrototypeCharCodeAt(request\x2C 2) === CHAR_FORWARD_SLASH) ||\x0d\n        (isWindows && StringPrototypeCharCodeAt(request\x2C 2) === CHAR_BACKWARD_SLASH)))\x0d\n    );\x0d\n  let insidePath = true;\x0d\n  if (isRelative) {\x0d\n    const normalizedRequest = path.normalize(request);\x0d\n    if (StringPrototypeStartsWith(normalizedRequest\x2C '..')) {\x0d\n      insidePath = false;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  // For each path\x0d\n  for (let i = 0; i < paths.length; i++) {\x0d\n    // Don't search further if path doesn't exist and request is inside the path\x0d\n    const curPath = paths[i];\x0d\n    if (insidePath && curPath && _stat(curPath) < 1) continue;\x0d\n\x0d\n    if (!absoluteRequest) {\x0d\n      const exportsResolved = resolveExports(curPath\x2C request);\x0d\n      if (exportsResolved)\x0d\n        return exportsResolved;\x0d\n    }\x0d\n\x0d\n    const basePath = path.resolve(curPath\x2C request);\x0d\n    let filename;\x0d\n\x0d\n    const rc = _stat(basePath);\x0d\n    if (!trailingSlash) {\x0d\n      if (rc === 0) {  // File.\x0d\n        if (!isMain) {\x0d\n          if (preserveSymlinks) {\x0d\n            filename = path.resolve(basePath);\x0d\n          } else {\x0d\n            filename = toRealPath(basePath);\x0d\n          }\x0d\n        } else if (preserveSymlinksMain) {\x0d\n          // For the main module\x2C we use the preserveSymlinksMain flag instead\x0d\n          // mainly for backward compatibility\x2C as the preserveSymlinks flag\x0d\n          // historically has not applied to the main module.  Most likely this\x0d\n          // was intended to keep .bin/ binaries working\x2C as following those\x0d\n          // symlinks is usually required for the imports in the corresponding\x0d\n          // files to resolve; that said\x2C in some use cases following symlinks\x0d\n          // causes bigger problems which is why the preserveSymlinksMain option\x0d\n          // is needed.\x0d\n          filename = path.resolve(basePath);\x0d\n        } else {\x0d\n          filename = toRealPath(basePath);\x0d\n        }\x0d\n      }\x0d\n\x0d\n      if (!filename) {\x0d\n        // Try it with each of the extensions\x0d\n        if (exts === undefined)\x0d\n          exts = ObjectKeys(Module._extensions);\x0d\n        filename = tryExtensions(basePath\x2C exts\x2C isMain);\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (!filename && rc === 1) {  // Directory.\x0d\n      // try it with each of the extensions at "index"\x0d\n      if (exts === undefined)\x0d\n        exts = ObjectKeys(Module._extensions);\x0d\n      filename = tryPackage(basePath\x2C exts\x2C isMain\x2C request);\x0d\n    }\x0d\n\x0d\n    if (filename) {\x0d\n      Module._pathCache[cacheKey] = filename;\x0d\n      return filename;\x0d\n    }\x0d\n    reportModuleNotFoundToWatchMode(basePath\x2C ArrayPrototypeConcat(['']\x2C exts));\x0d\n  }\x0d\n\x0d\n  return false;\x0d\n};\x0d\n\x0d\n// 'node_modules' character codes reversed\x0d\nconst nmChars = [ 115\x2C 101\x2C 108\x2C 117\x2C 100\x2C 111\x2C 109\x2C 95\x2C 101\x2C 100\x2C 111\x2C 110 ];\x0d\nconst nmLen = nmChars.length;\x0d\nif (isWindows) {\x0d\n  // 'from' is the __dirname of the module.\x0d\n  Module._nodeModulePaths = function(from) {\x0d\n    // Guarantee that 'from' is absolute.\x0d\n    from = path.resolve(from);\x0d\n\x0d\n    // note: this approach *only* works when the path is guaranteed\x0d\n    // to be absolute.  Doing a fully-edge-case-correct path.split\x0d\n    // that works on both Windows and Posix is non-trivial.\x0d\n\x0d\n    // return root node_modules when path is 'D:\\\\'.\x0d\n    // path.resolve will make sure from.length >=3 in Windows.\x0d\n    if (StringPrototypeCharCodeAt(from\x2C from.length - 1) ===\x0d\n          CHAR_BACKWARD_SLASH &&\x0d\n        StringPrototypeCharCodeAt(from\x2C from.length - 2) === CHAR_COLON)\x0d\n      return [from + 'node_modules'];\x0d\n\x0d\n    const paths = [];\x0d\n    for (let i = from.length - 1\x2C p = 0\x2C last = from.length; i >= 0; --i) {\x0d\n      const code = StringPrototypeCharCodeAt(from\x2C i);\x0d\n      // The path segment separator check ('\\' and '/') was used to get\x0d\n      // node_modules path for every path segment.\x0d\n      // Use colon as an extra condition since we can get node_modules\x0d\n      // path for drive root like 'C:\\node_modules' and don't need to\x0d\n      // parse drive name.\x0d\n      if (code === CHAR_BACKWARD_SLASH ||\x0d\n          code === CHAR_FORWARD_SLASH ||\x0d\n          code === CHAR_COLON) {\x0d\n        if (p !== nmLen)\x0d\n          ArrayPrototypePush(\x0d\n            paths\x2C\x0d\n            StringPrototypeSlice(from\x2C 0\x2C last) + '\\\\node_modules'\x0d\n          );\x0d\n        last = i;\x0d\n        p = 0;\x0d\n      } else if (p !== -1) {\x0d\n        if (nmChars[p] === code) {\x0d\n          ++p;\x0d\n        } else {\x0d\n          p = -1;\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n\x0d\n    return paths;\x0d\n  };\x0d\n} else { // posix\x0d\n  // 'from' is the __dirname of the module.\x0d\n  Module._nodeModulePaths = function(from) {\x0d\n    // Guarantee that 'from' is absolute.\x0d\n    from = path.resolve(from);\x0d\n    // Return early not only to avoid unnecessary work\x2C but to *avoid* returning\x0d\n    // an array of two items for a root: [ '//node_modules'\x2C '/node_modules' ]\x0d\n    if (from === '/')\x0d\n      return ['/node_modules'];\x0d\n\x0d\n    // note: this approach *only* works when the path is guaranteed\x0d\n    // to be absolute.  Doing a fully-edge-case-correct path.split\x0d\n    // that works on both Windows and Posix is non-trivial.\x0d\n    const paths = [];\x0d\n    for (let i = from.length - 1\x2C p = 0\x2C last = from.length; i >= 0; --i) {\x0d\n      const code = StringPrototypeCharCodeAt(from\x2C i);\x0d\n      if (code === CHAR_FORWARD_SLASH) {\x0d\n        if (p !== nmLen)\x0d\n          ArrayPrototypePush(\x0d\n            paths\x2C\x0d\n            StringPrototypeSlice(from\x2C 0\x2C last) + '/node_modules'\x0d\n          );\x0d\n        last = i;\x0d\n        p = 0;\x0d\n      } else if (p !== -1) {\x0d\n        if (nmChars[p] === code) {\x0d\n          ++p;\x0d\n        } else {\x0d\n          p = -1;\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n\x0d\n    // Append /node_modules to handle root paths.\x0d\n    ArrayPrototypePush(paths\x2C '/node_modules');\x0d\n\x0d\n    return paths;\x0d\n  };\x0d\n}\x0d\n\x0d\nModule._resolveLookupPaths = function(request\x2C parent) {\x0d\n  if ((\x0d\n    StringPrototypeStartsWith(request\x2C 'node:') &&\x0d\n    BuiltinModule.canBeRequiredByUsers(StringPrototypeSlice(request\x2C 5))\x0d\n  ) || (\x0d\n    BuiltinModule.canBeRequiredByUsers(request) &&\x0d\n    BuiltinModule.canBeRequiredWithoutScheme(request)\x0d\n  )) {\x0d\n    debug('looking for %j in []'\x2C request);\x0d\n    return null;\x0d\n  }\x0d\n\x0d\n  // Check for node modules paths.\x0d\n  if (StringPrototypeCharAt(request\x2C 0) !== '.' ||\x0d\n      (request.length > 1 &&\x0d\n      StringPrototypeCharAt(request\x2C 1) !== '.' &&\x0d\n      StringPrototypeCharAt(request\x2C 1) !== '/' &&\x0d\n      (!isWindows || StringPrototypeCharAt(request\x2C 1) !== '\\\\'))) {\x0d\n\x0d\n    let paths = modulePaths;\x0d\n    if (parent?.paths?.length) {\x0d\n      paths = ArrayPrototypeConcat(parent.paths\x2C paths);\x0d\n    }\x0d\n\x0d\n    debug('looking for %j in %j'\x2C request\x2C paths);\x0d\n    return paths.length > 0 ? paths : null;\x0d\n  }\x0d\n\x0d\n  // In REPL\x2C parent.filename is null.\x0d\n  if (!parent || !parent.id || !parent.filename) {\x0d\n    // Make require('./path/to/foo') work - normally the path is taken\x0d\n    // from realpath(__filename) but in REPL there is no filename\x0d\n    const mainPaths = ['.'];\x0d\n\x0d\n    debug('looking for %j in %j'\x2C request\x2C mainPaths);\x0d\n    return mainPaths;\x0d\n  }\x0d\n\x0d\n  debug('RELATIVE: requested: %s from parent.id %s'\x2C request\x2C parent.id);\x0d\n\x0d\n  const parentDir = [path.dirname(parent.filename)];\x0d\n  debug('looking for %j'\x2C parentDir);\x0d\n  return parentDir;\x0d\n};\x0d\n\x0d\nfunction emitCircularRequireWarning(prop) {\x0d\n  process.emitWarning(\x0d\n    `Accessing non-existent property '${String(prop)}' of module exports ` +\x0d\n    'inside circular dependency'\x0d\n  );\x0d\n}\x0d\n\x0d\n// A Proxy that can be used as the prototype of a module.exports object and\x0d\n// warns when non-existent properties are accessed.\x0d\nconst CircularRequirePrototypeWarningProxy = new Proxy({}\x2C {\x0d\n  __proto__: null\x2C\x0d\n\x0d\n  get(target\x2C prop) {\x0d\n    // Allow __esModule access in any case because it is used in the output\x0d\n    // of transpiled code to determine whether something comes from an\x0d\n    // ES module\x2C and is not used as a regular key of `module.exports`.\x0d\n    if (prop in target || prop === '__esModule') return target[prop];\x0d\n    emitCircularRequireWarning(prop);\x0d\n    return undefined;\x0d\n  }\x2C\x0d\n\x0d\n  getOwnPropertyDescriptor(target\x2C prop) {\x0d\n    if (ObjectPrototypeHasOwnProperty(target\x2C prop) || prop === '__esModule')\x0d\n      return ObjectGetOwnPropertyDescriptor(target\x2C prop);\x0d\n    emitCircularRequireWarning(prop);\x0d\n    return undefined;\x0d\n  }\x0d\n});\x0d\n\x0d\nfunction getExportsForCircularRequire(module) {\x0d\n  if (module.exports &&\x0d\n      !isProxy(module.exports) &&\x0d\n      ObjectGetPrototypeOf(module.exports) === ObjectPrototype &&\x0d\n      // Exclude transpiled ES6 modules / TypeScript code because those may\x0d\n      // employ unusual patterns for accessing 'module.exports'. That should\x0d\n      // be okay because ES6 modules have a different approach to circular\x0d\n      // dependencies anyway.\x0d\n      !module.exports.__esModule) {\x0d\n    // This is later unset once the module is done loading.\x0d\n    ObjectSetPrototypeOf(\x0d\n      module.exports\x2C CircularRequirePrototypeWarningProxy);\x0d\n  }\x0d\n\x0d\n  return module.exports;\x0d\n}\x0d\n\x0d\n// Check the cache for the requested file.\x0d\n// 1. If a module already exists in the cache: return its exports object.\x0d\n// 2. If the module is native: call\x0d\n//    `BuiltinModule.prototype.compileForPublicLoader()` and return the exports.\x0d\n// 3. Otherwise\x2C create a new module for the file and save it to the cache.\x0d\n//    Then have it load  the file contents before returning its exports\x0d\n//    object.\x0d\nModule._load = function(request\x2C parent\x2C isMain) {\x0d\n  let relResolveCacheIdentifier;\x0d\n  if (parent) {\x0d\n    debug('Module._load REQUEST %s parent: %s'\x2C request\x2C parent.id);\x0d\n    // Fast path for (lazy loaded) modules in the same directory. The indirect\x0d\n    // caching is required to allow cache invalidation without changing the old\x0d\n    // cache key names.\x0d\n    relResolveCacheIdentifier = `${parent.path}\\x00${request}`;\x0d\n    const filename = relativeResolveCache[relResolveCacheIdentifier];\x0d\n    reportModuleToWatchMode(filename);\x0d\n    if (filename !== undefined) {\x0d\n      const cachedModule = Module._cache[filename];\x0d\n      if (cachedModule !== undefined) {\x0d\n        updateChildren(parent\x2C cachedModule\x2C true);\x0d\n        if (!cachedModule.loaded)\x0d\n          return getExportsForCircularRequire(cachedModule);\x0d\n        return cachedModule.exports;\x0d\n      }\x0d\n      delete relativeResolveCache[relResolveCacheIdentifier];\x0d\n    }\x0d\n  }\x0d\n\x0d\n  if (StringPrototypeStartsWith(request\x2C 'node:')) {\x0d\n    // Slice 'node:' prefix\x0d\n    const id = StringPrototypeSlice(request\x2C 5);\x0d\n\x0d\n    const module = loadBuiltinModule(id\x2C request);\x0d\n    if (!module?.canBeRequiredByUsers) {\x0d\n      throw new ERR_UNKNOWN_BUILTIN_MODULE(request);\x0d\n    }\x0d\n\x0d\n    return module.exports;\x0d\n  }\x0d\n\x0d\n  const filename = Module._resolveFilename(request\x2C parent\x2C isMain);\x0d\n  const cachedModule = Module._cache[filename];\x0d\n  if (cachedModule !== undefined) {\x0d\n    updateChildren(parent\x2C cachedModule\x2C true);\x0d\n    if (!cachedModule.loaded) {\x0d\n      const parseCachedModule = cjsParseCache.get(cachedModule);\x0d\n      if (!parseCachedModule || parseCachedModule.loaded)\x0d\n        return getExportsForCircularRequire(cachedModule);\x0d\n      parseCachedModule.loaded = true;\x0d\n    } else {\x0d\n      return cachedModule.exports;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  const mod = loadBuiltinModule(filename\x2C request);\x0d\n  if (mod?.canBeRequiredByUsers &&\x0d\n      BuiltinModule.canBeRequiredWithoutScheme(filename)) {\x0d\n    return mod.exports;\x0d\n  }\x0d\n\x0d\n  // Don't call updateChildren()\x2C Module constructor already does.\x0d\n  const module = cachedModule || new Module(filename\x2C parent);\x0d\n\x0d\n  if (isMain) {\x0d\n    process.mainModule = module;\x0d\n    module.id = '.';\x0d\n  }\x0d\n\x0d\n  reportModuleToWatchMode(filename);\x0d\n\x0d\n  Module._cache[filename] = module;\x0d\n  if (parent !== undefined) {\x0d\n    relativeResolveCache[relResolveCacheIdentifier] = filename;\x0d\n  }\x0d\n\x0d\n  let threw = true;\x0d\n  try {\x0d\n    module.load(filename);\x0d\n    threw = false;\x0d\n  } finally {\x0d\n    if (threw) {\x0d\n      delete Module._cache[filename];\x0d\n      if (parent !== undefined) {\x0d\n        delete relativeResolveCache[relResolveCacheIdentifier];\x0d\n        const children = parent?.children;\x0d\n        if (ArrayIsArray(children)) {\x0d\n          const index = ArrayPrototypeIndexOf(children\x2C module);\x0d\n          if (index !== -1) {\x0d\n            ArrayPrototypeSplice(children\x2C index\x2C 1);\x0d\n          }\x0d\n        }\x0d\n      }\x0d\n    } else if (module.exports &&\x0d\n               !isProxy(module.exports) &&\x0d\n               ObjectGetPrototypeOf(module.exports) ===\x0d\n                 CircularRequirePrototypeWarningProxy) {\x0d\n      ObjectSetPrototypeOf(module.exports\x2C ObjectPrototype);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return module.exports;\x0d\n};\x0d\n\x0d\nModule._resolveFilename = function(request\x2C parent\x2C isMain\x2C options) {\x0d\n  if (\x0d\n    (\x0d\n      StringPrototypeStartsWith(request\x2C 'node:') &&\x0d\n      BuiltinModule.canBeRequiredByUsers(StringPrototypeSlice(request\x2C 5))\x0d\n    ) || (\x0d\n      BuiltinModule.canBeRequiredByUsers(request) &&\x0d\n      BuiltinModule.canBeRequiredWithoutScheme(request)\x0d\n    )\x0d\n  ) {\x0d\n    return request;\x0d\n  }\x0d\n\x0d\n  let paths;\x0d\n\x0d\n  if (typeof options === 'object' && options !== null) {\x0d\n    if (ArrayIsArray(options.paths)) {\x0d\n      const isRelative = StringPrototypeStartsWith(request\x2C './') ||\x0d\n          StringPrototypeStartsWith(request\x2C '../') ||\x0d\n          ((isWindows && StringPrototypeStartsWith(request\x2C '.\\\\')) ||\x0d\n          StringPrototypeStartsWith(request\x2C '..\\\\'));\x0d\n\x0d\n      if (isRelative) {\x0d\n        paths = options.paths;\x0d\n      } else {\x0d\n        const fakeParent = new Module(''\x2C null);\x0d\n\x0d\n        paths = [];\x0d\n\x0d\n        for (let i = 0; i < options.paths.length; i++) {\x0d\n          const path = options.paths[i];\x0d\n          fakeParent.paths = Module._nodeModulePaths(path);\x0d\n          const lookupPaths = Module._resolveLookupPaths(request\x2C fakeParent);\x0d\n\x0d\n          for (let j = 0; j < lookupPaths.length; j++) {\x0d\n            if (!ArrayPrototypeIncludes(paths\x2C lookupPaths[j]))\x0d\n              ArrayPrototypePush(paths\x2C lookupPaths[j]);\x0d\n          }\x0d\n        }\x0d\n      }\x0d\n    } else if (options.paths === undefined) {\x0d\n      paths = Module._resolveLookupPaths(request\x2C parent);\x0d\n    } else {\x0d\n      throw new ERR_INVALID_ARG_VALUE('options.paths'\x2C options.paths);\x0d\n    }\x0d\n  } else {\x0d\n    paths = Module._resolveLookupPaths(request\x2C parent);\x0d\n  }\x0d\n\x0d\n  if (request[0] === '#' && (parent?.filename || parent?.id === '<repl>')) {\x0d\n    const parentPath = parent?.filename ?? process.cwd() + path.sep;\x0d\n    const pkg = readPackageScope(parentPath) || {};\x0d\n    if (pkg.data?.imports != null) {\x0d\n      try {\x0d\n        return finalizeEsmResolution(\x0d\n          packageImportsResolve(request\x2C pathToFileURL(parentPath)\x2C\x0d\n                                cjsConditions)\x2C parentPath\x2C\x0d\n          pkg.path);\x0d\n      } catch (e) {\x0d\n        if (e.code === 'ERR_MODULE_NOT_FOUND')\x0d\n          throw createEsmNotFoundErr(request);\x0d\n        throw e;\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  // Try module self resolution first\x0d\n  const parentPath = trySelfParentPath(parent);\x0d\n  const selfResolved = trySelf(parentPath\x2C request);\x0d\n  if (selfResolved) {\x0d\n    const cacheKey = request + '\\x00' +\x0d\n         (paths.length === 1 ? paths[0] : ArrayPrototypeJoin(paths\x2C '\\x00'));\x0d\n    Module._pathCache[cacheKey] = selfResolved;\x0d\n    return selfResolved;\x0d\n  }\x0d\n\x0d\n  // Look up the filename first\x2C since that's the cache key.\x0d\n  const filename = Module._findPath(request\x2C paths\x2C isMain\x2C false);\x0d\n  if (filename) return filename;\x0d\n  const requireStack = [];\x0d\n  for (let cursor = parent;\x0d\n    cursor;\x0d\n    cursor = moduleParentCache.get(cursor)) {\x0d\n    ArrayPrototypePush(requireStack\x2C cursor.filename || cursor.id);\x0d\n  }\x0d\n  let message = `Cannot find module '${request}'`;\x0d\n  if (requireStack.length > 0) {\x0d\n    message = message + '\\nRequire stack:\\n- ' +\x0d\n              ArrayPrototypeJoin(requireStack\x2C '\\n- ');\x0d\n  }\x0d\n  // eslint-disable-next-line no-restricted-syntax\x0d\n  const err = new Error(message);\x0d\n  err.code = 'MODULE_NOT_FOUND';\x0d\n  err.requireStack = requireStack;\x0d\n  throw err;\x0d\n};\x0d\n\x0d\nfunction finalizeEsmResolution(resolved\x2C parentPath\x2C pkgPath) {\x0d\n  if (RegExpPrototypeExec(encodedSepRegEx\x2C resolved) !== null)\x0d\n    throw new ERR_INVALID_MODULE_SPECIFIER(\x0d\n      resolved\x2C 'must not include encoded "/" or "\\\\" characters'\x2C parentPath);\x0d\n  const filename = fileURLToPath(resolved);\x0d\n  const actual = tryFile(filename);\x0d\n  if (actual)\x0d\n    return actual;\x0d\n  const err = createEsmNotFoundErr(filename\x2C\x0d\n                                   path.resolve(pkgPath\x2C 'package.json'));\x0d\n  throw err;\x0d\n}\x0d\n\x0d\nfunction createEsmNotFoundErr(request\x2C path) {\x0d\n  // eslint-disable-next-line no-restricted-syntax\x0d\n  const err = new Error(`Cannot find module '${request}'`);\x0d\n  err.code = 'MODULE_NOT_FOUND';\x0d\n  if (path)\x0d\n    err.path = path;\x0d\n  // TODO(BridgeAR): Add the requireStack as well.\x0d\n  return err;\x0d\n}\x0d\n\x0d\n// Given a file name\x2C pass it to the proper extension handler.\x0d\nModule.prototype.load = function(filename) {\x0d\n  debug('load %j for module %j'\x2C filename\x2C this.id);\x0d\n\x0d\n  assert(!this.loaded);\x0d\n  this.filename = filename;\x0d\n  this.paths = Module._nodeModulePaths(path.dirname(filename));\x0d\n\x0d\n  const extension = findLongestRegisteredExtension(filename);\x0d\n  // allow .mjs to be overridden\x0d\n  if (StringPrototypeEndsWith(filename\x2C '.mjs') && !Module._extensions['.mjs'])\x0d\n    throw new ERR_REQUIRE_ESM(filename\x2C true);\x0d\n\x0d\n  Module._extensions[extension](this\x2C filename);\x0d\n  this.loaded = true;\x0d\n\x0d\n  const esmLoader = asyncESM.esmLoader;\x0d\n  // Create module entry at load time to snapshot exports correctly\x0d\n  const exports = this.exports;\x0d\n  // Preemptively cache\x0d\n  if ((module?.module === undefined ||\x0d\n       module.module.getStatus() < kEvaluated) &&\x0d\n      !esmLoader.cjsCache.has(this))\x0d\n    esmLoader.cjsCache.set(this\x2C exports);\x0d\n};\x0d\n\x0d\n\x0d\n// Loads a module at the given file path. Returns that module's\x0d\n// `exports` property.\x0d\nModule.prototype.require = function(id) {\x0d\n  validateString(id\x2C 'id');\x0d\n  if (id === '') {\x0d\n    throw new ERR_INVALID_ARG_VALUE('id'\x2C id\x2C\x0d\n                                    'must be a non-empty string');\x0d\n  }\x0d\n  requireDepth++;\x0d\n  try {\x0d\n    return Module._load(id\x2C this\x2C /* isMain */ false);\x0d\n  } finally {\x0d\n    requireDepth--;\x0d\n  }\x0d\n};\x0d\n\x0d\n\x0d\n// Resolved path to process.argv[1] will be lazily placed here\x0d\n// (needed for setting breakpoint when called with --inspect-brk)\x0d\nlet resolvedArgv;\x0d\nlet hasPausedEntry = false;\x0d\n\x0d\nfunction wrapSafe(filename\x2C content\x2C cjsModuleInstance) {\x0d\n  if (patched) {\x0d\n    const wrapper = Module.wrap(content);\x0d\n    const script = new Script(wrapper\x2C {\x0d\n      filename\x2C\x0d\n      lineOffset: 0\x2C\x0d\n      importModuleDynamically: async (specifier\x2C _\x2C importAssertions) => {\x0d\n        const loader = asyncESM.esmLoader;\x0d\n        return loader.import(specifier\x2C normalizeReferrerURL(filename)\x2C\x0d\n                             importAssertions);\x0d\n      }\x2C\x0d\n    });\x0d\n\x0d\n    // Cache the source map for the module if present.\x0d\n    if (script.sourceMapURL) {\x0d\n      maybeCacheSourceMap(filename\x2C content\x2C this\x2C false\x2C undefined\x2C script.sourceMapURL);\x0d\n    }\x0d\n\x0d\n    return script.runInThisContext({\x0d\n      displayErrors: true\x2C\x0d\n    });\x0d\n  }\x0d\n\x0d\n  try {\x0d\n    const result = internalCompileFunction(content\x2C [\x0d\n      'exports'\x2C\x0d\n      'require'\x2C\x0d\n      'module'\x2C\x0d\n      '__filename'\x2C\x0d\n      '__dirname'\x2C\x0d\n    ]\x2C {\x0d\n      filename\x2C\x0d\n      importModuleDynamically(specifier\x2C _\x2C importAssertions) {\x0d\n        const loader = asyncESM.esmLoader;\x0d\n        return loader.import(specifier\x2C normalizeReferrerURL(filename)\x2C\x0d\n                             importAssertions);\x0d\n      }\x2C\x0d\n    });\x0d\n\x0d\n    // Cache the source map for the module if present.\x0d\n    if (result.sourceMapURL) {\x0d\n      maybeCacheSourceMap(filename\x2C content\x2C this\x2C false\x2C undefined\x2C result.sourceMapURL);\x0d\n    }\x0d\n\x0d\n    return result.function;\x0d\n  } catch (err) {\x0d\n    if (process.mainModule === cjsModuleInstance)\x0d\n      enrichCJSError(err\x2C content);\x0d\n    throw err;\x0d\n  }\x0d\n}\x0d\n\x0d\n// Run the file contents in the correct scope or sandbox. Expose\x0d\n// the correct helper variables (require\x2C module\x2C exports) to\x0d\n// the file.\x0d\n// Returns exception\x2C if any.\x0d\nModule.prototype._compile = function(content\x2C filename) {\x0d\n  let moduleURL;\x0d\n  let redirects;\x0d\n  if (policy?.manifest) {\x0d\n    moduleURL = pathToFileURL(filename);\x0d\n    redirects = policy.manifest.getDependencyMapper(moduleURL);\x0d\n    policy.manifest.assertIntegrity(moduleURL\x2C content);\x0d\n  }\x0d\n\x0d\n  const compiledWrapper = wrapSafe(filename\x2C content\x2C this);\x0d\n\x0d\n  let inspectorWrapper = null;\x0d\n  if (getOptionValue('--inspect-brk') && process._eval == null) {\x0d\n    if (!resolvedArgv) {\x0d\n      // We enter the repl if we're not given a filename argument.\x0d\n      if (process.argv[1]) {\x0d\n        try {\x0d\n          resolvedArgv = Module._resolveFilename(process.argv[1]\x2C null\x2C false);\x0d\n        } catch {\x0d\n          // We only expect this codepath to be reached in the case of a\x0d\n          // preloaded module (it will fail earlier with the main entry)\x0d\n          assert(ArrayIsArray(getOptionValue('--require')));\x0d\n        }\x0d\n      } else {\x0d\n        resolvedArgv = 'repl';\x0d\n      }\x0d\n    }\x0d\n\x0d\n    // Set breakpoint on module start\x0d\n    if (resolvedArgv && !hasPausedEntry && filename === resolvedArgv) {\x0d\n      hasPausedEntry = true;\x0d\n      inspectorWrapper = internalBinding('inspector').callAndPauseOnStart;\x0d\n    }\x0d\n  }\x0d\n  const dirname = path.dirname(filename);\x0d\n  const require = makeRequireFunction(this\x2C redirects);\x0d\n  let result;\x0d\n  const exports = this.exports;\x0d\n  const thisValue = exports;\x0d\n  const module = this;\x0d\n  if (requireDepth === 0) statCache = new SafeMap();\x0d\n  if (inspectorWrapper) {\x0d\n    result = inspectorWrapper(compiledWrapper\x2C thisValue\x2C exports\x2C\x0d\n                              require\x2C module\x2C filename\x2C dirname);\x0d\n  } else {\x0d\n    result = ReflectApply(compiledWrapper\x2C thisValue\x2C\x0d\n                          [exports\x2C require\x2C module\x2C filename\x2C dirname]);\x0d\n  }\x0d\n  hasLoadedAnyUserCJSModule = true;\x0d\n  if (requireDepth === 0) statCache = null;\x0d\n  return result;\x0d\n};\x0d\n\x0d\n// Native extension for .js\x0d\nModule._extensions['.js'] = function(module\x2C filename) {\x0d\n  // If already analyzed the source\x2C then it will be cached.\x0d\n  const cached = cjsParseCache.get(module);\x0d\n  let content;\x0d\n  if (cached?.source) {\x0d\n    content = cached.source;\x0d\n    cached.source = undefined;\x0d\n  } else {\x0d\n    content = fs.readFileSync(filename\x2C 'utf8');\x0d\n  }\x0d\n  if (StringPrototypeEndsWith(filename\x2C '.js')) {\x0d\n    const pkg = readPackageScope(filename);\x0d\n    // Function require shouldn't be used in ES modules.\x0d\n    if (pkg?.data?.type === 'module') {\x0d\n      const parent = moduleParentCache.get(module);\x0d\n      const parentPath = parent?.filename;\x0d\n      const packageJsonPath = path.resolve(pkg.path\x2C 'package.json');\x0d\n      const usesEsm = hasEsmSyntax(content);\x0d\n      const err = new ERR_REQUIRE_ESM(filename\x2C usesEsm\x2C parentPath\x2C\x0d\n                                      packageJsonPath);\x0d\n      // Attempt to reconstruct the parent require frame.\x0d\n      if (Module._cache[parentPath]) {\x0d\n        let parentSource;\x0d\n        try {\x0d\n          parentSource = fs.readFileSync(parentPath\x2C 'utf8');\x0d\n        } catch {\x0d\n          // Continue regardless of error.\x0d\n        }\x0d\n        if (parentSource) {\x0d\n          const errLine = StringPrototypeSplit(\x0d\n            StringPrototypeSlice(err.stack\x2C StringPrototypeIndexOf(\x0d\n              err.stack\x2C '    at '))\x2C '\\n'\x2C 1)[0];\x0d\n          const { 1: line\x2C 2: col } =\x0d\n              RegExpPrototypeExec(/(\\d+):(\\d+)\\)/\x2C errLine) || [];\x0d\n          if (line && col) {\x0d\n            const srcLine = StringPrototypeSplit(parentSource\x2C '\\n')[line - 1];\x0d\n            const frame = `${parentPath}:${line}\\n${srcLine}\\n${\x0d\n              StringPrototypeRepeat(' '\x2C col - 1)}^\\n`;\x0d\n            setArrowMessage(err\x2C frame);\x0d\n          }\x0d\n        }\x0d\n      }\x0d\n      throw err;\x0d\n    }\x0d\n  }\x0d\n  module._compile(content\x2C filename);\x0d\n};\x0d\n\x0d\n\x0d\n// Native extension for .json\x0d\nModule._extensions['.json'] = function(module\x2C filename) {\x0d\n  const content = fs.readFileSync(filename\x2C 'utf8');\x0d\n\x0d\n  if (policy?.manifest) {\x0d\n    const moduleURL = pathToFileURL(filename);\x0d\n    policy.manifest.assertIntegrity(moduleURL\x2C content);\x0d\n  }\x0d\n\x0d\n  try {\x0d\n    setOwnProperty(module\x2C 'exports'\x2C JSONParse(stripBOM(content)));\x0d\n  } catch (err) {\x0d\n    err.message = filename + ': ' + err.message;\x0d\n    throw err;\x0d\n  }\x0d\n};\x0d\n\x0d\n\x0d\n// Native extension for .node\x0d\nModule._extensions['.node'] = function(module\x2C filename) {\x0d\n  if (policy?.manifest) {\x0d\n    const content = fs.readFileSync(filename);\x0d\n    const moduleURL = pathToFileURL(filename);\x0d\n    policy.manifest.assertIntegrity(moduleURL\x2C content);\x0d\n  }\x0d\n  // Be aware this doesn't use `content`\x0d\n  return process.dlopen(module\x2C path.toNamespacedPath(filename));\x0d\n};\x0d\n\x0d\nfunction createRequireFromPath(filename) {\x0d\n  // Allow a directory to be passed as the filename\x0d\n  const trailingSlash =\x0d\n    StringPrototypeEndsWith(filename\x2C '/') ||\x0d\n    (isWindows && StringPrototypeEndsWith(filename\x2C '\\\\'));\x0d\n\x0d\n  const proxyPath = trailingSlash ?\x0d\n    path.join(filename\x2C 'noop.js') :\x0d\n    filename;\x0d\n\x0d\n  const m = new Module(proxyPath);\x0d\n  m.filename = proxyPath;\x0d\n\x0d\n  m.paths = Module._nodeModulePaths(m.path);\x0d\n  return makeRequireFunction(m\x2C null);\x0d\n}\x0d\n\x0d\nconst createRequireError = 'must be a file URL object\x2C file URL string\x2C or ' +\x0d\n  'absolute path string';\x0d\n\x0d\nfunction createRequire(filename) {\x0d\n  let filepath;\x0d\n\x0d\n  if (isURLInstance(filename) ||\x0d\n      (typeof filename === 'string' && !path.isAbsolute(filename))) {\x0d\n    try {\x0d\n      filepath = fileURLToPath(filename);\x0d\n    } catch {\x0d\n      throw new ERR_INVALID_ARG_VALUE('filename'\x2C filename\x2C\x0d\n                                      createRequireError);\x0d\n    }\x0d\n  } else if (typeof filename !== 'string') {\x0d\n    throw new ERR_INVALID_ARG_VALUE('filename'\x2C filename\x2C createRequireError);\x0d\n  } else {\x0d\n    filepath = filename;\x0d\n  }\x0d\n  return createRequireFromPath(filepath);\x0d\n}\x0d\n\x0d\nModule.createRequire = createRequire;\x0d\n\x0d\nModule._initPaths = function() {\x0d\n  const homeDir = isWindows ? process.env.USERPROFILE : safeGetenv('HOME');\x0d\n  const nodePath = isWindows ? process.env.NODE_PATH : safeGetenv('NODE_PATH');\x0d\n\x0d\n  // process.execPath is $PREFIX/bin/node except on Windows where it is\x0d\n  // $PREFIX\\node.exe where $PREFIX is the root of the Node.js installation.\x0d\n  const prefixDir = isWindows ?\x0d\n    path.resolve(process.execPath\x2C '..') :\x0d\n    path.resolve(process.execPath\x2C '..'\x2C '..');\x0d\n\x0d\n  const paths = [path.resolve(prefixDir\x2C 'lib'\x2C 'node')];\x0d\n\x0d\n  if (homeDir) {\x0d\n    ArrayPrototypeUnshift(paths\x2C path.resolve(homeDir\x2C '.node_libraries'));\x0d\n    ArrayPrototypeUnshift(paths\x2C path.resolve(homeDir\x2C '.node_modules'));\x0d\n  }\x0d\n\x0d\n  if (nodePath) {\x0d\n    ArrayPrototypeUnshiftApply(paths\x2C ArrayPrototypeFilter(\x0d\n      StringPrototypeSplit(nodePath\x2C path.delimiter)\x2C\x0d\n      Boolean\x0d\n    ));\x0d\n  }\x0d\n\x0d\n  modulePaths = paths;\x0d\n\x0d\n  // Clone as a shallow copy\x2C for introspection.\x0d\n  Module.globalPaths = ArrayPrototypeSlice(modulePaths);\x0d\n};\x0d\n\x0d\nModule._preloadModules = function(requests) {\x0d\n  if (!ArrayIsArray(requests))\x0d\n    return;\x0d\n\x0d\n  isPreloading = true;\x0d\n\x0d\n  // Preloaded modules have a dummy parent module which is deemed to exist\x0d\n  // in the current working directory. This seeds the search path for\x0d\n  // preloaded modules.\x0d\n  const parent = new Module('internal/preload'\x2C null);\x0d\n  try {\x0d\n    parent.paths = Module._nodeModulePaths(process.cwd());\x0d\n  } catch (e) {\x0d\n    if (e.code !== 'ENOENT') {\x0d\n      isPreloading = false;\x0d\n      throw e;\x0d\n    }\x0d\n  }\x0d\n  for (let n = 0; n < requests.length; n++)\x0d\n    parent.require(requests[n]);\x0d\n  isPreloading = false;\x0d\n};\x0d\n\x0d\nModule.syncBuiltinESMExports = function syncBuiltinESMExports() {\x0d\n  for (const mod of BuiltinModule.map.values()) {\x0d\n    if (mod.canBeRequiredByUsers &&\x0d\n        BuiltinModule.canBeRequiredWithoutScheme(mod.id)) {\x0d\n      mod.syncExports();\x0d\n    }\x0d\n  }\x0d\n};\x0d\n\x0d\nModule.isBuiltin = function isBuiltin(moduleName) {\x0d\n  return allBuiltins.has(moduleName);\x0d\n};\x0d\n\x0d\n// Backwards compatibility\x0d\nModule.Module = Module;\x0d\n
code-source-info,0x14dbcba4030,448,0,45576,C0O0C4O45576,,
code-creation,Function,10,296850,0x14dbcba6208,2931, node:internal/modules/cjs/loader:1:1,0x14dbcba3fa8,~
code-source-info,0x14dbcba
code-creation,Eval,10,297650,0x14dbcbaa8a0,5, node:internal/modules/package_json_reader:1:1,0x14dbcbaa6f8,~
script-source,449,node:internal/modules/package_json_reader,'use strict';\x0d\n\x0d\nconst { SafeMap } = primordials;\x0d\nconst { internalModuleReadJSON } = internalBinding('fs');\x0d\nconst { pathToFileURL } = require('url');\x0d\nconst { toNamespacedPath } = require('path');\x0d\n\x0d\nconst cache = new SafeMap();\x0d\n\x0d\nlet manifest;\x0d\n\x0d\n/**\x0d\n *\x0d\n * @param {string} jsonPath\x0d\n */\x0d\nfunction read(jsonPath) {\x0d\n  if (cache.has(jsonPath)) {\x0d\n    return cache.get(jsonPath);\x0d\n  }\x0d\n\x0d\n  const { 0: string\x2C 1: containsKeys } = internalModuleReadJSON(\x0d\n    toNamespacedPath(jsonPath)\x0d\n  );\x0d\n  const result = { string\x2C containsKeys };\x0d\n  const { getOptionValue } = require('internal/options');\x0d\n  if (string !== undefined) {\x0d\n    if (manifest === undefined) {\x0d\n      manifest = getOptionValue('--experimental-policy') ?\x0d\n        require('internal/process/policy').manifest :\x0d\n        null;\x0d\n    }\x0d\n    if (manifest !== null) {\x0d\n      const jsonURL = pathToFileURL(jsonPath);\x0d\n      manifest.assertIntegrity(jsonURL\x2C string);\x0d\n    }\x0d\n  }\x0d\n  cache.set(jsonPath\x2C result);\x0d\n  return result;\x0d\n}\x0d\n\x0d\nmodule.exports = { read };\x0d\n
code-source-info,0x14dbcbaa8a0,449,0,1024,C0O0C4O1024,,
code-creation,Function,10,297775,0x14dbcbaa9f0,113, node:internal/modules/package_json_reader:1:1,0x14dbcbaa818,~
code-source-info,0x14dbcbaa9f0,449,0,1024,C0O0C29O25C34O86C37O86C42O59C48O136C54O136C59O118C65O182C71O182C76O161C82O216C84O216C89O216C91O238C92O238C94O996C101O1015C107O1011C112O1023,,
code-creation,Eval,10,298031,0x14dbcbab1b8,5, node:internal/process/esm_loader:1:1,0x14dbcbaafb0,~
script-source,450,node:internal/process/esm_loader,'use strict';\x0d\n\x0d\nconst {\x0d\n  ObjectCreate\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  ERR_VM_DYNAMIC_IMPORT_CALLBACK_MISSING\x2C\x0d\n} = require('internal/errors').codes;\x0d\nconst { ESMLoader } = require('internal/modules/esm/loader');\x0d\nconst {\x0d\n  hasUncaughtExceptionCaptureCallback\x2C\x0d\n} = require('internal/process/execution');\x0d\nconst { pathToFileURL } = require('internal/url');\x0d\nconst {\x0d\n  getModuleFromWrap\x2C\x0d\n} = require('internal/vm/module');\x0d\n\x0d\nexports.initializeImportMetaObject = function(wrap\x2C meta) {\x0d\n  const { callbackMap } = internalBinding('module_wrap');\x0d\n  if (callbackMap.has(wrap)) {\x0d\n    const { initializeImportMeta } = callbackMap.get(wrap);\x0d\n    if (initializeImportMeta !== undefined) {\x0d\n      initializeImportMeta(meta\x2C getModuleFromWrap(wrap) || wrap);\x0d\n    }\x0d\n  }\x0d\n};\x0d\n\x0d\nexports.importModuleDynamicallyCallback =\x0d\nasync function importModuleDynamicallyCallback(wrap\x2C specifier\x2C assertions) {\x0d\n  const { callbackMap } = internalBinding('module_wrap');\x0d\n  if (callbackMap.has(wrap)) {\x0d\n    const { importModuleDynamically } = callbackMap.get(wrap);\x0d\n    if (importModuleDynamically !== undefined) {\x0d\n      return importModuleDynamically(\x0d\n        specifier\x2C getModuleFromWrap(wrap) || wrap\x2C assertions);\x0d\n    }\x0d\n  }\x0d\n  throw new ERR_VM_DYNAMIC_IMPORT_CALLBACK_MISSING();\x0d\n};\x0d\n\x0d\nconst esmLoader = new ESMLoader();\x0d\nexports.esmLoader = esmLoader;\x0d\n\x0d\n// Module.runMain() causes loadESM() to re-run (which it should do); however\x2C this should NOT cause\x0d\n// ESM to be re-initialised; doing so causes duplicate custom loaders to be added to the public\x0d\n// esmLoader.\x0d\nlet isESMInitialized = false;\x0d\n\x0d\n/**\x0d\n * Causes side-effects: user-defined loader hooks are added to esmLoader.\x0d\n * @returns {void}\x0d\n */\x0d\nasync function initializeLoader() {\x0d\n  if (isESMInitialized) { return; }\x0d\n\x0d\n  const { getOptionValue } = require('internal/options');\x0d\n  const customLoaders = getOptionValue('--experimental-loader');\x0d\n\x0d\n  if (customLoaders.length === 0) return;\x0d\n\x0d\n  let cwd;\x0d\n  try {\x0d\n    cwd = process.cwd() + '/';\x0d\n  } catch {\x0d\n    cwd = 'file:///';\x0d\n  }\x0d\n\x0d\n  // A separate loader instance is necessary to avoid cross-contamination\x0d\n  // between internal Node.js and userland. For example\x2C a module with internal\x0d\n  // state (such as a counter) should be independent.\x0d\n  const internalEsmLoader = new ESMLoader();\x0d\n\x0d\n  // Importation must be handled by internal loader to avoid poluting userland\x0d\n  const keyedExportsList = await internalEsmLoader.import(\x0d\n    customLoaders\x2C\x0d\n    pathToFileURL(cwd).href\x2C\x0d\n    ObjectCreate(null)\x2C\x0d\n  );\x0d\n\x0d\n  // Hooks must then be added to external/public loader\x0d\n  // (so they're triggered in userland)\x0d\n  await esmLoader.addCustomLoaders(keyedExportsList);\x0d\n\x0d\n  isESMInitialized = true;\x0d\n}\x0d\n\x0d\nexports.loadESM = async function loadESM(callback) {\x0d\n  try {\x0d\n    await initializeLoader();\x0d\n    await callback(esmLoader);\x0d\n  } catch (err) {\x0d\n    if (hasUncaughtExceptionCaptureCallback()) {\x0d\n      process._fatalException(err);\x0d\n      return;\x0d\n    }\x0d\n    internalBinding('errors').triggerUncaughtException(\x0d\n      err\x2C\x0d\n      true /* fromPromise */\x0d\n    );\x0d\n  }\x0d\n};\x0d\n
code-source-info,0x14dbcbab1b8,450,0,3087,C0O0C4O3087,,
code-creation,Function,10,298304,0x14dbcbab458,188, node:internal/process/esm_loader:1:1,0x14dbcbab130,~
code-source-info,0x14dbcbab458,450,0,3087,C0O0C47O28C53O119C59O119C64O145C69O74C75O176C81O176C86O162C92O270C98O270C103O228C109O336C115O336C120O318C126O397C132O397C137O373C143O431C147O466C151O777C155O817C159O1300C162O1300C167O1300C169O1318C171O1336C175O1588C176O1588C178O2717C182O2733C187O3086,,
code-creation,Eval,10,299008,0x14dbcbaca10,5, node:internal/modules/esm/loader:1:1,0x14dbcbac540,~
script-source,451,node:internal/modules/esm/loader,'use strict';\x0d\n\x0d\n// This is needed to avoid cycles in esm/resolve <-> cjs/loader\x0d\nrequire('internal/modules/cjs/loader');\x0d\n\x0d\nconst {\x0d\n  Array\x2C\x0d\n  ArrayIsArray\x2C\x0d\n  ArrayPrototypeJoin\x2C\x0d\n  ArrayPrototypePush\x2C\x0d\n  FunctionPrototypeCall\x2C\x0d\n  ObjectAssign\x2C\x0d\n  ObjectCreate\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  RegExpPrototypeExec\x2C\x0d\n  SafePromiseAllReturnArrayLike\x2C\x0d\n  SafeWeakMap\x2C\x0d\n  StringPrototypeSlice\x2C\x0d\n  StringPrototypeToUpperCase\x2C\x0d\n  globalThis\x2C\x0d\n} = primordials;\x0d\nconst { MessageChannel } = require('internal/worker/io');\x0d\n\x0d\nconst {\x0d\n  ERR_LOADER_CHAIN_INCOMPLETE\x2C\x0d\n  ERR_INTERNAL_ASSERTION\x2C\x0d\n  ERR_INVALID_ARG_TYPE\x2C\x0d\n  ERR_INVALID_ARG_VALUE\x2C\x0d\n  ERR_INVALID_RETURN_PROPERTY_VALUE\x2C\x0d\n  ERR_INVALID_RETURN_VALUE\x2C\x0d\n  ERR_UNKNOWN_MODULE_FORMAT\x2C\x0d\n} = require('internal/errors').codes;\x0d\nconst { pathToFileURL\x2C isURLInstance\x2C URL } = require('internal/url');\x0d\nconst { emitExperimentalWarning } = require('internal/util');\x0d\nconst {\x0d\n  isAnyArrayBuffer\x2C\x0d\n  isArrayBufferView\x2C\x0d\n} = require('internal/util/types');\x0d\nconst {\x0d\n  validateObject\x2C\x0d\n  validateString\x2C\x0d\n} = require('internal/validators');\x0d\nconst ModuleMap = require('internal/modules/esm/module_map');\x0d\nconst ModuleJob = require('internal/modules/esm/module_job');\x0d\n\x0d\nconst {\x0d\n  defaultResolve\x2C\x0d\n  DEFAULT_CONDITIONS\x2C\x0d\n} = require('internal/modules/esm/resolve');\x0d\nconst {\x0d\n  initializeImportMeta\x0d\n} = require('internal/modules/esm/initialize_import_meta');\x0d\nconst { defaultLoad } = require('internal/modules/esm/load');\x0d\nconst { translators } = require(\x0d\n  'internal/modules/esm/translators');\x0d\nconst { getOptionValue } = require('internal/options');\x0d\n\x0d\n/**\x0d\n * @typedef {object} ExportedHooks\x0d\n * @property {Function} globalPreload Global preload hook.\x0d\n * @property {Function} resolve Resolve hook.\x0d\n * @property {Function} load Load hook.\x0d\n */\x0d\n\x0d\n/**\x0d\n * @typedef {Record<string\x2C any>} ModuleExports\x0d\n */\x0d\n\x0d\n/**\x0d\n * @typedef {object} KeyedExports\x0d\n * @property {ModuleExports} exports The contents of the module.\x0d\n * @property {URL['href']} url The URL of the module.\x0d\n */\x0d\n\x0d\n/**\x0d\n * @typedef {object} KeyedHook\x0d\n * @property {Function} fn The hook function.\x0d\n * @property {URL['href']} url The URL of the module.\x0d\n */\x0d\n\x0d\n/**\x0d\n * @typedef {'builtin'|'commonjs'|'json'|'module'|'wasm'} ModuleFormat\x0d\n */\x0d\n\x0d\n/**\x0d\n * @typedef {ArrayBuffer|TypedArray|string} ModuleSource\x0d\n */\x0d\n\x0d\n// [2] `validate...()`s throw the wrong error\x0d\n\x0d\nlet emittedSpecifierResolutionWarning = false;\x0d\n\x0d\n/**\x0d\n * A utility function to iterate through a hook chain\x2C track advancement in the\x0d\n * chain\x2C and generate and supply the `next<HookName>` argument to the custom\x0d\n * hook.\x0d\n * @param {KeyedHook[]} chain The whole hook chain.\x0d\n * @param {object} meta Properties that change as the current hook advances\x0d\n * along the chain.\x0d\n * @param {boolean} meta.chainFinished Whether the end of the chain has been\x0d\n * reached AND invoked.\x0d\n * @param {string} meta.hookErrIdentifier A user-facing identifier to help\x0d\n *  pinpoint where an error occurred. Ex "file:///foo.mjs 'resolve'".\x0d\n * @param {number} meta.hookIndex A non-negative integer tracking the current\x0d\n * position in the hook chain.\x0d\n * @param {string} meta.hookName The kind of hook the chain is (ex 'resolve')\x0d\n * @param {boolean} meta.shortCircuited Whether a hook signaled a short-circuit.\x0d\n * @param {(hookErrIdentifier\x2C hookArgs) => void} validate A wrapper function\x0d\n *  containing all validation of a custom loader hook's intermediary output. Any\x0d\n *  validation within MUST throw.\x0d\n * @returns {function next<HookName>(...hookArgs)} The next hook in the chain.\x0d\n */\x0d\nfunction nextHookFactory(chain\x2C meta\x2C { validateArgs\x2C validateOutput }) {\x0d\n  // First\x2C prepare the current\x0d\n  const { hookName } = meta;\x0d\n  const {\x0d\n    fn: hook\x2C\x0d\n    url: hookFilePath\x2C\x0d\n  } = chain[meta.hookIndex];\x0d\n\x0d\n  // ex 'nextResolve'\x0d\n  const nextHookName = `next${\x0d\n    StringPrototypeToUpperCase(hookName[0]) +\x0d\n    StringPrototypeSlice(hookName\x2C 1)\x0d\n  }`;\x0d\n\x0d\n  // When hookIndex is 0\x2C it's reached the default\x2C which does not call next()\x0d\n  // so feed it a noop that blows up if called\x2C so the problem is obvious.\x0d\n  const generatedHookIndex = meta.hookIndex;\x0d\n  let nextNextHook;\x0d\n  if (meta.hookIndex > 0) {\x0d\n    // Now\x2C prepare the next: decrement the pointer so the next call to the\x0d\n    // factory generates the next link in the chain.\x0d\n    meta.hookIndex--;\x0d\n\x0d\n    nextNextHook = nextHookFactory(chain\x2C meta\x2C { validateArgs\x2C validateOutput });\x0d\n  } else {\x0d\n    // eslint-disable-next-line func-name-matching\x0d\n    nextNextHook = function chainAdvancedTooFar() {\x0d\n      throw new ERR_INTERNAL_ASSERTION(\x0d\n        `ESM custom loader '${hookName}' advanced beyond the end of the chain.`\x0d\n      );\x0d\n    };\x0d\n  }\x0d\n\x0d\n  return ObjectDefineProperty(\x0d\n    async (arg0 = undefined\x2C context) => {\x0d\n      // Update only when hook is invoked to avoid fingering the wrong filePath\x0d\n      meta.hookErrIdentifier = `${hookFilePath} '${hookName}'`;\x0d\n\x0d\n      validateArgs(`${meta.hookErrIdentifier} hook's ${nextHookName}()`\x2C arg0\x2C context);\x0d\n\x0d\n      const outputErrIdentifier = `${chain[generatedHookIndex].url} '${hookName}' hook's ${nextHookName}()`;\x0d\n\x0d\n      // Set when next<HookName> is actually called\x2C not just generated.\x0d\n      if (generatedHookIndex === 0) { meta.chainFinished = true; }\x0d\n\x0d\n      if (context) { // `context` has already been validated\x2C so no fancy check needed.\x0d\n        ObjectAssign(meta.context\x2C context);\x0d\n      }\x0d\n\x0d\n      const output = await hook(arg0\x2C meta.context\x2C nextNextHook);\x0d\n\x0d\n      validateOutput(outputErrIdentifier\x2C output);\x0d\n\x0d\n      if (output?.shortCircuit === true) { meta.shortCircuited = true; }\x0d\n      return output;\x0d\n\x0d\n    }\x2C\x0d\n    'name'\x2C\x0d\n    { __proto__: null\x2C value: nextHookName }\x2C\x0d\n  );\x0d\n}\x0d\n\x0d\n/**\x0d\n * An ESMLoader instance is used as the main entry point for loading ES modules.\x0d\n * Currently\x2C this is a singleton -- there is only one used for loading\x0d\n * the main module and everything in its dependency graph.\x0d\n */\x0d\nclass ESMLoader {\x0d\n  #hooks = {\x0d\n    /**\x0d\n     * Prior to ESM loading. These are called once before any modules are started.\x0d\n     * @private\x0d\n     * @property {KeyedHook[]} globalPreload Last-in-first-out list of preload hooks.\x0d\n     */\x0d\n    globalPreload: []\x2C\x0d\n\x0d\n    /**\x0d\n     * Phase 2 of 2 in ESM loading (phase 1 is below).\x0d\n     * @private\x0d\n     * @property {KeyedHook[]} load Last-in-first-out collection of loader hooks.\x0d\n     */\x0d\n    load: [\x0d\n      {\x0d\n        fn: defaultLoad\x2C\x0d\n        url: 'node:internal/modules/esm/load'\x2C\x0d\n      }\x2C\x0d\n    ]\x2C\x0d\n\x0d\n    /**\x0d\n     * Phase 1 of 2 in ESM loading.\x0d\n     * @private\x0d\n     * @property {KeyedHook[]} resolve Last-in-first-out collection of resolve hooks.\x0d\n     */\x0d\n    resolve: [\x0d\n      {\x0d\n        fn: defaultResolve\x2C\x0d\n        url: 'node:internal/modules/esm/resolve'\x2C\x0d\n      }\x2C\x0d\n    ]\x2C\x0d\n  };\x0d\n\x0d\n  #importMetaInitializer = initializeImportMeta;\x0d\n\x0d\n  /**\x0d\n   * Map of already-loaded CJS modules to use\x0d\n   */\x0d\n  cjsCache = new SafeWeakMap();\x0d\n\x0d\n  /**\x0d\n   * The index for assigning unique URLs to anonymous module evaluation\x0d\n   */\x0d\n  evalIndex = 0;\x0d\n\x0d\n  /**\x0d\n   * Registry of loaded modules\x2C akin to `require.cache`\x0d\n   */\x0d\n  moduleMap = new ModuleMap();\x0d\n\x0d\n  /**\x0d\n   * Methods which translate input code or other information into ES modules\x0d\n   */\x0d\n  translators = translators;\x0d\n\x0d\n  constructor() {\x0d\n    if (getOptionValue('--experimental-loader').length > 0) {\x0d\n      emitExperimentalWarning('Custom ESM Loaders');\x0d\n    }\x0d\n    if (getOptionValue('--experimental-network-imports')) {\x0d\n      emitExperimentalWarning('Network Imports');\x0d\n    }\x0d\n    if (\x0d\n      !emittedSpecifierResolutionWarning &&\x0d\n      getOptionValue('--experimental-specifier-resolution') === 'node'\x0d\n    ) {\x0d\n      process.emitWarning(\x0d\n        'The Node.js specifier resolution flag is experimental. It could change or be removed at any time.'\x2C\x0d\n        'ExperimentalWarning'\x0d\n      );\x0d\n      emittedSpecifierResolutionWarning = true;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   *\x0d\n   * @param {ModuleExports} exports\x0d\n   * @returns {ExportedHooks}\x0d\n   */\x0d\n  static pluckHooks({\x0d\n    globalPreload\x2C\x0d\n    resolve\x2C\x0d\n    load\x2C\x0d\n    // obsolete hooks:\x0d\n    dynamicInstantiate\x2C\x0d\n    getFormat\x2C\x0d\n    getGlobalPreloadCode\x2C\x0d\n    getSource\x2C\x0d\n    transformSource\x2C\x0d\n  }) {\x0d\n    const obsoleteHooks = [];\x0d\n    const acceptedHooks = ObjectCreate(null);\x0d\n\x0d\n    if (getGlobalPreloadCode) {\x0d\n      globalPreload ??= getGlobalPreloadCode;\x0d\n\x0d\n      process.emitWarning(\x0d\n        'Loader hook "getGlobalPreloadCode" has been renamed to "globalPreload"'\x0d\n      );\x0d\n    }\x0d\n    if (dynamicInstantiate) ArrayPrototypePush(\x0d\n      obsoleteHooks\x2C\x0d\n      'dynamicInstantiate'\x0d\n    );\x0d\n    if (getFormat) ArrayPrototypePush(\x0d\n      obsoleteHooks\x2C\x0d\n      'getFormat'\x2C\x0d\n    );\x0d\n    if (getSource) ArrayPrototypePush(\x0d\n      obsoleteHooks\x2C\x0d\n      'getSource'\x2C\x0d\n    );\x0d\n    if (transformSource) ArrayPrototypePush(\x0d\n      obsoleteHooks\x2C\x0d\n      'transformSource'\x2C\x0d\n    );\x0d\n\x0d\n    if (obsoleteHooks.length) process.emitWarning(\x0d\n      `Obsolete loader hook(s) supplied and will be ignored: ${\x0d\n        ArrayPrototypeJoin(obsoleteHooks\x2C '\x2C ')\x0d\n      }`\x2C\x0d\n      'DeprecationWarning'\x2C\x0d\n    );\x0d\n\x0d\n    if (globalPreload) {\x0d\n      acceptedHooks.globalPreload = globalPreload;\x0d\n    }\x0d\n    if (resolve) {\x0d\n      acceptedHooks.resolve = resolve;\x0d\n    }\x0d\n    if (load) {\x0d\n      acceptedHooks.load = load;\x0d\n    }\x0d\n\x0d\n    return acceptedHooks;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * Collect custom/user-defined hook(s). After all hooks have been collected\x2C\x0d\n   * calls global preload hook(s).\x0d\n   * @param {KeyedExports} customLoaders\x0d\n   *  A list of exports from user-defined loaders (as returned by\x0d\n   *  ESMLoader.import()).\x0d\n   */\x0d\n  addCustomLoaders(\x0d\n    customLoaders = []\x2C\x0d\n  ) {\x0d\n    for (let i = 0; i < customLoaders.length; i++) {\x0d\n      const {\x0d\n        exports\x2C\x0d\n        url\x2C\x0d\n      } = customLoaders[i];\x0d\n      const {\x0d\n        globalPreload\x2C\x0d\n        resolve\x2C\x0d\n        load\x2C\x0d\n      } = ESMLoader.pluckHooks(exports);\x0d\n\x0d\n      if (globalPreload) {\x0d\n        ArrayPrototypePush(\x0d\n          this.#hooks.globalPreload\x2C\x0d\n          {\x0d\n            fn: globalPreload\x2C\x0d\n            url\x2C\x0d\n          }\x2C\x0d\n        );\x0d\n      }\x0d\n      if (resolve) {\x0d\n        ArrayPrototypePush(\x0d\n          this.#hooks.resolve\x2C\x0d\n          {\x0d\n            fn: resolve\x2C\x0d\n            url\x2C\x0d\n          }\x2C\x0d\n        );\x0d\n      }\x0d\n      if (load) {\x0d\n        ArrayPrototypePush(\x0d\n          this.#hooks.load\x2C\x0d\n          {\x0d\n            fn: load\x2C\x0d\n            url\x2C\x0d\n          }\x2C\x0d\n        );\x0d\n      }\x0d\n    }\x0d\n\x0d\n    this.preload();\x0d\n  }\x0d\n\x0d\n  async eval(\x0d\n    source\x2C\x0d\n    url = pathToFileURL(`${process.cwd()}/[eval${++this.evalIndex}]`).href\x0d\n  ) {\x0d\n    const evalInstance = (url) => {\x0d\n      const { ModuleWrap\x2C callbackMap } = internalBinding('module_wrap');\x0d\n      const module = new ModuleWrap(url\x2C undefined\x2C source\x2C 0\x2C 0);\x0d\n      callbackMap.set(module\x2C {\x0d\n        importModuleDynamically: (specifier\x2C { url }\x2C importAssertions) => {\x0d\n          return this.import(specifier\x2C url\x2C importAssertions);\x0d\n        }\x0d\n      });\x0d\n\x0d\n      return module;\x0d\n    };\x0d\n    const job = new ModuleJob(\x0d\n      this\x2C url\x2C undefined\x2C evalInstance\x2C false\x2C false);\x0d\n    this.moduleMap.set(url\x2C undefined\x2C job);\x0d\n    const { module } = await job.run();\x0d\n\x0d\n    return {\x0d\n      namespace: module.getNamespace()\x2C\x0d\n    };\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * Get a (possibly still pending) module job from the cache\x2C\x0d\n   * or create one and return its Promise.\x0d\n   * @param {string} specifier The string after `from` in an `import` statement\x2C\x0d\n   *                           or the first parameter of an `import()`\x0d\n   *                           expression\x0d\n   * @param {string | undefined} parentURL The URL of the module importing this\x0d\n   *                                     one\x2C unless this is the Node.js entry\x0d\n   *                                     point.\x0d\n   * @param {Record<string\x2C string>} importAssertions Validations for the\x0d\n   *                                                  module import.\x0d\n   * @returns {Promise<ModuleJob>} The (possibly pending) module job\x0d\n   */\x0d\n  async getModuleJob(specifier\x2C parentURL\x2C importAssertions) {\x0d\n    let importAssertionsForResolve;\x0d\n\x0d\n    // By default\x2C `this.#hooks.load` contains just the Node default load hook\x0d\n    if (this.#hooks.load.length !== 1) {\x0d\n      // We can skip cloning if there are no user-provided loaders because\x0d\n      // the Node.js default resolve hook does not use import assertions.\x0d\n      importAssertionsForResolve = {\x0d\n        __proto__: null\x2C\x0d\n        ...importAssertions\x2C\x0d\n      };\x0d\n    }\x0d\n\x0d\n    const { format\x2C url } =\x0d\n      await this.resolve(specifier\x2C parentURL\x2C importAssertionsForResolve);\x0d\n\x0d\n    let job = this.moduleMap.get(url\x2C importAssertions.type);\x0d\n\x0d\n    // CommonJS will set functions for lazy job evaluation.\x0d\n    if (typeof job === 'function') {\x0d\n      this.moduleMap.set(url\x2C undefined\x2C job = job());\x0d\n    }\x0d\n\x0d\n    if (job === undefined) {\x0d\n      job = this.#createModuleJob(url\x2C importAssertions\x2C parentURL\x2C format);\x0d\n    }\x0d\n\x0d\n    return job;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * Create and cache an object representing a loaded module.\x0d\n   * @param {string} url The absolute URL that was resolved for this module\x0d\n   * @param {Record<string\x2C string>} importAssertions Validations for the\x0d\n   *                                                  module import.\x0d\n   * @param {string} [parentURL] The absolute URL of the module importing this\x0d\n   *                             one\x2C unless this is the Node.js entry point\x0d\n   * @param {string} [format] The format hint possibly returned by the\x0d\n   *                          `resolve` hook\x0d\n   * @returns {Promise<ModuleJob>} The (possibly pending) module job\x0d\n   */\x0d\n  #createModuleJob(url\x2C importAssertions\x2C parentURL\x2C format) {\x0d\n    const moduleProvider = async (url\x2C isMain) => {\x0d\n      const {\x0d\n        format: finalFormat\x2C\x0d\n        responseURL\x2C\x0d\n        source\x2C\x0d\n      } = await this.load(url\x2C {\x0d\n        format\x2C\x0d\n        importAssertions\x2C\x0d\n      });\x0d\n\x0d\n      const translator = translators.get(finalFormat);\x0d\n\x0d\n      if (!translator) {\x0d\n        throw new ERR_UNKNOWN_MODULE_FORMAT(finalFormat\x2C responseURL);\x0d\n      }\x0d\n\x0d\n      return FunctionPrototypeCall(translator\x2C this\x2C responseURL\x2C source\x2C isMain);\x0d\n    };\x0d\n\x0d\n    const inspectBrk = (\x0d\n      parentURL === undefined &&\x0d\n      getOptionValue('--inspect-brk')\x0d\n    );\x0d\n\x0d\n    if (process.env.WATCH_REPORT_DEPENDENCIES && process.send) {\x0d\n      process.send({ 'watch:import': [url] });\x0d\n    }\x0d\n\x0d\n    const job = new ModuleJob(\x0d\n      this\x2C\x0d\n      url\x2C\x0d\n      importAssertions\x2C\x0d\n      moduleProvider\x2C\x0d\n      parentURL === undefined\x2C\x0d\n      inspectBrk\x0d\n    );\x0d\n\x0d\n    this.moduleMap.set(url\x2C importAssertions.type\x2C job);\x0d\n\x0d\n    return job;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * This method is usually called indirectly as part of the loading processes.\x0d\n   * Internally\x2C it is used directly to add loaders. Use directly with caution.\x0d\n   *\x0d\n   * This method must NOT be renamed: it functions as a dynamic import on a\x0d\n   * loader module.\x0d\n   *\x0d\n   * @param {string | string[]} specifiers Path(s) to the module.\x0d\n   * @param {string} parentURL Path of the parent importing the module.\x0d\n   * @param {Record<string\x2C string>} importAssertions Validations for the\x0d\n   *                                                  module import.\x0d\n   * @returns {Promise<ExportedHooks | KeyedExports[]>}\x0d\n   *  A collection of module export(s) or a list of collections of module\x0d\n   *  export(s).\x0d\n   */\x0d\n  async import(specifiers\x2C parentURL\x2C importAssertions) {\x0d\n    // For loaders\x2C `import` is passed multiple things to process\x2C it returns a\x0d\n    // list pairing the url and exports collected. This is especially useful for\x0d\n    // error messaging\x2C to identity from where an export came. But\x2C in most\x0d\n    // cases\x2C only a single url is being "imported" (ex `import()`)\x2C so there is\x0d\n    // only 1 possible url from which the exports were collected and it is\x0d\n    // already known to the caller. Nesting that in a list would only ever\x0d\n    // create redundant work for the caller\x2C so it is later popped off the\x0d\n    // internal list.\x0d\n    const wasArr = ArrayIsArray(specifiers);\x0d\n    if (!wasArr) { specifiers = [specifiers]; }\x0d\n\x0d\n    const count = specifiers.length;\x0d\n    const jobs = new Array(count);\x0d\n\x0d\n    for (let i = 0; i < count; i++) {\x0d\n      jobs[i] = this.getModuleJob(specifiers[i]\x2C parentURL\x2C importAssertions)\x0d\n        .then((job) => job.run())\x0d\n        .then(({ module }) => module.getNamespace());\x0d\n    }\x0d\n\x0d\n    const namespaces = await SafePromiseAllReturnArrayLike(jobs);\x0d\n\x0d\n    if (!wasArr) { return namespaces[0]; } // We can skip the pairing below\x0d\n\x0d\n    for (let i = 0; i < count; i++) {\x0d\n      namespaces[i] = {\x0d\n        __proto__: null\x2C\x0d\n        url: specifiers[i]\x2C\x0d\n        exports: namespaces[i]\x2C\x0d\n      };\x0d\n    }\x0d\n\x0d\n    return namespaces;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * Provide source that is understood by one of Node's translators.\x0d\n   *\x0d\n   * Internally\x2C this behaves like a backwards iterator\x2C wherein the stack of\x0d\n   * hooks starts at the top and each call to `nextLoad()` moves down 1 step\x0d\n   * until it reaches the bottom or short-circuits.\x0d\n   *\x0d\n   * @param {URL['href']} url The URL/path of the module to be loaded\x0d\n   * @param {object} context Metadata about the module\x0d\n   * @returns {{ format: ModuleFormat\x2C source: ModuleSource }}\x0d\n   */\x0d\n  async load(url\x2C context = {}) {\x0d\n    const chain = this.#hooks.load;\x0d\n    const meta = {\x0d\n      chainFinished: null\x2C\x0d\n      context\x2C\x0d\n      hookErrIdentifier: ''\x2C\x0d\n      hookIndex: chain.length - 1\x2C\x0d\n      hookName: 'load'\x2C\x0d\n      shortCircuited: false\x2C\x0d\n    };\x0d\n\x0d\n    const validateArgs = (hookErrIdentifier\x2C nextUrl\x2C ctx) => {\x0d\n      if (typeof nextUrl !== 'string') {\x0d\n        // non-strings can be coerced to a url string\x0d\n        // validateString() throws a less-specific error\x0d\n        throw new ERR_INVALID_ARG_TYPE(\x0d\n          `${hookErrIdentifier} url`\x2C\x0d\n          'a url string'\x2C\x0d\n          nextUrl\x2C\x0d\n        );\x0d\n      }\x0d\n\x0d\n      // Try to avoid expensive URL instantiation for known-good urls\x0d\n      if (!this.moduleMap.has(nextUrl)) {\x0d\n        try {\x0d\n          new URL(nextUrl);\x0d\n        } catch {\x0d\n          throw new ERR_INVALID_ARG_VALUE(\x0d\n            `${hookErrIdentifier} url`\x2C\x0d\n            nextUrl\x2C\x0d\n            'should be a url string'\x2C\x0d\n          );\x0d\n        }\x0d\n      }\x0d\n\x0d\n      if (ctx) validateObject(ctx\x2C `${hookErrIdentifier} context`);\x0d\n    };\x0d\n    const validateOutput = (hookErrIdentifier\x2C output) => {\x0d\n      if (typeof output !== 'object' || output === null) { // [2]\x0d\n        throw new ERR_INVALID_RETURN_VALUE(\x0d\n          'an object'\x2C\x0d\n          hookErrIdentifier\x2C\x0d\n          output\x2C\x0d\n        );\x0d\n      }\x0d\n    };\x0d\n\x0d\n    const nextLoad = nextHookFactory(chain\x2C meta\x2C { validateArgs\x2C validateOutput });\x0d\n\x0d\n    const loaded = await nextLoad(url\x2C context);\x0d\n    const { hookErrIdentifier } = meta; // Retrieve the value after all settled\x0d\n\x0d\n    validateOutput(hookErrIdentifier\x2C loaded);\x0d\n\x0d\n    if (loaded?.shortCircuit === true) { meta.shortCircuited = true; }\x0d\n\x0d\n    if (!meta.chainFinished && !meta.shortCircuited) {\x0d\n      throw new ERR_LOADER_CHAIN_INCOMPLETE(hookErrIdentifier);\x0d\n    }\x0d\n\x0d\n    const {\x0d\n      format\x2C\x0d\n      source\x2C\x0d\n    } = loaded;\x0d\n    let responseURL = loaded.responseURL;\x0d\n\x0d\n    if (responseURL === undefined) {\x0d\n      responseURL = url;\x0d\n    }\x0d\n\x0d\n    let responseURLObj;\x0d\n    if (typeof responseURL === 'string') {\x0d\n      try {\x0d\n        responseURLObj = new URL(responseURL);\x0d\n      } catch {\x0d\n        // responseURLObj not defined will throw in next branch.\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (responseURLObj?.href !== responseURL) {\x0d\n      throw new ERR_INVALID_RETURN_PROPERTY_VALUE(\x0d\n        'undefined or a fully resolved URL string'\x2C\x0d\n        hookErrIdentifier\x2C\x0d\n        'responseURL'\x2C\x0d\n        responseURL\x2C\x0d\n      );\x0d\n    }\x0d\n\x0d\n    if (format == null) {\x0d\n      const dataUrl = RegExpPrototypeExec(\x0d\n        /^data:([^/]+\\/[^;\x2C]+)(?:[^\x2C]*?)(;base64)?\x2C/\x2C\x0d\n        url\x2C\x0d\n      );\x0d\n\x0d\n      throw new ERR_UNKNOWN_MODULE_FORMAT(\x0d\n        dataUrl ? dataUrl[1] : format\x2C\x0d\n        url);\x0d\n    }\x0d\n\x0d\n    if (typeof format !== 'string') { // [2]\x0d\n      throw new ERR_INVALID_RETURN_PROPERTY_VALUE(\x0d\n        'a string'\x2C\x0d\n        hookErrIdentifier\x2C\x0d\n        'format'\x2C\x0d\n        format\x2C\x0d\n      );\x0d\n    }\x0d\n\x0d\n    if (\x0d\n      source != null &&\x0d\n      typeof source !== 'string' &&\x0d\n      !isAnyArrayBuffer(source) &&\x0d\n      !isArrayBufferView(source)\x0d\n    ) {\x0d\n      throw ERR_INVALID_RETURN_PROPERTY_VALUE(\x0d\n        'a string\x2C an ArrayBuffer\x2C or a TypedArray'\x2C\x0d\n        hookErrIdentifier\x2C\x0d\n        'source'\x2C\x0d\n        source\x0d\n      );\x0d\n    }\x0d\n\x0d\n    return {\x0d\n      __proto__: null\x2C\x0d\n      format\x2C\x0d\n      responseURL\x2C\x0d\n      source\x2C\x0d\n    };\x0d\n  }\x0d\n\x0d\n  preload() {\x0d\n    for (let i = this.#hooks.globalPreload.length - 1; i >= 0; i--) {\x0d\n      const channel = new MessageChannel();\x0d\n      const {\x0d\n        port1: insidePreload\x2C\x0d\n        port2: insideLoader\x2C\x0d\n      } = channel;\x0d\n\x0d\n      insidePreload.unref();\x0d\n      insideLoader.unref();\x0d\n\x0d\n      const {\x0d\n        fn: preload\x2C\x0d\n        url: specifier\x2C\x0d\n      } = this.#hooks.globalPreload[i];\x0d\n\x0d\n      const preloaded = preload({\x0d\n        port: insideLoader\x2C\x0d\n      });\x0d\n\x0d\n      if (preloaded == null) { return; }\x0d\n\x0d\n      const hookErrIdentifier = `${specifier} globalPreload`;\x0d\n\x0d\n      if (typeof preloaded !== 'string') { // [2]\x0d\n        throw new ERR_INVALID_RETURN_VALUE(\x0d\n          'a string'\x2C\x0d\n          hookErrIdentifier\x2C\x0d\n          preload\x2C\x0d\n        );\x0d\n      }\x0d\n      const { compileFunction } = require('vm');\x0d\n      const preloadInit = compileFunction(\x0d\n        preloaded\x2C\x0d\n        ['getBuiltin'\x2C 'port'\x2C 'setImportMetaCallback']\x2C\x0d\n        {\x0d\n          filename: '<preload>'\x2C\x0d\n        }\x0d\n      );\x0d\n      const { BuiltinModule } = require('internal/bootstrap/loaders');\x0d\n      // We only allow replacing the importMetaInitializer during preload\x2C\x0d\n      // after preload is finished\x2C we disable the ability to replace it\x0d\n      //\x0d\n      // This exposes accidentally setting the initializer too late by\x0d\n      // throwing an error.\x0d\n      let finished = false;\x0d\n      let replacedImportMetaInitializer = false;\x0d\n      let next = this.#importMetaInitializer;\x0d\n      try {\x0d\n        // Calls the compiled preload source text gotten from the hook\x0d\n        // Since the parameters are named we use positional parameters\x0d\n        // see compileFunction above to cross reference the names\x0d\n        FunctionPrototypeCall(\x0d\n          preloadInit\x2C\x0d\n          globalThis\x2C\x0d\n          // Param getBuiltin\x0d\n          (builtinName) => {\x0d\n            if (BuiltinModule.canBeRequiredByUsers(builtinName) &&\x0d\n                BuiltinModule.canBeRequiredWithoutScheme(builtinName)) {\x0d\n              return require(builtinName);\x0d\n            }\x0d\n            throw new ERR_INVALID_ARG_VALUE('builtinName'\x2C builtinName);\x0d\n          }\x2C\x0d\n          // Param port\x0d\n          insidePreload\x2C\x0d\n          // Param setImportMetaCallback\x0d\n          (fn) => {\x0d\n            if (finished || typeof fn !== 'function') {\x0d\n              throw new ERR_INVALID_ARG_TYPE('fn'\x2C fn);\x0d\n            }\x0d\n            replacedImportMetaInitializer = true;\x0d\n            const parent = next;\x0d\n            next = (meta\x2C context) => {\x0d\n              return fn(meta\x2C context\x2C parent);\x0d\n            };\x0d\n          });\x0d\n      } finally {\x0d\n        finished = true;\x0d\n        if (replacedImportMetaInitializer) {\x0d\n          this.#importMetaInitializer = next;\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  importMetaInitialize(meta\x2C context) {\x0d\n    this.#importMetaInitializer(meta\x2C context);\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * Resolve the location of the module.\x0d\n   *\x0d\n   * Internally\x2C this behaves like a backwards iterator\x2C wherein the stack of\x0d\n   * hooks starts at the top and each call to `nextResolve()` moves down 1 step\x0d\n   * until it reaches the bottom or short-circuits.\x0d\n   *\x0d\n   * @param {string} originalSpecifier The specified URL path of the module to\x0d\n   *                                   be resolved.\x0d\n   * @param {string} [parentURL] The URL path of the module's parent.\x0d\n   * @param {ImportAssertions} [importAssertions] Assertions from the import\x0d\n   *                                              statement or expression.\x0d\n   * @returns {{ format: string\x2C url: URL['href'] }}\x0d\n   */\x0d\n  async resolve(\x0d\n    originalSpecifier\x2C\x0d\n    parentURL\x2C\x0d\n    importAssertions = ObjectCreate(null)\x2C\x0d\n  ) {\x0d\n    const isMain = parentURL === undefined;\x0d\n\x0d\n    if (\x0d\n      !isMain &&\x0d\n      typeof parentURL !== 'string' &&\x0d\n      !isURLInstance(parentURL)\x0d\n    ) {\x0d\n      throw new ERR_INVALID_ARG_TYPE(\x0d\n        'parentURL'\x2C\x0d\n        ['string'\x2C 'URL']\x2C\x0d\n        parentURL\x2C\x0d\n      );\x0d\n    }\x0d\n    const chain = this.#hooks.resolve;\x0d\n    const context = {\x0d\n      conditions: DEFAULT_CONDITIONS\x2C\x0d\n      importAssertions\x2C\x0d\n      parentURL\x2C\x0d\n    };\x0d\n    const meta = {\x0d\n      chainFinished: null\x2C\x0d\n      context\x2C\x0d\n      hookErrIdentifier: ''\x2C\x0d\n      hookIndex: chain.length - 1\x2C\x0d\n      hookName: 'resolve'\x2C\x0d\n      shortCircuited: false\x2C\x0d\n    };\x0d\n\x0d\n    const validateArgs = (hookErrIdentifier\x2C suppliedSpecifier\x2C ctx) => {\x0d\n      validateString(\x0d\n        suppliedSpecifier\x2C\x0d\n        `${hookErrIdentifier} specifier`\x2C\x0d\n      ); // non-strings can be coerced to a url string\x0d\n\x0d\n      if (ctx) validateObject(ctx\x2C `${hookErrIdentifier} context`);\x0d\n    };\x0d\n    const validateOutput = (hookErrIdentifier\x2C output) => {\x0d\n      if (typeof output !== 'object' || output === null) { // [2]\x0d\n        throw new ERR_INVALID_RETURN_VALUE(\x0d\n          'an object'\x2C\x0d\n          hookErrIdentifier\x2C\x0d\n          output\x2C\x0d\n        );\x0d\n      }\x0d\n    };\x0d\n\x0d\n    const nextResolve = nextHookFactory(chain\x2C meta\x2C { validateArgs\x2C validateOutput });\x0d\n\x0d\n    const resolution = await nextResolve(originalSpecifier\x2C context);\x0d\n    const { hookErrIdentifier } = meta; // Retrieve the value after all settled\x0d\n\x0d\n    validateOutput(hookErrIdentifier\x2C resolution);\x0d\n\x0d\n    if (resolution?.shortCircuit === true) { meta.shortCircuited = true; }\x0d\n\x0d\n    if (!meta.chainFinished && !meta.shortCircuited) {\x0d\n      throw new ERR_LOADER_CHAIN_INCOMPLETE(hookErrIdentifier);\x0d\n    }\x0d\n\x0d\n    const {\x0d\n      format\x2C\x0d\n      url\x2C\x0d\n    } = resolution;\x0d\n\x0d\n    if (\x0d\n      format != null &&\x0d\n      typeof format !== 'string' // [2]\x0d\n    ) {\x0d\n      throw new ERR_INVALID_RETURN_PROPERTY_VALUE(\x0d\n        'a string'\x2C\x0d\n        hookErrIdentifier\x2C\x0d\n        'format'\x2C\x0d\n        format\x2C\x0d\n      );\x0d\n    }\x0d\n\x0d\n    if (typeof url !== 'string') {\x0d\n      // non-strings can be coerced to a url string\x0d\n      // validateString() throws a less-specific error\x0d\n      throw new ERR_INVALID_RETURN_PROPERTY_VALUE(\x0d\n        'a url string'\x2C\x0d\n        hookErrIdentifier\x2C\x0d\n        'url'\x2C\x0d\n        url\x2C\x0d\n      );\x0d\n    }\x0d\n\x0d\n    // Try to avoid expensive URL instantiation for known-good urls\x0d\n    if (!this.moduleMap.has(url)) {\x0d\n      try {\x0d\n        new URL(url);\x0d\n      } catch {\x0d\n        throw new ERR_INVALID_RETURN_PROPERTY_VALUE(\x0d\n          'a url string'\x2C\x0d\n          hookErrIdentifier\x2C\x0d\n          'url'\x2C\x0d\n          url\x2C\x0d\n        );\x0d\n      }\x0d\n    }\x0d\n\x0d\n    return {\x0d\n      __proto__: null\x2C\x0d\n      format\x2C\x0d\n      url\x2C\x0d\n    };\x0d\n  }\x0d\n}\x0d\n\x0d\nObjectSetPrototypeOf(ESMLoader.prototype\x2C null);\x0d\n\x0d\nexports.ESMLoader = ESMLoader;\x0d\n
code-source-info,0x14dbcbaca10,451,0,27083,C0O0C4O27083,,
tick,0x7ffaeaa0d0e4,307979,1,0x7ff725a6ef10,3,0x7ff7264a2ab0,0x1f81b7195d6,0x7ff6a66c32e1,0x14dbcbab4a9,0x1f81b7195f7,0x7ff6a66c32e1,0x14dbcba671e,0x1f81b7195f7,0x7ff6a66c32e1,0x14dbcba11ae,0x14dbcba0fa3,0xb50533ad4e,0xb505339468,0xb5053356e1
code-creation,Function,10,308028,0x14dbcbad308,677, node:internal/modules/esm/loader:1:1,0x14dbcbac988,~
code-source-info,0x14dbcbad308,451,0,27083,C0O0C140O82C146O82C150O136C156O146C162O163C168O186C174O209C180O235C186O252C192O269C198O294C203O319C209O343C215O377C221O393C227O418C233O449C239O507C245O507C250O488C256O761C262O761C267O787C272O552C278O584C284O611C290O636C296O662C302O700C308O729C314O842C320O842C325O804C331O819C337O834C343O904C349O904C354O876C360O987C366O987C371O942C377O963C383O1071C389O1071C394O1031C400O1050C406O1122C412O1122C416O1122C418O1185C424O1185C428O1185C430O1287C436O1287C441O1243C447O1262C453O1366C459O1366C464O1340C470O1447C476O1447C481O1431C487O1510C493O1510C498O1494C504O1587C510O1587C515O1568C521O2433C522O2433C657O27030C664O26999C669O27051C671O27069C676O27082,,
code-creation,Function,10,308167,0x14dbcbad8d8,144,<instance_members_initializer> node:internal/modules/esm/loader:181:1,0x14dbcbace30,~
code-source-info,0x14dbcbad8d8,451,5942,26995,C3O5972C8O6391C24O6415C42O6669C58O6693C85O6814C95O6913C102O6913C111O7036C116O7128C123O7128C132O7256C143O26995,,
code-creation,Eval,10,308532,0x14dbcbafb58,5, node:internal/modules/esm/module_map:1:1,0x14dbcbaf958,~
script-source,452,node:internal/modules/esm/module_map,'use strict';\x0d\n\x0d\nconst ModuleJob = require('internal/modules/esm/module_job');\x0d\nconst { kImplicitAssertType } = require('internal/modules/esm/assert');\x0d\nconst {\x0d\n  ObjectCreate\x2C\x0d\n  SafeMap\x2C\x0d\n} = primordials;\x0d\nlet debug = require('internal/util/debuglog').debuglog('esm'\x2C (fn) => {\x0d\n  debug = fn;\x0d\n});\x0d\nconst { ERR_INVALID_ARG_TYPE } = require('internal/errors').codes;\x0d\nconst { validateString } = require('internal/validators');\x0d\n\x0d\n// Tracks the state of the loader-level module cache\x0d\nclass ModuleMap extends SafeMap {\x0d\n  constructor(i) { super(i); } // eslint-disable-line no-useless-constructor\x0d\n  get(url\x2C type = kImplicitAssertType) {\x0d\n    validateString(url\x2C 'url');\x0d\n    validateString(type\x2C 'type');\x0d\n    return super.get(url)?.[type];\x0d\n  }\x0d\n  set(url\x2C type = kImplicitAssertType\x2C job) {\x0d\n    validateString(url\x2C 'url');\x0d\n    validateString(type\x2C 'type');\x0d\n    if (job instanceof ModuleJob !== true &&\x0d\n        typeof job !== 'function') {\x0d\n      throw new ERR_INVALID_ARG_TYPE('job'\x2C 'ModuleJob'\x2C job);\x0d\n    }\x0d\n    debug(`Storing ${url} (${\x0d\n      type === kImplicitAssertType ? 'implicit type' : type\x0d\n    }) in ModuleMap`);\x0d\n    const cachedJobsForUrl = super.get(url) ?? ObjectCreate(null);\x0d\n    cachedJobsForUrl[type] = job;\x0d\n    return super.set(url\x2C cachedJobsForUrl);\x0d\n  }\x0d\n  has(url\x2C type = kImplicitAssertType) {\x0d\n    validateString(url\x2C 'url');\x0d\n    validateString(type\x2C 'type');\x0d\n    return super.get(url)?.[type] !== undefined;\x0d\n  }\x0d\n}\x0d\nmodule.exports = ModuleMap;\x0d\n
code-source-info,0x14dbcbafb58,452,0,1487,C0O0C4O1487,,
code-creation,Function,10,308696,0x14dbcbaff90,175, node:internal/modules/esm/module_map:1:1,0x14dbcbafad0,~
code-source-info,0x14dbcbaff90,452,0,1487,C0O0C23O35C26O35C30O35C32O112C35O112C40O88C46O164C52O181C57O221C60O221C65O254C78O255C84O221C86O335C89O335C94O361C99O310C105O397C108O397C113O378C123O510C167O1458C169O1473C174O1486,,
code-creation,Eval,10,309068,0x14dbcbb0ab8,5, node:internal/modules/esm/module_job:1:1,0x14dbcbb07e0,~
script-source,453,node:internal/modules/esm/module_job,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeJoin\x2C\x0d\n  ArrayPrototypePush\x2C\x0d\n  ArrayPrototypeSome\x2C\x0d\n  FunctionPrototype\x2C\x0d\n  ObjectCreate\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  PromiseResolve\x2C\x0d\n  PromisePrototypeThen\x2C\x0d\n  ReflectApply\x2C\x0d\n  RegExpPrototypeExec\x2C\x0d\n  RegExpPrototypeSymbolReplace\x2C\x0d\n  SafePromiseAllReturnArrayLike\x2C\x0d\n  SafePromiseAllReturnVoid\x2C\x0d\n  SafeSet\x2C\x0d\n  StringPrototypeIncludes\x2C\x0d\n  StringPrototypeSplit\x2C\x0d\n  StringPrototypeStartsWith\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst { ModuleWrap } = internalBinding('module_wrap');\x0d\n\x0d\nconst { decorateErrorStack } = require('internal/util');\x0d\nconst {\x0d\n  getSourceMapsEnabled\x2C\x0d\n} = require('internal/source_map/source_map_cache');\x0d\nconst assert = require('internal/assert');\x0d\nconst resolvedPromise = PromiseResolve();\x0d\n\x0d\nconst noop = FunctionPrototype;\x0d\n\x0d\nlet hasPausedEntry = false;\x0d\n\x0d\nconst CJSGlobalLike = [\x0d\n  'require'\x2C\x0d\n  'module'\x2C\x0d\n  'exports'\x2C\x0d\n  '__filename'\x2C\x0d\n  '__dirname'\x2C\x0d\n];\x0d\nconst isCommonJSGlobalLikeNotDefinedError = (errorMessage) =>\x0d\n  ArrayPrototypeSome(\x0d\n    CJSGlobalLike\x2C\x0d\n    (globalLike) => errorMessage === `${globalLike} is not defined`\x0d\n  );\x0d\n\x0d\n/* A ModuleJob tracks the loading of a single Module\x2C and the ModuleJobs of\x0d\n * its dependencies\x2C over time. */\x0d\nclass ModuleJob {\x0d\n  // `loader` is the Loader instance used for loading dependencies.\x0d\n  // `moduleProvider` is a function\x0d\n  constructor(loader\x2C url\x2C importAssertions = ObjectCreate(null)\x2C\x0d\n              moduleProvider\x2C isMain\x2C inspectBrk) {\x0d\n    this.loader = loader;\x0d\n    this.importAssertions = importAssertions;\x0d\n    this.isMain = isMain;\x0d\n    this.inspectBrk = inspectBrk;\x0d\n\x0d\n    this.module = undefined;\x0d\n    // Expose the promise to the ModuleWrap directly for linking below.\x0d\n    // `this.module` is also filled in below.\x0d\n    this.modulePromise = ReflectApply(moduleProvider\x2C loader\x2C [url\x2C isMain]);\x0d\n\x0d\n    // Wait for the ModuleWrap instance being linked with all dependencies.\x0d\n    const link = async () => {\x0d\n      this.module = await this.modulePromise;\x0d\n      assert(this.module instanceof ModuleWrap);\x0d\n\x0d\n      // Explicitly keeping track of dependency jobs is needed in order\x0d\n      // to flatten out the dependency graph below in `_instantiate()`\x2C\x0d\n      // so that circular dependencies can't cause a deadlock by two of\x0d\n      // these `link` callbacks depending on each other.\x0d\n      const dependencyJobs = [];\x0d\n      const promises = this.module.link(async (specifier\x2C assertions) => {\x0d\n        const jobPromise = this.loader.getModuleJob(specifier\x2C url\x2C assertions);\x0d\n        ArrayPrototypePush(dependencyJobs\x2C jobPromise);\x0d\n        const job = await jobPromise;\x0d\n        return job.modulePromise;\x0d\n      });\x0d\n\x0d\n      if (promises !== undefined)\x0d\n        await SafePromiseAllReturnVoid(promises);\x0d\n\x0d\n      return SafePromiseAllReturnArrayLike(dependencyJobs);\x0d\n    };\x0d\n    // Promise for the list of all dependencyJobs.\x0d\n    this.linked = link();\x0d\n    // This promise is awaited later anyway\x2C so silence\x0d\n    // 'unhandled rejection' warnings.\x0d\n    PromisePrototypeThen(this.linked\x2C undefined\x2C noop);\x0d\n\x0d\n    // instantiated == deep dependency jobs wrappers are instantiated\x2C\x0d\n    // and module wrapper is instantiated.\x0d\n    this.instantiated = undefined;\x0d\n  }\x0d\n\x0d\n  instantiate() {\x0d\n    if (this.instantiated === undefined) {\x0d\n      this.instantiated = this._instantiate();\x0d\n    }\x0d\n    return this.instantiated;\x0d\n  }\x0d\n\x0d\n  async _instantiate() {\x0d\n    const jobsInGraph = new SafeSet();\x0d\n    const addJobsToDependencyGraph = async (moduleJob) => {\x0d\n      if (jobsInGraph.has(moduleJob)) {\x0d\n        return;\x0d\n      }\x0d\n      jobsInGraph.add(moduleJob);\x0d\n      const dependencyJobs = await moduleJob.linked;\x0d\n      return SafePromiseAllReturnVoid(dependencyJobs\x2C addJobsToDependencyGraph);\x0d\n    };\x0d\n    await addJobsToDependencyGraph(this);\x0d\n\x0d\n    try {\x0d\n      if (!hasPausedEntry && this.inspectBrk) {\x0d\n        hasPausedEntry = true;\x0d\n        const initWrapper = internalBinding('inspector').callAndPauseOnStart;\x0d\n        initWrapper(this.module.instantiate\x2C this.module);\x0d\n      } else {\x0d\n        this.module.instantiate();\x0d\n      }\x0d\n    } catch (e) {\x0d\n      decorateErrorStack(e);\x0d\n      // TODO(@bcoe): Add source map support to exception that occurs as result\x0d\n      // of missing named export. This is currently not possible because\x0d\n      // stack trace originates in module_job\x2C not the file itself. A hidden\x0d\n      // symbol with filename could be set in node_errors.cc to facilitate this.\x0d\n      if (!getSourceMapsEnabled() &&\x0d\n          StringPrototypeIncludes(e.message\x2C\x0d\n                                  ' does not provide an export named')) {\x0d\n        const splitStack = StringPrototypeSplit(e.stack\x2C '\\n');\x0d\n        const parentFileUrl = RegExpPrototypeSymbolReplace(\x0d\n          /:\\d+$/\x2C\x0d\n          splitStack[0]\x2C\x0d\n          ''\x0d\n        );\x0d\n        const { 1: childSpecifier\x2C 2: name } = RegExpPrototypeExec(\x0d\n          /module '(.*)' does not provide an export named '(.+)'/\x2C\x0d\n          e.message);\x0d\n        const { url: childFileURL } = await this.loader.resolve(\x0d\n          childSpecifier\x2C parentFileUrl\x2C\x0d\n        );\x0d\n        let format;\x0d\n        try {\x0d\n          // This might throw for non-CommonJS modules because we aren't passing\x0d\n          // in the import assertions and some formats require them; but we only\x0d\n          // care about CommonJS for the purposes of this error message.\x0d\n          ({ format } =\x0d\n            await this.loader.load(childFileURL));\x0d\n        } catch {\x0d\n          // Continue regardless of error.\x0d\n        }\x0d\n\x0d\n        if (format === 'commonjs') {\x0d\n          const importStatement = splitStack[1];\x0d\n          // TODO(@ctavan): The original error stack only provides the single\x0d\n          // line which causes the error. For multi-line import statements we\x0d\n          // cannot generate an equivalent object destructuring assignment by\x0d\n          // just parsing the error stack.\x0d\n          const oneLineNamedImports = RegExpPrototypeExec(/{.*}/\x2C importStatement);\x0d\n          const destructuringAssignment = oneLineNamedImports &&\x0d\n            RegExpPrototypeSymbolReplace(/\\s+as\\s+/g\x2C oneLineNamedImports\x2C ': ');\x0d\n          e.message = `Named export '${name}' not found. The requested module` +\x0d\n            ` '${childSpecifier}' is a CommonJS module\x2C which may not support` +\x0d\n            ' all module.exports as named exports.\\nCommonJS modules can ' +\x0d\n            'always be imported via the default export\x2C for example using:' +\x0d\n            `\\n\\nimport pkg from '${childSpecifier}';\\n${\x0d\n              destructuringAssignment ?\x0d\n                `const ${destructuringAssignment} = pkg;\\n` : ''}`;\x0d\n          const newStack = StringPrototypeSplit(e.stack\x2C '\\n');\x0d\n          newStack[3] = `SyntaxError: ${e.message}`;\x0d\n          e.stack = ArrayPrototypeJoin(newStack\x2C '\\n');\x0d\n        }\x0d\n      }\x0d\n      throw e;\x0d\n    }\x0d\n\x0d\n    for (const dependencyJob of jobsInGraph) {\x0d\n      // Calling `this.module.instantiate()` instantiates not only the\x0d\n      // ModuleWrap in this module\x2C but all modules in the graph.\x0d\n      dependencyJob.instantiated = resolvedPromise;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  async run() {\x0d\n    await this.instantiate();\x0d\n    const timeout = -1;\x0d\n    const breakOnSigint = false;\x0d\n    try {\x0d\n      await this.module.evaluate(timeout\x2C breakOnSigint);\x0d\n    } catch (e) {\x0d\n      if (e?.name === 'ReferenceError' &&\x0d\n          isCommonJSGlobalLikeNotDefinedError(e.message)) {\x0d\n        e.message += ' in ES module scope';\x0d\n\x0d\n        if (StringPrototypeStartsWith(e.message\x2C 'require ')) {\x0d\n          e.message += '\x2C you can use import instead';\x0d\n        }\x0d\n\x0d\n        const packageConfig =\x0d\n          StringPrototypeStartsWith(this.module.url\x2C 'file://') &&\x0d\n            RegExpPrototypeExec(/\\.js(\\?[^#]*)?(#.*)?$/\x2C this.module.url) !== null &&\x0d\n            require('internal/modules/esm/resolve')\x0d\n              .getPackageScopeConfig(this.module.url);\x0d\n        if (packageConfig.type === 'module') {\x0d\n          e.message +=\x0d\n            '\\nThis file is being treated as an ES module because it has a ' +\x0d\n            `'.js' file extension and '${packageConfig.pjsonPath}' contains ` +\x0d\n            '"type": "module". To treat it as a CommonJS script\x2C rename it ' +\x0d\n            'to use the \\'.cjs\\' file extension.';\x0d\n        }\x0d\n      }\x0d\n      throw e;\x0d\n    }\x0d\n    return { __proto__: null\x2C module: this.module };\x0d\n  }\x0d\n}\x0d\nObjectSetPrototypeOf(ModuleJob.prototype\x2C null);\x0d\nmodule.exports = ModuleJob;\x0d\n
code-source-info,0x14dbcbb0ab8,453,0,8386,C0O0C4O8386,,
code-creation,Function,10,309637,0x14dbcbb0fa0,325, node:internal/modules/esm/module_job:1:1,0x14dbcbb0a30,~
code-source-info,0x14dbcbb0fa0,453,0,8386,C0O0C82O28C88O51C94O74C100O97C105O119C111O136C116O161C121O180C127O205C133O222C139O246C145O279C151O313C157O342C163O354C169O382C175O407C181O478C187O478C192O463C198O544C204O544C209O521C215O609C221O609C226O582C232O674C238O674C242O674C244O727C247O727C249O761C251O761C253O804C254O804C256O836C260O836C262O961C266O961C305O8338C312O8307C317O8357C319O8372C324O8385,,
code-creation,Eval,10,310000,0x14dbcbb2bb0,5, node:internal/modules/esm/assert:1:1,0x14dbcbb29b8,~
script-source,454,node:internal/modules/esm/assert,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeFilter\x2C\x0d\n  ArrayPrototypeIncludes\x2C\x0d\n  ObjectCreate\x2C\x0d\n  ObjectValues\x2C\x0d\n  ObjectPrototypeHasOwnProperty\x2C\x0d\n} = primordials;\x0d\nconst { validateString } = require('internal/validators');\x0d\n\x0d\nconst {\x0d\n  ERR_IMPORT_ASSERTION_TYPE_FAILED\x2C\x0d\n  ERR_IMPORT_ASSERTION_TYPE_MISSING\x2C\x0d\n  ERR_IMPORT_ASSERTION_TYPE_UNSUPPORTED\x2C\x0d\n} = require('internal/errors').codes;\x0d\n\x0d\n// The HTML spec has an implied default type of `'javascript'`.\x0d\nconst kImplicitAssertType = 'javascript';\x0d\n\x0d\n/**\x0d\n * Define a map of module formats to import assertion types (the value of\x0d\n * `type` in `assert { type: 'json' }`).\x0d\n * @type {Map<string\x2C string>}\x0d\n */\x0d\nconst formatTypeMap = {\x0d\n  '__proto__': null\x2C\x0d\n  'builtin': kImplicitAssertType\x2C\x0d\n  'commonjs': kImplicitAssertType\x2C\x0d\n  'json': 'json'\x2C\x0d\n  'module': kImplicitAssertType\x2C\x0d\n  'wasm': kImplicitAssertType\x2C // It's unclear whether the HTML spec will require an assertion type or not for Wasm; see https://github.com/WebAssembly/esm-integration/issues/42\x0d\n};\x0d\n\x0d\n/**\x0d\n * The HTML spec disallows the default type to be explicitly specified\x0d\n * (for now); so `import './file.js'` is okay but\x0d\n * `import './file.js' assert { type: 'javascript' }` throws.\x0d\n * @type {Array<string\x2C string>}\x0d\n */\x0d\nconst supportedAssertionTypes = ArrayPrototypeFilter(\x0d\n  ObjectValues(formatTypeMap)\x2C\x0d\n  (type) => type !== kImplicitAssertType);\x0d\n\x0d\n\x0d\n/**\x0d\n * Test a module's import assertions.\x0d\n * @param {string} url The URL of the imported module\x2C for error reporting.\x0d\n * @param {string} format One of Node's supported translators\x0d\n * @param {Record<string\x2C string>} importAssertions Validations for the\x0d\n *                                                  module import.\x0d\n * @returns {true}\x0d\n * @throws {TypeError} If the format and assertion type are incompatible.\x0d\n */\x0d\nfunction validateAssertions(url\x2C format\x2C\x0d\n                            importAssertions = ObjectCreate(null)) {\x0d\n  const validType = formatTypeMap[format];\x0d\n\x0d\n  switch (validType) {\x0d\n    case undefined:\x0d\n      // Ignore assertions for module formats we don't recognize\x2C to allow new\x0d\n      // formats in the future.\x0d\n      return true;\x0d\n\x0d\n    case kImplicitAssertType:\x0d\n      // This format doesn't allow an import assertion type\x2C so the property\x0d\n      // must not be set on the import assertions object.\x0d\n      if (!ObjectPrototypeHasOwnProperty(importAssertions\x2C 'type')) {\x0d\n        return true;\x0d\n      }\x0d\n      return handleInvalidType(url\x2C importAssertions.type);\x0d\n\x0d\n    case importAssertions.type:\x0d\n      // The asserted type is the valid type for this format.\x0d\n      return true;\x0d\n\x0d\n    default:\x0d\n      // There is an expected type for this format\x2C but the value of\x0d\n      // `importAssertions.type` might not have been it.\x0d\n      if (!ObjectPrototypeHasOwnProperty(importAssertions\x2C 'type')) {\x0d\n        // `type` wasn't specified at all.\x0d\n        throw new ERR_IMPORT_ASSERTION_TYPE_MISSING(url\x2C validType);\x0d\n      }\x0d\n      return handleInvalidType(url\x2C importAssertions.type);\x0d\n  }\x0d\n}\x0d\n\x0d\n/**\x0d\n * Throw the correct error depending on what's wrong with the type assertion.\x0d\n * @param {string} url The resolved URL for the module to be imported\x0d\n * @param {string} type The value of the import assertion `type` property\x0d\n */\x0d\nfunction handleInvalidType(url\x2C type) {\x0d\n  // `type` might have not been a string.\x0d\n  validateString(type\x2C 'type');\x0d\n\x0d\n  // `type` might not have been one of the types we understand.\x0d\n  if (!ArrayPrototypeIncludes(supportedAssertionTypes\x2C type)) {\x0d\n    throw new ERR_IMPORT_ASSERTION_TYPE_UNSUPPORTED(type);\x0d\n  }\x0d\n\x0d\n  // `type` was the wrong value for this format.\x0d\n  throw new ERR_IMPORT_ASSERTION_TYPE_FAILED(url\x2C type);\x0d\n}\x0d\n\x0d\n\x0d\nmodule.exports = {\x0d\n  kImplicitAssertType\x2C\x0d\n  validateAssertions\x2C\x0d\n};\x0d\n
code-source-info,0x14dbcbb2bb0,454,0,3741,C0O0C4O3741,,
code-creation,Function,10,310294,0x14dbcbb2e88,201, node:internal/modules/esm/assert:1:1,0x14dbcbb2b28,~
code-source-info,0x14dbcbb2e88,454,0,3741,C0O0C46O28C51O53C57O80C63O97C68O114C74O191C77O191C82O172C88O356C91O356C96O382C101O237C107O274C113O312C119O486C121O486C123O684C130O722C136O758C142O811C148O843C154O684C156O1280C159O1305C169O1280C174O1280C176O3670C183O3692C189O3716C195O3685C200O3740,,
code-creation,LazyCompile,10,310477,0x14dbcbb34a0,9, node:internal/modules/esm/assert:43:3,0x14dbcbb2c80,~
code-source-info,0x14dbcbb34a0,454,1337,1375,C0O1352C2O1356C4O1352C8O1375,,
code-creation,Eval,10,311534,0x14dbcbb5ef8,5, node:internal/modules/esm/resolve:1:1,0x14dbcbb4a28,~
script-source,455,node:internal/modules/esm/resolve,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayIsArray\x2C\x0d\n  ArrayPrototypeConcat\x2C\x0d\n  ArrayPrototypeJoin\x2C\x0d\n  ArrayPrototypeShift\x2C\x0d\n  JSONParse\x2C\x0d\n  JSONStringify\x2C\x0d\n  ObjectFreeze\x2C\x0d\n  ObjectGetOwnPropertyNames\x2C\x0d\n  ObjectPrototypeHasOwnProperty\x2C\x0d\n  RegExp\x2C\x0d\n  RegExpPrototypeExec\x2C\x0d\n  RegExpPrototypeSymbolReplace\x2C\x0d\n  SafeMap\x2C\x0d\n  SafeSet\x2C\x0d\n  String\x2C\x0d\n  StringPrototypeEndsWith\x2C\x0d\n  StringPrototypeIncludes\x2C\x0d\n  StringPrototypeIndexOf\x2C\x0d\n  StringPrototypeLastIndexOf\x2C\x0d\n  StringPrototypeReplace\x2C\x0d\n  StringPrototypeSlice\x2C\x0d\n  StringPrototypeSplit\x2C\x0d\n  StringPrototypeStartsWith\x2C\x0d\n} = primordials;\x0d\nconst internalFS = require('internal/fs/utils');\x0d\nconst { BuiltinModule } = require('internal/bootstrap/loaders');\x0d\nconst {\x0d\n  realpathSync\x2C\x0d\n  statSync\x2C\x0d\n  Stats\x2C\x0d\n} = require('fs');\x0d\nconst { getOptionValue } = require('internal/options');\x0d\nconst pendingDeprecation = getOptionValue('--pending-deprecation');\x0d\n// Do not eagerly grab .manifest\x2C it may be in TDZ\x0d\nconst policy = getOptionValue('--experimental-policy') ?\x0d\n  require('internal/process/policy') :\x0d\n  null;\x0d\nconst { sep\x2C relative\x2C resolve } = require('path');\x0d\nconst preserveSymlinks = getOptionValue('--preserve-symlinks');\x0d\nconst preserveSymlinksMain = getOptionValue('--preserve-symlinks-main');\x0d\nconst experimentalNetworkImports =\x0d\n  getOptionValue('--experimental-network-imports');\x0d\nconst typeFlag = getOptionValue('--input-type');\x0d\nconst { URL\x2C pathToFileURL\x2C fileURLToPath } = require('internal/url');\x0d\nconst {\x0d\n  ERR_INPUT_TYPE_NOT_ALLOWED\x2C\x0d\n  ERR_INVALID_ARG_VALUE\x2C\x0d\n  ERR_INVALID_MODULE_SPECIFIER\x2C\x0d\n  ERR_INVALID_PACKAGE_CONFIG\x2C\x0d\n  ERR_INVALID_PACKAGE_TARGET\x2C\x0d\n  ERR_MANIFEST_DEPENDENCY_MISSING\x2C\x0d\n  ERR_MODULE_NOT_FOUND\x2C\x0d\n  ERR_PACKAGE_IMPORT_NOT_DEFINED\x2C\x0d\n  ERR_PACKAGE_PATH_NOT_EXPORTED\x2C\x0d\n  ERR_UNSUPPORTED_DIR_IMPORT\x2C\x0d\n  ERR_NETWORK_IMPORT_DISALLOWED\x2C\x0d\n  ERR_UNSUPPORTED_ESM_URL_SCHEME\x2C\x0d\n} = require('internal/errors').codes;\x0d\n\x0d\nconst { Module: CJSModule } = require('internal/modules/cjs/loader');\x0d\nconst packageJsonReader = require('internal/modules/package_json_reader');\x0d\nconst { getPackageConfig\x2C getPackageScopeConfig } = require('internal/modules/esm/package_config');\x0d\n\x0d\n/**\x0d\n * @typedef {import('internal/modules/esm/package_config.js').PackageConfig} PackageConfig\x0d\n */\x0d\n\x0d\n\x0d\nconst userConditions = getOptionValue('--conditions');\x0d\nconst noAddons = getOptionValue('--no-addons');\x0d\nconst addonConditions = noAddons ? [] : ['node-addons'];\x0d\n\x0d\nconst DEFAULT_CONDITIONS = ObjectFreeze([\x0d\n  'node'\x2C\x0d\n  'import'\x2C\x0d\n  ...addonConditions\x2C\x0d\n  ...userConditions\x2C\x0d\n]);\x0d\n\x0d\nconst DEFAULT_CONDITIONS_SET = new SafeSet(DEFAULT_CONDITIONS);\x0d\n\x0d\nconst emittedPackageWarnings = new SafeSet();\x0d\n\x0d\nfunction emitTrailingSlashPatternDeprecation(match\x2C pjsonUrl\x2C base) {\x0d\n  const pjsonPath = fileURLToPath(pjsonUrl);\x0d\n  if (emittedPackageWarnings.has(pjsonPath + '|' + match))\x0d\n    return;\x0d\n  emittedPackageWarnings.add(pjsonPath + '|' + match);\x0d\n  process.emitWarning(\x0d\n    `Use of deprecated trailing slash pattern mapping "${match}" in the ` +\x0d\n    `"exports" field module resolution of the package at ${pjsonPath}${\x0d\n      base ? ` imported from ${fileURLToPath(base)}` :\x0d\n        ''}. Mapping specifiers ending in "/" is no longer supported.`\x2C\x0d\n    'DeprecationWarning'\x2C\x0d\n    'DEP0155'\x0d\n  );\x0d\n}\x0d\n\x0d\nconst doubleSlashRegEx = /[/\\\\][/\\\\]/;\x0d\n\x0d\nfunction emitInvalidSegmentDeprecation(target\x2C request\x2C match\x2C pjsonUrl\x2C internal\x2C base\x2C isTarget) {\x0d\n  if (!pendingDeprecation) { return; }\x0d\n  const pjsonPath = fileURLToPath(pjsonUrl);\x0d\n  const double = RegExpPrototypeExec(doubleSlashRegEx\x2C isTarget ? target : request) !== null;\x0d\n  process.emitWarning(\x0d\n    `Use of deprecated ${double ? 'double slash' :\x0d\n      'leading or trailing slash matching'} resolving "${target}" for module ` +\x0d\n      `request "${request}" ${request !== match ? `matched to "${match}" ` : ''\x0d\n      }in the "${internal ? 'imports' : 'exports'}" field module resolution of the package at ${\x0d\n        pjsonPath}${base ? ` imported from ${fileURLToPath(base)}` : ''}.`\x2C\x0d\n    'DeprecationWarning'\x2C\x0d\n    'DEP0166'\x0d\n  );\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {URL} url\x0d\n * @param {URL} packageJSONUrl\x0d\n * @param {string | URL | undefined} base\x0d\n * @param {string} main\x0d\n * @returns {void}\x0d\n */\x0d\nfunction emitLegacyIndexDeprecation(url\x2C packageJSONUrl\x2C base\x2C main) {\x0d\n  const format = defaultGetFormatWithoutErrors(url);\x0d\n  if (format !== 'module')\x0d\n    return;\x0d\n  const path = fileURLToPath(url);\x0d\n  const pkgPath = fileURLToPath(new URL('.'\x2C packageJSONUrl));\x0d\n  const basePath = fileURLToPath(base);\x0d\n  if (main)\x0d\n    process.emitWarning(\x0d\n      `Package ${pkgPath} has a "main" field set to ${JSONStringify(main)}\x2C ` +\x0d\n      `excluding the full filename and extension to the resolved file at "${\x0d\n        StringPrototypeSlice(path\x2C pkgPath.length)}"\x2C imported from ${\x0d\n        basePath}.\\n Automatic extension resolution of the "main" field is ` +\x0d\n      'deprecated for ES modules.'\x2C\x0d\n      'DeprecationWarning'\x2C\x0d\n      'DEP0151'\x0d\n    );\x0d\n  else\x0d\n    process.emitWarning(\x0d\n      `No "main" or "exports" field defined in the package.json for ${pkgPath\x0d\n      } resolving the main entry point "${\x0d\n        StringPrototypeSlice(path\x2C pkgPath.length)}"\x2C imported from ${basePath\x0d\n      }.\\nDefault "index" lookups for the main are deprecated for ES modules.`\x2C\x0d\n      'DeprecationWarning'\x2C\x0d\n      'DEP0151'\x0d\n    );\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {string[]} [conditions]\x0d\n * @returns {Set<string>}\x0d\n */\x0d\nfunction getConditionsSet(conditions) {\x0d\n  if (conditions !== undefined && conditions !== DEFAULT_CONDITIONS) {\x0d\n    if (!ArrayIsArray(conditions)) {\x0d\n      throw new ERR_INVALID_ARG_VALUE('conditions'\x2C conditions\x2C\x0d\n                                      'expected an array');\x0d\n    }\x0d\n    return new SafeSet(conditions);\x0d\n  }\x0d\n  return DEFAULT_CONDITIONS_SET;\x0d\n}\x0d\n\x0d\nconst realpathCache = new SafeMap();\x0d\n\x0d\n/**\x0d\n * @param {string | URL} path\x0d\n * @returns {import('fs').Stats}\x0d\n */\x0d\nconst tryStatSync =\x0d\n  (path) => statSync(path\x2C { throwIfNoEntry: false }) ?? new Stats();\x0d\n\x0d\n/**\x0d\n * @param {string | URL} url\x0d\n * @returns {boolean}\x0d\n */\x0d\nfunction fileExists(url) {\x0d\n  return statSync(url\x2C { throwIfNoEntry: false })?.isFile() ?? false;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Legacy CommonJS main resolution:\x0d\n * 1. let M = pkg_url + (json main field)\x0d\n * 2. TRY(M\x2C M.js\x2C M.json\x2C M.node)\x0d\n * 3. TRY(M/index.js\x2C M/index.json\x2C M/index.node)\x0d\n * 4. TRY(pkg_url/index.js\x2C pkg_url/index.json\x2C pkg_url/index.node)\x0d\n * 5. NOT_FOUND\x0d\n * @param {URL} packageJSONUrl\x0d\n * @param {PackageConfig} packageConfig\x0d\n * @param {string | URL | undefined} base\x0d\n * @returns {URL}\x0d\n */\x0d\nfunction legacyMainResolve(packageJSONUrl\x2C packageConfig\x2C base) {\x0d\n  let guess;\x0d\n  if (packageConfig.main !== undefined) {\x0d\n    // Note: fs check redundances will be handled by Descriptor cache here.\x0d\n    if (fileExists(guess = new URL(`./${packageConfig.main}`\x2C\x0d\n                                   packageJSONUrl))) {\x0d\n      return guess;\x0d\n    } else if (fileExists(guess = new URL(`./${packageConfig.main}.js`\x2C\x0d\n                                          packageJSONUrl)));\x0d\n    else if (fileExists(guess = new URL(`./${packageConfig.main}.json`\x2C\x0d\n                                        packageJSONUrl)));\x0d\n    else if (fileExists(guess = new URL(`./${packageConfig.main}.node`\x2C\x0d\n                                        packageJSONUrl)));\x0d\n    else if (fileExists(guess = new URL(`./${packageConfig.main}/index.js`\x2C\x0d\n                                        packageJSONUrl)));\x0d\n    else if (fileExists(guess = new URL(`./${packageConfig.main}/index.json`\x2C\x0d\n                                        packageJSONUrl)));\x0d\n    else if (fileExists(guess = new URL(`./${packageConfig.main}/index.node`\x2C\x0d\n                                        packageJSONUrl)));\x0d\n    else guess = undefined;\x0d\n    if (guess) {\x0d\n      emitLegacyIndexDeprecation(guess\x2C packageJSONUrl\x2C base\x2C\x0d\n                                 packageConfig.main);\x0d\n      return guess;\x0d\n    }\x0d\n    // Fallthrough.\x0d\n  }\x0d\n  if (fileExists(guess = new URL('./index.js'\x2C packageJSONUrl)));\x0d\n  // So fs.\x0d\n  else if (fileExists(guess = new URL('./index.json'\x2C packageJSONUrl)));\x0d\n  else if (fileExists(guess = new URL('./index.node'\x2C packageJSONUrl)));\x0d\n  else guess = undefined;\x0d\n  if (guess) {\x0d\n    emitLegacyIndexDeprecation(guess\x2C packageJSONUrl\x2C base\x2C packageConfig.main);\x0d\n    return guess;\x0d\n  }\x0d\n  // Not found.\x0d\n  throw new ERR_MODULE_NOT_FOUND(\x0d\n    fileURLToPath(new URL('.'\x2C packageJSONUrl))\x2C fileURLToPath(base));\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {URL} search\x0d\n * @returns {URL | undefined}\x0d\n */\x0d\nfunction resolveExtensionsWithTryExactName(search) {\x0d\n  if (fileExists(search)) return search;\x0d\n  return resolveExtensions(search);\x0d\n}\x0d\n\x0d\nconst extensions = ['.js'\x2C '.json'\x2C '.node'\x2C '.mjs'];\x0d\n\x0d\n/**\x0d\n * @param {URL} search\x0d\n * @returns {URL | undefined}\x0d\n */\x0d\nfunction resolveExtensions(search) {\x0d\n  for (let i = 0; i < extensions.length; i++) {\x0d\n    const extension = extensions[i];\x0d\n    const guess = new URL(`${search.pathname}${extension}`\x2C search);\x0d\n    if (fileExists(guess)) return guess;\x0d\n  }\x0d\n  return undefined;\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {URL} search\x0d\n * @returns {URL | undefined}\x0d\n */\x0d\nfunction resolveDirectoryEntry(search) {\x0d\n  const dirPath = fileURLToPath(search);\x0d\n  const pkgJsonPath = resolve(dirPath\x2C 'package.json');\x0d\n  if (fileExists(pkgJsonPath)) {\x0d\n    const pkgJson = packageJsonReader.read(pkgJsonPath);\x0d\n    if (pkgJson.containsKeys) {\x0d\n      const { main } = JSONParse(pkgJson.string);\x0d\n      if (main != null) {\x0d\n        const mainUrl = pathToFileURL(resolve(dirPath\x2C main));\x0d\n        return resolveExtensionsWithTryExactName(mainUrl);\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n  return resolveExtensions(new URL('index'\x2C search));\x0d\n}\x0d\n\x0d\nconst encodedSepRegEx = /%2F|%5C/i;\x0d\n/**\x0d\n * @param {URL} resolved\x0d\n * @param {string | URL | undefined} base\x0d\n * @param {boolean} preserveSymlinks\x0d\n * @returns {URL | undefined}\x0d\n */\x0d\nfunction finalizeResolution(resolved\x2C base\x2C preserveSymlinks) {\x0d\n  if (RegExpPrototypeExec(encodedSepRegEx\x2C resolved.pathname) !== null)\x0d\n    throw new ERR_INVALID_MODULE_SPECIFIER(\x0d\n      resolved.pathname\x2C 'must not include encoded "/" or "\\\\" characters'\x2C\x0d\n      fileURLToPath(base));\x0d\n\x0d\n  let path = fileURLToPath(resolved);\x0d\n  if (getOptionValue('--experimental-specifier-resolution') === 'node') {\x0d\n    let file = resolveExtensionsWithTryExactName(resolved);\x0d\n\x0d\n    // Directory\x0d\n    if (file === undefined) {\x0d\n      file = StringPrototypeEndsWith(path\x2C '/') ?\x0d\n        (resolveDirectoryEntry(resolved) || resolved) : resolveDirectoryEntry(new URL(`${resolved}/`));\x0d\n\x0d\n      if (file === resolved) return file;\x0d\n\x0d\n      if (file === undefined) {\x0d\n        throw new ERR_MODULE_NOT_FOUND(\x0d\n          resolved.pathname\x2C fileURLToPath(base)\x2C 'module');\x0d\n      }\x0d\n    }\x0d\n\x0d\n    path = file;\x0d\n  }\x0d\n\x0d\n  const stats = tryStatSync(StringPrototypeEndsWith(path\x2C '/') ?\x0d\n    StringPrototypeSlice(path\x2C -1) : path);\x0d\n  if (stats.isDirectory()) {\x0d\n    const err = new ERR_UNSUPPORTED_DIR_IMPORT(path\x2C fileURLToPath(base));\x0d\n    err.url = String(resolved);\x0d\n    throw err;\x0d\n  } else if (!stats.isFile()) {\x0d\n    if (process.env.WATCH_REPORT_DEPENDENCIES && process.send) {\x0d\n      process.send({ 'watch:require': [path || resolved.pathname] });\x0d\n    }\x0d\n    throw new ERR_MODULE_NOT_FOUND(\x0d\n      path || resolved.pathname\x2C base && fileURLToPath(base)\x2C 'module');\x0d\n  }\x0d\n\x0d\n  if (!preserveSymlinks) {\x0d\n    const real = realpathSync(path\x2C {\x0d\n      [internalFS.realpathCacheKey]: realpathCache\x0d\n    });\x0d\n    const { search\x2C hash } = resolved;\x0d\n    resolved =\x0d\n        pathToFileURL(real + (StringPrototypeEndsWith(path\x2C sep) ? '/' : ''));\x0d\n    resolved.search = search;\x0d\n    resolved.hash = hash;\x0d\n  }\x0d\n\x0d\n  return resolved;\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {string} specifier\x0d\n * @param {URL} packageJSONUrl\x0d\n * @param {string | URL | undefined} base\x0d\n */\x0d\nfunction importNotDefined(specifier\x2C packageJSONUrl\x2C base) {\x0d\n  return new ERR_PACKAGE_IMPORT_NOT_DEFINED(\x0d\n    specifier\x2C packageJSONUrl && fileURLToPath(new URL('.'\x2C packageJSONUrl))\x2C\x0d\n    fileURLToPath(base));\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {string} subpath\x0d\n * @param {URL} packageJSONUrl\x0d\n * @param {string | URL | undefined} base\x0d\n */\x0d\nfunction exportsNotFound(subpath\x2C packageJSONUrl\x2C base) {\x0d\n  return new ERR_PACKAGE_PATH_NOT_EXPORTED(\x0d\n    fileURLToPath(new URL('.'\x2C packageJSONUrl))\x2C subpath\x2C\x0d\n    base && fileURLToPath(base));\x0d\n}\x0d\n\x0d\n/**\x0d\n *\x0d\n * @param {string} request\x0d\n * @param {string} match\x0d\n * @param {URL} packageJSONUrl\x0d\n * @param {boolean} internal\x0d\n * @param {string | URL | undefined} base\x0d\n */\x0d\nfunction throwInvalidSubpath(request\x2C match\x2C packageJSONUrl\x2C internal\x2C base) {\x0d\n  const reason = `request is not a valid match in pattern "${match}" for the "${\x0d\n    internal ? 'imports' : 'exports'}" resolution of ${\x0d\n    fileURLToPath(packageJSONUrl)}`;\x0d\n  throw new ERR_INVALID_MODULE_SPECIFIER(request\x2C reason\x2C\x0d\n                                         base && fileURLToPath(base));\x0d\n}\x0d\n\x0d\nfunction invalidPackageTarget(\x0d\n  subpath\x2C target\x2C packageJSONUrl\x2C internal\x2C base) {\x0d\n  if (typeof target === 'object' && target !== null) {\x0d\n    target = JSONStringify(target\x2C null\x2C '');\x0d\n  } else {\x0d\n    target = `${target}`;\x0d\n  }\x0d\n  return new ERR_INVALID_PACKAGE_TARGET(\x0d\n    fileURLToPath(new URL('.'\x2C packageJSONUrl))\x2C subpath\x2C target\x2C\x0d\n    internal\x2C base && fileURLToPath(base));\x0d\n}\x0d\n\x0d\nconst invalidSegmentRegEx = /(^|\\\\|\\/)((\\.|%2e)(\\.|%2e)?|(n|%6e|%4e)(o|%6f|%4f)(d|%64|%44)(e|%65|%45)(_|%5f)(m|%6d|%4d)(o|%6f|%4f)(d|%64|%44)(u|%75|%55)(l|%6c|%4c)(e|%65|%45)(s|%73|%53))?(\\\\|\\/|$)/i;\x0d\nconst deprecatedInvalidSegmentRegEx = /(^|\\\\|\\/)((\\.|%2e)(\\.|%2e)?|(n|%6e|%4e)(o|%6f|%4f)(d|%64|%44)(e|%65|%45)(_|%5f)(m|%6d|%4d)(o|%6f|%4f)(d|%64|%44)(u|%75|%55)(l|%6c|%4c)(e|%65|%45)(s|%73|%53))(\\\\|\\/|$)/i;\x0d\nconst invalidPackageNameRegEx = /^\\.|%|\\\\/;\x0d\nconst patternRegEx = /\\*/g;\x0d\n\x0d\n/**\x0d\n *\x0d\n * @param {string} target\x0d\n * @param {*} subpath\x0d\n * @param {*} match\x0d\n * @param {*} packageJSONUrl\x0d\n * @param {*} base\x0d\n * @param {*} pattern\x0d\n * @param {*} internal\x0d\n * @param {*} isPathMap\x0d\n * @param {*} conditions\x0d\n * @returns {URL}\x0d\n */\x0d\nfunction resolvePackageTargetString(\x0d\n  target\x2C\x0d\n  subpath\x2C\x0d\n  match\x2C\x0d\n  packageJSONUrl\x2C\x0d\n  base\x2C\x0d\n  pattern\x2C\x0d\n  internal\x2C\x0d\n  isPathMap\x2C\x0d\n  conditions\x2C\x0d\n) {\x0d\n\x0d\n  if (subpath !== '' && !pattern && target[target.length - 1] !== '/')\x0d\n    throw invalidPackageTarget(match\x2C target\x2C packageJSONUrl\x2C internal\x2C base);\x0d\n\x0d\n  if (!StringPrototypeStartsWith(target\x2C './')) {\x0d\n    if (internal && !StringPrototypeStartsWith(target\x2C '../') &&\x0d\n        !StringPrototypeStartsWith(target\x2C '/')) {\x0d\n      let isURL = false;\x0d\n      try {\x0d\n        new URL(target);\x0d\n        isURL = true;\x0d\n      } catch {\x0d\n        // Continue regardless of error.\x0d\n      }\x0d\n      if (!isURL) {\x0d\n        const exportTarget = pattern ?\x0d\n          RegExpPrototypeSymbolReplace(patternRegEx\x2C target\x2C () => subpath) :\x0d\n          target + subpath;\x0d\n        return packageResolve(\x0d\n          exportTarget\x2C packageJSONUrl\x2C conditions);\x0d\n      }\x0d\n    }\x0d\n    throw invalidPackageTarget(match\x2C target\x2C packageJSONUrl\x2C internal\x2C base);\x0d\n  }\x0d\n\x0d\n  if (RegExpPrototypeExec(invalidSegmentRegEx\x2C StringPrototypeSlice(target\x2C 2)) !== null) {\x0d\n    if (RegExpPrototypeExec(deprecatedInvalidSegmentRegEx\x2C StringPrototypeSlice(target\x2C 2)) === null) {\x0d\n      if (!isPathMap) {\x0d\n        const request = pattern ?\x0d\n          StringPrototypeReplace(match\x2C '*'\x2C () => subpath) :\x0d\n          match + subpath;\x0d\n        const resolvedTarget = pattern ?\x0d\n          RegExpPrototypeSymbolReplace(patternRegEx\x2C target\x2C () => subpath) :\x0d\n          target;\x0d\n        emitInvalidSegmentDeprecation(resolvedTarget\x2C request\x2C match\x2C packageJSONUrl\x2C internal\x2C base\x2C true);\x0d\n      }\x0d\n    } else {\x0d\n      throw invalidPackageTarget(match\x2C target\x2C packageJSONUrl\x2C internal\x2C base);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  const resolved = new URL(target\x2C packageJSONUrl);\x0d\n  const resolvedPath = resolved.pathname;\x0d\n  const packagePath = new URL('.'\x2C packageJSONUrl).pathname;\x0d\n\x0d\n  if (!StringPrototypeStartsWith(resolvedPath\x2C packagePath))\x0d\n    throw invalidPackageTarget(match\x2C target\x2C packageJSONUrl\x2C internal\x2C base);\x0d\n\x0d\n  if (subpath === '') return resolved;\x0d\n\x0d\n  if (RegExpPrototypeExec(invalidSegmentRegEx\x2C subpath) !== null) {\x0d\n    const request = pattern ? StringPrototypeReplace(match\x2C '*'\x2C () => subpath) : match + subpath;\x0d\n    if (RegExpPrototypeExec(deprecatedInvalidSegmentRegEx\x2C subpath) === null) {\x0d\n      if (!isPathMap) {\x0d\n        const resolvedTarget = pattern ?\x0d\n          RegExpPrototypeSymbolReplace(patternRegEx\x2C target\x2C () => subpath) :\x0d\n          target;\x0d\n        emitInvalidSegmentDeprecation(resolvedTarget\x2C request\x2C match\x2C packageJSONUrl\x2C internal\x2C base\x2C false);\x0d\n      }\x0d\n    } else {\x0d\n      throwInvalidSubpath(request\x2C match\x2C packageJSONUrl\x2C internal\x2C base);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  if (pattern) {\x0d\n    return new URL(\x0d\n      RegExpPrototypeSymbolReplace(patternRegEx\x2C resolved.href\x2C () => subpath)\x0d\n    );\x0d\n  }\x0d\n\x0d\n  return new URL(subpath\x2C resolved);\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {string} key\x0d\n * @returns {boolean}\x0d\n */\x0d\nfunction isArrayIndex(key) {\x0d\n  const keyNum = +key;\x0d\n  if (`${keyNum}` !== key) return false;\x0d\n  return keyNum >= 0 && keyNum < 0xFFFF_FFFF;\x0d\n}\x0d\n\x0d\n/**\x0d\n *\x0d\n * @param {*} packageJSONUrl\x0d\n * @param {string|[string]} target\x0d\n * @param {*} subpath\x0d\n * @param {*} packageSubpath\x0d\n * @param {*} base\x0d\n * @param {*} pattern\x0d\n * @param {*} internal\x0d\n * @param {*} isPathMap\x0d\n * @param {*} conditions\x0d\n * @returns {URL|null}\x0d\n */\x0d\nfunction resolvePackageTarget(packageJSONUrl\x2C target\x2C subpath\x2C packageSubpath\x2C\x0d\n                              base\x2C pattern\x2C internal\x2C isPathMap\x2C conditions) {\x0d\n  if (typeof target === 'string') {\x0d\n    return resolvePackageTargetString(\x0d\n      target\x2C subpath\x2C packageSubpath\x2C packageJSONUrl\x2C base\x2C pattern\x2C internal\x2C\x0d\n      isPathMap\x2C conditions);\x0d\n  } else if (ArrayIsArray(target)) {\x0d\n    if (target.length === 0) {\x0d\n      return null;\x0d\n    }\x0d\n\x0d\n    let lastException;\x0d\n    for (let i = 0; i < target.length; i++) {\x0d\n      const targetItem = target[i];\x0d\n      let resolveResult;\x0d\n      try {\x0d\n        resolveResult = resolvePackageTarget(\x0d\n          packageJSONUrl\x2C targetItem\x2C subpath\x2C packageSubpath\x2C base\x2C pattern\x2C\x0d\n          internal\x2C isPathMap\x2C conditions);\x0d\n      } catch (e) {\x0d\n        lastException = e;\x0d\n        if (e.code === 'ERR_INVALID_PACKAGE_TARGET') {\x0d\n          continue;\x0d\n        }\x0d\n        throw e;\x0d\n      }\x0d\n      if (resolveResult === undefined) {\x0d\n        continue;\x0d\n      }\x0d\n      if (resolveResult === null) {\x0d\n        lastException = null;\x0d\n        continue;\x0d\n      }\x0d\n      return resolveResult;\x0d\n    }\x0d\n    if (lastException === undefined || lastException === null)\x0d\n      return lastException;\x0d\n    throw lastException;\x0d\n  } else if (typeof target === 'object' && target !== null) {\x0d\n    const keys = ObjectGetOwnPropertyNames(target);\x0d\n    for (let i = 0; i < keys.length; i++) {\x0d\n      const key = keys[i];\x0d\n      if (isArrayIndex(key)) {\x0d\n        throw new ERR_INVALID_PACKAGE_CONFIG(\x0d\n          fileURLToPath(packageJSONUrl)\x2C base\x2C\x0d\n          '"exports" cannot contain numeric property keys.');\x0d\n      }\x0d\n    }\x0d\n    for (let i = 0; i < keys.length; i++) {\x0d\n      const key = keys[i];\x0d\n      if (key === 'default' || conditions.has(key)) {\x0d\n        const conditionalTarget = target[key];\x0d\n        const resolveResult = resolvePackageTarget(\x0d\n          packageJSONUrl\x2C conditionalTarget\x2C subpath\x2C packageSubpath\x2C base\x2C\x0d\n          pattern\x2C internal\x2C isPathMap\x2C conditions);\x0d\n        if (resolveResult === undefined)\x0d\n          continue;\x0d\n        return resolveResult;\x0d\n      }\x0d\n    }\x0d\n    return undefined;\x0d\n  } else if (target === null) {\x0d\n    return null;\x0d\n  }\x0d\n  throw invalidPackageTarget(packageSubpath\x2C target\x2C packageJSONUrl\x2C internal\x2C\x0d\n                             base);\x0d\n}\x0d\n\x0d\n/**\x0d\n *\x0d\n * @param {import('internal/modules/esm/package_config.js').Exports} exports\x0d\n * @param {URL} packageJSONUrl\x0d\n * @param {string | URL | undefined} base\x0d\n * @returns {boolean}\x0d\n */\x0d\nfunction isConditionalExportsMainSugar(exports\x2C packageJSONUrl\x2C base) {\x0d\n  if (typeof exports === 'string' || ArrayIsArray(exports)) return true;\x0d\n  if (typeof exports !== 'object' || exports === null) return false;\x0d\n\x0d\n  const keys = ObjectGetOwnPropertyNames(exports);\x0d\n  let isConditionalSugar = false;\x0d\n  let i = 0;\x0d\n  for (let j = 0; j < keys.length; j++) {\x0d\n    const key = keys[j];\x0d\n    const curIsConditionalSugar = key === '' || key[0] !== '.';\x0d\n    if (i++ === 0) {\x0d\n      isConditionalSugar = curIsConditionalSugar;\x0d\n    } else if (isConditionalSugar !== curIsConditionalSugar) {\x0d\n      throw new ERR_INVALID_PACKAGE_CONFIG(\x0d\n        fileURLToPath(packageJSONUrl)\x2C base\x2C\x0d\n        '"exports" cannot contain some keys starting with \\'.\\' and some not.' +\x0d\n        ' The exports object must either be an object of package subpath keys' +\x0d\n        ' or an object of main entry condition name keys only.');\x0d\n    }\x0d\n  }\x0d\n  return isConditionalSugar;\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {URL} packageJSONUrl\x0d\n * @param {string} packageSubpath\x0d\n * @param {PackageConfig} packageConfig\x0d\n * @param {string | URL | undefined} base\x0d\n * @param {Set<string>} conditions\x0d\n * @returns {URL}\x0d\n */\x0d\nfunction packageExportsResolve(\x0d\n  packageJSONUrl\x2C packageSubpath\x2C packageConfig\x2C base\x2C conditions) {\x0d\n  let exports = packageConfig.exports;\x0d\n  if (isConditionalExportsMainSugar(exports\x2C packageJSONUrl\x2C base))\x0d\n    exports = { '.': exports };\x0d\n\x0d\n  if (ObjectPrototypeHasOwnProperty(exports\x2C packageSubpath) &&\x0d\n      !StringPrototypeIncludes(packageSubpath\x2C '*') &&\x0d\n      !StringPrototypeEndsWith(packageSubpath\x2C '/')) {\x0d\n    const target = exports[packageSubpath];\x0d\n    const resolveResult = resolvePackageTarget(\x0d\n      packageJSONUrl\x2C target\x2C ''\x2C packageSubpath\x2C base\x2C false\x2C false\x2C false\x2C\x0d\n      conditions\x0d\n    );\x0d\n\x0d\n    if (resolveResult == null) {\x0d\n      throw exportsNotFound(packageSubpath\x2C packageJSONUrl\x2C base);\x0d\n    }\x0d\n\x0d\n    return resolveResult;\x0d\n  }\x0d\n\x0d\n  let bestMatch = '';\x0d\n  let bestMatchSubpath;\x0d\n  const keys = ObjectGetOwnPropertyNames(exports);\x0d\n  for (let i = 0; i < keys.length; i++) {\x0d\n    const key = keys[i];\x0d\n    const patternIndex = StringPrototypeIndexOf(key\x2C '*');\x0d\n    if (patternIndex !== -1 &&\x0d\n        StringPrototypeStartsWith(packageSubpath\x2C\x0d\n                                  StringPrototypeSlice(key\x2C 0\x2C patternIndex))) {\x0d\n      // When this reaches EOL\x2C this can throw at the top of the whole function:\x0d\n      //\x0d\n      // if (StringPrototypeEndsWith(packageSubpath\x2C '/'))\x0d\n      //   throwInvalidSubpath(packageSubpath)\x0d\n      //\x0d\n      // To match "imports" and the spec.\x0d\n      if (StringPrototypeEndsWith(packageSubpath\x2C '/'))\x0d\n        emitTrailingSlashPatternDeprecation(packageSubpath\x2C packageJSONUrl\x2C\x0d\n                                            base);\x0d\n      const patternTrailer = StringPrototypeSlice(key\x2C patternIndex + 1);\x0d\n      if (packageSubpath.length >= key.length &&\x0d\n          StringPrototypeEndsWith(packageSubpath\x2C patternTrailer) &&\x0d\n          patternKeyCompare(bestMatch\x2C key) === 1 &&\x0d\n          StringPrototypeLastIndexOf(key\x2C '*') === patternIndex) {\x0d\n        bestMatch = key;\x0d\n        bestMatchSubpath = StringPrototypeSlice(\x0d\n          packageSubpath\x2C patternIndex\x2C\x0d\n          packageSubpath.length - patternTrailer.length);\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  if (bestMatch) {\x0d\n    const target = exports[bestMatch];\x0d\n    const resolveResult = resolvePackageTarget(\x0d\n      packageJSONUrl\x2C\x0d\n      target\x2C\x0d\n      bestMatchSubpath\x2C\x0d\n      bestMatch\x2C\x0d\n      base\x2C\x0d\n      true\x2C\x0d\n      false\x2C\x0d\n      StringPrototypeEndsWith(packageSubpath\x2C '/')\x2C\x0d\n      conditions);\x0d\n\x0d\n    if (resolveResult == null) {\x0d\n      throw exportsNotFound(packageSubpath\x2C packageJSONUrl\x2C base);\x0d\n    }\x0d\n    return resolveResult;\x0d\n  }\x0d\n\x0d\n  throw exportsNotFound(packageSubpath\x2C packageJSONUrl\x2C base);\x0d\n}\x0d\n\x0d\nfunction patternKeyCompare(a\x2C b) {\x0d\n  const aPatternIndex = StringPrototypeIndexOf(a\x2C '*');\x0d\n  const bPatternIndex = StringPrototypeIndexOf(b\x2C '*');\x0d\n  const baseLenA = aPatternIndex === -1 ? a.length : aPatternIndex + 1;\x0d\n  const baseLenB = bPatternIndex === -1 ? b.length : bPatternIndex + 1;\x0d\n  if (baseLenA > baseLenB) return -1;\x0d\n  if (baseLenB > baseLenA) return 1;\x0d\n  if (aPatternIndex === -1) return 1;\x0d\n  if (bPatternIndex === -1) return -1;\x0d\n  if (a.length > b.length) return -1;\x0d\n  if (b.length > a.length) return 1;\x0d\n  return 0;\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {string} name\x0d\n * @param {string | URL | undefined} base\x0d\n * @param {Set<string>} conditions\x0d\n * @returns {URL}\x0d\n */\x0d\nfunction packageImportsResolve(name\x2C base\x2C conditions) {\x0d\n  if (name === '#' || StringPrototypeStartsWith(name\x2C '#/') ||\x0d\n      StringPrototypeEndsWith(name\x2C '/')) {\x0d\n    const reason = 'is not a valid internal imports specifier name';\x0d\n    throw new ERR_INVALID_MODULE_SPECIFIER(name\x2C reason\x2C fileURLToPath(base));\x0d\n  }\x0d\n  let packageJSONUrl;\x0d\n  const packageConfig = getPackageScopeConfig(base);\x0d\n  if (packageConfig.exists) {\x0d\n    packageJSONUrl = pathToFileURL(packageConfig.pjsonPath);\x0d\n    const imports = packageConfig.imports;\x0d\n    if (imports) {\x0d\n      if (ObjectPrototypeHasOwnProperty(imports\x2C name) &&\x0d\n          !StringPrototypeIncludes(name\x2C '*')) {\x0d\n        const resolveResult = resolvePackageTarget(\x0d\n          packageJSONUrl\x2C imports[name]\x2C ''\x2C name\x2C base\x2C false\x2C true\x2C false\x2C\x0d\n          conditions\x0d\n        );\x0d\n        if (resolveResult != null) {\x0d\n          return resolveResult;\x0d\n        }\x0d\n      } else {\x0d\n        let bestMatch = '';\x0d\n        let bestMatchSubpath;\x0d\n        const keys = ObjectGetOwnPropertyNames(imports);\x0d\n        for (let i = 0; i < keys.length; i++) {\x0d\n          const key = keys[i];\x0d\n          const patternIndex = StringPrototypeIndexOf(key\x2C '*');\x0d\n          if (patternIndex !== -1 &&\x0d\n              StringPrototypeStartsWith(name\x2C\x0d\n                                        StringPrototypeSlice(key\x2C 0\x2C\x0d\n                                                             patternIndex))) {\x0d\n            const patternTrailer = StringPrototypeSlice(key\x2C patternIndex + 1);\x0d\n            if (name.length >= key.length &&\x0d\n                StringPrototypeEndsWith(name\x2C patternTrailer) &&\x0d\n                patternKeyCompare(bestMatch\x2C key) === 1 &&\x0d\n                StringPrototypeLastIndexOf(key\x2C '*') === patternIndex) {\x0d\n              bestMatch = key;\x0d\n              bestMatchSubpath = StringPrototypeSlice(\x0d\n                name\x2C patternIndex\x2C name.length - patternTrailer.length);\x0d\n            }\x0d\n          }\x0d\n        }\x0d\n\x0d\n        if (bestMatch) {\x0d\n          const target = imports[bestMatch];\x0d\n          const resolveResult = resolvePackageTarget(packageJSONUrl\x2C target\x2C\x0d\n                                                     bestMatchSubpath\x2C\x0d\n                                                     bestMatch\x2C base\x2C true\x2C\x0d\n                                                     true\x2C false\x2C conditions);\x0d\n          if (resolveResult != null) {\x0d\n            return resolveResult;\x0d\n          }\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n  throw importNotDefined(name\x2C packageJSONUrl\x2C base);\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {URL} url\x0d\n * @returns {import('internal/modules/esm/package_config.js').PackageType}\x0d\n */\x0d\nfunction getPackageType(url) {\x0d\n  const packageConfig = getPackageScopeConfig(url);\x0d\n  return packageConfig.type;\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {string} specifier\x0d\n * @param {string | URL | undefined} base\x0d\n * @returns {{ packageName: string\x2C packageSubpath: string\x2C isScoped: boolean }}\x0d\n */\x0d\nfunction parsePackageName(specifier\x2C base) {\x0d\n  let separatorIndex = StringPrototypeIndexOf(specifier\x2C '/');\x0d\n  let validPackageName = true;\x0d\n  let isScoped = false;\x0d\n  if (specifier[0] === '@') {\x0d\n    isScoped = true;\x0d\n    if (separatorIndex === -1 || specifier.length === 0) {\x0d\n      validPackageName = false;\x0d\n    } else {\x0d\n      separatorIndex = StringPrototypeIndexOf(\x0d\n        specifier\x2C '/'\x2C separatorIndex + 1);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  const packageName = separatorIndex === -1 ?\x0d\n    specifier : StringPrototypeSlice(specifier\x2C 0\x2C separatorIndex);\x0d\n\x0d\n  // Package name cannot have leading . and cannot have percent-encoding or\x0d\n  // \\\\ separators.\x0d\n  if (RegExpPrototypeExec(invalidPackageNameRegEx\x2C packageName) !== null)\x0d\n    validPackageName = false;\x0d\n\x0d\n  if (!validPackageName) {\x0d\n    throw new ERR_INVALID_MODULE_SPECIFIER(\x0d\n      specifier\x2C 'is not a valid package name'\x2C fileURLToPath(base));\x0d\n  }\x0d\n\x0d\n  const packageSubpath = '.' + (separatorIndex === -1 ? '' :\x0d\n    StringPrototypeSlice(specifier\x2C separatorIndex));\x0d\n\x0d\n  return { packageName\x2C packageSubpath\x2C isScoped };\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {string} specifier\x0d\n * @param {string | URL | undefined} base\x0d\n * @param {Set<string>} conditions\x0d\n * @returns {resolved: URL\x2C format? : string}\x0d\n */\x0d\nfunction packageResolve(specifier\x2C base\x2C conditions) {\x0d\n  if (BuiltinModule.canBeRequiredByUsers(specifier) &&\x0d\n      BuiltinModule.canBeRequiredWithoutScheme(specifier)) {\x0d\n    return new URL('node:' + specifier);\x0d\n  }\x0d\n\x0d\n  const { packageName\x2C packageSubpath\x2C isScoped } =\x0d\n    parsePackageName(specifier\x2C base);\x0d\n\x0d\n  // ResolveSelf\x0d\n  const packageConfig = getPackageScopeConfig(base);\x0d\n  if (packageConfig.exists) {\x0d\n    const packageJSONUrl = pathToFileURL(packageConfig.pjsonPath);\x0d\n    if (packageConfig.name === packageName &&\x0d\n        packageConfig.exports !== undefined && packageConfig.exports !== null) {\x0d\n      return packageExportsResolve(\x0d\n        packageJSONUrl\x2C packageSubpath\x2C packageConfig\x2C base\x2C conditions);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  let packageJSONUrl =\x0d\n    new URL('./node_modules/' + packageName + '/package.json'\x2C base);\x0d\n  let packageJSONPath = fileURLToPath(packageJSONUrl);\x0d\n  let lastPath;\x0d\n  do {\x0d\n    const stat = tryStatSync(StringPrototypeSlice(packageJSONPath\x2C 0\x2C\x0d\n                                                  packageJSONPath.length - 13));\x0d\n    if (!stat.isDirectory()) {\x0d\n      lastPath = packageJSONPath;\x0d\n      packageJSONUrl = new URL((isScoped ?\x0d\n        '../../../../node_modules/' : '../../../node_modules/') +\x0d\n        packageName + '/package.json'\x2C packageJSONUrl);\x0d\n      packageJSONPath = fileURLToPath(packageJSONUrl);\x0d\n      continue;\x0d\n    }\x0d\n\x0d\n    // Package match.\x0d\n    const packageConfig = getPackageConfig(packageJSONPath\x2C specifier\x2C base);\x0d\n    if (packageConfig.exports !== undefined && packageConfig.exports !== null) {\x0d\n      return packageExportsResolve(\x0d\n        packageJSONUrl\x2C packageSubpath\x2C packageConfig\x2C base\x2C conditions);\x0d\n    }\x0d\n    if (packageSubpath === '.') {\x0d\n      return legacyMainResolve(\x0d\n        packageJSONUrl\x2C\x0d\n        packageConfig\x2C\x0d\n        base\x0d\n      );\x0d\n    }\x0d\n\x0d\n    return new URL(packageSubpath\x2C packageJSONUrl);\x0d\n    // Cross-platform root check.\x0d\n  } while (packageJSONPath.length !== lastPath.length);\x0d\n\x0d\n  // eslint can't handle the above code.\x0d\n  // eslint-disable-next-line no-unreachable\x0d\n  throw new ERR_MODULE_NOT_FOUND(packageName\x2C fileURLToPath(base));\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {string} specifier\x0d\n * @returns {boolean}\x0d\n */\x0d\nfunction isBareSpecifier(specifier) {\x0d\n  return specifier[0] && specifier[0] !== '/' && specifier[0] !== '.';\x0d\n}\x0d\n\x0d\nfunction isRelativeSpecifier(specifier) {\x0d\n  if (specifier[0] === '.') {\x0d\n    if (specifier.length === 1 || specifier[1] === '/') return true;\x0d\n    if (specifier[1] === '.') {\x0d\n      if (specifier.length === 2 || specifier[2] === '/') return true;\x0d\n    }\x0d\n  }\x0d\n  return false;\x0d\n}\x0d\n\x0d\nfunction shouldBeTreatedAsRelativeOrAbsolutePath(specifier) {\x0d\n  if (specifier === '') return false;\x0d\n  if (specifier[0] === '/') return true;\x0d\n  return isRelativeSpecifier(specifier);\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {string} specifier\x0d\n * @param {string | URL | undefined} base\x0d\n * @param {Set<string>} conditions\x0d\n * @param {boolean} preserveSymlinks\x0d\n * @returns {url: URL\x2C format?: string}\x0d\n */\x0d\nfunction moduleResolve(specifier\x2C base\x2C conditions\x2C preserveSymlinks) {\x0d\n  const isRemote = base.protocol === 'http:' ||\x0d\n    base.protocol === 'https:';\x0d\n  // Order swapped from spec for minor perf gain.\x0d\n  // Ok since relative URLs cannot parse as URLs.\x0d\n  let resolved;\x0d\n  if (shouldBeTreatedAsRelativeOrAbsolutePath(specifier)) {\x0d\n    resolved = new URL(specifier\x2C base);\x0d\n  } else if (!isRemote && specifier[0] === '#') {\x0d\n    resolved = packageImportsResolve(specifier\x2C base\x2C conditions);\x0d\n  } else {\x0d\n    try {\x0d\n      resolved = new URL(specifier);\x0d\n    } catch {\x0d\n      if (!isRemote) {\x0d\n        resolved = packageResolve(specifier\x2C base\x2C conditions);\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n  if (resolved.protocol !== 'file:') {\x0d\n    return resolved;\x0d\n  }\x0d\n  return finalizeResolution(resolved\x2C base\x2C preserveSymlinks);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Try to resolve an import as a CommonJS module\x0d\n * @param {string} specifier\x0d\n * @param {string} parentURL\x0d\n * @returns {boolean|string}\x0d\n */\x0d\nfunction resolveAsCommonJS(specifier\x2C parentURL) {\x0d\n  try {\x0d\n    const parent = fileURLToPath(parentURL);\x0d\n    const tmpModule = new CJSModule(parent\x2C null);\x0d\n    tmpModule.paths = CJSModule._nodeModulePaths(parent);\x0d\n\x0d\n    let found = CJSModule._resolveFilename(specifier\x2C tmpModule\x2C false);\x0d\n\x0d\n    // If it is a relative specifier return the relative path\x0d\n    // to the parent\x0d\n    if (isRelativeSpecifier(specifier)) {\x0d\n      found = relative(parent\x2C found);\x0d\n      // Add '.separator if the path does not start with '..separator'\x0d\n      // This should be a safe assumption because when loading\x0d\n      // esm modules there should be always a file specified so\x0d\n      // there should not be a specifier like '..' or '.'\x0d\n      if (!StringPrototypeStartsWith(found\x2C `..${sep}`)) {\x0d\n        found = `.${sep}${found}`;\x0d\n      }\x0d\n    } else if (isBareSpecifier(specifier)) {\x0d\n      // If it is a bare specifier return the relative path within the\x0d\n      // module\x0d\n      const pkg = StringPrototypeSplit(specifier\x2C '/')[0];\x0d\n      const index = StringPrototypeIndexOf(found\x2C pkg);\x0d\n      if (index !== -1) {\x0d\n        found = StringPrototypeSlice(found\x2C index);\x0d\n      }\x0d\n    }\x0d\n    // Normalize the path separator to give a valid suggestion\x0d\n    // on Windows\x0d\n    if (process.platform === 'win32') {\x0d\n      found = RegExpPrototypeSymbolReplace(new RegExp(`\\\\${sep}`\x2C 'g')\x2C\x0d\n                                           found\x2C '/');\x0d\n    }\x0d\n    return found;\x0d\n  } catch {\x0d\n    return false;\x0d\n  }\x0d\n}\x0d\n\x0d\n// TODO(@JakobJingleheimer): de-dupe `specifier` & `parsed`\x0d\nfunction checkIfDisallowedImport(specifier\x2C parsed\x2C parsedParentURL) {\x0d\n  if (parsedParentURL) {\x0d\n    if (\x0d\n      parsedParentURL.protocol === 'http:' ||\x0d\n      parsedParentURL.protocol === 'https:'\x0d\n    ) {\x0d\n      if (shouldBeTreatedAsRelativeOrAbsolutePath(specifier)) {\x0d\n        // data: and blob: disallowed due to allowing file: access via\x0d\n        // indirection\x0d\n        if (parsed &&\x0d\n          parsed.protocol !== 'https:' &&\x0d\n          parsed.protocol !== 'http:'\x0d\n        ) {\x0d\n          throw new ERR_NETWORK_IMPORT_DISALLOWED(\x0d\n            specifier\x2C\x0d\n            parsedParentURL\x2C\x0d\n            'remote imports cannot import from a local location.'\x0d\n          );\x0d\n        }\x0d\n\x0d\n        return { url: parsed.href };\x0d\n      }\x0d\n      if (BuiltinModule.canBeRequiredByUsers(specifier) &&\x0d\n          BuiltinModule.canBeRequiredWithoutScheme(specifier)) {\x0d\n        throw new ERR_NETWORK_IMPORT_DISALLOWED(\x0d\n          specifier\x2C\x0d\n          parsedParentURL\x2C\x0d\n          'remote imports cannot import from a local location.'\x0d\n        );\x0d\n      }\x0d\n\x0d\n      throw new ERR_NETWORK_IMPORT_DISALLOWED(\x0d\n        specifier\x2C\x0d\n        parsedParentURL\x2C\x0d\n        'only relative and absolute specifiers are supported.'\x0d\n      );\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction throwIfUnsupportedURLProtocol(url) {\x0d\n  if (url.protocol !== 'file:' && url.protocol !== 'data:' &&\x0d\n      url.protocol !== 'node:') {\x0d\n    throw new ERR_UNSUPPORTED_ESM_URL_SCHEME(url);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction throwIfUnsupportedURLScheme(parsed\x2C experimentalNetworkImports) {\x0d\n  if (\x0d\n    parsed &&\x0d\n    parsed.protocol !== 'file:' &&\x0d\n    parsed.protocol !== 'data:' &&\x0d\n    (\x0d\n      !experimentalNetworkImports ||\x0d\n      (\x0d\n        parsed.protocol !== 'https:' &&\x0d\n        parsed.protocol !== 'http:'\x0d\n      )\x0d\n    )\x0d\n  ) {\x0d\n    throw new ERR_UNSUPPORTED_ESM_URL_SCHEME(parsed\x2C ArrayPrototypeConcat(\x0d\n      'file'\x2C\x0d\n      'data'\x2C\x0d\n      experimentalNetworkImports ? ['https'\x2C 'http'] : []\x2C\x0d\n    ));\x0d\n  }\x0d\n}\x0d\n\x0d\nasync function defaultResolve(specifier\x2C context = {}) {\x0d\n  let { parentURL\x2C conditions } = context;\x0d\n  if (parentURL && policy?.manifest) {\x0d\n    const redirects = policy.manifest.getDependencyMapper(parentURL);\x0d\n    if (redirects) {\x0d\n      const { resolve\x2C reaction } = redirects;\x0d\n      const destination = resolve(specifier\x2C new SafeSet(conditions));\x0d\n      let missing = true;\x0d\n      if (destination === true) {\x0d\n        missing = false;\x0d\n      } else if (destination) {\x0d\n        const href = destination.href;\x0d\n        return { url: href };\x0d\n      }\x0d\n      if (missing) {\x0d\n        // Prevent network requests from firing if resolution would be banned.\x0d\n        // Network requests can extract data by doing things like putting\x0d\n        // secrets in query params\x0d\n        reaction(new ERR_MANIFEST_DEPENDENCY_MISSING(\x0d\n          parentURL\x2C\x0d\n          specifier\x2C\x0d\n          ArrayPrototypeJoin([...conditions]\x2C '\x2C '))\x0d\n        );\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  let parsedParentURL;\x0d\n  if (parentURL) {\x0d\n    try {\x0d\n      parsedParentURL = new URL(parentURL);\x0d\n    } catch {\x0d\n      // Ignore exception\x0d\n    }\x0d\n  }\x0d\n\x0d\n  let parsed;\x0d\n  try {\x0d\n    if (shouldBeTreatedAsRelativeOrAbsolutePath(specifier)) {\x0d\n      parsed = new URL(specifier\x2C parsedParentURL);\x0d\n    } else {\x0d\n      parsed = new URL(specifier);\x0d\n    }\x0d\n\x0d\n    if (parsed.protocol === 'data:' ||\x0d\n      (experimentalNetworkImports &&\x0d\n        (\x0d\n          parsed.protocol === 'https:' ||\x0d\n          parsed.protocol === 'http:'\x0d\n        )\x0d\n      )\x0d\n    ) {\x0d\n      return { __proto__: null\x2C url: parsed.href };\x0d\n    }\x0d\n  } catch {\x0d\n    // Ignore exception\x0d\n  }\x0d\n\x0d\n  // There are multiple deep branches that can either throw or return; instead\x0d\n  // of duplicating that deeply nested logic for the possible returns\x2C DRY and\x0d\n  // check for a return. This seems the least gnarly.\x0d\n  const maybeReturn = checkIfDisallowedImport(\x0d\n    specifier\x2C\x0d\n    parsed\x2C\x0d\n    parsedParentURL\x2C\x0d\n  );\x0d\n\x0d\n  if (maybeReturn) return maybeReturn;\x0d\n\x0d\n  // This must come after checkIfDisallowedImport\x0d\n  if (parsed && parsed.protocol === 'node:') return { url: specifier };\x0d\n\x0d\n  throwIfUnsupportedURLScheme(parsed\x2C experimentalNetworkImports);\x0d\n\x0d\n  const isMain = parentURL === undefined;\x0d\n  if (isMain) {\x0d\n    parentURL = pathToFileURL(`${process.cwd()}/`).href;\x0d\n\x0d\n    // This is the initial entry point to the program\x2C and --input-type has\x0d\n    // been passed as an option; but --input-type can only be used with\x0d\n    // --eval\x2C --print or STDIN string input. It is not allowed with file\x0d\n    // input\x2C to avoid user confusion over how expansive the effect of the\x0d\n    // flag should be (i.e. entry point only\x2C package scope surrounding the\x0d\n    // entry point\x2C etc.).\x0d\n    if (typeFlag) throw new ERR_INPUT_TYPE_NOT_ALLOWED();\x0d\n  }\x0d\n\x0d\n  conditions = getConditionsSet(conditions);\x0d\n  let url;\x0d\n  try {\x0d\n    url = moduleResolve(\x0d\n      specifier\x2C\x0d\n      parentURL\x2C\x0d\n      conditions\x2C\x0d\n      isMain ? preserveSymlinksMain : preserveSymlinks\x0d\n    );\x0d\n  } catch (error) {\x0d\n    // Try to give the user a hint of what would have been the\x0d\n    // resolved CommonJS module\x0d\n    if (error.code === 'ERR_MODULE_NOT_FOUND' ||\x0d\n        error.code === 'ERR_UNSUPPORTED_DIR_IMPORT') {\x0d\n      if (StringPrototypeStartsWith(specifier\x2C 'file://')) {\x0d\n        specifier = fileURLToPath(specifier);\x0d\n      }\x0d\n      const found = resolveAsCommonJS(specifier\x2C parentURL);\x0d\n      if (found) {\x0d\n        // Modify the stack and message string to include the hint\x0d\n        const lines = StringPrototypeSplit(error.stack\x2C '\\n');\x0d\n        const hint = `Did you mean to import ${found}?`;\x0d\n        error.stack =\x0d\n          ArrayPrototypeShift(lines) + '\\n' +\x0d\n          hint + '\\n' +\x0d\n          ArrayPrototypeJoin(lines\x2C '\\n');\x0d\n        error.message += `\\n${hint}`;\x0d\n      }\x0d\n    }\x0d\n    throw error;\x0d\n  }\x0d\n\x0d\n  throwIfUnsupportedURLProtocol(url);\x0d\n\x0d\n  return {\x0d\n    // Do NOT cast `url` to a string: that will work even when there are real\x0d\n    // problems\x2C silencing them\x0d\n    url: url.href\x2C\x0d\n    format: defaultGetFormatWithoutErrors(url\x2C context)\x2C\x0d\n  };\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  DEFAULT_CONDITIONS\x2C\x0d\n  defaultResolve\x2C\x0d\n  encodedSepRegEx\x2C\x0d\n  getPackageScopeConfig\x2C\x0d\n  getPackageType\x2C\x0d\n  packageExportsResolve\x2C\x0d\n  packageImportsResolve\x2C\x0d\n};\x0d\n\x0d\n// cycle\x0d\nconst {\x0d\n  defaultGetFormatWithoutErrors\x2C\x0d\n} = require('internal/modules/esm/get_format');\x0d\n\x0d\nif (policy) {\x0d\n  const $defaultResolve = defaultResolve;\x0d\n  module.exports.defaultResolve = async function defaultResolve(\x0d\n    specifier\x2C\x0d\n    context\x0d\n  ) {\x0d\n    const ret = await $defaultResolve(specifier\x2C context);\x0d\n    // This is a preflight check to avoid data exfiltration by query params etc.\x0d\n    policy.manifest.mightAllow(ret.url\x2C () =>\x0d\n      new ERR_MANIFEST_DEPENDENCY_MISSING(\x0d\n        context.parentURL\x2C\x0d\n        specifier\x2C\x0d\n        context.conditions\x0d\n      )\x0d\n    );\x0d\n    return ret;\x0d\n  };\x0d\n}\x0d\n
code-source-info,0x14dbcbb5ef8,455,0,40819,C0O0C4O40819,,
code-creation,Function,10,314664,0x14dbcbb6f98,1205, node:internal/modules/esm/resolve:1:1,0x14dbcbb5e70,~
code-source-info,0x14dbcbb6f
code-creation,Eval,10,315187,0x14dbcbba468,5, node:internal/modules/esm/package_config:1:1,0x14dbcbba280,~
script-source,456,node:internal/modules/esm/package_config,'use strict';\x0d\n\x0d\nconst {\x0d\n  JSONParse\x2C\x0d\n  ObjectPrototypeHasOwnProperty\x2C\x0d\n  SafeMap\x2C\x0d\n  StringPrototypeEndsWith\x2C\x0d\n} = primordials;\x0d\nconst { URL\x2C fileURLToPath } = require('internal/url');\x0d\nconst {\x0d\n  ERR_INVALID_PACKAGE_CONFIG\x2C\x0d\n} = require('internal/errors').codes;\x0d\n\x0d\nconst packageJsonReader = require('internal/modules/package_json_reader');\x0d\nconst { filterOwnProperties } = require('internal/util');\x0d\n\x0d\n\x0d\n/**\x0d\n * @typedef {string | string[] | Record<string\x2C unknown>} Exports\x0d\n * @typedef {'module' | 'commonjs'} PackageType\x0d\n * @typedef {{\x0d\n *   pjsonPath: string\x2C\x0d\n *   exports?: ExportConfig\x2C\x0d\n *   name?: string\x2C\x0d\n *   main?: string\x2C\x0d\n *   type?: PackageType\x2C\x0d\n * }} PackageConfig\x0d\n */\x0d\n\x0d\n/** @type {Map<string\x2C PackageConfig>} */\x0d\nconst packageJSONCache = new SafeMap();\x0d\n\x0d\n\x0d\n/**\x0d\n * @param {string} path\x0d\n * @param {string} specifier\x0d\n * @param {string | URL | undefined} base\x0d\n * @returns {PackageConfig}\x0d\n */\x0d\nfunction getPackageConfig(path\x2C specifier\x2C base) {\x0d\n  const existing = packageJSONCache.get(path);\x0d\n  if (existing !== undefined) {\x0d\n    return existing;\x0d\n  }\x0d\n  const source = packageJsonReader.read(path).string;\x0d\n  if (source === undefined) {\x0d\n    const packageConfig = {\x0d\n      pjsonPath: path\x2C\x0d\n      exists: false\x2C\x0d\n      main: undefined\x2C\x0d\n      name: undefined\x2C\x0d\n      type: 'none'\x2C\x0d\n      exports: undefined\x2C\x0d\n      imports: undefined\x2C\x0d\n    };\x0d\n    packageJSONCache.set(path\x2C packageConfig);\x0d\n    return packageConfig;\x0d\n  }\x0d\n\x0d\n  let packageJSON;\x0d\n  try {\x0d\n    packageJSON = JSONParse(source);\x0d\n  } catch (error) {\x0d\n    throw new ERR_INVALID_PACKAGE_CONFIG(\x0d\n      path\x2C\x0d\n      (base ? `"${specifier}" from ` : '') + fileURLToPath(base || specifier)\x2C\x0d\n      error.message\x0d\n    );\x0d\n  }\x0d\n\x0d\n  let { imports\x2C main\x2C name\x2C type } = filterOwnProperties(packageJSON\x2C ['imports'\x2C 'main'\x2C 'name'\x2C 'type']);\x0d\n  const exports = ObjectPrototypeHasOwnProperty(packageJSON\x2C 'exports') ? packageJSON.exports : undefined;\x0d\n  if (typeof imports !== 'object' || imports === null) {\x0d\n    imports = undefined;\x0d\n  }\x0d\n  if (typeof main !== 'string') {\x0d\n    main = undefined;\x0d\n  }\x0d\n  if (typeof name !== 'string') {\x0d\n    name = undefined;\x0d\n  }\x0d\n  // Ignore unknown types for forwards compatibility\x0d\n  if (type !== 'module' && type !== 'commonjs') {\x0d\n    type = 'none';\x0d\n  }\x0d\n\x0d\n  const packageConfig = {\x0d\n    pjsonPath: path\x2C\x0d\n    exists: true\x2C\x0d\n    main\x2C\x0d\n    name\x2C\x0d\n    type\x2C\x0d\n    exports\x2C\x0d\n    imports\x2C\x0d\n  };\x0d\n  packageJSONCache.set(path\x2C packageConfig);\x0d\n  return packageConfig;\x0d\n}\x0d\n\x0d\n\x0d\n/**\x0d\n * @param {URL | string} resolved\x0d\n * @returns {PackageConfig}\x0d\n */\x0d\nfunction getPackageScopeConfig(resolved) {\x0d\n  let packageJSONUrl = new URL('./package.json'\x2C resolved);\x0d\n  while (true) {\x0d\n    const packageJSONPath = packageJSONUrl.pathname;\x0d\n    if (StringPrototypeEndsWith(packageJSONPath\x2C 'node_modules/package.json')) {\x0d\n      break;\x0d\n    }\x0d\n    const packageConfig = getPackageConfig(fileURLToPath(packageJSONUrl)\x2C resolved);\x0d\n    if (packageConfig.exists) {\x0d\n      return packageConfig;\x0d\n    }\x0d\n\x0d\n    const lastPackageJSONUrl = packageJSONUrl;\x0d\n    packageJSONUrl = new URL('../package.json'\x2C packageJSONUrl);\x0d\n\x0d\n    // Terminates at root where ../package.json equals ../../package.json\x0d\n    // (can't just check "/package.json" for Windows support).\x0d\n    if (packageJSONUrl.pathname === lastPackageJSONUrl.pathname) {\x0d\n      break;\x0d\n    }\x0d\n  }\x0d\n  const packageJSONPath = fileURLToPath(packageJSONUrl);\x0d\n  const packageConfig = {\x0d\n    pjsonPath: packageJSONPath\x2C\x0d\n    exists: false\x2C\x0d\n    main: undefined\x2C\x0d\n    name: undefined\x2C\x0d\n    type: 'none'\x2C\x0d\n    exports: undefined\x2C\x0d\n    imports: undefined\x2C\x0d\n  };\x0d\n  packageJSONCache.set(packageJSONPath\x2C packageConfig);\x0d\n  return packageConfig;\x0d\n}\x0d\n\x0d\n\x0d\nmodule.exports = {\x0d\n  getPackageConfig\x2C\x0d\n  getPackageScopeConfig\x2C\x0d\n};\x0d\n
code-source-info,0x14dbcbba468,456,0,3771,C0O0C4O3771,,
code-creation,Function,10,315504,0x14dbcbba658,162, node:internal/modules/esm/package_config:1:1,0x14dbcbba3e0,~
code-source-info,0x14dbcbba658,456,0,3771,C0O0C43O28C49O42C55O76C60O88C66O163C69O163C74O140C80O145C86O233C89O233C94O259C99O200C105O296C108O296C112O296C114O378C117O378C122O354C128O765C130O765C135O765C137O3700C144O3722C150O3743C156O3715C161O3770,,
code-creation,Eval,10,315859,0x14dbcbbb300,5, node:internal/modules/esm/get_format:1:1,0x14dbcbbb078,~
script-source,457,node:internal/modules/esm/get_format,'use strict';\x0d\nconst {\x0d\n  RegExpPrototypeExec\x2C\x0d\n  ObjectPrototypeHasOwnProperty\x2C\x0d\n  PromisePrototypeThen\x2C\x0d\n  PromiseResolve\x2C\x0d\n  StringPrototypeSlice\x2C\x0d\n} = primordials;\x0d\nconst { basename\x2C extname\x2C relative } = require('path');\x0d\nconst { getOptionValue } = require('internal/options');\x0d\nconst { fetchModule } = require('internal/modules/esm/fetch_module');\x0d\nconst {\x0d\n  extensionFormatMap\x2C\x0d\n  getLegacyExtensionFormat\x2C\x0d\n  mimeToFormat\x2C\x0d\n} = require('internal/modules/esm/formats');\x0d\n\x0d\nconst experimentalNetworkImports =\x0d\n  getOptionValue('--experimental-network-imports');\x0d\nconst experimentalSpecifierResolution =\x0d\n  getOptionValue('--experimental-specifier-resolution');\x0d\nconst { getPackageType\x2C getPackageScopeConfig } = require('internal/modules/esm/resolve');\x0d\nconst { URL\x2C fileURLToPath } = require('internal/url');\x0d\nconst { ERR_UNKNOWN_FILE_EXTENSION } = require('internal/errors').codes;\x0d\n\x0d\nconst protocolHandlers = {\x0d\n  '__proto__': null\x2C\x0d\n  'data:': getDataProtocolModuleFormat\x2C\x0d\n  'file:': getFileProtocolModuleFormat\x2C\x0d\n  'http:': getHttpProtocolModuleFormat\x2C\x0d\n  'https:': getHttpProtocolModuleFormat\x2C\x0d\n  'node:'() { return 'builtin'; }\x2C\x0d\n};\x0d\n\x0d\n/**\x0d\n * @param {URL} parsed\x0d\n * @returns {string | null}\x0d\n */\x0d\nfunction getDataProtocolModuleFormat(parsed) {\x0d\n  const { 1: mime } = RegExpPrototypeExec(\x0d\n    /^([^/]+\\/[^;\x2C]+)(?:[^\x2C]*?)(;base64)?\x2C/\x2C\x0d\n    parsed.pathname\x2C\x0d\n  ) || [ null\x2C null\x2C null ];\x0d\n\x0d\n  return mimeToFormat(mime);\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {URL} url\x0d\n * @param {{parentURL: string}} context\x0d\n * @param {boolean} ignoreErrors\x0d\n * @returns {string}\x0d\n */\x0d\nfunction getFileProtocolModuleFormat(url\x2C context\x2C ignoreErrors) {\x0d\n  const filepath = fileURLToPath(url);\x0d\n  const ext = extname(filepath);\x0d\n  if (ext === '.js') {\x0d\n    return getPackageType(url) === 'module' ? 'module' : 'commonjs';\x0d\n  }\x0d\n\x0d\n  const format = extensionFormatMap[ext];\x0d\n  if (format) return format;\x0d\n\x0d\n  if (experimentalSpecifierResolution !== 'node') {\x0d\n    // Explicit undefined return indicates load hook should rerun format check\x0d\n    if (ignoreErrors) return undefined;\x0d\n    let suggestion = '';\x0d\n    if (getPackageType(url) === 'module' && ext === '') {\x0d\n      const config = getPackageScopeConfig(url);\x0d\n      const fileBasename = basename(filepath);\x0d\n      const relativePath = StringPrototypeSlice(relative(config.pjsonPath\x2C filepath)\x2C 1);\x0d\n      suggestion = 'Loading extensionless files is not supported inside of ' +\x0d\n        '"type":"module" package.json contexts. The package.json file ' +\x0d\n        `${config.pjsonPath} caused this "type":"module" context. Try ` +\x0d\n        `changing ${filepath} to have a file extension. Note the "bin" ` +\x0d\n        'field of package.json can point to a file with an extension\x2C for example ' +\x0d\n        `{"type":"module"\x2C"bin":{"${fileBasename}":"${relativePath}.js"}}`;\x0d\n    }\x0d\n    throw new ERR_UNKNOWN_FILE_EXTENSION(ext\x2C filepath\x2C suggestion);\x0d\n  }\x0d\n\x0d\n  return getLegacyExtensionFormat(ext) ?? null;\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {URL} url\x0d\n * @param {{parentURL: string}} context\x0d\n * @returns {Promise<string> | undefined} only works when enabled\x0d\n */\x0d\nfunction getHttpProtocolModuleFormat(url\x2C context) {\x0d\n  if (experimentalNetworkImports) {\x0d\n    return PromisePrototypeThen(\x0d\n      PromiseResolve(fetchModule(url\x2C context))\x2C\x0d\n      (entry) => {\x0d\n        return mimeToFormat(entry.headers['content-type']);\x0d\n      }\x0d\n    );\x0d\n  }\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {URL | URL['href']} url\x0d\n * @param {{parentURL: string}} context\x0d\n * @returns {Promise<string> | string | undefined} only works when enabled\x0d\n */\x0d\nfunction defaultGetFormatWithoutErrors(url\x2C context) {\x0d\n  const parsed = new URL(url);\x0d\n  if (!ObjectPrototypeHasOwnProperty(protocolHandlers\x2C parsed.protocol))\x0d\n    return null;\x0d\n  return protocolHandlers[parsed.protocol](parsed\x2C context\x2C true);\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {URL | URL['href']} url\x0d\n * @param {{parentURL: string}} context\x0d\n * @returns {Promise<string> | string | undefined} only works when enabled\x0d\n */\x0d\nfunction defaultGetFormat(url\x2C context) {\x0d\n  const parsed = new URL(url);\x0d\n  return ObjectPrototypeHasOwnProperty(protocolHandlers\x2C parsed.protocol) ?\x0d\n    protocolHandlers[parsed.protocol](parsed\x2C context\x2C false) :\x0d\n    null;\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  defaultGetFormat\x2C\x0d\n  defaultGetFormatWithoutErrors\x2C\x0d\n  extensionFormatMap\x2C\x0d\n};\x0d\n
code-source-info,0x14dbcbbb300,457,0,4277,C0O0C4O4277,,
code-creation,Function,10,316210,0x14dbcbbb770,348, node:internal/modules/esm/get_format:1:1,0x14dbcbbb278,~
code-source-info,0x14dbcbbb770,457,0,4277,C0O0C90O26C96O50C102O84C108O109C114O128C120O209C123O209C128O177C134O187C140O196C146O254C149O254C154O235C159O308C162O308C167O292C173O437C176O437C181O366C187O389C193O418C199O519C202O519C206O519C208O613C211O613C215O613C217O719C220O719C225O677C231O693C237O792C240O792C245O769C251O774C257O857C260O857C265O883C270O826C276O919C283O955C289O996C295O1037C301O1079C305O1111C315O919C317O4175C324O4197C330O4218C336O4252C342O4190C347O4276,,
code-creation,Eval,10,316599,0x14dbcbbc620,5, node:internal/modules/esm/fetch_module:1:1,0x14dbcbbc338,~
script-source,458,node:internal/modules/esm/fetch_module,'use strict';\x0d\nconst {\x0d\n  ObjectPrototypeHasOwnProperty\x2C\x0d\n  PromisePrototypeThen\x2C\x0d\n  SafeMap\x2C\x0d\n  StringPrototypeEndsWith\x2C\x0d\n  StringPrototypeSlice\x2C\x0d\n  StringPrototypeStartsWith\x2C\x0d\n} = primordials;\x0d\nconst {\x0d\n  Buffer: { concat: BufferConcat }\x2C\x0d\n} = require('buffer');\x0d\nconst {\x0d\n  ERR_NETWORK_IMPORT_DISALLOWED\x2C\x0d\n  ERR_NETWORK_IMPORT_BAD_RESPONSE\x2C\x0d\n  ERR_MODULE_NOT_FOUND\x2C\x0d\n} = require('internal/errors').codes;\x0d\nconst { URL } = require('internal/url');\x0d\nconst net = require('net');\x0d\nconst { once } = require('events');\x0d\nconst { compose } = require('stream');\x0d\n/**\x0d\n * @typedef CacheEntry\x0d\n * @property {Promise<string> | string} resolvedHREF Parsed HREF of the request.\x0d\n * @property {Record<string\x2C string>} headers HTTP headers of the response.\x0d\n * @property {Promise<Buffer> | Buffer} body Response body.\x0d\n */\x0d\n\x0d\n/**\x0d\n * Only for GET requests\x2C other requests would need new Map\x0d\n * HTTP cache semantics keep diff caches\x0d\n *\x0d\n * It caches either the promise or the cache entry since import.meta.url needs\x0d\n * the value synchronously for the response location after all redirects.\x0d\n *\x0d\n * Maps HREF to pending cache entry\x0d\n * @type {Map<string\x2C Promise<CacheEntry> | CacheEntry>}\x0d\n */\x0d\nconst cacheForGET = new SafeMap();\x0d\n\x0d\n// [1] The V8 snapshot doesn't like some C++ APIs to be loaded eagerly. Do it\x0d\n// lazily/at runtime and not top level of an internal module.\x0d\n\x0d\n// [2] Creating a new agent instead of using the gloabl agent improves\x0d\n// performance and precludes the agent becoming tainted.\x0d\n\x0d\nlet HTTPSAgent;\x0d\nfunction HTTPSGet(url\x2C opts) {\x0d\n  const https = require('https'); // [1]\x0d\n  HTTPSAgent ??= new https.Agent({ // [2]\x0d\n    keepAlive: true\x2C\x0d\n  });\x0d\n  return https.get(url\x2C {\x0d\n    agent: HTTPSAgent\x2C\x0d\n    ...opts\x2C\x0d\n  });\x0d\n}\x0d\n\x0d\nlet HTTPAgent;\x0d\nfunction HTTPGet(url\x2C opts) {\x0d\n  const http = require('http'); // [1]\x0d\n  HTTPAgent ??= new http.Agent({ // [2]\x0d\n    keepAlive: true\x2C\x0d\n  });\x0d\n  return http.get(url\x2C {\x0d\n    agent: HTTPAgent\x2C\x0d\n    ...opts\x2C\x0d\n  });\x0d\n}\x0d\n\x0d\nfunction dnsLookup(name\x2C opts) {\x0d\n  // eslint-disable-next-line no-func-assign\x0d\n  dnsLookup = require('dns/promises').lookup;\x0d\n  return dnsLookup(name\x2C opts);\x0d\n}\x0d\n\x0d\nlet zlib;\x0d\nfunction createBrotliDecompress() {\x0d\n  zlib ??= require('zlib'); // [1]\x0d\n  // eslint-disable-next-line no-func-assign\x0d\n  createBrotliDecompress = zlib.createBrotliDecompress;\x0d\n  return createBrotliDecompress();\x0d\n}\x0d\n\x0d\nfunction createUnzip() {\x0d\n  zlib ??= require('zlib'); // [1]\x0d\n  // eslint-disable-next-line no-func-assign\x0d\n  createUnzip = zlib.createUnzip;\x0d\n  return createUnzip();\x0d\n}\x0d\n\x0d\n/**\x0d\n * Redirection status code as per section 6.4 of RFC 7231:\x0d\n * https://datatracker.ietf.org/doc/html/rfc7231#section-6.4\x0d\n * and RFC 7238:\x0d\n * https://datatracker.ietf.org/doc/html/rfc7238\x0d\n * @param {number} statusCode\x0d\n * @returns {boolean}\x0d\n */\x0d\nfunction isRedirect(statusCode) {\x0d\n  switch (statusCode) {\x0d\n    case 300: // Multiple Choices\x0d\n    case 301: // Moved Permanently\x0d\n    case 302: // Found\x0d\n    case 303: // See Other\x0d\n    case 307: // Temporary Redirect\x0d\n    case 308: // Permanent Redirect\x0d\n      return true;\x0d\n    default:\x0d\n      return false;\x0d\n  }\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {URL} parsed\x0d\n * @returns {Promise<CacheEntry> | CacheEntry}\x0d\n */\x0d\nfunction fetchWithRedirects(parsed) {\x0d\n  const existing = cacheForGET.get(parsed.href);\x0d\n  if (existing) {\x0d\n    return existing;\x0d\n  }\x0d\n  const handler = parsed.protocol === 'http:' ? HTTPGet : HTTPSGet;\x0d\n  const result = (async () => {\x0d\n    const req = handler(parsed\x2C {\x0d\n      headers: { Accept: '*/*' }\x2C\x0d\n    });\x0d\n    // Note that `once` is used here to handle `error` and that it hits the\x0d\n    // `finally` on network error/timeout.\x0d\n    const { 0: res } = await once(req\x2C 'response');\x0d\n    try {\x0d\n      const hasLocation = ObjectPrototypeHasOwnProperty(res.headers\x2C 'location');\x0d\n      if (isRedirect(res.statusCode) && hasLocation) {\x0d\n        const location = new URL(res.headers.location\x2C parsed);\x0d\n        if (location.protocol !== 'http:' && location.protocol !== 'https:') {\x0d\n          throw new ERR_NETWORK_IMPORT_DISALLOWED(\x0d\n            res.headers.location\x2C\x0d\n            parsed.href\x2C\x0d\n            'cannot redirect to non-network location'\x0d\n          );\x0d\n        }\x0d\n        const entry = await fetchWithRedirects(location);\x0d\n        cacheForGET.set(parsed.href\x2C entry);\x0d\n        return entry;\x0d\n      }\x0d\n      if (res.statusCode === 404) {\x0d\n        const err = new ERR_MODULE_NOT_FOUND(parsed.href\x2C null);\x0d\n        err.message = `Cannot find module '${parsed.href}'\x2C HTTP 404`;\x0d\n        throw err;\x0d\n      }\x0d\n      // This condition catches all unsupported status codes\x2C including\x0d\n      // 3xx redirection codes without `Location` HTTP header.\x0d\n      if (res.statusCode < 200 || res.statusCode >= 300) {\x0d\n        throw new ERR_NETWORK_IMPORT_DISALLOWED(\x0d\n          res.headers.location\x2C\x0d\n          parsed.href\x2C\x0d\n          'cannot redirect to non-network location');\x0d\n      }\x0d\n      const { headers } = res;\x0d\n      const contentType = headers['content-type'];\x0d\n      if (!contentType) {\x0d\n        throw new ERR_NETWORK_IMPORT_BAD_RESPONSE(\x0d\n          parsed.href\x2C\x0d\n          "the 'Content-Type' header is required"\x0d\n        );\x0d\n      }\x0d\n      /**\x0d\n       * @type {CacheEntry}\x0d\n       */\x0d\n      const entry = {\x0d\n        resolvedHREF: parsed.href\x2C\x0d\n        headers: {\x0d\n          'content-type': res.headers['content-type']\x2C\x0d\n        }\x2C\x0d\n        body: (async () => {\x0d\n          let bodyStream = res;\x0d\n          if (res.headers['content-encoding'] === 'br') {\x0d\n            bodyStream = compose(res\x2C createBrotliDecompress());\x0d\n          } else if (\x0d\n            res.headers['content-encoding'] === 'gzip' ||\x0d\n            res.headers['content-encoding'] === 'deflate'\x0d\n          ) {\x0d\n            bodyStream = compose(res\x2C createUnzip());\x0d\n          }\x0d\n          const buffers = await bodyStream.toArray();\x0d\n          const body = BufferConcat(buffers);\x0d\n          entry.body = body;\x0d\n          return body;\x0d\n        })()\x2C\x0d\n      };\x0d\n      cacheForGET.set(parsed.href\x2C entry);\x0d\n      await entry.body;\x0d\n      return entry;\x0d\n    } finally {\x0d\n      req.destroy();\x0d\n    }\x0d\n  })();\x0d\n  cacheForGET.set(parsed.href\x2C result);\x0d\n  return result;\x0d\n}\x0d\n\x0d\nconst allowList = new net.BlockList();\x0d\nallowList.addAddress('::1'\x2C 'ipv6');\x0d\nallowList.addRange('127.0.0.1'\x2C '127.255.255.255');\x0d\n\x0d\n/**\x0d\n * Returns if an address has local status by if it is going to a local\x0d\n * interface or is an address resolved by DNS to be a local interface\x0d\n * @param {string} hostname url.hostname to test\x0d\n * @returns {Promise<boolean>}\x0d\n */\x0d\nasync function isLocalAddress(hostname) {\x0d\n  try {\x0d\n    if (\x0d\n      StringPrototypeStartsWith(hostname\x2C '[') &&\x0d\n      StringPrototypeEndsWith(hostname\x2C ']')\x0d\n    ) {\x0d\n      hostname = StringPrototypeSlice(hostname\x2C 1\x2C -1);\x0d\n    }\x0d\n    const addr = await dnsLookup(hostname\x2C { verbatim: true });\x0d\n    const ipv = addr.family === 4 ? 'ipv4' : 'ipv6';\x0d\n    return allowList.check(addr.address\x2C ipv);\x0d\n  } catch {\x0d\n    // If it errored\x2C the answer is no.\x0d\n  }\x0d\n  return false;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Fetches a location with a shared cache following redirects.\x0d\n * Does not respect HTTP cache headers.\x0d\n *\x0d\n * This splits the header and body Promises so that things only needing\x0d\n * headers don't need to wait on the body.\x0d\n *\x0d\n * In cases where the request & response have already settled\x2C this returns the\x0d\n * cache value synchronously.\x0d\n *\x0d\n * @param {URL} parsed\x0d\n * @param {ESModuleContext} context\x0d\n * @returns {ReturnType<typeof fetchWithRedirects>}\x0d\n */\x0d\nfunction fetchModule(parsed\x2C { parentURL }) {\x0d\n  const { href } = parsed;\x0d\n  const existing = cacheForGET.get(href);\x0d\n  if (existing) {\x0d\n    return existing;\x0d\n  }\x0d\n  if (parsed.protocol === 'http:') {\x0d\n    return PromisePrototypeThen(isLocalAddress(parsed.hostname)\x2C (is) => {\x0d\n      if (is !== true) {\x0d\n        throw new ERR_NETWORK_IMPORT_DISALLOWED(\x0d\n          href\x2C\x0d\n          parentURL\x2C\x0d\n          'http can only be used to load local resources (use https instead).'\x0d\n        );\x0d\n      }\x0d\n      return fetchWithRedirects(parsed);\x0d\n    });\x0d\n  }\x0d\n  return fetchWithRedirects(parsed);\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  fetchModule\x2C\x0d\n};\x0d\n
code-source-info,0x14dbcbbc620,458,0,8091,C0O0C4O8091,,
code-creation,Function,10,317187,0x14dbcbbcad8,355, node:internal/modules/esm/fetch_module:1:1,0x14dbcbbc598,~
code-source-info,0x14dbcbbcad8,458,0,8091,C0O0C113O26C119O60C125O85C130O97C136O125C142O150C148O246C154O246C159O246C164O225C170O374C176O374C181O400C186O277C192O311C198O347C204O425C210O425C215O417C221O463C227O463C232O497C238O497C243O488C249O537C255O537C260O525C266O1204C268O1204C273O1204C275O1502C276O1502C278O1742C279O1742C281O2139C282O2139C284O6166C289O6158C294O6158C296O6180C299O6190C310O6190C316O6218C319O6228C330O6228C336O8051C343O8073C349O8066C354O8090,,
tick,0x7ff7260e18a0,317524,1,0x7ff725a6ef10,2,0x7ff7264a2ab0,0x1f81b7195d6,0x7ff6a66c32e1,0x14dbcbbcbbb,0x1f81b7195f7,0x7ff6a66c32e1,0x14dbcbbb812,0x1f81b7195f7,0x7ff6a66c32e1,0x14dbcbb7422,0x1f81b7195f7,0x7ff6a66c32e1,0x14dbcbad4bc,0x1f81b7195f7,0x7ff6a66c32e1,0x14dbcbab4a9,0x1f81b7195f7,0x7ff6a66c32e1,0x14dbcba671e,0x1f81b7195f7,0x7ff6a66c32e1,0x14dbcba11ae,0x14dbcba0fa3,0xb50533ad4e,0xb505339468,0xb5053356e1
new,MemoryChunk,0x2a6f0b80000,262144
code-creation,Eval,10,319351,0xb50533f090,5, node:net:1:1,0x14dbcbbedd8,~
script-source,459,node:net,// Copyright Joyent\x2C Inc. and other Node contributors.\x0d\n//\x0d\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\x0d\n// copy of this software and associated documentation files (the\x0d\n// "Software")\x2C to deal in the Software without restriction\x2C including\x0d\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\x0d\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\x0d\n// persons to whom the Software is furnished to do so\x2C subject to the\x0d\n// following conditions:\x0d\n//\x0d\n// The above copyright notice and this permission notice shall be included\x0d\n// in all copies or substantial portions of the Software.\x0d\n//\x0d\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\x0d\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\x0d\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\x0d\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\x0d\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\x0d\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\x0d\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\x0d\n\x0d\n'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayIsArray\x2C\x0d\n  ArrayPrototypeIndexOf\x2C\x0d\n  ArrayPrototypePush\x2C\x0d\n  Boolean\x2C\x0d\n  FunctionPrototypeBind\x2C\x0d\n  MathMax\x2C\x0d\n  Number\x2C\x0d\n  NumberIsNaN\x2C\x0d\n  NumberParseInt\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  Symbol\x2C\x0d\n  ObjectCreate\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst EventEmitter = require('events');\x0d\nconst stream = require('stream');\x0d\nlet debug = require('internal/util/debuglog').debuglog('net'\x2C (fn) => {\x0d\n  debug = fn;\x0d\n});\x0d\nconst {\x0d\n  kWrapConnectedHandle\x2C\x0d\n  isIP\x2C\x0d\n  isIPv4\x2C\x0d\n  isIPv6\x2C\x0d\n  normalizedArgsSymbol\x2C\x0d\n  makeSyncWrite\x0d\n} = require('internal/net');\x0d\nconst assert = require('internal/assert');\x0d\nconst {\x0d\n  UV_EADDRINUSE\x2C\x0d\n  UV_EINVAL\x2C\x0d\n  UV_ENOTCONN\x0d\n} = internalBinding('uv');\x0d\n\x0d\nconst { Buffer } = require('buffer');\x0d\nconst { guessHandleType } = internalBinding('util');\x0d\nconst { ShutdownWrap } = internalBinding('stream_wrap');\x0d\nconst {\x0d\n  TCP\x2C\x0d\n  TCPConnectWrap\x2C\x0d\n  constants: TCPConstants\x0d\n} = internalBinding('tcp_wrap');\x0d\nconst {\x0d\n  Pipe\x2C\x0d\n  PipeConnectWrap\x2C\x0d\n  constants: PipeConstants\x0d\n} = internalBinding('pipe_wrap');\x0d\nconst {\x0d\n  newAsyncId\x2C\x0d\n  defaultTriggerAsyncIdScope\x2C\x0d\n  symbols: { async_id_symbol\x2C owner_symbol }\x0d\n} = require('internal/async_hooks');\x0d\nconst {\x0d\n  writevGeneric\x2C\x0d\n  writeGeneric\x2C\x0d\n  onStreamRead\x2C\x0d\n  kAfterAsyncWrite\x2C\x0d\n  kHandle\x2C\x0d\n  kUpdateTimer\x2C\x0d\n  setStreamTimeout\x2C\x0d\n  kBuffer\x2C\x0d\n  kBufferCb\x2C\x0d\n  kBufferGen\x0d\n} = require('internal/stream_base_commons');\x0d\nconst {\x0d\n  codes: {\x0d\n    ERR_INVALID_ADDRESS_FAMILY\x2C\x0d\n    ERR_INVALID_ARG_TYPE\x2C\x0d\n    ERR_INVALID_ARG_VALUE\x2C\x0d\n    ERR_INVALID_FD_TYPE\x2C\x0d\n    ERR_INVALID_IP_ADDRESS\x2C\x0d\n    ERR_INVALID_HANDLE_TYPE\x2C\x0d\n    ERR_SERVER_ALREADY_LISTEN\x2C\x0d\n    ERR_SERVER_NOT_RUNNING\x2C\x0d\n    ERR_SOCKET_CLOSED\x2C\x0d\n    ERR_MISSING_ARGS\x2C\x0d\n  }\x2C\x0d\n  aggregateErrors\x2C\x0d\n  errnoException\x2C\x0d\n  exceptionWithHostPort\x2C\x0d\n  genericNodeError\x2C\x0d\n  uvExceptionWithHostPort\x2C\x0d\n} = require('internal/errors');\x0d\nconst { isUint8Array } = require('internal/util/types');\x0d\nconst { queueMicrotask } = require('internal/process/task_queues');\x0d\nconst {\x0d\n  validateAbortSignal\x2C\x0d\n  validateBoolean\x2C\x0d\n  validateFunction\x2C\x0d\n  validateInt32\x2C\x0d\n  validateNumber\x2C\x0d\n  validatePort\x2C\x0d\n  validateString\x0d\n} = require('internal/validators');\x0d\nconst kLastWriteQueueSize = Symbol('lastWriteQueueSize');\x0d\nconst {\x0d\n  DTRACE_NET_SERVER_CONNECTION\x2C\x0d\n  DTRACE_NET_STREAM_END\x0d\n} = require('internal/dtrace');\x0d\n\x0d\n// Lazy loaded to improve startup performance.\x0d\nlet cluster;\x0d\nlet dns;\x0d\nlet BlockList;\x0d\nlet SocketAddress;\x0d\n\x0d\nconst { clearTimeout\x2C setTimeout } = require('timers');\x0d\nconst { kTimeout } = require('internal/timers');\x0d\nconst kTimeoutTriggered = Symbol('kTimeoutTriggered');\x0d\n\x0d\nconst DEFAULT_IPV4_ADDR = '0.0.0.0';\x0d\nconst DEFAULT_IPV6_ADDR = '::';\x0d\n\x0d\nconst isWindows = process.platform === 'win32';\x0d\n\x0d\nconst noop = () => {};\x0d\n\x0d\nconst kPerfHooksNetConnectContext = Symbol('kPerfHooksNetConnectContext');\x0d\n\x0d\nlet netClientSocketChannel;\x0d\nlet netServerSocketChannel;\x0d\nfunction lazyChannels() {\x0d\n  // TODO(joyeecheung): support diagnostics channels in the snapshot.\x0d\n  // For now it is fine to create them lazily when there isn't a snapshot to\x0d\n  // build. If users need the channels they would have to create them first\x0d\n  // before invoking any built-ins that would publish to these channels\x0d\n  // anyway.\x0d\n  if (netClientSocketChannel === undefined) {\x0d\n    const dc = require('diagnostics_channel');\x0d\n    netClientSocketChannel = dc.channel('net.client.socket');\x0d\n    netServerSocketChannel = dc.channel('net.server.socket');\x0d\n  }\x0d\n}\x0d\n\x0d\nconst {\x0d\n  hasObserver\x2C\x0d\n  startPerf\x2C\x0d\n  stopPerf\x2C\x0d\n} = require('internal/perf/observe');\x0d\n\x0d\nfunction getFlags(ipv6Only) {\x0d\n  return ipv6Only === true ? TCPConstants.UV_TCP_IPV6ONLY : 0;\x0d\n}\x0d\n\x0d\nfunction createHandle(fd\x2C is_server) {\x0d\n  validateInt32(fd\x2C 'fd'\x2C 0);\x0d\n  const type = guessHandleType(fd);\x0d\n  if (type === 'PIPE') {\x0d\n    return new Pipe(\x0d\n      is_server ? PipeConstants.SERVER : PipeConstants.SOCKET\x0d\n    );\x0d\n  }\x0d\n\x0d\n  if (type === 'TCP') {\x0d\n    return new TCP(\x0d\n      is_server ? TCPConstants.SERVER : TCPConstants.SOCKET\x0d\n    );\x0d\n  }\x0d\n\x0d\n  throw new ERR_INVALID_FD_TYPE(type);\x0d\n}\x0d\n\x0d\n\x0d\nfunction getNewAsyncId(handle) {\x0d\n  return (!handle || typeof handle.getAsyncId !== 'function') ?\x0d\n    newAsyncId() : handle.getAsyncId();\x0d\n}\x0d\n\x0d\n\x0d\nfunction isPipeName(s) {\x0d\n  return typeof s === 'string' && toNumber(s) === false;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Creates a new TCP or IPC server\x0d\n * @param {{\x0d\n *   allowHalfOpen?: boolean;\x0d\n *   pauseOnConnect?: boolean;\x0d\n *   }} [options]\x0d\n * @param {Function} [connectionListener]\x0d\n * @returns {Server}\x0d\n */\x0d\n\x0d\nfunction createServer(options\x2C connectionListener) {\x0d\n  return new Server(options\x2C connectionListener);\x0d\n}\x0d\n\x0d\n\x0d\n// Target API:\x0d\n//\x0d\n// let s = net.connect({port: 80\x2C host: 'google.com'}\x2C function() {\x0d\n//   ...\x0d\n// });\x0d\n//\x0d\n// There are various forms:\x0d\n//\x0d\n// connect(options\x2C [cb])\x0d\n// connect(port\x2C [host]\x2C [cb])\x0d\n// connect(path\x2C [cb]);\x0d\n//\x0d\nfunction connect(...args) {\x0d\n  const normalized = normalizeArgs(args);\x0d\n  const options = normalized[0];\x0d\n  debug('createConnection'\x2C normalized);\x0d\n  const socket = new Socket(options);\x0d\n  lazyChannels();\x0d\n  if (netClientSocketChannel.hasSubscribers) {\x0d\n    netClientSocketChannel.publish({\x0d\n      socket\x2C\x0d\n    });\x0d\n  }\x0d\n  if (options.timeout) {\x0d\n    socket.setTimeout(options.timeout);\x0d\n  }\x0d\n\x0d\n  return socket.connect(normalized);\x0d\n}\x0d\n\x0d\n\x0d\n// Returns an array [options\x2C cb]\x2C where options is an object\x2C\x0d\n// cb is either a function or null.\x0d\n// Used to normalize arguments of Socket.prototype.connect() and\x0d\n// Server.prototype.listen(). Possible combinations of parameters:\x0d\n//   (options[...][\x2C cb])\x0d\n//   (path[...][\x2C cb])\x0d\n//   ([port][\x2C host][...][\x2C cb])\x0d\n// For Socket.prototype.connect()\x2C the [...] part is ignored\x0d\n// For Server.prototype.listen()\x2C the [...] part is [\x2C backlog]\x0d\n// but will not be handled here (handled in listen())\x0d\nfunction normalizeArgs(args) {\x0d\n  let arr;\x0d\n\x0d\n  if (args.length === 0) {\x0d\n    arr = [{}\x2C null];\x0d\n    arr[normalizedArgsSymbol] = true;\x0d\n    return arr;\x0d\n  }\x0d\n\x0d\n  const arg0 = args[0];\x0d\n  let options = {};\x0d\n  if (typeof arg0 === 'object' && arg0 !== null) {\x0d\n    // (options[...][\x2C cb])\x0d\n    options = arg0;\x0d\n  } else if (isPipeName(arg0)) {\x0d\n    // (path[...][\x2C cb])\x0d\n    options.path = arg0;\x0d\n  } else {\x0d\n    // ([port][\x2C host][...][\x2C cb])\x0d\n    options.port = arg0;\x0d\n    if (args.length > 1 && typeof args[1] === 'string') {\x0d\n      options.host = args[1];\x0d\n    }\x0d\n  }\x0d\n\x0d\n  const cb = args[args.length - 1];\x0d\n  if (typeof cb !== 'function')\x0d\n    arr = [options\x2C null];\x0d\n  else\x0d\n    arr = [options\x2C cb];\x0d\n\x0d\n  arr[normalizedArgsSymbol] = true;\x0d\n  return arr;\x0d\n}\x0d\n\x0d\n\x0d\n// Called when creating new Socket\x2C or when re-using a closed Socket\x0d\nfunction initSocketHandle(self) {\x0d\n  self._undestroy();\x0d\n  self._sockname = null;\x0d\n\x0d\n  // Handle creation may be deferred to bind() or connect() time.\x0d\n  if (self._handle) {\x0d\n    self._handle[owner_symbol] = self;\x0d\n    self._handle.onread = onStreamRead;\x0d\n    self[async_id_symbol] = getNewAsyncId(self._handle);\x0d\n\x0d\n    let userBuf = self[kBuffer];\x0d\n    if (userBuf) {\x0d\n      const bufGen = self[kBufferGen];\x0d\n      if (bufGen !== null) {\x0d\n        userBuf = bufGen();\x0d\n        if (!isUint8Array(userBuf))\x0d\n          return;\x0d\n        self[kBuffer] = userBuf;\x0d\n      }\x0d\n      self._handle.useUserBuffer(userBuf);\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction closeSocketHandle(self\x2C isException\x2C isCleanupPending = false) {\x0d\n  if (self._handle) {\x0d\n    self._handle.close(() => {\x0d\n      debug('emit close');\x0d\n      self.emit('close'\x2C isException);\x0d\n      if (isCleanupPending) {\x0d\n        self._handle.onread = noop;\x0d\n        self._handle = null;\x0d\n        self._sockname = null;\x0d\n      }\x0d\n    });\x0d\n  }\x0d\n}\x0d\n\x0d\nconst kBytesRead = Symbol('kBytesRead');\x0d\nconst kBytesWritten = Symbol('kBytesWritten');\x0d\nconst kSetNoDelay = Symbol('kSetNoDelay');\x0d\nconst kSetKeepAlive = Symbol('kSetKeepAlive');\x0d\nconst kSetKeepAliveInitialDelay = Symbol('kSetKeepAliveInitialDelay');\x0d\n\x0d\nfunction Socket(options) {\x0d\n  if (!(this instanceof Socket)) return new Socket(options);\x0d\n  if (options?.objectMode) {\x0d\n    throw new ERR_INVALID_ARG_VALUE(\x0d\n      'options.objectMode'\x2C\x0d\n      options.objectMode\x2C\x0d\n      'is not supported'\x0d\n    );\x0d\n  } else if (options?.readableObjectMode || options?.writableObjectMode) {\x0d\n    throw new ERR_INVALID_ARG_VALUE(\x0d\n      `options.${\x0d\n        options.readableObjectMode ? 'readableObjectMode' : 'writableObjectMode'\x0d\n      }`\x2C\x0d\n      options.readableObjectMode || options.writableObjectMode\x2C\x0d\n      'is not supported'\x0d\n    );\x0d\n  }\x0d\n  if (typeof options?.keepAliveInitialDelay !== 'undefined') {\x0d\n    validateNumber(\x0d\n      options?.keepAliveInitialDelay\x2C 'options.keepAliveInitialDelay'\x0d\n    );\x0d\n\x0d\n    if (options.keepAliveInitialDelay < 0) {\x0d\n      options.keepAliveInitialDelay = 0;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  this.connecting = false;\x0d\n  // Problem with this is that users can supply their own handle\x2C that may not\x0d\n  // have _handle.getAsyncId(). In this case an[async_id_symbol] should\x0d\n  // probably be supplied by async_hooks.\x0d\n  this[async_id_symbol] = -1;\x0d\n  this._hadError = false;\x0d\n  this[kHandle] = null;\x0d\n  this._parent = null;\x0d\n  this._host = null;\x0d\n  this[kLastWriteQueueSize] = 0;\x0d\n  this[kTimeout] = null;\x0d\n  this[kBuffer] = null;\x0d\n  this[kBufferCb] = null;\x0d\n  this[kBufferGen] = null;\x0d\n  this._closeAfterHandlingError = false;\x0d\n\x0d\n  if (typeof options === 'number')\x0d\n    options = { fd: options }; // Legacy interface.\x0d\n  else\x0d\n    options = { ...options };\x0d\n\x0d\n  // Default to *not* allowing half open sockets.\x0d\n  options.allowHalfOpen = Boolean(options.allowHalfOpen);\x0d\n  // For backwards compat do not emit close on destroy.\x0d\n  options.emitClose = false;\x0d\n  options.autoDestroy = true;\x0d\n  // Handle strings directly.\x0d\n  options.decodeStrings = false;\x0d\n  stream.Duplex.call(this\x2C options);\x0d\n\x0d\n  if (options.handle) {\x0d\n    this._handle = options.handle; // private\x0d\n    this[async_id_symbol] = getNewAsyncId(this._handle);\x0d\n  } else if (options.fd !== undefined) {\x0d\n    const { fd } = options;\x0d\n    let err;\x0d\n\x0d\n    // createHandle will throw ERR_INVALID_FD_TYPE if `fd` is not\x0d\n    // a valid `PIPE` or `TCP` descriptor\x0d\n    this._handle = createHandle(fd\x2C false);\x0d\n\x0d\n    err = this._handle.open(fd);\x0d\n\x0d\n    // While difficult to fabricate\x2C in some architectures\x0d\n    // `open` may return an error code for valid file descriptors\x0d\n    // which cannot be opened. This is difficult to test as most\x0d\n    // un-openable fds will throw on `createHandle`\x0d\n    if (err)\x0d\n      throw errnoException(err\x2C 'open');\x0d\n\x0d\n    this[async_id_symbol] = this._handle.getAsyncId();\x0d\n\x0d\n    if ((fd === 1 || fd === 2) &&\x0d\n        (this._handle instanceof Pipe) && isWindows) {\x0d\n      // Make stdout and stderr blocking on Windows\x0d\n      err = this._handle.setBlocking(true);\x0d\n      if (err)\x0d\n        throw errnoException(err\x2C 'setBlocking');\x0d\n\x0d\n      this._writev = null;\x0d\n      this._write = makeSyncWrite(fd);\x0d\n      // makeSyncWrite adjusts this value like the original handle would\x2C so\x0d\n      // we need to let it do that by turning it into a writable\x2C own\x0d\n      // property.\x0d\n      ObjectDefineProperty(this._handle\x2C 'bytesWritten'\x2C {\x0d\n        __proto__: null\x2C\x0d\n        value: 0\x2C writable: true\x0d\n      });\x0d\n    }\x0d\n  }\x0d\n\x0d\n  const onread = options.onread;\x0d\n  if (onread !== null && typeof onread === 'object' &&\x0d\n      (isUint8Array(onread.buffer) || typeof onread.buffer === 'function') &&\x0d\n      typeof onread.callback === 'function') {\x0d\n    if (typeof onread.buffer === 'function') {\x0d\n      this[kBuffer] = true;\x0d\n      this[kBufferGen] = onread.buffer;\x0d\n    } else {\x0d\n      this[kBuffer] = onread.buffer;\x0d\n    }\x0d\n    this[kBufferCb] = onread.callback;\x0d\n  }\x0d\n\x0d\n  this[kSetNoDelay] = Boolean(options.noDelay);\x0d\n  this[kSetKeepAlive] = Boolean(options.keepAlive);\x0d\n  this[kSetKeepAliveInitialDelay] = ~~(options.keepAliveInitialDelay / 1000);\x0d\n\x0d\n  // Shut down the socket when we're finished with it.\x0d\n  this.on('end'\x2C onReadableStreamEnd);\x0d\n\x0d\n  initSocketHandle(this);\x0d\n\x0d\n  this._pendingData = null;\x0d\n  this._pendingEncoding = '';\x0d\n\x0d\n  // If we have a handle\x2C then start the flow of data into the\x0d\n  // buffer.  if not\x2C then this will happen when we connect\x0d\n  if (this._handle && options.readable !== false) {\x0d\n    if (options.pauseOnCreate) {\x0d\n      // Stop the handle from reading and pause the stream\x0d\n      this._handle.reading = false;\x0d\n      this._handle.readStop();\x0d\n      this.readableFlowing = false;\x0d\n    } else if (!options.manualStart) {\x0d\n      this.read(0);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  // Reserve properties\x0d\n  this.server = null;\x0d\n  this._server = null;\x0d\n\x0d\n  // Used after `.destroy()`\x0d\n  this[kBytesRead] = 0;\x0d\n  this[kBytesWritten] = 0;\x0d\n}\x0d\nObjectSetPrototypeOf(Socket.prototype\x2C stream.Duplex.prototype);\x0d\nObjectSetPrototypeOf(Socket\x2C stream.Duplex);\x0d\n\x0d\n// Refresh existing timeouts.\x0d\nSocket.prototype._unrefTimer = function _unrefTimer() {\x0d\n  for (let s = this; s !== null; s = s._parent) {\x0d\n    if (s[kTimeout])\x0d\n      s[kTimeout].refresh();\x0d\n  }\x0d\n};\x0d\n\x0d\n\x0d\n// The user has called .end()\x2C and all the bytes have been\x0d\n// sent out to the other side.\x0d\nSocket.prototype._final = function(cb) {\x0d\n  // If still connecting - defer handling `_final` until 'connect' will happen\x0d\n  if (this.pending) {\x0d\n    debug('_final: not yet connected');\x0d\n    return this.once('connect'\x2C () => this._final(cb));\x0d\n  }\x0d\n\x0d\n  if (!this._handle)\x0d\n    return cb();\x0d\n\x0d\n  debug('_final: not ended\x2C call shutdown()');\x0d\n\x0d\n  const req = new ShutdownWrap();\x0d\n  req.oncomplete = afterShutdown;\x0d\n  req.handle = this._handle;\x0d\n  req.callback = cb;\x0d\n  const err = this._handle.shutdown(req);\x0d\n\x0d\n  if (err === 1 || err === UV_ENOTCONN)  // synchronous finish\x0d\n    return cb();\x0d\n  else if (err !== 0)\x0d\n    return cb(errnoException(err\x2C 'shutdown'));\x0d\n};\x0d\n\x0d\nfunction afterShutdown() {\x0d\n  const self = this.handle[owner_symbol];\x0d\n\x0d\n  debug('afterShutdown destroyed=%j'\x2C self.destroyed);\x0d\n\x0d\n  this.callback();\x0d\n}\x0d\n\x0d\n// Provide a better error message when we call end() as a result\x0d\n// of the other side sending a FIN.  The standard 'write after end'\x0d\n// is overly vague\x2C and makes it seem like the user's code is to blame.\x0d\nfunction writeAfterFIN(chunk\x2C encoding\x2C cb) {\x0d\n  if (!this.writableEnded) {\x0d\n    return stream.Duplex.prototype.write.call(this\x2C chunk\x2C encoding\x2C cb);\x0d\n  }\x0d\n\x0d\n  if (typeof encoding === 'function') {\x0d\n    cb = encoding;\x0d\n    encoding = null;\x0d\n  }\x0d\n\x0d\n  const er = genericNodeError(\x0d\n    'This socket has been ended by the other party'\x2C\x0d\n    { code: 'EPIPE' }\x0d\n  );\x0d\n  if (typeof cb === 'function') {\x0d\n    defaultTriggerAsyncIdScope(this[async_id_symbol]\x2C process.nextTick\x2C cb\x2C er);\x0d\n  }\x0d\n  this.destroy(er);\x0d\n\x0d\n  return false;\x0d\n}\x0d\n\x0d\nSocket.prototype.setTimeout = setStreamTimeout;\x0d\n\x0d\n\x0d\nSocket.prototype._onTimeout = function() {\x0d\n  const handle = this._handle;\x0d\n  const lastWriteQueueSize = this[kLastWriteQueueSize];\x0d\n  if (lastWriteQueueSize > 0 && handle) {\x0d\n    // `lastWriteQueueSize !== writeQueueSize` means there is\x0d\n    // an active write in progress\x2C so we suppress the timeout.\x0d\n    const { writeQueueSize } = handle;\x0d\n    if (lastWriteQueueSize !== writeQueueSize) {\x0d\n      this[kLastWriteQueueSize] = writeQueueSize;\x0d\n      this._unrefTimer();\x0d\n      return;\x0d\n    }\x0d\n  }\x0d\n  debug('_onTimeout');\x0d\n  this.emit('timeout');\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.setNoDelay = function(enable) {\x0d\n  // Backwards compatibility: assume true when `enable` is omitted\x0d\n  enable = Boolean(enable === undefined ? true : enable);\x0d\n\x0d\n  if (!this._handle) {\x0d\n    this[kSetNoDelay] = enable;\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  if (this._handle.setNoDelay && enable !== this[kSetNoDelay]) {\x0d\n    this[kSetNoDelay] = enable;\x0d\n    this._handle.setNoDelay(enable);\x0d\n  }\x0d\n\x0d\n  return this;\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.setKeepAlive = function(enable\x2C initialDelayMsecs) {\x0d\n  enable = Boolean(enable);\x0d\n  const initialDelay = ~~(initialDelayMsecs / 1000);\x0d\n\x0d\n  if (!this._handle) {\x0d\n    this[kSetKeepAlive] = enable;\x0d\n    this[kSetKeepAliveInitialDelay] = initialDelay;\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  if (!this._handle.setKeepAlive) {\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  if (enable !== this[kSetKeepAlive] ||\x0d\n      (\x0d\n        enable &&\x0d\n        this[kSetKeepAliveInitialDelay] !== initialDelay\x0d\n      )\x0d\n  ) {\x0d\n    this[kSetKeepAlive] = enable;\x0d\n    this[kSetKeepAliveInitialDelay] = initialDelay;\x0d\n    this._handle.setKeepAlive(enable\x2C initialDelay);\x0d\n  }\x0d\n\x0d\n  return this;\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.address = function() {\x0d\n  return this._getsockname();\x0d\n};\x0d\n\x0d\n\x0d\nObjectDefineProperty(Socket.prototype\x2C '_connecting'\x2C {\x0d\n  __proto__: null\x2C\x0d\n  get: function() {\x0d\n    return this.connecting;\x0d\n  }\x0d\n});\x0d\n\x0d\nObjectDefineProperty(Socket.prototype\x2C 'pending'\x2C {\x0d\n  __proto__: null\x2C\x0d\n  get() {\x0d\n    return !this._handle || this.connecting;\x0d\n  }\x2C\x0d\n  configurable: true\x0d\n});\x0d\n\x0d\n\x0d\nObjectDefineProperty(Socket.prototype\x2C 'readyState'\x2C {\x0d\n  __proto__: null\x2C\x0d\n  get: function() {\x0d\n    if (this.connecting) {\x0d\n      return 'opening';\x0d\n    } else if (this.readable && this.writable) {\x0d\n      return 'open';\x0d\n    } else if (this.readable && !this.writable) {\x0d\n      return 'readOnly';\x0d\n    } else if (!this.readable && this.writable) {\x0d\n      return 'writeOnly';\x0d\n    }\x0d\n    return 'closed';\x0d\n  }\x0d\n});\x0d\n\x0d\n\x0d\nObjectDefineProperty(Socket.prototype\x2C 'bufferSize'\x2C {\x0d\n  __proto__: null\x2C\x0d\n  get: function() {\x0d\n    if (this._handle) {\x0d\n      return this.writableLength;\x0d\n    }\x0d\n  }\x0d\n});\x0d\n\x0d\nObjectDefineProperty(Socket.prototype\x2C kUpdateTimer\x2C {\x0d\n  __proto__: null\x2C\x0d\n  get: function() {\x0d\n    return this._unrefTimer;\x0d\n  }\x0d\n});\x0d\n\x0d\n\x0d\nfunction tryReadStart(socket) {\x0d\n  // Not already reading\x2C start the flow\x0d\n  debug('Socket._handle.readStart');\x0d\n  socket._handle.reading = true;\x0d\n  const err = socket._handle.readStart();\x0d\n  if (err)\x0d\n    socket.destroy(errnoException(err\x2C 'read'));\x0d\n}\x0d\n\x0d\n// Just call handle.readStart until we have enough in the buffer\x0d\nSocket.prototype._read = function(n) {\x0d\n  debug('_read');\x0d\n\x0d\n  if (this.connecting || !this._handle) {\x0d\n    debug('_read wait for connection');\x0d\n    this.once('connect'\x2C () => this._read(n));\x0d\n  } else if (!this._handle.reading) {\x0d\n    tryReadStart(this);\x0d\n  }\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.end = function(data\x2C encoding\x2C callback) {\x0d\n  stream.Duplex.prototype.end.call(this\x2C\x0d\n                                   data\x2C encoding\x2C callback);\x0d\n  DTRACE_NET_STREAM_END(this);\x0d\n  return this;\x0d\n};\x0d\n\x0d\nSocket.prototype.resetAndDestroy = function() {\x0d\n  if (this._handle) {\x0d\n    if (!(this._handle instanceof TCP))\x0d\n      throw new ERR_INVALID_HANDLE_TYPE();\x0d\n    if (this.connecting) {\x0d\n      debug('reset wait for connection');\x0d\n      this.once('connect'\x2C () => this._reset());\x0d\n    } else {\x0d\n      this._reset();\x0d\n    }\x0d\n  } else {\x0d\n    this.destroy(new ERR_SOCKET_CLOSED());\x0d\n  }\x0d\n  return this;\x0d\n};\x0d\n\x0d\nSocket.prototype.pause = function() {\x0d\n  if (this[kBuffer] && !this.connecting && this._handle &&\x0d\n      this._handle.reading) {\x0d\n    this._handle.reading = false;\x0d\n    if (!this.destroyed) {\x0d\n      const err = this._handle.readStop();\x0d\n      if (err)\x0d\n        this.destroy(errnoException(err\x2C 'read'));\x0d\n    }\x0d\n  }\x0d\n  return stream.Duplex.prototype.pause.call(this);\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.resume = function() {\x0d\n  if (this[kBuffer] && !this.connecting && this._handle &&\x0d\n      !this._handle.reading) {\x0d\n    tryReadStart(this);\x0d\n  }\x0d\n  return stream.Duplex.prototype.resume.call(this);\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.read = function(n) {\x0d\n  if (this[kBuffer] && !this.connecting && this._handle &&\x0d\n      !this._handle.reading) {\x0d\n    tryReadStart(this);\x0d\n  }\x0d\n  return stream.Duplex.prototype.read.call(this\x2C n);\x0d\n};\x0d\n\x0d\n\x0d\n// Called when the 'end' event is emitted.\x0d\nfunction onReadableStreamEnd() {\x0d\n  if (!this.allowHalfOpen) {\x0d\n    this.write = writeAfterFIN;\x0d\n  }\x0d\n}\x0d\n\x0d\n\x0d\nSocket.prototype.destroySoon = function() {\x0d\n  if (this.writable)\x0d\n    this.end();\x0d\n\x0d\n  if (this.writableFinished)\x0d\n    this.destroy();\x0d\n  else\x0d\n    this.once('finish'\x2C this.destroy);\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype._destroy = function(exception\x2C cb) {\x0d\n  debug('destroy');\x0d\n\x0d\n  this.connecting = false;\x0d\n\x0d\n  for (let s = this; s !== null; s = s._parent) {\x0d\n    clearTimeout(s[kTimeout]);\x0d\n  }\x0d\n\x0d\n  debug('close');\x0d\n  if (this._handle) {\x0d\n    if (this !== process.stderr)\x0d\n      debug('close handle');\x0d\n    const isException = exception ? true : false;\x0d\n    // `bytesRead` and `kBytesWritten` should be accessible after `.destroy()`\x0d\n    this[kBytesRead] = this._handle.bytesRead;\x0d\n    this[kBytesWritten] = this._handle.bytesWritten;\x0d\n\x0d\n    if (this.resetAndClosing) {\x0d\n      this.resetAndClosing = false;\x0d\n      const err = this._handle.reset(() => {\x0d\n        debug('emit close');\x0d\n        this.emit('close'\x2C isException);\x0d\n      });\x0d\n      if (err)\x0d\n        this.emit('error'\x2C errnoException(err\x2C 'reset'));\x0d\n    } else if (this._closeAfterHandlingError) {\x0d\n      // Enqueue closing the socket as a microtask\x2C so that the socket can be\x0d\n      // accessible when an `error` event is handled in the `next tick queue`.\x0d\n      queueMicrotask(() => closeSocketHandle(this\x2C isException\x2C true));\x0d\n    } else {\x0d\n      closeSocketHandle(this\x2C isException);\x0d\n    }\x0d\n\x0d\n    if (!this._closeAfterHandlingError) {\x0d\n      this._handle.onread = noop;\x0d\n      this._handle = null;\x0d\n      this._sockname = null;\x0d\n    }\x0d\n    cb(exception);\x0d\n  } else {\x0d\n    cb(exception);\x0d\n    process.nextTick(emitCloseNT\x2C this);\x0d\n  }\x0d\n\x0d\n  if (this._server) {\x0d\n    debug('has server');\x0d\n    this._server._connections--;\x0d\n    if (this._server._emitCloseIfDrained) {\x0d\n      this._server._emitCloseIfDrained();\x0d\n    }\x0d\n  }\x0d\n};\x0d\n\x0d\nSocket.prototype._reset = function() {\x0d\n  debug('reset connection');\x0d\n  this.resetAndClosing = true;\x0d\n  return this.destroy();\x0d\n};\x0d\n\x0d\nSocket.prototype._getpeername = function() {\x0d\n  if (!this._handle || !this._handle.getpeername || this.connecting) {\x0d\n    return this._peername || {};\x0d\n  } else if (!this._peername) {\x0d\n    const out = {};\x0d\n    const err = this._handle.getpeername(out);\x0d\n    if (err) return out;\x0d\n    this._peername = out;\x0d\n  }\x0d\n  return this._peername;\x0d\n};\x0d\n\x0d\nfunction protoGetter(name\x2C callback) {\x0d\n  ObjectDefineProperty(Socket.prototype\x2C name\x2C {\x0d\n    __proto__: null\x2C\x0d\n    configurable: false\x2C\x0d\n    enumerable: true\x2C\x0d\n    get: callback\x0d\n  });\x0d\n}\x0d\n\x0d\nprotoGetter('bytesRead'\x2C function bytesRead() {\x0d\n  return this._handle ? this._handle.bytesRead : this[kBytesRead];\x0d\n});\x0d\n\x0d\nprotoGetter('remoteAddress'\x2C function remoteAddress() {\x0d\n  return this._getpeername().address;\x0d\n});\x0d\n\x0d\nprotoGetter('remoteFamily'\x2C function remoteFamily() {\x0d\n  return this._getpeername().family;\x0d\n});\x0d\n\x0d\nprotoGetter('remotePort'\x2C function remotePort() {\x0d\n  return this._getpeername().port;\x0d\n});\x0d\n\x0d\n\x0d\nSocket.prototype._getsockname = function() {\x0d\n  if (!this._handle || !this._handle.getsockname) {\x0d\n    return {};\x0d\n  } else if (!this._sockname) {\x0d\n    this._sockname = {};\x0d\n    // FIXME(bnoordhuis) Throw when the return value is not 0?\x0d\n    this._handle.getsockname(this._sockname);\x0d\n  }\x0d\n  return this._sockname;\x0d\n};\x0d\n\x0d\n\x0d\nprotoGetter('localAddress'\x2C function localAddress() {\x0d\n  return this._getsockname().address;\x0d\n});\x0d\n\x0d\n\x0d\nprotoGetter('localPort'\x2C function localPort() {\x0d\n  return this._getsockname().port;\x0d\n});\x0d\n\x0d\nprotoGetter('localFamily'\x2C function localFamily() {\x0d\n  return this._getsockname().family;\x0d\n});\x0d\n\x0d\nSocket.prototype[kAfterAsyncWrite] = function() {\x0d\n  this[kLastWriteQueueSize] = 0;\x0d\n};\x0d\n\x0d\nSocket.prototype._writeGeneric = function(writev\x2C data\x2C encoding\x2C cb) {\x0d\n  // If we are still connecting\x2C then buffer this for later.\x0d\n  // The Writable logic will buffer up any more writes while\x0d\n  // waiting for this one to be done.\x0d\n  if (this.connecting) {\x0d\n    this._pendingData = data;\x0d\n    this._pendingEncoding = encoding;\x0d\n    this.once('connect'\x2C function connect() {\x0d\n      this._writeGeneric(writev\x2C data\x2C encoding\x2C cb);\x0d\n    });\x0d\n    return;\x0d\n  }\x0d\n  this._pendingData = null;\x0d\n  this._pendingEncoding = '';\x0d\n\x0d\n  if (!this._handle) {\x0d\n    cb(new ERR_SOCKET_CLOSED());\x0d\n    return false;\x0d\n  }\x0d\n\x0d\n  this._unrefTimer();\x0d\n\x0d\n  let req;\x0d\n  if (writev)\x0d\n    req = writevGeneric(this\x2C data\x2C cb);\x0d\n  else\x0d\n    req = writeGeneric(this\x2C data\x2C encoding\x2C cb);\x0d\n  if (req.async)\x0d\n    this[kLastWriteQueueSize] = req.bytes;\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype._writev = function(chunks\x2C cb) {\x0d\n  this._writeGeneric(true\x2C chunks\x2C ''\x2C cb);\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype._write = function(data\x2C encoding\x2C cb) {\x0d\n  this._writeGeneric(false\x2C data\x2C encoding\x2C cb);\x0d\n};\x0d\n\x0d\n\x0d\n// Legacy alias. Having this is probably being overly cautious\x2C but it doesn't\x0d\n// really hurt anyone either. This can probably be removed safely if desired.\x0d\nprotoGetter('_bytesDispatched'\x2C function _bytesDispatched() {\x0d\n  return this._handle ? this._handle.bytesWritten : this[kBytesWritten];\x0d\n});\x0d\n\x0d\nprotoGetter('bytesWritten'\x2C function bytesWritten() {\x0d\n  let bytes = this._bytesDispatched;\x0d\n  const data = this._pendingData;\x0d\n  const encoding = this._pendingEncoding;\x0d\n  const writableBuffer = this.writableBuffer;\x0d\n\x0d\n  if (!writableBuffer)\x0d\n    return undefined;\x0d\n\x0d\n  for (const el of writableBuffer) {\x0d\n    bytes += el.chunk instanceof Buffer ?\x0d\n      el.chunk.length :\x0d\n      Buffer.byteLength(el.chunk\x2C el.encoding);\x0d\n  }\x0d\n\x0d\n  if (ArrayIsArray(data)) {\x0d\n    // Was a writev\x2C iterate over chunks to get total length\x0d\n    for (let i = 0; i < data.length; i++) {\x0d\n      const chunk = data[i];\x0d\n\x0d\n      if (data.allBuffers || chunk instanceof Buffer)\x0d\n        bytes += chunk.length;\x0d\n      else\x0d\n        bytes += Buffer.byteLength(chunk.chunk\x2C chunk.encoding);\x0d\n    }\x0d\n  } else if (data) {\x0d\n    // Writes are either a string or a Buffer.\x0d\n    if (typeof data !== 'string')\x0d\n      bytes += data.length;\x0d\n    else\x0d\n      bytes += Buffer.byteLength(data\x2C encoding);\x0d\n  }\x0d\n\x0d\n  return bytes;\x0d\n});\x0d\n\x0d\n\x0d\nfunction checkBindError(err\x2C port\x2C handle) {\x0d\n  // EADDRINUSE may not be reported until we call listen() or connect().\x0d\n  // To complicate matters\x2C a failed bind() followed by listen() or connect()\x0d\n  // will implicitly bind to a random port. Ergo\x2C check that the socket is\x0d\n  // bound to the expected port before calling listen() or connect().\x0d\n  //\x0d\n  // FIXME(bnoordhuis) Doesn't work for pipe handles\x2C they don't have a\x0d\n  // getsockname() method. Non-issue for now\x2C the cluster module doesn't\x0d\n  // really support pipes anyway.\x0d\n  if (err === 0 && port > 0 && handle.getsockname) {\x0d\n    const out = {};\x0d\n    err = handle.getsockname(out);\x0d\n    if (err === 0 && port !== out.port) {\x0d\n      debug(`checkBindError\x2C bound to ${out.port} instead of ${port}`);\x0d\n      err = UV_EADDRINUSE;\x0d\n    }\x0d\n  }\x0d\n  return err;\x0d\n}\x0d\n\x0d\n\x0d\nfunction internalConnect(\x0d\n  self\x2C address\x2C port\x2C addressType\x2C localAddress\x2C localPort\x2C flags) {\x0d\n  // TODO return promise from Socket.prototype.connect which\x0d\n  // wraps _connectReq.\x0d\n\x0d\n  assert(self.connecting);\x0d\n\x0d\n  let err;\x0d\n\x0d\n  if (localAddress || localPort) {\x0d\n    if (addressType === 4) {\x0d\n      localAddress = localAddress || DEFAULT_IPV4_ADDR;\x0d\n      err = self._handle.bind(localAddress\x2C localPort);\x0d\n    } else { // addressType === 6\x0d\n      localAddress = localAddress || DEFAULT_IPV6_ADDR;\x0d\n      err = self._handle.bind6(localAddress\x2C localPort\x2C flags);\x0d\n    }\x0d\n    debug('binding to localAddress: %s and localPort: %d (addressType: %d)'\x2C\x0d\n          localAddress\x2C localPort\x2C addressType);\x0d\n\x0d\n    err = checkBindError(err\x2C localPort\x2C self._handle);\x0d\n    if (err) {\x0d\n      const ex = exceptionWithHostPort(err\x2C 'bind'\x2C localAddress\x2C localPort);\x0d\n      self.destroy(ex);\x0d\n      return;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  if (addressType === 6 || addressType === 4) {\x0d\n    const req = new TCPConnectWrap();\x0d\n    req.oncomplete = afterConnect;\x0d\n    req.address = address;\x0d\n    req.port = port;\x0d\n    req.localAddress = localAddress;\x0d\n    req.localPort = localPort;\x0d\n\x0d\n    if (addressType === 4)\x0d\n      err = self._handle.connect(req\x2C address\x2C port);\x0d\n    else\x0d\n      err = self._handle.connect6(req\x2C address\x2C port);\x0d\n  } else {\x0d\n    const req = new PipeConnectWrap();\x0d\n    req.address = address;\x0d\n    req.oncomplete = afterConnect;\x0d\n\x0d\n    err = self._handle.connect(req\x2C address);\x0d\n  }\x0d\n\x0d\n  if (err) {\x0d\n    const sockname = self._getsockname();\x0d\n    let details;\x0d\n\x0d\n    if (sockname) {\x0d\n      details = sockname.address + ':' + sockname.port;\x0d\n    }\x0d\n\x0d\n    const ex = exceptionWithHostPort(err\x2C 'connect'\x2C address\x2C port\x2C details);\x0d\n    self.destroy(ex);\x0d\n  } else if ((addressType === 6 || addressType === 4) && hasObserver('net')) {\x0d\n    startPerf(self\x2C kPerfHooksNetConnectContext\x2C { type: 'net'\x2C name: 'connect'\x2C detail: { host: address\x2C port } });\x0d\n  }\x0d\n}\x0d\n\x0d\n\x0d\nfunction internalConnectMultiple(context) {\x0d\n  clearTimeout(context[kTimeout]);\x0d\n  const self = context.socket;\x0d\n  assert(self.connecting);\x0d\n\x0d\n  // All connections have been tried without success\x2C destroy with error\x0d\n  if (context.current === context.addresses.length) {\x0d\n    self.destroy(aggregateErrors(context.errors));\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  const { localPort\x2C port\x2C flags } = context;\x0d\n  const { address\x2C family: addressType } = context.addresses[context.current++];\x0d\n  const handle = new TCP(TCPConstants.SOCKET);\x0d\n  let localAddress;\x0d\n  let err;\x0d\n\x0d\n  if (localPort) {\x0d\n    if (addressType === 4) {\x0d\n      localAddress = DEFAULT_IPV4_ADDR;\x0d\n      err = handle.bind(localAddress\x2C localPort);\x0d\n    } else { // addressType === 6\x0d\n      localAddress = DEFAULT_IPV6_ADDR;\x0d\n      err = handle.bind6(localAddress\x2C localPort\x2C flags);\x0d\n    }\x0d\n\x0d\n    debug('connect/multiple: binding to localAddress: %s and localPort: %d (addressType: %d)'\x2C\x0d\n          localAddress\x2C localPort\x2C addressType);\x0d\n\x0d\n    err = checkBindError(err\x2C localPort\x2C handle);\x0d\n    if (err) {\x0d\n      ArrayPrototypePush(context.errors\x2C exceptionWithHostPort(err\x2C 'bind'\x2C localAddress\x2C localPort));\x0d\n      internalConnectMultiple(context);\x0d\n      return;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  const req = new TCPConnectWrap();\x0d\n  req.oncomplete = FunctionPrototypeBind(afterConnectMultiple\x2C undefined\x2C context);\x0d\n  req.address = address;\x0d\n  req.port = port;\x0d\n  req.localAddress = localAddress;\x0d\n  req.localPort = localPort;\x0d\n\x0d\n  if (addressType === 4) {\x0d\n    err = handle.connect(req\x2C address\x2C port);\x0d\n  } else {\x0d\n    err = handle.connect6(req\x2C address\x2C port);\x0d\n  }\x0d\n\x0d\n  if (err) {\x0d\n    const sockname = self._getsockname();\x0d\n    let details;\x0d\n\x0d\n    if (sockname) {\x0d\n      details = sockname.address + ':' + sockname.port;\x0d\n    }\x0d\n\x0d\n    ArrayPrototypePush(context.errors\x2C exceptionWithHostPort(err\x2C 'connect'\x2C address\x2C port\x2C details));\x0d\n    internalConnectMultiple(context);\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  // If the attempt has not returned an error\x2C start the connection timer\x0d\n  context[kTimeout] = setTimeout(internalConnectMultipleTimeout\x2C context.timeout\x2C context\x2C req);\x0d\n}\x0d\n\x0d\nSocket.prototype.connect = function(...args) {\x0d\n  let normalized;\x0d\n  // If passed an array\x2C it's treated as an array of arguments that have\x0d\n  // already been normalized (so we don't normalize more than once). This has\x0d\n  // been solved before in https://github.com/nodejs/node/pull/12342\x2C but was\x0d\n  // reverted as it had unintended side effects.\x0d\n  if (ArrayIsArray(args[0]) && args[0][normalizedArgsSymbol]) {\x0d\n    normalized = args[0];\x0d\n  } else {\x0d\n    normalized = normalizeArgs(args);\x0d\n  }\x0d\n  const options = normalized[0];\x0d\n  const cb = normalized[1];\x0d\n\x0d\n  // options.port === null will be checked later.\x0d\n  if (options.port === undefined && options.path == null)\x0d\n    throw new ERR_MISSING_ARGS(['options'\x2C 'port'\x2C 'path']);\x0d\n\x0d\n  if (this.write !== Socket.prototype.write)\x0d\n    this.write = Socket.prototype.write;\x0d\n\x0d\n  if (this.destroyed) {\x0d\n    this._handle = null;\x0d\n    this._peername = null;\x0d\n    this._sockname = null;\x0d\n  }\x0d\n\x0d\n  const { path } = options;\x0d\n  const pipe = !!path;\x0d\n  debug('pipe'\x2C pipe\x2C path);\x0d\n\x0d\n  if (!this._handle) {\x0d\n    this._handle = pipe ?\x0d\n      new Pipe(PipeConstants.SOCKET) :\x0d\n      new TCP(TCPConstants.SOCKET);\x0d\n    initSocketHandle(this);\x0d\n  }\x0d\n\x0d\n  if (cb !== null) {\x0d\n    this.once('connect'\x2C cb);\x0d\n  }\x0d\n\x0d\n  this._unrefTimer();\x0d\n\x0d\n  this.connecting = true;\x0d\n\x0d\n  if (pipe) {\x0d\n    validateString(path\x2C 'options.path');\x0d\n    defaultTriggerAsyncIdScope(\x0d\n      this[async_id_symbol]\x2C internalConnect\x2C this\x2C path\x0d\n    );\x0d\n  } else {\x0d\n    lookupAndConnect(this\x2C options);\x0d\n  }\x0d\n  return this;\x0d\n};\x0d\n\x0d\nfunction socketToDnsFamily(family) {\x0d\n  switch (family) {\x0d\n    case 'IPv4':\x0d\n      return 4;\x0d\n    case 'IPv6':\x0d\n      return 6;\x0d\n  }\x0d\n\x0d\n  return family;\x0d\n}\x0d\n\x0d\nfunction lookupAndConnect(self\x2C options) {\x0d\n  const { localAddress\x2C localPort\x2C autoSelectFamily } = options;\x0d\n  const host = options.host || 'localhost';\x0d\n  let { port\x2C autoSelectFamilyAttemptTimeout } = options;\x0d\n\x0d\n  if (localAddress && !isIP(localAddress)) {\x0d\n    throw new ERR_INVALID_IP_ADDRESS(localAddress);\x0d\n  }\x0d\n\x0d\n  if (localPort) {\x0d\n    validateNumber(localPort\x2C 'options.localPort');\x0d\n  }\x0d\n\x0d\n  if (typeof port !== 'undefined') {\x0d\n    if (typeof port !== 'number' && typeof port !== 'string') {\x0d\n      throw new ERR_INVALID_ARG_TYPE('options.port'\x2C\x0d\n                                     ['number'\x2C 'string']\x2C port);\x0d\n    }\x0d\n    validatePort(port);\x0d\n  }\x0d\n  port |= 0;\x0d\n\x0d\n  if (autoSelectFamily !== undefined) {\x0d\n    validateBoolean(autoSelectFamily);\x0d\n  }\x0d\n\x0d\n  if (autoSelectFamilyAttemptTimeout !== undefined) {\x0d\n    validateInt32(autoSelectFamilyAttemptTimeout\x2C 'options.autoSelectFamilyAttemptTimeout'\x2C 1);\x0d\n\x0d\n    if (autoSelectFamilyAttemptTimeout < 10) {\x0d\n      autoSelectFamilyAttemptTimeout = 10;\x0d\n    }\x0d\n  } else {\x0d\n    autoSelectFamilyAttemptTimeout = 250;\x0d\n  }\x0d\n\x0d\n  // If host is an IP\x2C skip performing a lookup\x0d\n  const addressType = isIP(host);\x0d\n  if (addressType) {\x0d\n    defaultTriggerAsyncIdScope(self[async_id_symbol]\x2C process.nextTick\x2C () => {\x0d\n      if (self.connecting)\x0d\n        defaultTriggerAsyncIdScope(\x0d\n          self[async_id_symbol]\x2C\x0d\n          internalConnect\x2C\x0d\n          self\x2C host\x2C port\x2C addressType\x2C localAddress\x2C localPort\x0d\n        );\x0d\n    });\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  if (options.lookup !== undefined)\x0d\n    validateFunction(options.lookup\x2C 'options.lookup');\x0d\n\x0d\n  if (dns === undefined) dns = require('dns');\x0d\n  const dnsopts = {\x0d\n    family: socketToDnsFamily(options.family)\x2C\x0d\n    hints: options.hints || 0\x0d\n  };\x0d\n\x0d\n  if (!isWindows &&\x0d\n      dnsopts.family !== 4 &&\x0d\n      dnsopts.family !== 6 &&\x0d\n      dnsopts.hints === 0) {\x0d\n    dnsopts.hints = dns.ADDRCONFIG;\x0d\n  }\x0d\n\x0d\n  debug('connect: find host'\x2C host);\x0d\n  debug('connect: dns options'\x2C dnsopts);\x0d\n  self._host = host;\x0d\n  const lookup = options.lookup || dns.lookup;\x0d\n\x0d\n  if (dnsopts.family !== 4 && dnsopts.family !== 6 && !localAddress && autoSelectFamily) {\x0d\n    debug('connect: autodetecting');\x0d\n\x0d\n    dnsopts.all = true;\x0d\n    lookupAndConnectMultiple(\x0d\n      self\x2C\x0d\n      async_id_symbol\x2C\x0d\n      lookup\x2C\x0d\n      host\x2C\x0d\n      options\x2C\x0d\n      dnsopts\x2C\x0d\n      port\x2C\x0d\n      localPort\x2C\x0d\n      autoSelectFamilyAttemptTimeout\x0d\n    );\x0d\n\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  defaultTriggerAsyncIdScope(self[async_id_symbol]\x2C function() {\x0d\n    lookup(host\x2C dnsopts\x2C function emitLookup(err\x2C ip\x2C addressType) {\x0d\n      self.emit('lookup'\x2C err\x2C ip\x2C addressType\x2C host);\x0d\n\x0d\n      // It's possible we were destroyed while looking this up.\x0d\n      // XXX it would be great if we could cancel the promise returned by\x0d\n      // the look up.\x0d\n      if (!self.connecting) return;\x0d\n\x0d\n      if (err) {\x0d\n        // net.createConnection() creates a net.Socket object and immediately\x0d\n        // calls net.Socket.connect() on it (that's us). There are no event\x0d\n        // listeners registered yet so defer the error event to the next tick.\x0d\n        process.nextTick(connectErrorNT\x2C self\x2C err);\x0d\n      } else if (!isIP(ip)) {\x0d\n        err = new ERR_INVALID_IP_ADDRESS(ip);\x0d\n        process.nextTick(connectErrorNT\x2C self\x2C err);\x0d\n      } else if (addressType !== 4 && addressType !== 6) {\x0d\n        err = new ERR_INVALID_ADDRESS_FAMILY(addressType\x2C\x0d\n                                             options.host\x2C\x0d\n                                             options.port);\x0d\n        process.nextTick(connectErrorNT\x2C self\x2C err);\x0d\n      } else {\x0d\n        self._unrefTimer();\x0d\n        defaultTriggerAsyncIdScope(\x0d\n          self[async_id_symbol]\x2C\x0d\n          internalConnect\x2C\x0d\n          self\x2C ip\x2C port\x2C addressType\x2C localAddress\x2C localPort\x0d\n        );\x0d\n      }\x0d\n    });\x0d\n  });\x0d\n}\x0d\n\x0d\nfunction lookupAndConnectMultiple(self\x2C async_id_symbol\x2C lookup\x2C host\x2C options\x2C dnsopts\x2C port\x2C localPort\x2C timeout) {\x0d\n  defaultTriggerAsyncIdScope(self[async_id_symbol]\x2C function emitLookup() {\x0d\n    lookup(host\x2C dnsopts\x2C function emitLookup(err\x2C addresses) {\x0d\n      // It's possible we were destroyed while looking this up.\x0d\n      // XXX it would be great if we could cancel the promise returned by\x0d\n      // the look up.\x0d\n      if (!self.connecting) {\x0d\n        return;\x0d\n      } else if (err) {\x0d\n        // net.createConnection() creates a net.Socket object and immediately\x0d\n        // calls net.Socket.connect() on it (that's us). There are no event\x0d\n        // listeners registered yet so defer the error event to the next tick.\x0d\n        process.nextTick(connectErrorNT\x2C self\x2C err);\x0d\n        return;\x0d\n      }\x0d\n\x0d\n      // Filter addresses by only keeping the one which are either IPv4 or IPV6.\x0d\n      // The first valid address determines which group has preference on the\x0d\n      // alternate family sorting which happens later.\x0d\n      const validIps = [[]\x2C []];\x0d\n      let destinations;\x0d\n      for (let i = 0\x2C l = addresses.length; i < l; i++) {\x0d\n        const address = addresses[i];\x0d\n        const { address: ip\x2C family: addressType } = address;\x0d\n        self.emit('lookup'\x2C err\x2C ip\x2C addressType\x2C host);\x0d\n\x0d\n        if (isIP(ip) && (addressType === 4 || addressType === 6)) {\x0d\n          if (!destinations) {\x0d\n            destinations = addressType === 6 ? { 6: 0\x2C 4: 1 } : { 4: 0\x2C 6: 1 };\x0d\n          }\x0d\n\x0d\n          ArrayPrototypePush(validIps[destinations[addressType]]\x2C address);\x0d\n        }\x0d\n      }\x0d\n\x0d\n      // When no AAAA or A records are available\x2C fail on the first one\x0d\n      if (!validIps[0].length && !validIps[1].length) {\x0d\n        const { address: firstIp\x2C family: firstAddressType } = addresses[0];\x0d\n\x0d\n        if (!isIP(firstIp)) {\x0d\n          err = new ERR_INVALID_IP_ADDRESS(firstIp);\x0d\n          process.nextTick(connectErrorNT\x2C self\x2C err);\x0d\n        } else if (firstAddressType !== 4 && firstAddressType !== 6) {\x0d\n          err = new ERR_INVALID_ADDRESS_FAMILY(firstAddressType\x2C\x0d\n                                               options.host\x2C\x0d\n                                               options.port);\x0d\n          process.nextTick(connectErrorNT\x2C self\x2C err);\x0d\n        }\x0d\n\x0d\n        return;\x0d\n      }\x0d\n\x0d\n      // Sort addresses alternating families\x0d\n      const toAttempt = [];\x0d\n      for (let i = 0\x2C l = MathMax(validIps[0].length\x2C validIps[1].length); i < l; i++) {\x0d\n        if (i in validIps[0]) {\x0d\n          ArrayPrototypePush(toAttempt\x2C validIps[0][i]);\x0d\n        }\x0d\n        if (i in validIps[1]) {\x0d\n          ArrayPrototypePush(toAttempt\x2C validIps[1][i]);\x0d\n        }\x0d\n      }\x0d\n\x0d\n      const context = {\x0d\n        socket: self\x2C\x0d\n        addresses\x2C\x0d\n        current: 0\x2C\x0d\n        port\x2C\x0d\n        localPort\x2C\x0d\n        timeout\x2C\x0d\n        [kTimeout]: null\x2C\x0d\n        [kTimeoutTriggered]: false\x2C\x0d\n        errors: []\x2C\x0d\n      };\x0d\n\x0d\n      self._unrefTimer();\x0d\n      defaultTriggerAsyncIdScope(self[async_id_symbol]\x2C internalConnectMultiple\x2C context);\x0d\n    });\x0d\n  });\x0d\n}\x0d\n\x0d\nfunction connectErrorNT(self\x2C err) {\x0d\n  self.destroy(err);\x0d\n}\x0d\n\x0d\n\x0d\nSocket.prototype.ref = function() {\x0d\n  if (!this._handle) {\x0d\n    this.once('connect'\x2C this.ref);\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  if (typeof this._handle.ref === 'function') {\x0d\n    this._handle.ref();\x0d\n  }\x0d\n\x0d\n  return this;\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.unref = function() {\x0d\n  if (!this._handle) {\x0d\n    this.once('connect'\x2C this.unref);\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  if (typeof this._handle.unref === 'function') {\x0d\n    this._handle.unref();\x0d\n  }\x0d\n\x0d\n  return this;\x0d\n};\x0d\n\x0d\n\x0d\nfunction afterConnect(status\x2C handle\x2C req\x2C readable\x2C writable) {\x0d\n  const self = handle[owner_symbol];\x0d\n\x0d\n  // Callback may come after call to destroy\x0d\n  if (self.destroyed) {\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  debug('afterConnect');\x0d\n\x0d\n  assert(self.connecting);\x0d\n  self.connecting = false;\x0d\n  self._sockname = null;\x0d\n\x0d\n  if (status === 0) {\x0d\n    if (self.readable && !readable) {\x0d\n      self.push(null);\x0d\n      self.read();\x0d\n    }\x0d\n    if (self.writable && !writable) {\x0d\n      self.end();\x0d\n    }\x0d\n    self._unrefTimer();\x0d\n\x0d\n    if (self[kSetNoDelay] && self._handle.setNoDelay) {\x0d\n      self._handle.setNoDelay(true);\x0d\n    }\x0d\n\x0d\n    if (self[kSetKeepAlive] && self._handle.setKeepAlive) {\x0d\n      self._handle.setKeepAlive(true\x2C self[kSetKeepAliveInitialDelay]);\x0d\n    }\x0d\n\x0d\n    self.emit('connect');\x0d\n    self.emit('ready');\x0d\n\x0d\n    // Start the first read\x2C or get an immediate EOF.\x0d\n    // this doesn't actually consume any bytes\x2C because len=0.\x0d\n    if (readable && !self.isPaused())\x0d\n      self.read(0);\x0d\n    if (self[kPerfHooksNetConnectContext] && hasObserver('net')) {\x0d\n      stopPerf(self\x2C kPerfHooksNetConnectContext);\x0d\n    }\x0d\n  } else {\x0d\n    let details;\x0d\n    if (req.localAddress && req.localPort) {\x0d\n      details = req.localAddress + ':' + req.localPort;\x0d\n    }\x0d\n    const ex = exceptionWithHostPort(status\x2C\x0d\n                                     'connect'\x2C\x0d\n                                     req.address\x2C\x0d\n                                     req.port\x2C\x0d\n                                     details);\x0d\n    if (details) {\x0d\n      ex.localAddress = req.localAddress;\x0d\n      ex.localPort = req.localPort;\x0d\n    }\x0d\n    self.destroy(ex);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction afterConnectMultiple(context\x2C status\x2C handle\x2C req\x2C readable\x2C writable) {\x0d\n  const self = context.socket;\x0d\n\x0d\n  // Make sure another connection is not spawned\x0d\n  clearTimeout(context[kTimeout]);\x0d\n\x0d\n  // Some error occurred\x2C add to the list of exceptions\x0d\n  if (status !== 0) {\x0d\n    let details;\x0d\n    if (req.localAddress && req.localPort) {\x0d\n      details = req.localAddress + ':' + req.localPort;\x0d\n    }\x0d\n    const ex = exceptionWithHostPort(status\x2C\x0d\n                                     'connect'\x2C\x0d\n                                     req.address\x2C\x0d\n                                     req.port\x2C\x0d\n                                     details);\x0d\n    if (details) {\x0d\n      ex.localAddress = req.localAddress;\x0d\n      ex.localPort = req.localPort;\x0d\n    }\x0d\n\x0d\n    ArrayPrototypePush(context.errors\x2C ex);\x0d\n\x0d\n    // Try the next address\x0d\n    internalConnectMultiple(context);\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  // One of the connection has completed and correctly dispatched but after timeout\x2C ignore this one\x0d\n  if (context[kTimeoutTriggered]) {\x0d\n    debug('connect/multiple: ignoring successful but timedout connection to %s:%s'\x2C req.address\x2C req.port);\x0d\n    handle.close();\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  // Perform initialization sequence on the handle\x2C then move on with the regular callback\x0d\n  self._handle = handle;\x0d\n  initSocketHandle(self);\x0d\n\x0d\n  if (self[kWrapConnectedHandle]) {\x0d\n    self[kWrapConnectedHandle](handle);\x0d\n    initSocketHandle(self); // This is called again to initialize the TLSWrap\x0d\n  }\x0d\n\x0d\n  if (hasObserver('net')) {\x0d\n    startPerf(\x0d\n      self\x2C\x0d\n      kPerfHooksNetConnectContext\x2C\x0d\n      { type: 'net'\x2C name: 'connect'\x2C detail: { host: req.address\x2C port: req.port } }\x0d\n    );\x0d\n  }\x0d\n\x0d\n  afterConnect(status\x2C handle\x2C req\x2C readable\x2C writable);\x0d\n}\x0d\n\x0d\nfunction internalConnectMultipleTimeout(context\x2C req) {\x0d\n  context[kTimeoutTriggered] = true;\x0d\n  internalConnectMultiple(context);\x0d\n}\x0d\n\x0d\nfunction addAbortSignalOption(self\x2C options) {\x0d\n  if (options?.signal === undefined) {\x0d\n    return;\x0d\n  }\x0d\n  validateAbortSignal(options.signal\x2C 'options.signal');\x0d\n  const { signal } = options;\x0d\n  const onAborted = () => {\x0d\n    self.close();\x0d\n  };\x0d\n  if (signal.aborted) {\x0d\n    process.nextTick(onAborted);\x0d\n  } else {\x0d\n    signal.addEventListener('abort'\x2C onAborted);\x0d\n    self.once('close'\x2C () => signal.removeEventListener('abort'\x2C onAborted));\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction Server(options\x2C connectionListener) {\x0d\n  if (!(this instanceof Server))\x0d\n    return new Server(options\x2C connectionListener);\x0d\n\x0d\n  EventEmitter.call(this);\x0d\n\x0d\n  if (typeof options === 'function') {\x0d\n    connectionListener = options;\x0d\n    options = {};\x0d\n    this.on('connection'\x2C connectionListener);\x0d\n  } else if (options == null || typeof options === 'object') {\x0d\n    options = { ...options };\x0d\n\x0d\n    if (typeof connectionListener === 'function') {\x0d\n      this.on('connection'\x2C connectionListener);\x0d\n    }\x0d\n  } else {\x0d\n    throw new ERR_INVALID_ARG_TYPE('options'\x2C 'Object'\x2C options);\x0d\n  }\x0d\n  if (typeof options.keepAliveInitialDelay !== 'undefined') {\x0d\n    validateNumber(\x0d\n      options.keepAliveInitialDelay\x2C 'options.keepAliveInitialDelay'\x0d\n    );\x0d\n\x0d\n    if (options.keepAliveInitialDelay < 0) {\x0d\n      options.keepAliveInitialDelay = 0;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  this._connections = 0;\x0d\n\x0d\n  this[async_id_symbol] = -1;\x0d\n  this._handle = null;\x0d\n  this._usingWorkers = false;\x0d\n  this._workers = [];\x0d\n  this._unref = false;\x0d\n\x0d\n  this.allowHalfOpen = options.allowHalfOpen || false;\x0d\n  this.pauseOnConnect = !!options.pauseOnConnect;\x0d\n  this.noDelay = Boolean(options.noDelay);\x0d\n  this.keepAlive = Boolean(options.keepAlive);\x0d\n  this.keepAliveInitialDelay = ~~(options.keepAliveInitialDelay / 1000);\x0d\n}\x0d\nObjectSetPrototypeOf(Server.prototype\x2C EventEmitter.prototype);\x0d\nObjectSetPrototypeOf(Server\x2C EventEmitter);\x0d\n\x0d\n\x0d\nfunction toNumber(x) { return (x = Number(x)) >= 0 ? x : false; }\x0d\n\x0d\n// Returns handle if it can be created\x2C or error code if it can't\x0d\nfunction createServerHandle(address\x2C port\x2C addressType\x2C fd\x2C flags) {\x0d\n  let err = 0;\x0d\n  // Assign handle in listen\x2C and clean up if bind or listen fails\x0d\n  let handle;\x0d\n\x0d\n  let isTCP = false;\x0d\n  if (typeof fd === 'number' && fd >= 0) {\x0d\n    try {\x0d\n      handle = createHandle(fd\x2C true);\x0d\n    } catch (e) {\x0d\n      // Not a fd we can listen on.  This will trigger an error.\x0d\n      debug('listen invalid fd=%d:'\x2C fd\x2C e.message);\x0d\n      return UV_EINVAL;\x0d\n    }\x0d\n\x0d\n    err = handle.open(fd);\x0d\n    if (err)\x0d\n      return err;\x0d\n\x0d\n    assert(!address && !port);\x0d\n  } else if (port === -1 && addressType === -1) {\x0d\n    handle = new Pipe(PipeConstants.SERVER);\x0d\n    if (isWindows) {\x0d\n      const instances = NumberParseInt(process.env.NODE_PENDING_PIPE_INSTANCES);\x0d\n      if (!NumberIsNaN(instances)) {\x0d\n        handle.setPendingInstances(instances);\x0d\n      }\x0d\n    }\x0d\n  } else {\x0d\n    handle = new TCP(TCPConstants.SERVER);\x0d\n    isTCP = true;\x0d\n  }\x0d\n\x0d\n  if (address || port || isTCP) {\x0d\n    debug('bind to'\x2C address || 'any');\x0d\n    if (!address) {\x0d\n      // Try binding to ipv6 first\x0d\n      err = handle.bind6(DEFAULT_IPV6_ADDR\x2C port\x2C flags);\x0d\n      if (err) {\x0d\n        handle.close();\x0d\n        // Fallback to ipv4\x0d\n        return createServerHandle(DEFAULT_IPV4_ADDR\x2C port);\x0d\n      }\x0d\n    } else if (addressType === 6) {\x0d\n      err = handle.bind6(address\x2C port\x2C flags);\x0d\n    } else {\x0d\n      err = handle.bind(address\x2C port);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  if (err) {\x0d\n    handle.close();\x0d\n    return err;\x0d\n  }\x0d\n\x0d\n  return handle;\x0d\n}\x0d\n\x0d\nfunction setupListenHandle(address\x2C port\x2C addressType\x2C backlog\x2C fd\x2C flags) {\x0d\n  debug('setupListenHandle'\x2C address\x2C port\x2C addressType\x2C backlog\x2C fd);\x0d\n\x0d\n  // If there is not yet a handle\x2C we need to create one and bind.\x0d\n  // In the case of a server sent via IPC\x2C we don't need to do this.\x0d\n  if (this._handle) {\x0d\n    debug('setupListenHandle: have a handle already');\x0d\n  } else {\x0d\n    debug('setupListenHandle: create a handle');\x0d\n\x0d\n    let rval = null;\x0d\n\x0d\n    // Try to bind to the unspecified IPv6 address\x2C see if IPv6 is available\x0d\n    if (!address && typeof fd !== 'number') {\x0d\n      rval = createServerHandle(DEFAULT_IPV6_ADDR\x2C port\x2C 6\x2C fd\x2C flags);\x0d\n\x0d\n      if (typeof rval === 'number') {\x0d\n        rval = null;\x0d\n        address = DEFAULT_IPV4_ADDR;\x0d\n        addressType = 4;\x0d\n      } else {\x0d\n        address = DEFAULT_IPV6_ADDR;\x0d\n        addressType = 6;\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (rval === null)\x0d\n      rval = createServerHandle(address\x2C port\x2C addressType\x2C fd\x2C flags);\x0d\n\x0d\n    if (typeof rval === 'number') {\x0d\n      const error = uvExceptionWithHostPort(rval\x2C 'listen'\x2C address\x2C port);\x0d\n      process.nextTick(emitErrorNT\x2C this\x2C error);\x0d\n      return;\x0d\n    }\x0d\n    this._handle = rval;\x0d\n  }\x0d\n\x0d\n  this[async_id_symbol] = getNewAsyncId(this._handle);\x0d\n  this._handle.onconnection = onconnection;\x0d\n  this._handle[owner_symbol] = this;\x0d\n\x0d\n  // Use a backlog of 512 entries. We pass 511 to the listen() call because\x0d\n  // the kernel does: backlogsize = roundup_pow_of_two(backlogsize + 1);\x0d\n  // which will thus give us a backlog of 512 entries.\x0d\n  const err = this._handle.listen(backlog || 511);\x0d\n\x0d\n  if (err) {\x0d\n    const ex = uvExceptionWithHostPort(err\x2C 'listen'\x2C address\x2C port);\x0d\n    this._handle.close();\x0d\n    this._handle = null;\x0d\n    defaultTriggerAsyncIdScope(this[async_id_symbol]\x2C\x0d\n                               process.nextTick\x2C\x0d\n                               emitErrorNT\x2C\x0d\n                               this\x2C\x0d\n                               ex);\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  // Generate connection key\x2C this should be unique to the connection\x0d\n  this._connectionKey = addressType + ':' + address + ':' + port;\x0d\n\x0d\n  // Unref the handle if the server was unref'ed prior to listening\x0d\n  if (this._unref)\x0d\n    this.unref();\x0d\n\x0d\n  defaultTriggerAsyncIdScope(this[async_id_symbol]\x2C\x0d\n                             process.nextTick\x2C\x0d\n                             emitListeningNT\x2C\x0d\n                             this);\x0d\n}\x0d\n\x0d\nServer.prototype._listen2 = setupListenHandle;  // legacy alias\x0d\n\x0d\nfunction emitErrorNT(self\x2C err) {\x0d\n  self.emit('error'\x2C err);\x0d\n}\x0d\n\x0d\n\x0d\nfunction emitListeningNT(self) {\x0d\n  // Ensure handle hasn't closed\x0d\n  if (self._handle)\x0d\n    self.emit('listening');\x0d\n}\x0d\n\x0d\n\x0d\nfunction listenInCluster(server\x2C address\x2C port\x2C addressType\x2C\x0d\n                         backlog\x2C fd\x2C exclusive\x2C flags\x2C options) {\x0d\n  exclusive = !!exclusive;\x0d\n\x0d\n  if (cluster === undefined) cluster = require('cluster');\x0d\n\x0d\n  if (cluster.isPrimary || exclusive) {\x0d\n    // Will create a new handle\x0d\n    // _listen2 sets up the listened handle\x2C it is still named like this\x0d\n    // to avoid breaking code that wraps this method\x0d\n    server._listen2(address\x2C port\x2C addressType\x2C backlog\x2C fd\x2C flags);\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  const serverQuery = {\x0d\n    address: address\x2C\x0d\n    port: port\x2C\x0d\n    addressType: addressType\x2C\x0d\n    fd: fd\x2C\x0d\n    flags\x2C\x0d\n    backlog\x2C\x0d\n    ...options\x2C\x0d\n  };\x0d\n  // Get the primary's server handle\x2C and listen on it\x0d\n  cluster._getServer(server\x2C serverQuery\x2C listenOnPrimaryHandle);\x0d\n\x0d\n  function listenOnPrimaryHandle(err\x2C handle) {\x0d\n    err = checkBindError(err\x2C port\x2C handle);\x0d\n\x0d\n    if (err) {\x0d\n      const ex = exceptionWithHostPort(err\x2C 'bind'\x2C address\x2C port);\x0d\n      return server.emit('error'\x2C ex);\x0d\n    }\x0d\n\x0d\n    // Reuse primary's server handle\x0d\n    server._handle = handle;\x0d\n    // _listen2 sets up the listened handle\x2C it is still named like this\x0d\n    // to avoid breaking code that wraps this method\x0d\n    server._listen2(address\x2C port\x2C addressType\x2C backlog\x2C fd\x2C flags);\x0d\n  }\x0d\n}\x0d\n\x0d\n\x0d\nServer.prototype.listen = function(...args) {\x0d\n  const normalized = normalizeArgs(args);\x0d\n  let options = normalized[0];\x0d\n  const cb = normalized[1];\x0d\n\x0d\n  if (this._handle) {\x0d\n    throw new ERR_SERVER_ALREADY_LISTEN();\x0d\n  }\x0d\n\x0d\n  if (cb !== null) {\x0d\n    this.once('listening'\x2C cb);\x0d\n  }\x0d\n  const backlogFromArgs =\x0d\n    // (handle\x2C backlog) or (path\x2C backlog) or (port\x2C backlog)\x0d\n    toNumber(args.length > 1 && args[1]) ||\x0d\n    toNumber(args.length > 2 && args[2]);  // (port\x2C host\x2C backlog)\x0d\n\x0d\n  options = options._handle || options.handle || options;\x0d\n  const flags = getFlags(options.ipv6Only);\x0d\n  // (handle[\x2C backlog][\x2C cb]) where handle is an object with a handle\x0d\n  if (options instanceof TCP) {\x0d\n    this._handle = options;\x0d\n    this[async_id_symbol] = this._handle.getAsyncId();\x0d\n    listenInCluster(this\x2C null\x2C -1\x2C -1\x2C backlogFromArgs);\x0d\n    return this;\x0d\n  }\x0d\n  addAbortSignalOption(this\x2C options);\x0d\n  // (handle[\x2C backlog][\x2C cb]) where handle is an object with a fd\x0d\n  if (typeof options.fd === 'number' && options.fd >= 0) {\x0d\n    listenInCluster(this\x2C null\x2C null\x2C null\x2C backlogFromArgs\x2C options.fd);\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  // ([port][\x2C host][\x2C backlog][\x2C cb]) where port is omitted\x2C\x0d\n  // that is\x2C listen()\x2C listen(null)\x2C listen(cb)\x2C or listen(null\x2C cb)\x0d\n  // or (options[\x2C cb]) where options.port is explicitly set as undefined or\x0d\n  // null\x2C bind to an arbitrary unused port\x0d\n  if (args.length === 0 || typeof args[0] === 'function' ||\x0d\n      (typeof options.port === 'undefined' && 'port' in options) ||\x0d\n      options.port === null) {\x0d\n    options.port = 0;\x0d\n  }\x0d\n  // ([port][\x2C host][\x2C backlog][\x2C cb]) where port is specified\x0d\n  // or (options[\x2C cb]) where options.port is specified\x0d\n  // or if options.port is normalized as 0 before\x0d\n  let backlog;\x0d\n  if (typeof options.port === 'number' || typeof options.port === 'string') {\x0d\n    validatePort(options.port\x2C 'options.port');\x0d\n    backlog = options.backlog || backlogFromArgs;\x0d\n    // start TCP server listening on host:port\x0d\n    if (options.host) {\x0d\n      lookupAndListen(this\x2C options.port | 0\x2C options.host\x2C backlog\x2C\x0d\n                      options.exclusive\x2C flags);\x0d\n    } else { // Undefined host\x2C listens on unspecified address\x0d\n      // Default addressType 4 will be used to search for primary server\x0d\n      listenInCluster(this\x2C null\x2C options.port | 0\x2C 4\x2C\x0d\n                      backlog\x2C undefined\x2C options.exclusive);\x0d\n    }\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  // (path[\x2C backlog][\x2C cb]) or (options[\x2C cb])\x0d\n  // where path or options.path is a UNIX domain socket or Windows pipe\x0d\n  if (options.path && isPipeName(options.path)) {\x0d\n    const pipeName = this._pipeName = options.path;\x0d\n    backlog = options.backlog || backlogFromArgs;\x0d\n    listenInCluster(this\x2C\x0d\n                    pipeName\x2C\x0d\n                    -1\x2C\x0d\n                    -1\x2C\x0d\n                    backlog\x2C\x0d\n                    undefined\x2C\x0d\n                    options.exclusive\x2C\x0d\n                    undefined\x2C\x0d\n                    {\x0d\n                      readableAll: options.readableAll\x2C\x0d\n                      writableAll: options.writableAll\x2C\x0d\n                    });\x0d\n\x0d\n    if (!this._handle) {\x0d\n      // Failed and an error shall be emitted in the next tick.\x0d\n      // Therefore\x2C we directly return.\x0d\n      return this;\x0d\n    }\x0d\n\x0d\n    let mode = 0;\x0d\n    if (options.readableAll === true)\x0d\n      mode |= PipeConstants.UV_READABLE;\x0d\n    if (options.writableAll === true)\x0d\n      mode |= PipeConstants.UV_WRITABLE;\x0d\n    if (mode !== 0) {\x0d\n      const err = this._handle.fchmod(mode);\x0d\n      if (err) {\x0d\n        this._handle.close();\x0d\n        this._handle = null;\x0d\n        throw errnoException(err\x2C 'uv_pipe_chmod');\x0d\n      }\x0d\n    }\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  if (!(('port' in options) || ('path' in options))) {\x0d\n    throw new ERR_INVALID_ARG_VALUE('options'\x2C options\x2C\x0d\n                                    'must have the property "port" or "path"');\x0d\n  }\x0d\n\x0d\n  throw new ERR_INVALID_ARG_VALUE('options'\x2C options);\x0d\n};\x0d\n\x0d\nfunction lookupAndListen(self\x2C port\x2C address\x2C backlog\x2C exclusive\x2C flags) {\x0d\n  if (dns === undefined) dns = require('dns');\x0d\n  dns.lookup(address\x2C function doListen(err\x2C ip\x2C addressType) {\x0d\n    if (err) {\x0d\n      self.emit('error'\x2C err);\x0d\n    } else {\x0d\n      addressType = ip ? addressType : 4;\x0d\n      listenInCluster(self\x2C ip\x2C port\x2C addressType\x2C\x0d\n                      backlog\x2C undefined\x2C exclusive\x2C flags);\x0d\n    }\x0d\n  });\x0d\n}\x0d\n\x0d\nObjectDefineProperty(Server.prototype\x2C 'listening'\x2C {\x0d\n  __proto__: null\x2C\x0d\n  get: function() {\x0d\n    return !!this._handle;\x0d\n  }\x2C\x0d\n  configurable: true\x2C\x0d\n  enumerable: true\x0d\n});\x0d\n\x0d\nServer.prototype.address = function() {\x0d\n  if (this._handle && this._handle.getsockname) {\x0d\n    const out = {};\x0d\n    const err = this._handle.getsockname(out);\x0d\n    if (err) {\x0d\n      throw errnoException(err\x2C 'address');\x0d\n    }\x0d\n    return out;\x0d\n  } else if (this._pipeName) {\x0d\n    return this._pipeName;\x0d\n  }\x0d\n  return null;\x0d\n};\x0d\n\x0d\nfunction onconnection(err\x2C clientHandle) {\x0d\n  const handle = this;\x0d\n  const self = handle[owner_symbol];\x0d\n\x0d\n  debug('onconnection');\x0d\n\x0d\n  if (err) {\x0d\n    self.emit('error'\x2C errnoException(err\x2C 'accept'));\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  if (self.maxConnections && self._connections >= self.maxConnections) {\x0d\n    if (clientHandle.getsockname || clientHandle.getpeername) {\x0d\n      const data = ObjectCreate(null);\x0d\n      if (clientHandle.getsockname) {\x0d\n        const localInfo = ObjectCreate(null);\x0d\n        clientHandle.getsockname(localInfo);\x0d\n        data.localAddress = localInfo.address;\x0d\n        data.localPort = localInfo.port;\x0d\n        data.localFamily = localInfo.family;\x0d\n      }\x0d\n      if (clientHandle.getpeername) {\x0d\n        const remoteInfo = ObjectCreate(null);\x0d\n        clientHandle.getpeername(remoteInfo);\x0d\n        data.remoteAddress = remoteInfo.address;\x0d\n        data.remotePort = remoteInfo.port;\x0d\n        data.remoteFamily = remoteInfo.family;\x0d\n      }\x0d\n      self.emit('drop'\x2C data);\x0d\n    } else {\x0d\n      self.emit('drop');\x0d\n    }\x0d\n    clientHandle.close();\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  const socket = new Socket({\x0d\n    handle: clientHandle\x2C\x0d\n    allowHalfOpen: self.allowHalfOpen\x2C\x0d\n    pauseOnCreate: self.pauseOnConnect\x2C\x0d\n    readable: true\x2C\x0d\n    writable: true\x0d\n  });\x0d\n\x0d\n  if (self.noDelay && clientHandle.setNoDelay) {\x0d\n    socket[kSetNoDelay] = true;\x0d\n    clientHandle.setNoDelay(true);\x0d\n  }\x0d\n  if (self.keepAlive && clientHandle.setKeepAlive) {\x0d\n    socket[kSetKeepAlive] = true;\x0d\n    socket[kSetKeepAliveInitialDelay] = self.keepAliveInitialDelay;\x0d\n    clientHandle.setKeepAlive(true\x2C self.keepAliveInitialDelay);\x0d\n  }\x0d\n\x0d\n  self._connections++;\x0d\n  socket.server = self;\x0d\n  socket._server = self;\x0d\n\x0d\n  DTRACE_NET_SERVER_CONNECTION(socket);\x0d\n  self.emit('connection'\x2C socket);\x0d\n  lazyChannels();\x0d\n  if (netServerSocketChannel.hasSubscribers) {\x0d\n    netServerSocketChannel.publish({\x0d\n      socket\x2C\x0d\n    });\x0d\n  }\x0d\n}\x0d\n\x0d\n/**\x0d\n * Gets the number of concurrent connections on the server\x0d\n * @param {Function} cb\x0d\n * @returns {Server}\x0d\n */\x0d\n\x0d\nServer.prototype.getConnections = function(cb) {\x0d\n  const self = this;\x0d\n\x0d\n  function end(err\x2C connections) {\x0d\n    defaultTriggerAsyncIdScope(self[async_id_symbol]\x2C\x0d\n                               process.nextTick\x2C\x0d\n                               cb\x2C\x0d\n                               err\x2C\x0d\n                               connections);\x0d\n  }\x0d\n\x0d\n  if (!this._usingWorkers) {\x0d\n    end(null\x2C this._connections);\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  // Poll workers\x0d\n  let left = this._workers.length;\x0d\n  let total = this._connections;\x0d\n\x0d\n  function oncount(err\x2C count) {\x0d\n    if (err) {\x0d\n      left = -1;\x0d\n      return end(err);\x0d\n    }\x0d\n\x0d\n    total += count;\x0d\n    if (--left === 0) return end(null\x2C total);\x0d\n  }\x0d\n\x0d\n  for (let n = 0; n < this._workers.length; n++) {\x0d\n    this._workers[n].getConnections(oncount);\x0d\n  }\x0d\n\x0d\n  return this;\x0d\n};\x0d\n\x0d\n\x0d\nServer.prototype.close = function(cb) {\x0d\n  if (typeof cb === 'function') {\x0d\n    if (!this._handle) {\x0d\n      this.once('close'\x2C function close() {\x0d\n        cb(new ERR_SERVER_NOT_RUNNING());\x0d\n      });\x0d\n    } else {\x0d\n      this.once('close'\x2C cb);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  if (this._handle) {\x0d\n    this._handle.close();\x0d\n    this._handle = null;\x0d\n  }\x0d\n\x0d\n  if (this._usingWorkers) {\x0d\n    let left = this._workers.length;\x0d\n    const onWorkerClose = () => {\x0d\n      if (--left !== 0) return;\x0d\n\x0d\n      this._connections = 0;\x0d\n      this._emitCloseIfDrained();\x0d\n    };\x0d\n\x0d\n    // Increment connections to be sure that\x2C even if all sockets will be closed\x0d\n    // during polling of workers\x2C `close` event will be emitted only once.\x0d\n    this._connections++;\x0d\n\x0d\n    // Poll workers\x0d\n    for (let n = 0; n < this._workers.length; n++)\x0d\n      this._workers[n].close(onWorkerClose);\x0d\n  } else {\x0d\n    this._emitCloseIfDrained();\x0d\n  }\x0d\n\x0d\n  return this;\x0d\n};\x0d\n\x0d\nServer.prototype._emitCloseIfDrained = function() {\x0d\n  debug('SERVER _emitCloseIfDrained');\x0d\n\x0d\n  if (this._handle || this._connections) {\x0d\n    debug('SERVER handle? %j   connections? %d'\x2C\x0d\n          !!this._handle\x2C this._connections);\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  defaultTriggerAsyncIdScope(this[async_id_symbol]\x2C\x0d\n                             process.nextTick\x2C\x0d\n                             emitCloseNT\x2C\x0d\n                             this);\x0d\n};\x0d\n\x0d\n\x0d\nfunction emitCloseNT(self) {\x0d\n  debug('SERVER: emit close');\x0d\n  self.emit('close');\x0d\n}\x0d\n\x0d\n\x0d\nServer.prototype[EventEmitter.captureRejectionSymbol] = function(\x0d\n  err\x2C event\x2C sock) {\x0d\n\x0d\n  switch (event) {\x0d\n    case 'connection':\x0d\n      sock.destroy(err);\x0d\n      break;\x0d\n    default:\x0d\n      this.emit('error'\x2C err);\x0d\n  }\x0d\n};\x0d\n\x0d\n\x0d\n// Legacy alias on the C++ wrapper object. This is not public API\x2C so we may\x0d\n// want to runtime-deprecate it at some point. There's no hurry\x2C though.\x0d\nObjectDefineProperty(TCP.prototype\x2C 'owner'\x2C {\x0d\n  __proto__: null\x2C\x0d\n  get() { return this[owner_symbol]; }\x2C\x0d\n  set(v) { return this[owner_symbol] = v; }\x0d\n});\x0d\n\x0d\nObjectDefineProperty(Socket.prototype\x2C '_handle'\x2C {\x0d\n  __proto__: null\x2C\x0d\n  get() { return this[kHandle]; }\x2C\x0d\n  set(v) { return this[kHandle] = v; }\x0d\n});\x0d\n\x0d\nServer.prototype._setupWorker = function(socketList) {\x0d\n  this._usingWorkers = true;\x0d\n  this._workers.push(socketList);\x0d\n  socketList.once('exit'\x2C (socketList) => {\x0d\n    const index = ArrayPrototypeIndexOf(this._workers\x2C socketList);\x0d\n    this._workers.splice(index\x2C 1);\x0d\n  });\x0d\n};\x0d\n\x0d\nServer.prototype.ref = function() {\x0d\n  this._unref = false;\x0d\n\x0d\n  if (this._handle)\x0d\n    this._handle.ref();\x0d\n\x0d\n  return this;\x0d\n};\x0d\n\x0d\nServer.prototype.unref = function() {\x0d\n  this._unref = true;\x0d\n\x0d\n  if (this._handle)\x0d\n    this._handle.unref();\x0d\n\x0d\n  return this;\x0d\n};\x0d\n\x0d\nlet _setSimultaneousAccepts;\x0d\nlet warnSimultaneousAccepts = true;\x0d\n\x0d\nif (isWindows) {\x0d\n  let simultaneousAccepts;\x0d\n\x0d\n  _setSimultaneousAccepts = function(handle) {\x0d\n    if (warnSimultaneousAccepts) {\x0d\n      process.emitWarning(\x0d\n        'net._setSimultaneousAccepts() is deprecated and will be removed.'\x2C\x0d\n        'DeprecationWarning'\x2C 'DEP0121');\x0d\n      warnSimultaneousAccepts = false;\x0d\n    }\x0d\n    if (handle === undefined) {\x0d\n      return;\x0d\n    }\x0d\n\x0d\n    if (simultaneousAccepts === undefined) {\x0d\n      simultaneousAccepts = (process.env.NODE_MANY_ACCEPTS &&\x0d\n                             process.env.NODE_MANY_ACCEPTS !== '0');\x0d\n    }\x0d\n\x0d\n    if (handle._simultaneousAccepts !== simultaneousAccepts) {\x0d\n      handle.setSimultaneousAccepts(!!simultaneousAccepts);\x0d\n      handle._simultaneousAccepts = simultaneousAccepts;\x0d\n    }\x0d\n  };\x0d\n} else {\x0d\n  _setSimultaneousAccepts = function() {\x0d\n    if (warnSimultaneousAccepts) {\x0d\n      process.emitWarning(\x0d\n        'net._setSimultaneousAccepts() is deprecated and will be removed.'\x2C\x0d\n        'DeprecationWarning'\x2C 'DEP0121');\x0d\n      warnSimultaneousAccepts = false;\x0d\n    }\x0d\n  };\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  _createServerHandle: createServerHandle\x2C\x0d\n  _normalizeArgs: normalizeArgs\x2C\x0d\n  _setSimultaneousAccepts\x2C\x0d\n  get BlockList() {\x0d\n    BlockList ??= require('internal/blocklist').BlockList;\x0d\n    return BlockList;\x0d\n  }\x2C\x0d\n  get SocketAddress() {\x0d\n    SocketAddress ??= require('internal/socketaddress').SocketAddress;\x0d\n    return SocketAddress;\x0d\n  }\x2C\x0d\n  connect\x2C\x0d\n  createConnection: connect\x2C\x0d\n  createServer\x2C\x0d\n  isIP: isIP\x2C\x0d\n  isIPv4: isIPv4\x2C\x0d\n  isIPv6: isIPv6\x2C\x0d\n  Server\x2C\x0d\n  Socket\x2C\x0d\n  Stream: Socket\x2C // Legacy naming\x0d\n};\x0d\n
code-source-info,0xb50533f090,459,0,63931,C0O0C4O63931,,
code-creation,Function,10,323737,0x2a6f0b828b8,2932, node:net:1:1,0xb50533f008,~
code-source-info,0x2a6f0b828b8,459,0,63931,C0O0C510O1183C516O1200C522O1226C528O1249C534O1261C540O1287C546O1299C552O1310C558O1326C564O1345C570O1370C575O1395C580O1406C586O1462C592O1462C596O1462C598O1497C604O1497C608O1497C610O1529C616O1529C621O1562C635O1563C641O1529C643O1721C649O1721C654O1621C660O1646C666O1655C671O1666C676O1677C682O1702C688O1762C694O1762C698O1762C700O1851C703O1851C708O1802C714O1820C720O1834C726O1896C732O1896C737O1885C743O1944C746O1944C751O1924C757O1995C760O1995C765O1978C771O2095C774O2095C779O2039C785O2047C791O2077C797O2195C800O2195C805O2136C811O2145C817O2176C823O2331C829O2331C834O2237C840O2252C851O2294C857O2311C863O2541C869O2541C874O2376C880O2394C886O2411C892O2428C897O2449C903O2461C908O2478C913O2499C919O2511C925O2525C931O3009C937O3009C942O3009C947O2608C953O2641C959O2668C965O2696C971O2722C977O2751C983O2781C989O2813C995O2842C1001O2866C1007O2893C1013O2913C1019O2932C1025O2958C1031O2979C1037O3063C1043O3063C1048O3046C1054O3123C1060O3123C1065O3104C1071O3315C1077O3315C1082O3176C1088O3200C1094O3220C1100O3241C1106O3259C1112O3278C1118O3295C1124O3376C1127O3376C1131O3376C1133O3478C1139O3478C1144O3418C1150O3451C1156O3561C1157O3561C1159O3575C1160O3575C1162O3585C1163O3585C1165O3601C1166O3601C1168O3656C1174O3656C1179O3627C1185O3641C1191O3697C1197O3697C1202O3684C1208O3752C1211O3752C1215O3752C1217O3810C1219O3810C1221O3848C1223O3848C1225O3875C1228O3883C1235O3892C1238O3875C1240O3921C1244O3921C1246O3970C1249O3970C1253O3970C1255O4016C1256O4016C1258O4045C1259O4045C1261O4697C1267O4697C1272O4652C1278O4668C1284O4682C1290O8807C1293O8807C1297O8807C1299O8852C1302O8852C1306O8852C1308O8898C1311O8898C1315O8898C1317O8944C1320O8944C1324O8944C1326O9004C1329O9004C1333O9004C1335O13728C1338O13756C1346O13774C1351O13781C1356O13728C1361O13794C1367O13830C1372O13794C1377O13873C1380O13880C1389O13902C1393O14138C1396O14145C1405O14162C1409O15702C1412O15709C1419O15730C1423O15755C1426O15762C1435O15783C1439O16311C1442O16318C1451O16339C1455O16740C1458O16747C1467O16770C1471O17411C1474O17418C1483O17436C1487O17491C1493O17519C1507O17575C1515O17491C1520O17630C1526O17658C1540O17705C1548O17630C1553O17797C1559O17825C1576O17880C1588O17797C1598O18217C1604O18245C1621O18300C1633O18217C1643O18393C1649O18421C1654O18432C1663O18476C1678O18393C1688O18857C1691O18864C1700O18880C1708O19127C1711O19134C1720O19148C1728O19347C1731O19354C1740O19380C1748O19751C1751O19758C1760O19774C1768O20128C1771O20135C1780O20152C1788O20351C1791O20358C1800O20373C1808O20727C1811O20734C1820O20756C1828O20920C1831O20927C1840O20946C1848O22515C1851O22522C1860O22539C1868O22649C1871O22656C1880O22679C1888O23185C1896O23185C1906O23309C1914O23309C1924O23412C1932O23412C1942O23512C1950O23512C1960O23608C1963O23615C1972O23638C1980O23932C1988O23932C1998O24035C2006O24035C2016O24127C2024O24127C2034O24225C2037O24232C2042O24242C2046O24260C2054O24316C2057O24323C2066O24347C2074O25146C2077O25153C2086O25171C2094O25250C2097O25257C2106O25274C2114O25525C2122O25525C2132O25669C2140O25669C2150O31559C2153O31566C2162O31584C2170O40229C2173O40236C2182O40250C2190O40457C2193O40464C2202O40480C2210O45995C2213O46023C2225O46047C2234O45995C2244O46060C2250O46060C2260O50181C2263O50188C2274O50207C2282O51749C2285O51756C2298O51773C2306O56140C2312O56168C2333O56222C2345O56140C2355O56320C2358O56327C2371O56345C2379O58702C2382O58709C2395O58734C2403O59531C2406O59538C2419O59554C2427O60465C2430O60472C2443O60502C2451O61002C2454O61009C2466O61032C2479O61056C2487O61389C2493O61414C2514O61459C2526O61500C2538O61389C2548O61550C2554O61578C2571O61625C2586O61661C2601O61550C2611O61706C2614O61713C2630O61736C2638O61991C2641O61998C2657O62012C2665O62124C2668O62131C2684O62147C2692O62264C2694O62320C2695O62320C2697O62329C2712O62353C2713O62353C2715O62379C2729O63109C2737O63391C2747O63434C2757O63473C2767O63491C2777O63759C2787O63789C2797O63801C2807O63824C2817O63841C2827O63860C2837O63871C2847O63882C2857O63901C2922O63406C2931O63930,,
code-creation,Eval,10,324785,0x2a6f0b8bb38,5, node:internal/dtrace:1:1,0x2a6f0b8b9f0,~
script-source,460,node:internal/dtrace,'use strict';\x0d\n\x0d\nconst config = internalBinding('config');\x0d\n\x0d\nconst {\x0d\n  DTRACE_HTTP_CLIENT_REQUEST = () => {}\x2C\x0d\n  DTRACE_HTTP_CLIENT_RESPONSE = () => {}\x2C\x0d\n  DTRACE_HTTP_SERVER_REQUEST = () => {}\x2C\x0d\n  DTRACE_HTTP_SERVER_RESPONSE = () => {}\x2C\x0d\n  DTRACE_NET_SERVER_CONNECTION = () => {}\x2C\x0d\n  DTRACE_NET_STREAM_END = () => {}\x0d\n} = (config.hasDtrace ? internalBinding('dtrace') : {});\x0d\n\x0d\nmodule.exports = {\x0d\n  DTRACE_HTTP_CLIENT_REQUEST\x2C\x0d\n  DTRACE_HTTP_CLIENT_RESPONSE\x2C\x0d\n  DTRACE_HTTP_SERVER_REQUEST\x2C\x0d\n  DTRACE_HTTP_SERVER_RESPONSE\x2C\x0d\n  DTRACE_NET_SERVER_CONNECTION\x2C\x0d\n  DTRACE_NET_STREAM_END\x0d\n};\x0d\n
code-source-info,0x2a6f0b8bb38,460,0,589,C0O0C4O589,,
code-creation,Function,10,324881,0x2a6f0b8c010,140, node:internal/dtrace:1:1,0x2a6f0b8bab0,~
code-source-info,0x2a6f0b8c010,460,0,589,C0O32C3O32C8O333C17O345C25O73C36O115C47O158C58O200C69O243C80O287C91O381C98O403C104O434C110O466C116O497C122O529C128O562C134O396C139O588,,
code-creation,LazyCompile,10,325257,0x2a6f0b8cf20,34,protoGetter node:net:842:21,0xb50533f570,~
code-source-info,0x2a6f0b8cf20,459,23013,23181,C0O23035C8O23063C13O23074C20O23163C27O23035C33O23180,,
code-creation,LazyCompile,10,325429,0x2a6f0b91cf0,37,get BlockList node:net:2228:16,0x2a6f0b81c60,~
code-source-info,0x2a6f0b91cf0,459,63532,63624,C0O63542C14O63556C19O63585C26O63552C32O63602C36O63619,,
code-creation,Eval,10,325690,0x2a6f0b921e8,5, node:internal/blocklist:1:1,0x2a6f0b92000,~
script-source,461,node:internal/blocklist,'use strict';\x0d\n\x0d\nconst {\x0d\n  Boolean\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  Symbol\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  BlockList: BlockListHandle\x2C\x0d\n} = internalBinding('block_list');\x0d\n\x0d\nconst {\x0d\n  customInspectSymbol: kInspect\x2C\x0d\n} = require('internal/util');\x0d\n\x0d\nconst {\x0d\n  SocketAddress\x2C\x0d\n  kHandle: kSocketAddressHandle\x2C\x0d\n} = require('internal/socketaddress');\x0d\n\x0d\nconst {\x0d\n  JSTransferable\x2C\x0d\n  kClone\x2C\x0d\n  kDeserialize\x2C\x0d\n} = require('internal/worker/js_transferable');\x0d\n\x0d\nconst { inspect } = require('internal/util/inspect');\x0d\n\x0d\nconst kHandle = Symbol('kHandle');\x0d\nconst { owner_symbol } = internalBinding('symbols');\x0d\n\x0d\nconst {\x0d\n  ERR_INVALID_ARG_VALUE\x2C\x0d\n} = require('internal/errors').codes;\x0d\n\x0d\nconst { validateInt32\x2C validateString } = require('internal/validators');\x0d\n\x0d\nclass BlockList extends JSTransferable {\x0d\n  constructor() {\x0d\n    super();\x0d\n    this[kHandle] = new BlockListHandle();\x0d\n    this[kHandle][owner_symbol] = this;\x0d\n  }\x0d\n\x0d\n  [kInspect](depth\x2C options) {\x0d\n    if (depth < 0)\x0d\n      return this;\x0d\n\x0d\n    const opts = {\x0d\n      ...options\x2C\x0d\n      depth: options.depth == null ? null : options.depth - 1\x0d\n    };\x0d\n\x0d\n    return `BlockList ${inspect({\x0d\n      rules: this.rules\x0d\n    }\x2C opts)}`;\x0d\n  }\x0d\n\x0d\n  addAddress(address\x2C family = 'ipv4') {\x0d\n    if (!SocketAddress.isSocketAddress(address)) {\x0d\n      validateString(address\x2C 'address');\x0d\n      validateString(family\x2C 'family');\x0d\n      address = new SocketAddress({\x0d\n        address\x2C\x0d\n        family\x2C\x0d\n      });\x0d\n    }\x0d\n    this[kHandle].addAddress(address[kSocketAddressHandle]);\x0d\n  }\x0d\n\x0d\n  addRange(start\x2C end\x2C family = 'ipv4') {\x0d\n    if (!SocketAddress.isSocketAddress(start)) {\x0d\n      validateString(start\x2C 'start');\x0d\n      validateString(family\x2C 'family');\x0d\n      start = new SocketAddress({\x0d\n        address: start\x2C\x0d\n        family\x2C\x0d\n      });\x0d\n    }\x0d\n    if (!SocketAddress.isSocketAddress(end)) {\x0d\n      validateString(end\x2C 'end');\x0d\n      validateString(family\x2C 'family');\x0d\n      end = new SocketAddress({\x0d\n        address: end\x2C\x0d\n        family\x2C\x0d\n      });\x0d\n    }\x0d\n    const ret = this[kHandle].addRange(\x0d\n      start[kSocketAddressHandle]\x2C\x0d\n      end[kSocketAddressHandle]);\x0d\n    if (ret === false)\x0d\n      throw new ERR_INVALID_ARG_VALUE('start'\x2C start\x2C 'must come before end');\x0d\n  }\x0d\n\x0d\n  addSubnet(network\x2C prefix\x2C family = 'ipv4') {\x0d\n    if (!SocketAddress.isSocketAddress(network)) {\x0d\n      validateString(network\x2C 'network');\x0d\n      validateString(family\x2C 'family');\x0d\n      network = new SocketAddress({\x0d\n        address: network\x2C\x0d\n        family\x2C\x0d\n      });\x0d\n    }\x0d\n    switch (network.family) {\x0d\n      case 'ipv4':\x0d\n        validateInt32(prefix\x2C 'prefix'\x2C 0\x2C 32);\x0d\n        break;\x0d\n      case 'ipv6':\x0d\n        validateInt32(prefix\x2C 'prefix'\x2C 0\x2C 128);\x0d\n        break;\x0d\n    }\x0d\n    this[kHandle].addSubnet(network[kSocketAddressHandle]\x2C prefix);\x0d\n  }\x0d\n\x0d\n  check(address\x2C family = 'ipv4') {\x0d\n    if (!SocketAddress.isSocketAddress(address)) {\x0d\n      validateString(address\x2C 'address');\x0d\n      validateString(family\x2C 'family');\x0d\n      try {\x0d\n        address = new SocketAddress({\x0d\n          address\x2C\x0d\n          family\x2C\x0d\n        });\x0d\n      } catch {\x0d\n        // Ignore the error. If it's not a valid address\x2C return false.\x0d\n        return false;\x0d\n      }\x0d\n    }\x0d\n    return Boolean(this[kHandle].check(address[kSocketAddressHandle]));\x0d\n  }\x0d\n\x0d\n  get rules() {\x0d\n    return this[kHandle].getRules();\x0d\n  }\x0d\n\x0d\n  [kClone]() {\x0d\n    const handle = this[kHandle];\x0d\n    return {\x0d\n      data: { handle }\x2C\x0d\n      deserializeInfo: 'internal/blocklist:InternalBlockList'\x2C\x0d\n    };\x0d\n  }\x0d\n\x0d\n  [kDeserialize]({ handle }) {\x0d\n    this[kHandle] = handle;\x0d\n    this[kHandle][owner_symbol] = this;\x0d\n  }\x0d\n}\x0d\n\x0d\nclass InternalBlockList extends JSTransferable {\x0d\n  constructor(handle) {\x0d\n    super();\x0d\n    this[kHandle] = handle;\x0d\n    if (handle !== undefined)\x0d\n      handle[owner_symbol] = this;\x0d\n  }\x0d\n}\x0d\n\x0d\nInternalBlockList.prototype.constructor = BlockList.prototype.constructor;\x0d\nObjectSetPrototypeOf(InternalBlockList.prototype\x2C BlockList.prototype);\x0d\n\x0d\nmodule.exports = {\x0d\n  BlockList\x2C\x0d\n  InternalBlockList\x2C\x0d\n};\x0d\n
code-source-info,0x2a6f0b921e8,461,0,4043,C0O0C4O4043,,
code-creation,Function,10,326031,0x2a6f0b92bf0,359, node:internal/blocklist:1:1,0x2a6f0b92160,~
code-source-info,0x2a6f0b92bf0,461,0,4043,C0O0C35O28C41O40C46O65C51O137C54O137C59O115C65O218C68O218C73O203C78O312C81O312C86O258C92O285C98O410C101O410C106O361C111O380C116O391C121O477C124O477C129O465C135O530C138O530C142O530C144O575C147O575C152O558C158O645C161O645C166O671C171O617C177O724C180O724C185O690C191O705C197O783C204O929C241O3359C251O3528C278O3669C301O3850C306O3884C311O3894C315O3872C319O3947C324O3968C329O3908C334O3983C341O4005C347O4019C353O3998C358O4042,,
code-creation,Eval,10,326426,0x2a6f0b944c8,5, node:internal/socketaddress:1:1,0x2a6f0b942d0,~
script-source,462,node:internal/socketaddress,'use strict';\x0d\n\x0d\nconst {\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  Symbol\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  SocketAddress: _SocketAddress\x2C\x0d\n  AF_INET\x2C\x0d\n  AF_INET6\x2C\x0d\n} = internalBinding('block_list');\x0d\n\x0d\nconst {\x0d\n  validateObject\x2C\x0d\n  validateString\x2C\x0d\n  validatePort\x2C\x0d\n  validateUint32\x2C\x0d\n} = require('internal/validators');\x0d\n\x0d\nconst {\x0d\n  codes: {\x0d\n    ERR_INVALID_ARG_VALUE\x2C\x0d\n  }\x2C\x0d\n} = require('internal/errors');\x0d\n\x0d\nconst {\x0d\n  customInspectSymbol: kInspect\x2C\x0d\n} = require('internal/util');\x0d\n\x0d\nconst { inspect } = require('internal/util/inspect');\x0d\n\x0d\nconst {\x0d\n  JSTransferable\x2C\x0d\n  kClone\x2C\x0d\n  kDeserialize\x2C\x0d\n} = require('internal/worker/js_transferable');\x0d\n\x0d\nconst kHandle = Symbol('kHandle');\x0d\nconst kDetail = Symbol('kDetail');\x0d\n\x0d\nclass SocketAddress extends JSTransferable {\x0d\n  static isSocketAddress(value) {\x0d\n    return value?.[kHandle] !== undefined;\x0d\n  }\x0d\n\x0d\n  constructor(options = {}) {\x0d\n    super();\x0d\n    validateObject(options\x2C 'options');\x0d\n    let { family = 'ipv4' } = options;\x0d\n    const {\x0d\n      address = (family === 'ipv4' ? '127.0.0.1' : '::')\x2C\x0d\n      port = 0\x2C\x0d\n      flowlabel = 0\x2C\x0d\n    } = options;\x0d\n\x0d\n    let type;\x0d\n    if (typeof family?.toLowerCase === 'function')\x0d\n      family = family.toLowerCase();\x0d\n    switch (family) {\x0d\n      case 'ipv4':\x0d\n        type = AF_INET;\x0d\n        break;\x0d\n      case 'ipv6':\x0d\n        type = AF_INET6;\x0d\n        break;\x0d\n      default:\x0d\n        throw new ERR_INVALID_ARG_VALUE('options.family'\x2C options.family);\x0d\n    }\x0d\n\x0d\n    validateString(address\x2C 'options.address');\x0d\n    validatePort(port\x2C 'options.port');\x0d\n    validateUint32(flowlabel\x2C 'options.flowlabel'\x2C false);\x0d\n\x0d\n    this[kHandle] = new _SocketAddress(address\x2C port\x2C type\x2C flowlabel);\x0d\n    this[kDetail] = this[kHandle].detail({\x0d\n      address: undefined\x2C\x0d\n      port: undefined\x2C\x0d\n      family: undefined\x2C\x0d\n      flowlabel: undefined\x2C\x0d\n    });\x0d\n  }\x0d\n\x0d\n  get address() {\x0d\n    return this[kDetail].address;\x0d\n  }\x0d\n\x0d\n  get port() {\x0d\n    return this[kDetail].port;\x0d\n  }\x0d\n\x0d\n  get family() {\x0d\n    return this[kDetail].family === AF_INET ? 'ipv4' : 'ipv6';\x0d\n  }\x0d\n\x0d\n  get flowlabel() {\x0d\n    // The flow label can be changed internally.\x0d\n    return this[kHandle].flowlabel();\x0d\n  }\x0d\n\x0d\n  [kInspect](depth\x2C options) {\x0d\n    if (depth < 0)\x0d\n      return this;\x0d\n\x0d\n    const opts = {\x0d\n      ...options\x2C\x0d\n      depth: options.depth == null ? null : options.depth - 1\x0d\n    };\x0d\n\x0d\n    return `SocketAddress ${inspect(this.toJSON()\x2C opts)}`;\x0d\n  }\x0d\n\x0d\n  [kClone]() {\x0d\n    const handle = this[kHandle];\x0d\n    return {\x0d\n      data: { handle }\x2C\x0d\n      deserializeInfo: 'internal/socketaddress:InternalSocketAddress'\x2C\x0d\n    };\x0d\n  }\x0d\n\x0d\n  [kDeserialize]({ handle }) {\x0d\n    this[kHandle] = handle;\x0d\n    this[kDetail] = handle.detail({\x0d\n      address: undefined\x2C\x0d\n      port: undefined\x2C\x0d\n      family: undefined\x2C\x0d\n      flowlabel: undefined\x2C\x0d\n    });\x0d\n  }\x0d\n\x0d\n  toJSON() {\x0d\n    return {\x0d\n      address: this.address\x2C\x0d\n      port: this.port\x2C\x0d\n      family: this.family\x2C\x0d\n      flowlabel: this.flowlabel\x2C\x0d\n    };\x0d\n  }\x0d\n}\x0d\n\x0d\nclass InternalSocketAddress extends JSTransferable {\x0d\n  constructor(handle) {\x0d\n    super();\x0d\n    this[kHandle] = handle;\x0d\n    this[kDetail] = this[kHandle]?.detail({\x0d\n      address: undefined\x2C\x0d\n      port: undefined\x2C\x0d\n      family: undefined\x2C\x0d\n      flowlabel: undefined\x2C\x0d\n    });\x0d\n  }\x0d\n}\x0d\n\x0d\nInternalSocketAddress.prototype.constructor =\x0d\n  SocketAddress.prototype.constructor;\x0d\nObjectSetPrototypeOf(InternalSocketAddress.prototype\x2C SocketAddress.prototype);\x0d\n\x0d\nmodule.exports = {\x0d\n  SocketAddress\x2C\x0d\n  InternalSocketAddress\x2C\x0d\n  kHandle\x2C\x0d\n};\x0d\n
code-source-info,0x2a6f0b944c8,462,0,3523,C0O0C4O3523,,
code-creation,Function,10,326736,0x2a6f0b94ff0,366, node:internal/socketaddress:1:1,0x2a6f0b94440,~
code-source-info,0x2a6f0b94ff0,462,0,3523,C0O0C38O28C43O53C48O154C51O154C56O108C62O127C68O139C74O275C77O275C82O199C88O218C94O237C100O254C106O369C109O369C114O369C119O335C125O447C128O447C133O432C138O496C141O496C146O484C152O593C155O593C160O544C165O563C170O574C175O656C178O656C182O656C184O692C187O692C191O692C193O742C226O2171C236O2425C246O2602C279O3017C302O3295C307O3336C312O3346C316O3317C320O3403C325O3428C330O3360C335O3443C342O3465C348O3483C354O3509C360O3458C365O3522,,
code-creation,LazyCompile,10,326993,0x2a6f0b95a58,72,BlockList node:internal/blocklist:40:14,0x2a6f0b92218,~
code-source-info,0x2a6f0b95a58,461,814,922,C3O824C11O824C23O838C28O843C33O858C36O854C41O852C45O882C50O887C52O886C58O896C64O910C71O921,,
code-creation,LazyCompile,10,327118,0x2a6f0b961e0,115,addAddress node:internal/blocklist:60:13,0x2a6f0b922b8,~
code-source-info,0x2a6f0b961e0,461,1208,1529,C14O1242C19O1261C24O1261C31O1296C39O1296C44O1339C52O1339C57O1380C69O1419C75O1437C81O1390C87O1468C89O1473C91O1472C95O1482C102O1501C104O1500C108O1482C114O1528,,
code-creation,LazyCompile,10,327204,0x2a6f0b96360,20,isSocketAddress node:internal/socketaddress:43:25,0x2a6f0b94548,~
code-source-info,0x2a6f0b96360,462,784,842,C0O799C9O814C11O813C18O823C19O837,,
code-creation,LazyCompile,10,327342,0x2a6f0b96d80,323,SocketAddress node:internal/socketaddress:47:14,0x2a6f0b944f8,~
code-source-info,0x2a6f0b96d80,462,859,1842,C7O859C13O881C21O881C33O895C41O895C46O942C58O991C69O1009C81O1050C89O1067C97O1111C99O1122C106O1139C117O1192C122O1192C127O1212C146O1259C151O1284C153O1320C158O1346C160O1378C168O1436C175O1384C180O1378C181O1459C189O1459C194O1508C202O1508C207O1549C220O1549C225O1611C230O1616C235O1631C252O1627C257O1625C261O1684C266O1689C274O1705C276O1704C280O1714C291O1739C296O1763C301O1789C306O1818C310O1714C315O1698C322O1841,,
code-creation,LazyCompile,10,327490,0x2a6f0b970a8,128, node:internal/validators:247:3,0x3a899792dd8,~
code-source-info,0x2a6f0b970a8,22,6515,7081,C16O6574C27O6574C33O6661C44O6661C50O6746C61O6746C67O6809C75O6857C79O6871C82O6871C96O6948C104O7015C120O7021C125O7015C127O7080,,
code-creation,LazyCompile,10,327597,0x2a6f0b97240,27,getOwnPropertyValueOrDefault node:internal/validators:228:38,0x3a899792d88,~
code-source-info,0x2a6f0b97240,22,6087,6235,C0O6121C7O6148C10O6148C23O6226C26O6232,,
code-creation,LazyCompile,10,327699,0x2a6f0b97388,129,validatePort node:internal/validators:384:22,0x3a899793058,~
code-source-info,0x2a6f0b97388,22,10718,11085,C24O10763C44O10861C47O10861C52O10886C58O10894C65O10911C70O10922C72O10928C75O10917C86O10950C92O10975C99O10985C101O11004C117O11010C122O11004C123O11066C125O11078C128O11082,,
code-creation,LazyCompile,10,327812,0x2a6f0b975c0,148, node:internal/validators:138:40,0x3a899792b10,~
code-source-info,0x2a6f0b975c0,22,3648,4093,C16O3688C22O3726C38O3732C43O3726C44O3789C49O3794C55O3825C71O3831C76O3825C77O3900C87O3962C90O3980C92O3990C99O4005C104O4019C114O4058C127O4071C140O4025C145O4019C147O4092,,
code-creation,LazyCompile,10,327979,0x2a6f0b97bc8,229,addRange node:internal/blocklist:72:11,0x2a6f0b92308,~
code-source-info,0x2a6f0b97bc8,461,1543,2235,C17O1580C22O1599C27O1599C34O1632C42O1632C47O1671C55O1671C60O1712C72O1758C78O1774C84O1720C90O1805C95O1824C100O1824C107O1855C115O1855C120O1890C128O1890C133O1931C145O1975C151O1989C157O1937C163O2032C165O2037C167O2036C171O2046C178O2069C180O2068C186O2103C188O2102C192O2046C199O2132C200O2140C205O2158C221O2164C226O2158C228O2234,,
code-creation,Eval,10,328208,0x2a6f0b981c0,5, node:internal/modules/esm/formats:1:1,0x2a6f0b98048,~
script-source,463,node:internal/modules/esm/formats,'use strict';\x0d\n\x0d\nconst {\x0d\n  RegExpPrototypeExec\x2C\x0d\n} = primordials;\x0d\nconst { getOptionValue } = require('internal/options');\x0d\n\x0d\n\x0d\nconst experimentalWasmModules = getOptionValue('--experimental-wasm-modules');\x0d\n\x0d\nconst extensionFormatMap = {\x0d\n  '__proto__': null\x2C\x0d\n  '.cjs': 'commonjs'\x2C\x0d\n  '.js': 'module'\x2C\x0d\n  '.json': 'json'\x2C\x0d\n  '.mjs': 'module'\x2C\x0d\n};\x0d\n\x0d\nconst legacyExtensionFormatMap = {\x0d\n  '__proto__': null\x2C\x0d\n  '.cjs': 'commonjs'\x2C\x0d\n  '.js': 'commonjs'\x2C\x0d\n  '.json': 'commonjs'\x2C\x0d\n  '.mjs': 'module'\x2C\x0d\n  '.node': 'commonjs'\x2C\x0d\n};\x0d\n\x0d\nif (experimentalWasmModules) {\x0d\n  extensionFormatMap['.wasm'] = legacyExtensionFormatMap['.wasm'] = 'wasm';\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {string} mime\x0d\n * @returns {string | null}\x0d\n */\x0d\nfunction mimeToFormat(mime) {\x0d\n  if (\x0d\n    RegExpPrototypeExec(\x0d\n      /\\s*(text|application)\\/javascript\\s*(;\\s*charset=utf-?8\\s*)?/i\x2C\x0d\n      mime\x0d\n    ) !== null\x0d\n  ) return 'module';\x0d\n  if (mime === 'application/json') return 'json';\x0d\n  if (experimentalWasmModules && mime === 'application/wasm') return 'wasm';\x0d\n  return null;\x0d\n}\x0d\n\x0d\nfunction getLegacyExtensionFormat(ext) {\x0d\n  return legacyExtensionFormatMap[ext];\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  extensionFormatMap\x2C\x0d\n  getLegacyExtensionFormat\x2C\x0d\n  legacyExtensionFormatMap\x2C\x0d\n  mimeToFormat\x2C\x0d\n};\x0d\n
code-source-info,0x2a6f0b981c0,463,0,1256,C0O0C4O1256,,
code-creation,Function,10,328346,0x2a6f0b98478,120, node:internal/modules/esm/formats:1:1,0x2a6f0b98138,~
code-source-info,0x2a6f0b98478,463,0,1256,C0O0C24O28C30O95C33O95C38O76C43O161C46O161C50O161C52O238C57O386C61O386C63O531C67O565C73O629C79O593C83O1134C90O1156C96O1179C102O1208C108O1237C114O1149C119O1255,,
code-creation,Eval,10,328560,0x2a6f0b98b08,5, node:internal/modules/esm/initialize_import_meta:1:1,0x2a6f0b98970,~
script-source,464,node:internal/modules/esm/initialize_import_meta,'use strict';\x0d\n\x0d\nconst { getOptionValue } = require('internal/options');\x0d\nconst experimentalImportMetaResolve =\x0d\n  getOptionValue('--experimental-import-meta-resolve');\x0d\nconst {\x0d\n  PromisePrototypeThen\x2C\x0d\n  PromiseReject\x2C\x0d\n} = primordials;\x0d\nconst asyncESM = require('internal/process/esm_loader');\x0d\n\x0d\nfunction createImportMetaResolve(defaultParentUrl) {\x0d\n  return async function resolve(specifier\x2C parentUrl = defaultParentUrl) {\x0d\n    return PromisePrototypeThen(\x0d\n      asyncESM.esmLoader.resolve(specifier\x2C parentUrl)\x2C\x0d\n      ({ url }) => url\x2C\x0d\n      (error) => (\x0d\n        error.code === 'ERR_UNSUPPORTED_DIR_IMPORT' ?\x0d\n          error.url : PromiseReject(error))\x0d\n    );\x0d\n  };\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {object} meta\x0d\n * @param {{url: string}} context\x0d\n */\x0d\nfunction initializeImportMeta(meta\x2C context) {\x0d\n  const { url } = context;\x0d\n\x0d\n  // Alphabetical\x0d\n  if (experimentalImportMetaResolve) {\x0d\n    meta.resolve = createImportMetaResolve(url);\x0d\n  }\x0d\n\x0d\n  meta.url = url;\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  initializeImportMeta\x0d\n};\x0d\n
code-source-info,0x2a6f0b98b08,464,0,1021,C0O0C4O1021,,
code-creation,Function,10,328686,0x2a6f0b98cd0,90, node:internal/modules/esm/initialize_import_meta:1:1,0x2a6f0b98a80,~
code-source-info,0x2a6f0b98cd0,464,0,1021,C0O0C28O44C31O44C36O25C41O115C44O115C48O115C50O181C56O206C62O257C65O257C69O257C71O973C78O995C84O988C89O1020,,
code-creation,Eval,10,328959,0x2a6f0b99348,5, node:internal/modules/esm/load:1:1,0x2a6f0b99110,~
script-source,465,node:internal/modules/esm/load,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypePush\x2C\x0d\n  RegExpPrototypeExec\x2C\x0d\n  decodeURIComponent\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst { defaultGetFormat } = require('internal/modules/esm/get_format');\x0d\nconst { validateAssertions } = require('internal/modules/esm/assert');\x0d\nconst { getOptionValue } = require('internal/options');\x0d\nconst { fetchModule } = require('internal/modules/esm/fetch_module');\x0d\n\x0d\n// Do not eagerly grab .manifest\x2C it may be in TDZ\x0d\nconst policy = getOptionValue('--experimental-policy') ?\x0d\n  require('internal/process/policy') :\x0d\n  null;\x0d\nconst experimentalNetworkImports =\x0d\n  getOptionValue('--experimental-network-imports');\x0d\n\x0d\nconst { Buffer: { from: BufferFrom } } = require('buffer');\x0d\n\x0d\nconst { readFile: readFileAsync } = require('internal/fs/promises').exports;\x0d\nconst { URL } = require('internal/url');\x0d\nconst {\x0d\n  ERR_INVALID_URL\x2C\x0d\n  ERR_UNSUPPORTED_ESM_URL_SCHEME\x2C\x0d\n} = require('internal/errors').codes;\x0d\n\x0d\nconst DATA_URL_PATTERN = /^[^/]+\\/[^\x2C;]+(?:[^\x2C]*?)(;base64)?\x2C([\\s\\S]*)$/;\x0d\n\x0d\nasync function getSource(url\x2C context) {\x0d\n  const parsed = new URL(url);\x0d\n  let responseURL = url;\x0d\n  let source;\x0d\n  if (parsed.protocol === 'file:') {\x0d\n    source = await readFileAsync(parsed);\x0d\n  } else if (parsed.protocol === 'data:') {\x0d\n    const match = RegExpPrototypeExec(DATA_URL_PATTERN\x2C parsed.pathname);\x0d\n    if (!match) {\x0d\n      throw new ERR_INVALID_URL(url);\x0d\n    }\x0d\n    const { 1: base64\x2C 2: body } = match;\x0d\n    source = BufferFrom(decodeURIComponent(body)\x2C base64 ? 'base64' : 'utf8');\x0d\n  } else if (experimentalNetworkImports && (\x0d\n    parsed.protocol === 'https:' ||\x0d\n    parsed.protocol === 'http:'\x0d\n  )) {\x0d\n    const res = await fetchModule(parsed\x2C context);\x0d\n    source = await res.body;\x0d\n    responseURL = res.resolvedHREF;\x0d\n  } else {\x0d\n    const supportedSchemes = ['file'\x2C 'data'];\x0d\n    if (experimentalNetworkImports) {\x0d\n      ArrayPrototypePush(supportedSchemes\x2C 'http'\x2C 'https');\x0d\n    }\x0d\n    throw new ERR_UNSUPPORTED_ESM_URL_SCHEME(parsed\x2C supportedSchemes);\x0d\n  }\x0d\n  if (policy?.manifest) {\x0d\n    policy.manifest.assertIntegrity(parsed\x2C source);\x0d\n  }\x0d\n  return { __proto__: null\x2C responseURL\x2C source };\x0d\n}\x0d\n\x0d\n\x0d\n/**\x0d\n * Node.js default load hook.\x0d\n * @param {string} url\x0d\n * @param {object} context\x0d\n * @returns {object}\x0d\n */\x0d\nasync function defaultLoad(url\x2C context) {\x0d\n  let responseURL = url;\x0d\n  const { importAssertions } = context;\x0d\n  let {\x0d\n    format\x2C\x0d\n    source\x2C\x0d\n  } = context;\x0d\n\x0d\n  if (format == null) {\x0d\n    format = await defaultGetFormat(url\x2C context);\x0d\n  }\x0d\n\x0d\n  validateAssertions(url\x2C format\x2C importAssertions);\x0d\n\x0d\n  if (\x0d\n    format === 'builtin' ||\x0d\n    format === 'commonjs'\x0d\n  ) {\x0d\n    source = null;\x0d\n  } else if (source == null) {\x0d\n    ({ responseURL\x2C source } = await getSource(url\x2C context));\x0d\n  }\x0d\n\x0d\n  return {\x0d\n    __proto__: null\x2C\x0d\n    format\x2C\x0d\n    responseURL\x2C\x0d\n    source\x2C\x0d\n  };\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  defaultLoad\x2C\x0d\n};\x0d\n
code-source-info,0x2a6f0b99348,465,0,2888,C0O0C4O2888,,
code-creation,Function,10,329208,0x2a6f0b99588,263, node:internal/modules/esm/load:1:1,0x2a6f0b992c0,~
code-source-info,0x2a6f0b99588,465,0,2888,C0O0C58O28C64O51C70O75C76O145C79O145C84O124C90O221C93O221C98O198C104O289C107O289C112O270C117O343C120O343C125O327C131O459C134O459C143O504C150O459C152O589C155O589C159O589C161O683C164O683C169O683C174O666C180O741C183O741C188O772C193O723C199O799C202O799C207O791C213O893C216O893C221O919C226O836C232O856C238O955C242O955C244O2848C251O2870C257O2863C262O2887,,
code-creation,Eval,10,330214,0x2a6f0b9ba88,5, node:internal/fs/promises:1:1,0x2a6f0b9a568,~
script-source,466,node:internal/fs/promises,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypePush\x2C\x0d\n  Error\x2C\x0d\n  MathMax\x2C\x0d\n  MathMin\x2C\x0d\n  NumberIsSafeInteger\x2C\x0d\n  Promise\x2C\x0d\n  PromisePrototypeThen\x2C\x0d\n  PromiseResolve\x2C\x0d\n  PromiseReject\x2C\x0d\n  SafeArrayIterator\x2C\x0d\n  SafePromisePrototypeFinally\x2C\x0d\n  Symbol\x2C\x0d\n  Uint8Array\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst { fs: constants } = internalBinding('constants');\x0d\nconst {\x0d\n  F_OK\x2C\x0d\n  O_SYMLINK\x2C\x0d\n  O_WRONLY\x2C\x0d\n  S_IFMT\x2C\x0d\n  S_IFREG\x0d\n} = constants;\x0d\n\x0d\nconst binding = internalBinding('fs');\x0d\nconst { Buffer } = require('buffer');\x0d\n\x0d\nconst {\x0d\n  codes: {\x0d\n    ERR_FS_FILE_TOO_LARGE\x2C\x0d\n    ERR_INVALID_ARG_VALUE\x2C\x0d\n    ERR_INVALID_STATE\x2C\x0d\n    ERR_METHOD_NOT_IMPLEMENTED\x2C\x0d\n  }\x2C\x0d\n  AbortError\x2C\x0d\n  aggregateTwoErrors\x2C\x0d\n} = require('internal/errors');\x0d\nconst { isArrayBufferView } = require('internal/util/types');\x0d\nconst { rimrafPromises } = require('internal/fs/rimraf');\x0d\nconst {\x0d\n  constants: {\x0d\n    kIoMaxLength\x2C\x0d\n    kMaxUserId\x2C\x0d\n    kReadFileBufferLength\x2C\x0d\n    kReadFileUnknownBufferLength\x2C\x0d\n    kWriteFileMaxChunkSize\x2C\x0d\n  }\x2C\x0d\n  copyObject\x2C\x0d\n  emitRecursiveRmdirWarning\x2C\x0d\n  getDirents\x2C\x0d\n  getOptions\x2C\x0d\n  getStatsFromBinding\x2C\x0d\n  getValidatedPath\x2C\x0d\n  getValidMode\x2C\x0d\n  nullCheck\x2C\x0d\n  preprocessSymlinkDestination\x2C\x0d\n  stringToFlags\x2C\x0d\n  stringToSymlinkType\x2C\x0d\n  toUnixTimestamp\x2C\x0d\n  validateBufferArray\x2C\x0d\n  validateCpOptions\x2C\x0d\n  validateOffsetLengthRead\x2C\x0d\n  validateOffsetLengthWrite\x2C\x0d\n  validateRmOptions\x2C\x0d\n  validateRmdirOptions\x2C\x0d\n  validatePrimitiveStringAfterArrayBufferView\x2C\x0d\n  warnOnNonPortableTemplate\x2C\x0d\n} = require('internal/fs/utils');\x0d\nconst { opendir } = require('internal/fs/dir');\x0d\nconst {\x0d\n  parseFileMode\x2C\x0d\n  validateAbortSignal\x2C\x0d\n  validateBoolean\x2C\x0d\n  validateBuffer\x2C\x0d\n  validateEncoding\x2C\x0d\n  validateInteger\x2C\x0d\n  validateString\x2C\x0d\n} = require('internal/validators');\x0d\nconst pathModule = require('path');\x0d\nconst {\x0d\n  kEmptyObject\x2C\x0d\n  lazyDOMException\x2C\x0d\n  promisify\x2C\x0d\n} = require('internal/util');\x0d\nconst { EventEmitterMixin } = require('internal/event_target');\x0d\nconst { StringDecoder } = require('string_decoder');\x0d\nconst { watch } = require('internal/fs/watchers');\x0d\nconst { isIterable } = require('internal/streams/utils');\x0d\nconst assert = require('internal/assert');\x0d\n\x0d\nconst kHandle = Symbol('kHandle');\x0d\nconst kFd = Symbol('kFd');\x0d\nconst kRefs = Symbol('kRefs');\x0d\nconst kClosePromise = Symbol('kClosePromise');\x0d\nconst kCloseResolve = Symbol('kCloseResolve');\x0d\nconst kCloseReject = Symbol('kCloseReject');\x0d\nconst kRef = Symbol('kRef');\x0d\nconst kUnref = Symbol('kUnref');\x0d\nconst kLocked = Symbol('kLocked');\x0d\n\x0d\nconst { kUsePromises } = binding;\x0d\nconst { Interface } = require('internal/readline/interface');\x0d\nconst {\x0d\n  JSTransferable\x2C kDeserialize\x2C kTransfer\x2C kTransferList\x0d\n} = require('internal/worker/js_transferable');\x0d\n\x0d\nconst {\x0d\n  newReadableStreamFromStreamBase\x2C\x0d\n} = require('internal/webstreams/adapters');\x0d\n\x0d\nconst {\x0d\n  readableStreamCancel\x2C\x0d\n} = require('internal/webstreams/readablestream');\x0d\n\x0d\nconst getDirectoryEntriesPromise = promisify(getDirents);\x0d\nconst validateRmOptionsPromise = promisify(validateRmOptions);\x0d\n\x0d\nlet cpPromises;\x0d\nfunction lazyLoadCpPromises() {\x0d\n  return cpPromises ??= require('internal/fs/cp/cp').cpFn;\x0d\n}\x0d\n\x0d\n// Lazy loaded to avoid circular dependency.\x0d\nlet fsStreams;\x0d\nfunction lazyFsStreams() {\x0d\n  return fsStreams ??= require('internal/fs/streams');\x0d\n}\x0d\n\x0d\nclass FileHandle extends EventEmitterMixin(JSTransferable) {\x0d\n  /**\x0d\n   * @param {InternalFSBinding.FileHandle | undefined} filehandle\x0d\n   */\x0d\n  constructor(filehandle) {\x0d\n    super();\x0d\n    this[kHandle] = filehandle;\x0d\n    this[kFd] = filehandle ? filehandle.fd : -1;\x0d\n\x0d\n    this[kRefs] = 1;\x0d\n    this[kClosePromise] = null;\x0d\n  }\x0d\n\x0d\n  getAsyncId() {\x0d\n    return this[kHandle].getAsyncId();\x0d\n  }\x0d\n\x0d\n  get fd() {\x0d\n    return this[kFd];\x0d\n  }\x0d\n\x0d\n  appendFile(data\x2C options) {\x0d\n    return fsCall(writeFile\x2C this\x2C data\x2C options);\x0d\n  }\x0d\n\x0d\n  chmod(mode) {\x0d\n    return fsCall(fchmod\x2C this\x2C mode);\x0d\n  }\x0d\n\x0d\n  chown(uid\x2C gid) {\x0d\n    return fsCall(fchown\x2C this\x2C uid\x2C gid);\x0d\n  }\x0d\n\x0d\n  datasync() {\x0d\n    return fsCall(fdatasync\x2C this);\x0d\n  }\x0d\n\x0d\n  sync() {\x0d\n    return fsCall(fsync\x2C this);\x0d\n  }\x0d\n\x0d\n  read(buffer\x2C offset\x2C length\x2C position) {\x0d\n    return fsCall(read\x2C this\x2C buffer\x2C offset\x2C length\x2C position);\x0d\n  }\x0d\n\x0d\n  readv(buffers\x2C position) {\x0d\n    return fsCall(readv\x2C this\x2C buffers\x2C position);\x0d\n  }\x0d\n\x0d\n  readFile(options) {\x0d\n    return fsCall(readFile\x2C this\x2C options);\x0d\n  }\x0d\n\x0d\n  readLines(options = undefined) {\x0d\n    return new Interface({\x0d\n      input: this.createReadStream(options)\x2C\x0d\n      crlfDelay: Infinity\x2C\x0d\n    });\x0d\n  }\x0d\n\x0d\n  stat(options) {\x0d\n    return fsCall(fstat\x2C this\x2C options);\x0d\n  }\x0d\n\x0d\n  truncate(len = 0) {\x0d\n    return fsCall(ftruncate\x2C this\x2C len);\x0d\n  }\x0d\n\x0d\n  utimes(atime\x2C mtime) {\x0d\n    return fsCall(futimes\x2C this\x2C atime\x2C mtime);\x0d\n  }\x0d\n\x0d\n  write(buffer\x2C offset\x2C length\x2C position) {\x0d\n    return fsCall(write\x2C this\x2C buffer\x2C offset\x2C length\x2C position);\x0d\n  }\x0d\n\x0d\n  writev(buffers\x2C position) {\x0d\n    return fsCall(writev\x2C this\x2C buffers\x2C position);\x0d\n  }\x0d\n\x0d\n  writeFile(data\x2C options) {\x0d\n    return fsCall(writeFile\x2C this\x2C data\x2C options);\x0d\n  }\x0d\n\x0d\n  close = () => {\x0d\n    if (this[kFd] === -1) {\x0d\n      return PromiseResolve();\x0d\n    }\x0d\n\x0d\n    if (this[kClosePromise]) {\x0d\n      return this[kClosePromise];\x0d\n    }\x0d\n\x0d\n    this[kRefs]--;\x0d\n    if (this[kRefs] === 0) {\x0d\n      this[kFd] = -1;\x0d\n      this[kClosePromise] = SafePromisePrototypeFinally(\x0d\n        this[kHandle].close()\x2C\x0d\n        () => { this[kClosePromise] = undefined; }\x0d\n      );\x0d\n    } else {\x0d\n      this[kClosePromise] = SafePromisePrototypeFinally(\x0d\n        new Promise((resolve\x2C reject) => {\x0d\n          this[kCloseResolve] = resolve;\x0d\n          this[kCloseReject] = reject;\x0d\n        })\x2C () => {\x0d\n          this[kClosePromise] = undefined;\x0d\n          this[kCloseReject] = undefined;\x0d\n          this[kCloseResolve] = undefined;\x0d\n        }\x0d\n      );\x0d\n    }\x0d\n\x0d\n    this.emit('close');\x0d\n    return this[kClosePromise];\x0d\n  };\x0d\n\x0d\n  /**\x0d\n   * @typedef {import('../webstreams/readablestream').ReadableStream\x0d\n   * } ReadableStream\x0d\n   * @returns {ReadableStream}\x0d\n   */\x0d\n  readableWebStream() {\x0d\n    if (this[kFd] === -1)\x0d\n      throw new ERR_INVALID_STATE('The FileHandle is closed');\x0d\n    if (this[kClosePromise])\x0d\n      throw new ERR_INVALID_STATE('The FileHandle is closing');\x0d\n    if (this[kLocked])\x0d\n      throw new ERR_INVALID_STATE('The FileHandle is locked');\x0d\n    this[kLocked] = true;\x0d\n\x0d\n    const readable = newReadableStreamFromStreamBase(\x0d\n      this[kHandle]\x2C\x0d\n      undefined\x2C\x0d\n      { ondone: () => this[kUnref]() });\x0d\n\x0d\n    this[kRef]();\x0d\n    this.once('close'\x2C () => {\x0d\n      readableStreamCancel(readable);\x0d\n    });\x0d\n\x0d\n    return readable;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @typedef {import('./streams').ReadStream\x0d\n   * } ReadStream\x0d\n   * @param {{\x0d\n   *   encoding?: string;\x0d\n   *   autoClose?: boolean;\x0d\n   *   emitClose?: boolean;\x0d\n   *   start: number;\x0d\n   *   end?: number;\x0d\n   *   highWaterMark?: number;\x0d\n   *   }} [options]\x0d\n   * @returns {ReadStream}\x0d\n   */\x0d\n  createReadStream(options = undefined) {\x0d\n    const { ReadStream } = lazyFsStreams();\x0d\n    return new ReadStream(undefined\x2C { ...options\x2C fd: this });\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @typedef {import('./streams').WriteStream\x0d\n   * } WriteStream\x0d\n   * @param {{\x0d\n   *   encoding?: string;\x0d\n   *   autoClose?: boolean;\x0d\n   *   emitClose?: boolean;\x0d\n   *   start: number;\x0d\n   *   }} [options]\x0d\n   * @returns {WriteStream}\x0d\n   */\x0d\n  createWriteStream(options = undefined) {\x0d\n    const { WriteStream } = lazyFsStreams();\x0d\n    return new WriteStream(undefined\x2C { ...options\x2C fd: this });\x0d\n  }\x0d\n\x0d\n  [kTransfer]() {\x0d\n    if (this[kClosePromise] || this[kRefs] > 1) {\x0d\n      throw lazyDOMException('Cannot transfer FileHandle while in use'\x2C\x0d\n                             'DataCloneError');\x0d\n    }\x0d\n\x0d\n    const handle = this[kHandle];\x0d\n    this[kFd] = -1;\x0d\n    this[kHandle] = null;\x0d\n    this[kRefs] = 0;\x0d\n\x0d\n    return {\x0d\n      data: { handle }\x2C\x0d\n      deserializeInfo: 'internal/fs/promises:FileHandle'\x0d\n    };\x0d\n  }\x0d\n\x0d\n  [kTransferList]() {\x0d\n    return [ this[kHandle] ];\x0d\n  }\x0d\n\x0d\n  [kDeserialize]({ handle }) {\x0d\n    this[kHandle] = handle;\x0d\n    this[kFd] = handle.fd;\x0d\n  }\x0d\n\x0d\n  [kRef]() {\x0d\n    this[kRefs]++;\x0d\n  }\x0d\n\x0d\n  [kUnref]() {\x0d\n    this[kRefs]--;\x0d\n    if (this[kRefs] === 0) {\x0d\n      this[kFd] = -1;\x0d\n      PromisePrototypeThen(\x0d\n        this[kHandle].close()\x2C\x0d\n        this[kCloseResolve]\x2C\x0d\n        this[kCloseReject]\x0d\n      );\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\nasync function handleFdClose(fileOpPromise\x2C closeFunc) {\x0d\n  return PromisePrototypeThen(\x0d\n    fileOpPromise\x2C\x0d\n    (result) => PromisePrototypeThen(closeFunc()\x2C () => result)\x2C\x0d\n    (opError) =>\x0d\n      PromisePrototypeThen(\x0d\n        closeFunc()\x2C\x0d\n        () => PromiseReject(opError)\x2C\x0d\n        (closeError) => PromiseReject(aggregateTwoErrors(closeError\x2C opError))\x0d\n      )\x0d\n  );\x0d\n}\x0d\n\x0d\nasync function fsCall(fn\x2C handle\x2C ...args) {\x0d\n  assert(handle[kRefs] !== undefined\x2C\x0d\n         'handle must be an instance of FileHandle');\x0d\n\x0d\n  if (handle.fd === -1) {\x0d\n    // eslint-disable-next-line no-restricted-syntax\x0d\n    const err = new Error('file closed');\x0d\n    err.code = 'EBADF';\x0d\n    err.syscall = fn.name;\x0d\n    throw err;\x0d\n  }\x0d\n\x0d\n  try {\x0d\n    handle[kRef]();\x0d\n    return await fn(handle\x2C ...new SafeArrayIterator(args));\x0d\n  } finally {\x0d\n    handle[kUnref]();\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction checkAborted(signal) {\x0d\n  if (signal?.aborted)\x0d\n    throw new AbortError(undefined\x2C { cause: signal?.reason });\x0d\n}\x0d\n\x0d\nasync function writeFileHandle(filehandle\x2C data\x2C signal\x2C encoding) {\x0d\n  checkAborted(signal);\x0d\n  if (isCustomIterable(data)) {\x0d\n    for await (const buf of data) {\x0d\n      checkAborted(signal);\x0d\n      const toWrite =\x0d\n        isArrayBufferView(buf) ? buf : Buffer.from(buf\x2C encoding || 'utf8');\x0d\n      let remaining = toWrite.byteLength;\x0d\n      while (remaining > 0) {\x0d\n        const writeSize = MathMin(kWriteFileMaxChunkSize\x2C remaining);\x0d\n        const { bytesWritten } = await write(\x0d\n          filehandle\x2C toWrite\x2C toWrite.byteLength - remaining\x2C writeSize);\x0d\n        remaining -= bytesWritten;\x0d\n        checkAborted(signal);\x0d\n      }\x0d\n    }\x0d\n    return;\x0d\n  }\x0d\n  data = new Uint8Array(data.buffer\x2C data.byteOffset\x2C data.byteLength);\x0d\n  let remaining = data.byteLength;\x0d\n  if (remaining === 0) return;\x0d\n  do {\x0d\n    checkAborted(signal);\x0d\n    const { bytesWritten } =\x0d\n      await write(filehandle\x2C data\x2C 0\x2C\x0d\n                  MathMin(kWriteFileMaxChunkSize\x2C data.byteLength));\x0d\n    remaining -= bytesWritten;\x0d\n    data = new Uint8Array(\x0d\n      data.buffer\x2C\x0d\n      data.byteOffset + bytesWritten\x2C\x0d\n      data.byteLength - bytesWritten\x0d\n    );\x0d\n  } while (remaining > 0);\x0d\n}\x0d\n\x0d\nasync function readFileHandle(filehandle\x2C options) {\x0d\n  const signal = options?.signal;\x0d\n  const encoding = options?.encoding;\x0d\n  const decoder = encoding && new StringDecoder(encoding);\x0d\n\x0d\n  checkAborted(signal);\x0d\n\x0d\n  const statFields = await binding.fstat(filehandle.fd\x2C false\x2C kUsePromises);\x0d\n\x0d\n  checkAborted(signal);\x0d\n\x0d\n  let size = 0;\x0d\n  let length = 0;\x0d\n  if ((statFields[1/* mode */] & S_IFMT) === S_IFREG) {\x0d\n    size = statFields[8/* size */];\x0d\n    length = encoding ? MathMin(size\x2C kReadFileBufferLength) : size;\x0d\n  }\x0d\n  if (length === 0) {\x0d\n    length = kReadFileUnknownBufferLength;\x0d\n  }\x0d\n\x0d\n  if (size > kIoMaxLength)\x0d\n    throw new ERR_FS_FILE_TOO_LARGE(size);\x0d\n\x0d\n  let totalRead = 0;\x0d\n  let buffer = Buffer.allocUnsafeSlow(length);\x0d\n  let result = '';\x0d\n  let offset = 0;\x0d\n  let buffers;\x0d\n  const chunkedRead = length > kReadFileBufferLength;\x0d\n\x0d\n  while (true) {\x0d\n    checkAborted(signal);\x0d\n\x0d\n    if (chunkedRead) {\x0d\n      length = MathMin(size - totalRead\x2C kReadFileBufferLength);\x0d\n    }\x0d\n\x0d\n    const bytesRead = (await binding.read(filehandle.fd\x2C buffer\x2C offset\x2C\x0d\n                                          length\x2C -1\x2C kUsePromises)) ?? 0;\x0d\n    totalRead += bytesRead;\x0d\n\x0d\n    if (bytesRead === 0 ||\x0d\n        totalRead === size ||\x0d\n        (bytesRead !== buffer.length && !chunkedRead)) {\x0d\n      const singleRead = bytesRead === totalRead;\x0d\n\x0d\n      const bytesToCheck = chunkedRead ? totalRead : bytesRead;\x0d\n\x0d\n      if (bytesToCheck !== buffer.length) {\x0d\n        buffer = buffer.subarray(0\x2C bytesToCheck);\x0d\n      }\x0d\n\x0d\n      if (!encoding) {\x0d\n        if (size === 0 && !singleRead) {\x0d\n          ArrayPrototypePush(buffers\x2C buffer);\x0d\n          return Buffer.concat(buffers\x2C totalRead);\x0d\n        }\x0d\n        return buffer;\x0d\n      }\x0d\n\x0d\n      if (singleRead) {\x0d\n        return buffer.toString(encoding);\x0d\n      }\x0d\n      result += decoder.end(buffer);\x0d\n      return result;\x0d\n    }\x0d\n\x0d\n    if (encoding) {\x0d\n      result += decoder.write(buffer);\x0d\n    } else if (size !== 0) {\x0d\n      offset = totalRead;\x0d\n    } else {\x0d\n      buffers ??= [];\x0d\n      // Unknown file size requires chunks.\x0d\n      ArrayPrototypePush(buffers\x2C buffer);\x0d\n      buffer = Buffer.allocUnsafeSlow(kReadFileUnknownBufferLength);\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\n// All of the functions are defined as async in order to ensure that errors\x0d\n// thrown cause promise rejections rather than being thrown synchronously.\x0d\nasync function access(path\x2C mode = F_OK) {\x0d\n  path = getValidatedPath(path);\x0d\n\x0d\n  mode = getValidMode(mode\x2C 'access');\x0d\n  return binding.access(pathModule.toNamespacedPath(path)\x2C mode\x2C\x0d\n                        kUsePromises);\x0d\n}\x0d\n\x0d\nasync function cp(src\x2C dest\x2C options) {\x0d\n  options = validateCpOptions(options);\x0d\n  src = pathModule.toNamespacedPath(getValidatedPath(src\x2C 'src'));\x0d\n  dest = pathModule.toNamespacedPath(getValidatedPath(dest\x2C 'dest'));\x0d\n  return lazyLoadCpPromises()(src\x2C dest\x2C options);\x0d\n}\x0d\n\x0d\nasync function copyFile(src\x2C dest\x2C mode) {\x0d\n  src = getValidatedPath(src\x2C 'src');\x0d\n  dest = getValidatedPath(dest\x2C 'dest');\x0d\n  mode = getValidMode(mode\x2C 'copyFile');\x0d\n  return binding.copyFile(pathModule.toNamespacedPath(src)\x2C\x0d\n                          pathModule.toNamespacedPath(dest)\x2C\x0d\n                          mode\x2C\x0d\n                          kUsePromises);\x0d\n}\x0d\n\x0d\n// Note that unlike fs.open() which uses numeric file descriptors\x2C\x0d\n// fsPromises.open() uses the fs.FileHandle class.\x0d\nasync function open(path\x2C flags\x2C mode) {\x0d\n  path = getValidatedPath(path);\x0d\n  const flagsNumber = stringToFlags(flags);\x0d\n  mode = parseFileMode(mode\x2C 'mode'\x2C 0o666);\x0d\n  return new FileHandle(\x0d\n    await binding.openFileHandle(pathModule.toNamespacedPath(path)\x2C\x0d\n                                 flagsNumber\x2C mode\x2C kUsePromises));\x0d\n}\x0d\n\x0d\nasync function read(handle\x2C bufferOrParams\x2C offset\x2C length\x2C position) {\x0d\n  let buffer = bufferOrParams;\x0d\n  if (!isArrayBufferView(buffer)) {\x0d\n    // This is fh.read(params)\x0d\n    ({\x0d\n      buffer = Buffer.alloc(16384)\x2C\x0d\n      offset = 0\x2C\x0d\n      length = buffer.byteLength - offset\x2C\x0d\n      position = null\x2C\x0d\n    } = bufferOrParams ?? kEmptyObject);\x0d\n\x0d\n    validateBuffer(buffer);\x0d\n  }\x0d\n\x0d\n  if (offset !== null && typeof offset === 'object') {\x0d\n    // This is fh.read(buffer\x2C options)\x0d\n    ({\x0d\n      offset = 0\x2C\x0d\n      length = buffer.byteLength - offset\x2C\x0d\n      position = null\x2C\x0d\n    } = offset);\x0d\n  }\x0d\n\x0d\n  if (offset == null) {\x0d\n    offset = 0;\x0d\n  } else {\x0d\n    validateInteger(offset\x2C 'offset'\x2C 0);\x0d\n  }\x0d\n\x0d\n  length |= 0;\x0d\n\x0d\n  if (length === 0)\x0d\n    return { bytesRead: length\x2C buffer };\x0d\n\x0d\n  if (buffer.byteLength === 0) {\x0d\n    throw new ERR_INVALID_ARG_VALUE('buffer'\x2C buffer\x2C\x0d\n                                    'is empty and cannot be written');\x0d\n  }\x0d\n\x0d\n  validateOffsetLengthRead(offset\x2C length\x2C buffer.byteLength);\x0d\n\x0d\n  if (!NumberIsSafeInteger(position))\x0d\n    position = -1;\x0d\n\x0d\n  const bytesRead = (await binding.read(handle.fd\x2C buffer\x2C offset\x2C length\x2C\x0d\n                                        position\x2C kUsePromises)) || 0;\x0d\n\x0d\n  return { bytesRead\x2C buffer };\x0d\n}\x0d\n\x0d\nasync function readv(handle\x2C buffers\x2C position) {\x0d\n  validateBufferArray(buffers);\x0d\n\x0d\n  if (typeof position !== 'number')\x0d\n    position = null;\x0d\n\x0d\n  const bytesRead = (await binding.readBuffers(handle.fd\x2C buffers\x2C position\x2C\x0d\n                                               kUsePromises)) || 0;\x0d\n  return { bytesRead\x2C buffers };\x0d\n}\x0d\n\x0d\nasync function write(handle\x2C buffer\x2C offsetOrOptions\x2C length\x2C position) {\x0d\n  if (buffer?.byteLength === 0)\x0d\n    return { bytesWritten: 0\x2C buffer };\x0d\n\x0d\n  let offset = offsetOrOptions;\x0d\n  if (isArrayBufferView(buffer)) {\x0d\n    if (typeof offset === 'object') {\x0d\n      ({\x0d\n        offset = 0\x2C\x0d\n        length = buffer.byteLength - offset\x2C\x0d\n        position = null\x2C\x0d\n      } = offsetOrOptions ?? kEmptyObject);\x0d\n    }\x0d\n\x0d\n    if (offset == null) {\x0d\n      offset = 0;\x0d\n    } else {\x0d\n      validateInteger(offset\x2C 'offset'\x2C 0);\x0d\n    }\x0d\n    if (typeof length !== 'number')\x0d\n      length = buffer.byteLength - offset;\x0d\n    if (typeof position !== 'number')\x0d\n      position = null;\x0d\n    validateOffsetLengthWrite(offset\x2C length\x2C buffer.byteLength);\x0d\n    const bytesWritten =\x0d\n      (await binding.writeBuffer(handle.fd\x2C buffer\x2C offset\x2C\x0d\n                                 length\x2C position\x2C kUsePromises)) || 0;\x0d\n    return { bytesWritten\x2C buffer };\x0d\n  }\x0d\n\x0d\n  validatePrimitiveStringAfterArrayBufferView(buffer\x2C 'buffer');\x0d\n  validateEncoding(buffer\x2C length);\x0d\n  const bytesWritten = (await binding.writeString(handle.fd\x2C buffer\x2C offset\x2C\x0d\n                                                  length\x2C kUsePromises)) || 0;\x0d\n  return { bytesWritten\x2C buffer };\x0d\n}\x0d\n\x0d\nasync function writev(handle\x2C buffers\x2C position) {\x0d\n  validateBufferArray(buffers);\x0d\n\x0d\n  if (typeof position !== 'number')\x0d\n    position = null;\x0d\n\x0d\n  if (buffers.length === 0) {\x0d\n    return { bytesWritten: 0\x2C buffers };\x0d\n  }\x0d\n\x0d\n  const bytesWritten = (await binding.writeBuffers(handle.fd\x2C buffers\x2C position\x2C\x0d\n                                                   kUsePromises)) || 0;\x0d\n  return { bytesWritten\x2C buffers };\x0d\n}\x0d\n\x0d\nasync function rename(oldPath\x2C newPath) {\x0d\n  oldPath = getValidatedPath(oldPath\x2C 'oldPath');\x0d\n  newPath = getValidatedPath(newPath\x2C 'newPath');\x0d\n  return binding.rename(pathModule.toNamespacedPath(oldPath)\x2C\x0d\n                        pathModule.toNamespacedPath(newPath)\x2C\x0d\n                        kUsePromises);\x0d\n}\x0d\n\x0d\nasync function truncate(path\x2C len = 0) {\x0d\n  const fd = await open(path\x2C 'r+');\x0d\n  return handleFdClose(ftruncate(fd\x2C len)\x2C fd.close);\x0d\n}\x0d\n\x0d\nasync function ftruncate(handle\x2C len = 0) {\x0d\n  validateInteger(len\x2C 'len');\x0d\n  len = MathMax(0\x2C len);\x0d\n  return binding.ftruncate(handle.fd\x2C len\x2C kUsePromises);\x0d\n}\x0d\n\x0d\nasync function rm(path\x2C options) {\x0d\n  path = pathModule.toNamespacedPath(getValidatedPath(path));\x0d\n  options = await validateRmOptionsPromise(path\x2C options\x2C false);\x0d\n  return rimrafPromises(path\x2C options);\x0d\n}\x0d\n\x0d\nasync function rmdir(path\x2C options) {\x0d\n  path = pathModule.toNamespacedPath(getValidatedPath(path));\x0d\n  options = validateRmdirOptions(options);\x0d\n\x0d\n  if (options.recursive) {\x0d\n    emitRecursiveRmdirWarning();\x0d\n    const stats = await stat(path);\x0d\n    if (stats.isDirectory()) {\x0d\n      return rimrafPromises(path\x2C options);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return binding.rmdir(path\x2C kUsePromises);\x0d\n}\x0d\n\x0d\nasync function fdatasync(handle) {\x0d\n  return binding.fdatasync(handle.fd\x2C kUsePromises);\x0d\n}\x0d\n\x0d\nasync function fsync(handle) {\x0d\n  return binding.fsync(handle.fd\x2C kUsePromises);\x0d\n}\x0d\n\x0d\nasync function mkdir(path\x2C options) {\x0d\n  if (typeof options === 'number' || typeof options === 'string') {\x0d\n    options = { mode: options };\x0d\n  }\x0d\n  const {\x0d\n    recursive = false\x2C\x0d\n    mode = 0o777\x0d\n  } = options || kEmptyObject;\x0d\n  path = getValidatedPath(path);\x0d\n  validateBoolean(recursive\x2C 'options.recursive');\x0d\n\x0d\n  return binding.mkdir(pathModule.toNamespacedPath(path)\x2C\x0d\n                       parseFileMode(mode\x2C 'mode'\x2C 0o777)\x2C recursive\x2C\x0d\n                       kUsePromises);\x0d\n}\x0d\n\x0d\nasync function readdir(path\x2C options) {\x0d\n  options = getOptions(options);\x0d\n  path = getValidatedPath(path);\x0d\n  const result = await binding.readdir(pathModule.toNamespacedPath(path)\x2C\x0d\n                                       options.encoding\x2C\x0d\n                                       !!options.withFileTypes\x2C\x0d\n                                       kUsePromises);\x0d\n  return options.withFileTypes ?\x0d\n    getDirectoryEntriesPromise(path\x2C result) :\x0d\n    result;\x0d\n}\x0d\n\x0d\nasync function readlink(path\x2C options) {\x0d\n  options = getOptions(options);\x0d\n  path = getValidatedPath(path\x2C 'oldPath');\x0d\n  return binding.readlink(pathModule.toNamespacedPath(path)\x2C\x0d\n                          options.encoding\x2C kUsePromises);\x0d\n}\x0d\n\x0d\nasync function symlink(target\x2C path\x2C type_) {\x0d\n  const type = (typeof type_ === 'string' ? type_ : null);\x0d\n  target = getValidatedPath(target\x2C 'target');\x0d\n  path = getValidatedPath(path);\x0d\n  return binding.symlink(preprocessSymlinkDestination(target\x2C type\x2C path)\x2C\x0d\n                         pathModule.toNamespacedPath(path)\x2C\x0d\n                         stringToSymlinkType(type)\x2C\x0d\n                         kUsePromises);\x0d\n}\x0d\n\x0d\nasync function fstat(handle\x2C options = { bigint: false }) {\x0d\n  const result = await binding.fstat(handle.fd\x2C options.bigint\x2C kUsePromises);\x0d\n  return getStatsFromBinding(result);\x0d\n}\x0d\n\x0d\nasync function lstat(path\x2C options = { bigint: false }) {\x0d\n  path = getValidatedPath(path);\x0d\n  const result = await binding.lstat(pathModule.toNamespacedPath(path)\x2C\x0d\n                                     options.bigint\x2C kUsePromises);\x0d\n  return getStatsFromBinding(result);\x0d\n}\x0d\n\x0d\nasync function stat(path\x2C options = { bigint: false }) {\x0d\n  path = getValidatedPath(path);\x0d\n  const result = await binding.stat(pathModule.toNamespacedPath(path)\x2C\x0d\n                                    options.bigint\x2C kUsePromises);\x0d\n  return getStatsFromBinding(result);\x0d\n}\x0d\n\x0d\nasync function link(existingPath\x2C newPath) {\x0d\n  existingPath = getValidatedPath(existingPath\x2C 'existingPath');\x0d\n  newPath = getValidatedPath(newPath\x2C 'newPath');\x0d\n  return binding.link(pathModule.toNamespacedPath(existingPath)\x2C\x0d\n                      pathModule.toNamespacedPath(newPath)\x2C\x0d\n                      kUsePromises);\x0d\n}\x0d\n\x0d\nasync function unlink(path) {\x0d\n  path = getValidatedPath(path);\x0d\n  return binding.unlink(pathModule.toNamespacedPath(path)\x2C kUsePromises);\x0d\n}\x0d\n\x0d\nasync function fchmod(handle\x2C mode) {\x0d\n  mode = parseFileMode(mode\x2C 'mode');\x0d\n  return binding.fchmod(handle.fd\x2C mode\x2C kUsePromises);\x0d\n}\x0d\n\x0d\nasync function chmod(path\x2C mode) {\x0d\n  path = getValidatedPath(path);\x0d\n  mode = parseFileMode(mode\x2C 'mode');\x0d\n  return binding.chmod(pathModule.toNamespacedPath(path)\x2C mode\x2C kUsePromises);\x0d\n}\x0d\n\x0d\nasync function lchmod(path\x2C mode) {\x0d\n  if (O_SYMLINK === undefined)\x0d\n    throw new ERR_METHOD_NOT_IMPLEMENTED('lchmod()');\x0d\n\x0d\n  const fd = await open(path\x2C O_WRONLY | O_SYMLINK);\x0d\n  return handleFdClose(fchmod(fd\x2C mode)\x2C fd.close);\x0d\n}\x0d\n\x0d\nasync function lchown(path\x2C uid\x2C gid) {\x0d\n  path = getValidatedPath(path);\x0d\n  validateInteger(uid\x2C 'uid'\x2C -1\x2C kMaxUserId);\x0d\n  validateInteger(gid\x2C 'gid'\x2C -1\x2C kMaxUserId);\x0d\n  return binding.lchown(pathModule.toNamespacedPath(path)\x2C\x0d\n                        uid\x2C gid\x2C kUsePromises);\x0d\n}\x0d\n\x0d\nasync function fchown(handle\x2C uid\x2C gid) {\x0d\n  validateInteger(uid\x2C 'uid'\x2C -1\x2C kMaxUserId);\x0d\n  validateInteger(gid\x2C 'gid'\x2C -1\x2C kMaxUserId);\x0d\n  return binding.fchown(handle.fd\x2C uid\x2C gid\x2C kUsePromises);\x0d\n}\x0d\n\x0d\nasync function chown(path\x2C uid\x2C gid) {\x0d\n  path = getValidatedPath(path);\x0d\n  validateInteger(uid\x2C 'uid'\x2C -1\x2C kMaxUserId);\x0d\n  validateInteger(gid\x2C 'gid'\x2C -1\x2C kMaxUserId);\x0d\n  return binding.chown(pathModule.toNamespacedPath(path)\x2C\x0d\n                       uid\x2C gid\x2C kUsePromises);\x0d\n}\x0d\n\x0d\nasync function utimes(path\x2C atime\x2C mtime) {\x0d\n  path = getValidatedPath(path);\x0d\n  return binding.utimes(pathModule.toNamespacedPath(path)\x2C\x0d\n                        toUnixTimestamp(atime)\x2C\x0d\n                        toUnixTimestamp(mtime)\x2C\x0d\n                        kUsePromises);\x0d\n}\x0d\n\x0d\nasync function futimes(handle\x2C atime\x2C mtime) {\x0d\n  atime = toUnixTimestamp(atime\x2C 'atime');\x0d\n  mtime = toUnixTimestamp(mtime\x2C 'mtime');\x0d\n  return binding.futimes(handle.fd\x2C atime\x2C mtime\x2C kUsePromises);\x0d\n}\x0d\n\x0d\nasync function lutimes(path\x2C atime\x2C mtime) {\x0d\n  path = getValidatedPath(path);\x0d\n  return binding.lutimes(pathModule.toNamespacedPath(path)\x2C\x0d\n                         toUnixTimestamp(atime)\x2C\x0d\n                         toUnixTimestamp(mtime)\x2C\x0d\n                         kUsePromises);\x0d\n}\x0d\n\x0d\nasync function realpath(path\x2C options) {\x0d\n  options = getOptions(options);\x0d\n  path = getValidatedPath(path);\x0d\n  return binding.realpath(path\x2C options.encoding\x2C kUsePromises);\x0d\n}\x0d\n\x0d\nasync function mkdtemp(prefix\x2C options) {\x0d\n  options = getOptions(options);\x0d\n\x0d\n  validateString(prefix\x2C 'prefix');\x0d\n  nullCheck(prefix);\x0d\n  warnOnNonPortableTemplate(prefix);\x0d\n  return binding.mkdtemp(`${prefix}XXXXXX`\x2C options.encoding\x2C kUsePromises);\x0d\n}\x0d\n\x0d\nasync function writeFile(path\x2C data\x2C options) {\x0d\n  options = getOptions(options\x2C { encoding: 'utf8'\x2C mode: 0o666\x2C flag: 'w' });\x0d\n  const flag = options.flag || 'w';\x0d\n\x0d\n  if (!isArrayBufferView(data) && !isCustomIterable(data)) {\x0d\n    validatePrimitiveStringAfterArrayBufferView(data\x2C 'data');\x0d\n    data = Buffer.from(data\x2C options.encoding || 'utf8');\x0d\n  }\x0d\n\x0d\n  validateAbortSignal(options.signal);\x0d\n  if (path instanceof FileHandle)\x0d\n    return writeFileHandle(path\x2C data\x2C options.signal\x2C options.encoding);\x0d\n\x0d\n  checkAborted(options.signal);\x0d\n\x0d\n  const fd = await open(path\x2C flag\x2C options.mode);\x0d\n  return handleFdClose(\x0d\n    writeFileHandle(fd\x2C data\x2C options.signal\x2C options.encoding)\x2C fd.close);\x0d\n}\x0d\n\x0d\nfunction isCustomIterable(obj) {\x0d\n  return isIterable(obj) && !isArrayBufferView(obj) && typeof obj !== 'string';\x0d\n}\x0d\n\x0d\nasync function appendFile(path\x2C data\x2C options) {\x0d\n  options = getOptions(options\x2C { encoding: 'utf8'\x2C mode: 0o666\x2C flag: 'a' });\x0d\n  options = copyObject(options);\x0d\n  options.flag = options.flag || 'a';\x0d\n  return writeFile(path\x2C data\x2C options);\x0d\n}\x0d\n\x0d\nasync function readFile(path\x2C options) {\x0d\n  options = getOptions(options\x2C { flag: 'r' });\x0d\n  const flag = options.flag || 'r';\x0d\n\x0d\n  if (path instanceof FileHandle)\x0d\n    return readFileHandle(path\x2C options);\x0d\n\x0d\n  checkAborted(options.signal);\x0d\n\x0d\n  const fd = await open(path\x2C flag\x2C 0o666);\x0d\n  return handleFdClose(readFileHandle(fd\x2C options)\x2C fd.close);\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  exports: {\x0d\n    access\x2C\x0d\n    copyFile\x2C\x0d\n    cp\x2C\x0d\n    open\x2C\x0d\n    opendir: promisify(opendir)\x2C\x0d\n    rename\x2C\x0d\n    truncate\x2C\x0d\n    rm\x2C\x0d\n    rmdir\x2C\x0d\n    mkdir\x2C\x0d\n    readdir\x2C\x0d\n    readlink\x2C\x0d\n    symlink\x2C\x0d\n    lstat\x2C\x0d\n    stat\x2C\x0d\n    link\x2C\x0d\n    unlink\x2C\x0d\n    chmod\x2C\x0d\n    lchmod\x2C\x0d\n    lchown\x2C\x0d\n    chown\x2C\x0d\n    utimes\x2C\x0d\n    lutimes\x2C\x0d\n    realpath\x2C\x0d\n    mkdtemp\x2C\x0d\n    writeFile\x2C\x0d\n    appendFile\x2C\x0d\n    readFile\x2C\x0d\n    watch\x2C\x0d\n    constants\x2C\x0d\n  }\x2C\x0d\n\x0d\n  FileHandle\x2C\x0d\n  kRef\x2C\x0d\n  kUnref\x2C\x0d\n};\x0d\n
code-source-info,0x2a6f0b9ba88,466,0,26227,C0O0C4O26227,,
code-creation,Function,10,332079,0x2a6f0b9e340,1880, node:internal/fs/promises:1:1,0x2a6f0b9ba00,~
code-source-info,0x2a6f0b9e
code-creation,Function,10,332349,0x2a6f0b9ee08,19,<instance_members_initializer> node:internal/fs/promises:132:1,0x2a6f0b9d150,~
code-source-info,0x2a6f0b9ee08,466,3276,8319,C0O3276C9O5022C18O8319,,
code-creation,Eval,10,332889,0x2a6f0ba1c50,5, node:internal/fs/rimraf:1:1,0x2a6f0ba18e8,~
script-source,467,node:internal/fs/rimraf,// This file is a modified version of the rimraf module on npm. It has been\x0d\n// modified in the following ways:\x0d\n// - Use of the assert module has been replaced with core's error system.\x0d\n// - All code related to the glob dependency has been removed.\x0d\n// - Bring your own custom fs module is not currently supported.\x0d\n// - Some basic code cleanup.\x0d\n'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeForEach\x2C\x0d\n  Promise\x2C\x0d\n  SafeSet\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst { Buffer } = require('buffer');\x0d\nconst fs = require('fs');\x0d\nconst {\x0d\n  chmod\x2C\x0d\n  chmodSync\x2C\x0d\n  lstat\x2C\x0d\n  lstatSync\x2C\x0d\n  readdir\x2C\x0d\n  readdirSync\x2C\x0d\n  rmdir\x2C\x0d\n  rmdirSync\x2C\x0d\n  stat\x2C\x0d\n  statSync\x2C\x0d\n  unlink\x2C\x0d\n  unlinkSync\x0d\n} = fs;\x0d\nconst { sep } = require('path');\x0d\nconst { setTimeout } = require('timers');\x0d\nconst { sleep } = require('internal/util');\x0d\nconst notEmptyErrorCodes = new SafeSet(['ENOTEMPTY'\x2C 'EEXIST'\x2C 'EPERM']);\x0d\nconst retryErrorCodes = new SafeSet(\x0d\n  ['EBUSY'\x2C 'EMFILE'\x2C 'ENFILE'\x2C 'ENOTEMPTY'\x2C 'EPERM']);\x0d\nconst isWindows = process.platform === 'win32';\x0d\nconst epermHandler = isWindows ? fixWinEPERM : _rmdir;\x0d\nconst epermHandlerSync = isWindows ? fixWinEPERMSync : _rmdirSync;\x0d\nconst readdirEncoding = 'buffer';\x0d\nconst separator = Buffer.from(sep);\x0d\n\x0d\n\x0d\nfunction rimraf(path\x2C options\x2C callback) {\x0d\n  let retries = 0;\x0d\n\x0d\n  _rimraf(path\x2C options\x2C function CB(err) {\x0d\n    if (err) {\x0d\n      if (retryErrorCodes.has(err.code) && retries < options.maxRetries) {\x0d\n        retries++;\x0d\n        const delay = retries * options.retryDelay;\x0d\n        return setTimeout(_rimraf\x2C delay\x2C path\x2C options\x2C CB);\x0d\n      }\x0d\n\x0d\n      // The file is already gone.\x0d\n      if (err.code === 'ENOENT')\x0d\n        err = null;\x0d\n    }\x0d\n\x0d\n    callback(err);\x0d\n  });\x0d\n}\x0d\n\x0d\n\x0d\nfunction _rimraf(path\x2C options\x2C callback) {\x0d\n  // SunOS lets the root user unlink directories. Use lstat here to make sure\x0d\n  // it's not a directory.\x0d\n  lstat(path\x2C (err\x2C stats) => {\x0d\n    if (err) {\x0d\n      if (err.code === 'ENOENT')\x0d\n        return callback(null);\x0d\n\x0d\n      // Windows can EPERM on stat.\x0d\n      if (isWindows && err.code === 'EPERM')\x0d\n        return fixWinEPERM(path\x2C options\x2C err\x2C callback);\x0d\n    } else if (stats.isDirectory()) {\x0d\n      return _rmdir(path\x2C options\x2C err\x2C callback);\x0d\n    }\x0d\n\x0d\n    unlink(path\x2C (err) => {\x0d\n      if (err) {\x0d\n        if (err.code === 'ENOENT')\x0d\n          return callback(null);\x0d\n        if (err.code === 'EISDIR')\x0d\n          return _rmdir(path\x2C options\x2C err\x2C callback);\x0d\n        if (err.code === 'EPERM') {\x0d\n          return epermHandler(path\x2C options\x2C err\x2C callback);\x0d\n        }\x0d\n      }\x0d\n\x0d\n      return callback(err);\x0d\n    });\x0d\n  });\x0d\n}\x0d\n\x0d\n\x0d\nfunction fixWinEPERM(path\x2C options\x2C originalErr\x2C callback) {\x0d\n  chmod(path\x2C 0o666\x2C (err) => {\x0d\n    if (err)\x0d\n      return callback(err.code === 'ENOENT' ? null : originalErr);\x0d\n\x0d\n    stat(path\x2C (err\x2C stats) => {\x0d\n      if (err)\x0d\n        return callback(err.code === 'ENOENT' ? null : originalErr);\x0d\n\x0d\n      if (stats.isDirectory())\x0d\n        _rmdir(path\x2C options\x2C originalErr\x2C callback);\x0d\n      else\x0d\n        unlink(path\x2C callback);\x0d\n    });\x0d\n  });\x0d\n}\x0d\n\x0d\n\x0d\nfunction _rmdir(path\x2C options\x2C originalErr\x2C callback) {\x0d\n  rmdir(path\x2C (err) => {\x0d\n    if (err) {\x0d\n      if (notEmptyErrorCodes.has(err.code))\x0d\n        return _rmchildren(path\x2C options\x2C callback);\x0d\n      if (err.code === 'ENOTDIR')\x0d\n        return callback(originalErr);\x0d\n    }\x0d\n\x0d\n    callback(err);\x0d\n  });\x0d\n}\x0d\n\x0d\n\x0d\nfunction _rmchildren(path\x2C options\x2C callback) {\x0d\n  const pathBuf = Buffer.from(path);\x0d\n\x0d\n  readdir(pathBuf\x2C readdirEncoding\x2C (err\x2C files) => {\x0d\n    if (err)\x0d\n      return callback(err);\x0d\n\x0d\n    let numFiles = files.length;\x0d\n\x0d\n    if (numFiles === 0)\x0d\n      return rmdir(path\x2C callback);\x0d\n\x0d\n    let done = false;\x0d\n\x0d\n    ArrayPrototypeForEach(files\x2C (child) => {\x0d\n      const childPath = Buffer.concat([pathBuf\x2C separator\x2C child]);\x0d\n\x0d\n      rimraf(childPath\x2C options\x2C (err) => {\x0d\n        if (done)\x0d\n          return;\x0d\n\x0d\n        if (err) {\x0d\n          done = true;\x0d\n          return callback(err);\x0d\n        }\x0d\n\x0d\n        numFiles--;\x0d\n        if (numFiles === 0)\x0d\n          rmdir(path\x2C callback);\x0d\n      });\x0d\n    });\x0d\n  });\x0d\n}\x0d\n\x0d\n\x0d\nfunction rimrafPromises(path\x2C options) {\x0d\n  return new Promise((resolve\x2C reject) => {\x0d\n    rimraf(path\x2C options\x2C (err) => {\x0d\n      if (err)\x0d\n        return reject(err);\x0d\n\x0d\n      resolve();\x0d\n    });\x0d\n  });\x0d\n}\x0d\n\x0d\n\x0d\nfunction rimrafSync(path\x2C options) {\x0d\n  let stats;\x0d\n\x0d\n  try {\x0d\n    stats = lstatSync(path);\x0d\n  } catch (err) {\x0d\n    if (err.code === 'ENOENT')\x0d\n      return;\x0d\n\x0d\n    // Windows can EPERM on stat.\x0d\n    if (isWindows && err.code === 'EPERM')\x0d\n      fixWinEPERMSync(path\x2C options\x2C err);\x0d\n  }\x0d\n\x0d\n  try {\x0d\n    // SunOS lets the root user unlink directories.\x0d\n    if (stats?.isDirectory())\x0d\n      _rmdirSync(path\x2C options\x2C null);\x0d\n    else\x0d\n      _unlinkSync(path\x2C options);\x0d\n  } catch (err) {\x0d\n    if (err.code === 'ENOENT')\x0d\n      return;\x0d\n    if (err.code === 'EPERM')\x0d\n      return epermHandlerSync(path\x2C options\x2C err);\x0d\n    if (err.code !== 'EISDIR')\x0d\n      throw err;\x0d\n\x0d\n    _rmdirSync(path\x2C options\x2C err);\x0d\n  }\x0d\n}\x0d\n\x0d\n\x0d\nfunction _unlinkSync(path\x2C options) {\x0d\n  const tries = options.maxRetries + 1;\x0d\n\x0d\n  for (let i = 1; i <= tries; i++) {\x0d\n    try {\x0d\n      return unlinkSync(path);\x0d\n    } catch (err) {\x0d\n      // Only sleep if this is not the last try\x2C and the delay is greater\x0d\n      // than zero\x2C and an error was encountered that warrants a retry.\x0d\n      if (retryErrorCodes.has(err.code) &&\x0d\n          i < tries &&\x0d\n          options.retryDelay > 0) {\x0d\n        sleep(i * options.retryDelay);\x0d\n      } else if (err.code === 'ENOENT') {\x0d\n        // The file is already gone.\x0d\n        return;\x0d\n      } else if (i === tries) {\x0d\n        throw err;\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\n\x0d\nfunction _rmdirSync(path\x2C options\x2C originalErr) {\x0d\n  try {\x0d\n    rmdirSync(path);\x0d\n  } catch (err) {\x0d\n    if (err.code === 'ENOENT')\x0d\n      return;\x0d\n    if (err.code === 'ENOTDIR') {\x0d\n      throw originalErr || err;\x0d\n    }\x0d\n\x0d\n    if (notEmptyErrorCodes.has(err.code)) {\x0d\n      // Removing failed. Try removing all children and then retrying the\x0d\n      // original removal. Windows has a habit of not closing handles promptly\x0d\n      // when files are deleted\x2C resulting in spurious ENOTEMPTY failures. Work\x0d\n      // around that issue by retrying on Windows.\x0d\n      const pathBuf = Buffer.from(path);\x0d\n\x0d\n      ArrayPrototypeForEach(readdirSync(pathBuf\x2C readdirEncoding)\x2C (child) => {\x0d\n        const childPath = Buffer.concat([pathBuf\x2C separator\x2C child]);\x0d\n\x0d\n        rimrafSync(childPath\x2C options);\x0d\n      });\x0d\n\x0d\n      const tries = options.maxRetries + 1;\x0d\n\x0d\n      for (let i = 1; i <= tries; i++) {\x0d\n        try {\x0d\n          return fs.rmdirSync(path);\x0d\n        } catch (err) {\x0d\n          // Only sleep if this is not the last try\x2C and the delay is greater\x0d\n          // than zero\x2C and an error was encountered that warrants a retry.\x0d\n          if (retryErrorCodes.has(err.code) &&\x0d\n              i < tries &&\x0d\n              options.retryDelay > 0) {\x0d\n            sleep(i * options.retryDelay);\x0d\n          } else if (err.code === 'ENOENT') {\x0d\n            // The file is already gone.\x0d\n            return;\x0d\n          } else if (i === tries) {\x0d\n            throw err;\x0d\n          }\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n\x0d\n    throw originalErr || err;\x0d\n  }\x0d\n}\x0d\n\x0d\n\x0d\nfunction fixWinEPERMSync(path\x2C options\x2C originalErr) {\x0d\n  try {\x0d\n    chmodSync(path\x2C 0o666);\x0d\n  } catch (err) {\x0d\n    if (err.code === 'ENOENT')\x0d\n      return;\x0d\n\x0d\n    throw originalErr;\x0d\n  }\x0d\n\x0d\n  let stats;\x0d\n\x0d\n  try {\x0d\n    stats = statSync(path\x2C { throwIfNoEntry: false });\x0d\n  } catch {\x0d\n    throw originalErr;\x0d\n  }\x0d\n\x0d\n  if (stats === undefined) return;\x0d\n\x0d\n  if (stats.isDirectory())\x0d\n    _rmdirSync(path\x2C options\x2C originalErr);\x0d\n  else\x0d\n    _unlinkSync(path\x2C options);\x0d\n}\x0d\n\x0d\n\x0d\nmodule.exports = { rimraf\x2C rimrafPromises\x2C rimrafSync };\x0d\n
code-source-info,0x2a6f0ba1c50,467,0,7763,C0O0C4O7763,,
code-creation,Function,10,333669,0x2a6f0ba2250,409, node:internal/fs/rimraf:1:1,0x2a6f0ba1bc8,~
tick,0x7ff72626ade3,333698,1,0x7ff725a6ef10,3,0x7ff7264a2ab0,0x1f81b7195d6,0x7ff6a66c32e1,0x2a6f0b9e638,0x1f81b7195f7,0x7ff6a66c32e1,0x2a6f0b9963f,0x1f81b7195f7,0x7ff6a66c32e1,0x14dbcbad4e4,0x1f81b7195f7,0x7ff6a66c32e1,0x14dbcbab4a9,0x1f81b7195f7,0x7ff6a66c32e1,0x14dbcba671e,0x1f81b7195f7,0x7ff6a66c32e1,0x14dbcba11ae,0x14dbcba0fa3,0xb50533ad4e,0xb505339468,0xb5053356e1
code-source-info,0x2a6f0ba2250,467,0,7763,C0O0C139O377C145O403C151O415C156O464C159O464C164O453C170O495C173O495C177O495C179O671C182O522C188O532C194O546C200O556C206O570C212O582C218O598C224O608C230O622C236O631C242O644C248O655C254O692C257O692C262O684C267O733C270O733C275O718C281O771C284O771C289O761C295O825C302O825C307O825C309O897C316O897C321O897C323O994C330O1003C333O986C335O1038C345O1038C347O1098C357O1098C359O1165C361O1165C363O1194C366O1201C371O1201C376O1194C378O7705C385O7724C391O7732C397O7748C403O7720C408O7762,,
code-creation,Eval,10,335289,0x2a6f0ba5d28,5, node:internal/readline/interface:1:1,0x2a6f0ba4888,~
script-source,468,node:internal/readline/interface,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayFrom\x2C\x0d\n  ArrayPrototypeFilter\x2C\x0d\n  ArrayPrototypeIndexOf\x2C\x0d\n  ArrayPrototypeJoin\x2C\x0d\n  ArrayPrototypeMap\x2C\x0d\n  ArrayPrototypePop\x2C\x0d\n  ArrayPrototypePush\x2C\x0d\n  ArrayPrototypeReverse\x2C\x0d\n  ArrayPrototypeSplice\x2C\x0d\n  ArrayPrototypeShift\x2C\x0d\n  ArrayPrototypeUnshift\x2C\x0d\n  DateNow\x2C\x0d\n  FunctionPrototypeCall\x2C\x0d\n  MathCeil\x2C\x0d\n  MathFloor\x2C\x0d\n  MathMax\x2C\x0d\n  MathMaxApply\x2C\x0d\n  NumberIsFinite\x2C\x0d\n  NumberIsNaN\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  RegExpPrototypeExec\x2C\x0d\n  StringPrototypeCodePointAt\x2C\x0d\n  StringPrototypeEndsWith\x2C\x0d\n  StringPrototypeRepeat\x2C\x0d\n  StringPrototypeSlice\x2C\x0d\n  StringPrototypeStartsWith\x2C\x0d\n  StringPrototypeTrim\x2C\x0d\n  Symbol\x2C\x0d\n  SymbolAsyncIterator\x2C\x0d\n  SafeStringIterator\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst { codes } = require('internal/errors');\x0d\n\x0d\nconst {\x0d\n  ERR_INVALID_ARG_VALUE\x2C\x0d\n  ERR_USE_AFTER_CLOSE\x2C\x0d\n} = codes;\x0d\nconst {\x0d\n  validateAbortSignal\x2C\x0d\n  validateArray\x2C\x0d\n  validateString\x2C\x0d\n  validateUint32\x2C\x0d\n} = require('internal/validators');\x0d\nconst { kEmptyObject } = require('internal/util');\x0d\nconst {\x0d\n  inspect\x2C\x0d\n  getStringWidth\x2C\x0d\n  stripVTControlCharacters\x2C\x0d\n} = require('internal/util/inspect');\x0d\nconst EventEmitter = require('events');\x0d\nconst {\x0d\n  charLengthAt\x2C\x0d\n  charLengthLeft\x2C\x0d\n  commonPrefix\x2C\x0d\n  kSubstringSearch\x2C\x0d\n} = require('internal/readline/utils');\x0d\nlet emitKeypressEvents;\x0d\nconst {\x0d\n  clearScreenDown\x2C\x0d\n  cursorTo\x2C\x0d\n  moveCursor\x2C\x0d\n} = require('internal/readline/callbacks');\x0d\n\x0d\nconst { StringDecoder } = require('string_decoder');\x0d\n\x0d\n// Lazy load Readable for startup performance.\x0d\nlet Readable;\x0d\n\x0d\nconst kHistorySize = 30;\x0d\nconst kMaxUndoRedoStackSize = 2048;\x0d\nconst kMincrlfDelay = 100;\x0d\n// \\r\\n\x2C \\n\x2C or \\r followed by something other than \\n\x0d\nconst lineEnding = /\\r?\\n|\\r(?!\\n)/g;\x0d\n\x0d\nconst kLineObjectStream = Symbol('line object stream');\x0d\nconst kQuestionCancel = Symbol('kQuestionCancel');\x0d\n\x0d\n// GNU readline library - keyseq-timeout is 500ms (default)\x0d\nconst ESCAPE_CODE_TIMEOUT = 500;\x0d\n\x0d\n// Max length of the kill ring\x0d\nconst kMaxLengthOfKillRing = 32;\x0d\n\x0d\nconst kAddHistory = Symbol('_addHistory');\x0d\nconst kBeforeEdit = Symbol('_beforeEdit');\x0d\nconst kDecoder = Symbol('_decoder');\x0d\nconst kDeleteLeft = Symbol('_deleteLeft');\x0d\nconst kDeleteLineLeft = Symbol('_deleteLineLeft');\x0d\nconst kDeleteLineRight = Symbol('_deleteLineRight');\x0d\nconst kDeleteRight = Symbol('_deleteRight');\x0d\nconst kDeleteWordLeft = Symbol('_deleteWordLeft');\x0d\nconst kDeleteWordRight = Symbol('_deleteWordRight');\x0d\nconst kGetDisplayPos = Symbol('_getDisplayPos');\x0d\nconst kHistoryNext = Symbol('_historyNext');\x0d\nconst kHistoryPrev = Symbol('_historyPrev');\x0d\nconst kInsertString = Symbol('_insertString');\x0d\nconst kLine = Symbol('_line');\x0d\nconst kLine_buffer = Symbol('_line_buffer');\x0d\nconst kKillRing = Symbol('_killRing');\x0d\nconst kKillRingCursor = Symbol('_killRingCursor');\x0d\nconst kMoveCursor = Symbol('_moveCursor');\x0d\nconst kNormalWrite = Symbol('_normalWrite');\x0d\nconst kOldPrompt = Symbol('_oldPrompt');\x0d\nconst kOnLine = Symbol('_onLine');\x0d\nconst kPreviousKey = Symbol('_previousKey');\x0d\nconst kPrompt = Symbol('_prompt');\x0d\nconst kPushToKillRing = Symbol('_pushToKillRing');\x0d\nconst kPushToUndoStack = Symbol('_pushToUndoStack');\x0d\nconst kQuestionCallback = Symbol('_questionCallback');\x0d\nconst kRedo = Symbol('_redo');\x0d\nconst kRedoStack = Symbol('_redoStack');\x0d\nconst kRefreshLine = Symbol('_refreshLine');\x0d\nconst kSawKeyPress = Symbol('_sawKeyPress');\x0d\nconst kSawReturnAt = Symbol('_sawReturnAt');\x0d\nconst kSetRawMode = Symbol('_setRawMode');\x0d\nconst kTabComplete = Symbol('_tabComplete');\x0d\nconst kTabCompleter = Symbol('_tabCompleter');\x0d\nconst kTtyWrite = Symbol('_ttyWrite');\x0d\nconst kUndo = Symbol('_undo');\x0d\nconst kUndoStack = Symbol('_undoStack');\x0d\nconst kWordLeft = Symbol('_wordLeft');\x0d\nconst kWordRight = Symbol('_wordRight');\x0d\nconst kWriteToOutput = Symbol('_writeToOutput');\x0d\nconst kYank = Symbol('_yank');\x0d\nconst kYanking = Symbol('_yanking');\x0d\nconst kYankPop = Symbol('_yankPop');\x0d\n\x0d\nfunction InterfaceConstructor(input\x2C output\x2C completer\x2C terminal) {\x0d\n  this[kSawReturnAt] = 0;\x0d\n  // TODO(BridgeAR): Document this property. The name is not ideal\x2C so we\x0d\n  // might want to expose an alias and document that instead.\x0d\n  this.isCompletionEnabled = true;\x0d\n  this[kSawKeyPress] = false;\x0d\n  this[kPreviousKey] = null;\x0d\n  this.escapeCodeTimeout = ESCAPE_CODE_TIMEOUT;\x0d\n  this.tabSize = 8;\x0d\n\x0d\n  FunctionPrototypeCall(EventEmitter\x2C this);\x0d\n\x0d\n  let history;\x0d\n  let historySize;\x0d\n  let removeHistoryDuplicates = false;\x0d\n  let crlfDelay;\x0d\n  let prompt = '> ';\x0d\n  let signal;\x0d\n\x0d\n  if (input?.input) {\x0d\n    // An options object was given\x0d\n    output = input.output;\x0d\n    completer = input.completer;\x0d\n    terminal = input.terminal;\x0d\n    history = input.history;\x0d\n    historySize = input.historySize;\x0d\n    signal = input.signal;\x0d\n    if (input.tabSize !== undefined) {\x0d\n      validateUint32(input.tabSize\x2C 'tabSize'\x2C true);\x0d\n      this.tabSize = input.tabSize;\x0d\n    }\x0d\n    removeHistoryDuplicates = input.removeHistoryDuplicates;\x0d\n    if (input.prompt !== undefined) {\x0d\n      prompt = input.prompt;\x0d\n    }\x0d\n    if (input.escapeCodeTimeout !== undefined) {\x0d\n      if (NumberIsFinite(input.escapeCodeTimeout)) {\x0d\n        this.escapeCodeTimeout = input.escapeCodeTimeout;\x0d\n      } else {\x0d\n        throw new ERR_INVALID_ARG_VALUE(\x0d\n          'input.escapeCodeTimeout'\x2C\x0d\n          this.escapeCodeTimeout\x0d\n        );\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (signal) {\x0d\n      validateAbortSignal(signal\x2C 'options.signal');\x0d\n    }\x0d\n\x0d\n    crlfDelay = input.crlfDelay;\x0d\n    input = input.input;\x0d\n  }\x0d\n\x0d\n  if (completer !== undefined && typeof completer !== 'function') {\x0d\n    throw new ERR_INVALID_ARG_VALUE('completer'\x2C completer);\x0d\n  }\x0d\n\x0d\n  if (history === undefined) {\x0d\n    history = [];\x0d\n  } else {\x0d\n    validateArray(history\x2C 'history');\x0d\n  }\x0d\n\x0d\n  if (historySize === undefined) {\x0d\n    historySize = kHistorySize;\x0d\n  }\x0d\n\x0d\n  if (\x0d\n    typeof historySize !== 'number' ||\x0d\n      NumberIsNaN(historySize) ||\x0d\n      historySize < 0\x0d\n  ) {\x0d\n    throw new ERR_INVALID_ARG_VALUE.RangeError('historySize'\x2C historySize);\x0d\n  }\x0d\n\x0d\n  // Backwards compat; check the isTTY prop of the output stream\x0d\n  //  when `terminal` was not specified\x0d\n  if (terminal === undefined && !(output === null || output === undefined)) {\x0d\n    terminal = !!output.isTTY;\x0d\n  }\x0d\n\x0d\n  const self = this;\x0d\n\x0d\n  this.line = '';\x0d\n  this[kSubstringSearch] = null;\x0d\n  this.output = output;\x0d\n  this.input = input;\x0d\n  this[kUndoStack] = [];\x0d\n  this[kRedoStack] = [];\x0d\n  this.history = history;\x0d\n  this.historySize = historySize;\x0d\n\x0d\n  // The kill ring is a global list of blocks of text that were previously\x0d\n  // killed (deleted). If its size exceeds kMaxLengthOfKillRing\x2C the oldest\x0d\n  // element will be removed to make room for the latest deletion. With kill\x0d\n  // ring\x2C users are able to recall (yank) or cycle (yank pop) among previously\x0d\n  // killed texts\x2C quite similar to the behavior of Emacs.\x0d\n  this[kKillRing] = [];\x0d\n  this[kKillRingCursor] = 0;\x0d\n\x0d\n  this.removeHistoryDuplicates = !!removeHistoryDuplicates;\x0d\n  this.crlfDelay = crlfDelay ?\x0d\n    MathMax(kMincrlfDelay\x2C crlfDelay) :\x0d\n    kMincrlfDelay;\x0d\n  this.completer = completer;\x0d\n\x0d\n  this.setPrompt(prompt);\x0d\n\x0d\n  this.terminal = !!terminal;\x0d\n\x0d\n\x0d\n  function onerror(err) {\x0d\n    self.emit('error'\x2C err);\x0d\n  }\x0d\n\x0d\n  function ondata(data) {\x0d\n    self[kNormalWrite](data);\x0d\n  }\x0d\n\x0d\n  function onend() {\x0d\n    if (\x0d\n      typeof self[kLine_buffer] === 'string' &&\x0d\n        self[kLine_buffer].length > 0\x0d\n    ) {\x0d\n      self.emit('line'\x2C self[kLine_buffer]);\x0d\n    }\x0d\n    self.close();\x0d\n  }\x0d\n\x0d\n  function ontermend() {\x0d\n    if (typeof self.line === 'string' && self.line.length > 0) {\x0d\n      self.emit('line'\x2C self.line);\x0d\n    }\x0d\n    self.close();\x0d\n  }\x0d\n\x0d\n  function onkeypress(s\x2C key) {\x0d\n    self[kTtyWrite](s\x2C key);\x0d\n    if (key && key.sequence) {\x0d\n      // If the key.sequence is half of a surrogate pair\x0d\n      // (>= 0xd800 and <= 0xdfff)\x2C refresh the line so\x0d\n      // the character is displayed appropriately.\x0d\n      const ch = StringPrototypeCodePointAt(key.sequence\x2C 0);\x0d\n      if (ch >= 0xd800 && ch <= 0xdfff) self[kRefreshLine]();\x0d\n    }\x0d\n  }\x0d\n\x0d\n  function onresize() {\x0d\n    self[kRefreshLine]();\x0d\n  }\x0d\n\x0d\n  this[kLineObjectStream] = undefined;\x0d\n\x0d\n  input.on('error'\x2C onerror);\x0d\n\x0d\n  if (!this.terminal) {\x0d\n    function onSelfCloseWithoutTerminal() {\x0d\n      input.removeListener('data'\x2C ondata);\x0d\n      input.removeListener('error'\x2C onerror);\x0d\n      input.removeListener('end'\x2C onend);\x0d\n    }\x0d\n\x0d\n    input.on('data'\x2C ondata);\x0d\n    input.on('end'\x2C onend);\x0d\n    self.once('close'\x2C onSelfCloseWithoutTerminal);\x0d\n    this[kDecoder] = new StringDecoder('utf8');\x0d\n  } else {\x0d\n    function onSelfCloseWithTerminal() {\x0d\n      input.removeListener('keypress'\x2C onkeypress);\x0d\n      input.removeListener('error'\x2C onerror);\x0d\n      input.removeListener('end'\x2C ontermend);\x0d\n      if (output !== null && output !== undefined) {\x0d\n        output.removeListener('resize'\x2C onresize);\x0d\n      }\x0d\n    }\x0d\n\x0d\n    emitKeypressEvents ??= require('internal/readline/emitKeypressEvents');\x0d\n    emitKeypressEvents(input\x2C this);\x0d\n\x0d\n    // `input` usually refers to stdin\x0d\n    input.on('keypress'\x2C onkeypress);\x0d\n    input.on('end'\x2C ontermend);\x0d\n\x0d\n    this[kSetRawMode](true);\x0d\n    this.terminal = true;\x0d\n\x0d\n    // Cursor position on the line.\x0d\n    this.cursor = 0;\x0d\n\x0d\n    this.historyIndex = -1;\x0d\n\x0d\n    if (output !== null && output !== undefined)\x0d\n      output.on('resize'\x2C onresize);\x0d\n\x0d\n    self.once('close'\x2C onSelfCloseWithTerminal);\x0d\n  }\x0d\n\x0d\n  if (signal) {\x0d\n    const onAborted = () => self.close();\x0d\n    if (signal.aborted) {\x0d\n      process.nextTick(onAborted);\x0d\n    } else {\x0d\n      signal.addEventListener('abort'\x2C onAborted\x2C { once: true });\x0d\n      self.once('close'\x2C () => signal.removeEventListener('abort'\x2C onAborted));\x0d\n    }\x0d\n  }\x0d\n\x0d\n  // Current line\x0d\n  this.line = '';\x0d\n\x0d\n  input.resume();\x0d\n}\x0d\n\x0d\nObjectSetPrototypeOf(InterfaceConstructor.prototype\x2C EventEmitter.prototype);\x0d\nObjectSetPrototypeOf(InterfaceConstructor\x2C EventEmitter);\x0d\n\x0d\nclass Interface extends InterfaceConstructor {\x0d\n  // eslint-disable-next-line no-useless-constructor\x0d\n  constructor(input\x2C output\x2C completer\x2C terminal) {\x0d\n    super(input\x2C output\x2C completer\x2C terminal);\x0d\n  }\x0d\n  get columns() {\x0d\n    if (this.output && this.output.columns) return this.output.columns;\x0d\n    return Infinity;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * Sets the prompt written to the output.\x0d\n   * @param {string} prompt\x0d\n   * @returns {void}\x0d\n   */\x0d\n  setPrompt(prompt) {\x0d\n    this[kPrompt] = prompt;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * Returns the current prompt used by `rl.prompt()`.\x0d\n   * @returns {string}\x0d\n   */\x0d\n  getPrompt() {\x0d\n    return this[kPrompt];\x0d\n  }\x0d\n\x0d\n  [kSetRawMode](mode) {\x0d\n    const wasInRawMode = this.input.isRaw;\x0d\n\x0d\n    if (typeof this.input.setRawMode === 'function') {\x0d\n      this.input.setRawMode(mode);\x0d\n    }\x0d\n\x0d\n    return wasInRawMode;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * Writes the configured `prompt` to a new line in `output`.\x0d\n   * @param {boolean} [preserveCursor]\x0d\n   * @returns {void}\x0d\n   */\x0d\n  prompt(preserveCursor) {\x0d\n    if (this.paused) this.resume();\x0d\n    if (this.terminal && process.env.TERM !== 'dumb') {\x0d\n      if (!preserveCursor) this.cursor = 0;\x0d\n      this[kRefreshLine]();\x0d\n    } else {\x0d\n      this[kWriteToOutput](this[kPrompt]);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  question(query\x2C cb) {\x0d\n    if (this.closed) {\x0d\n      throw new ERR_USE_AFTER_CLOSE('readline');\x0d\n    }\x0d\n    if (this[kQuestionCallback]) {\x0d\n      this.prompt();\x0d\n    } else {\x0d\n      this[kOldPrompt] = this[kPrompt];\x0d\n      this.setPrompt(query);\x0d\n      this[kQuestionCallback] = cb;\x0d\n      this.prompt();\x0d\n    }\x0d\n  }\x0d\n\x0d\n  [kOnLine](line) {\x0d\n    if (this[kQuestionCallback]) {\x0d\n      const cb = this[kQuestionCallback];\x0d\n      this[kQuestionCallback] = null;\x0d\n      this.setPrompt(this[kOldPrompt]);\x0d\n      cb(line);\x0d\n    } else {\x0d\n      this.emit('line'\x2C line);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  [kBeforeEdit](oldText\x2C oldCursor) {\x0d\n    this[kPushToUndoStack](oldText\x2C oldCursor);\x0d\n  }\x0d\n\x0d\n  [kQuestionCancel]() {\x0d\n    if (this[kQuestionCallback]) {\x0d\n      this[kQuestionCallback] = null;\x0d\n      this.setPrompt(this[kOldPrompt]);\x0d\n      this.clearLine();\x0d\n    }\x0d\n  }\x0d\n\x0d\n  [kWriteToOutput](stringToWrite) {\x0d\n    validateString(stringToWrite\x2C 'stringToWrite');\x0d\n\x0d\n    if (this.output !== null && this.output !== undefined) {\x0d\n      this.output.write(stringToWrite);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  [kAddHistory]() {\x0d\n    if (this.line.length === 0) return '';\x0d\n\x0d\n    // If the history is disabled then return the line\x0d\n    if (this.historySize === 0) return this.line;\x0d\n\x0d\n    // If the trimmed line is empty then return the line\x0d\n    if (StringPrototypeTrim(this.line).length === 0) return this.line;\x0d\n\x0d\n    if (this.history.length === 0 || this.history[0] !== this.line) {\x0d\n      if (this.removeHistoryDuplicates) {\x0d\n        // Remove older history line if identical to new one\x0d\n        const dupIndex = ArrayPrototypeIndexOf(this.history\x2C this.line);\x0d\n        if (dupIndex !== -1) ArrayPrototypeSplice(this.history\x2C dupIndex\x2C 1);\x0d\n      }\x0d\n\x0d\n      ArrayPrototypeUnshift(this.history\x2C this.line);\x0d\n\x0d\n      // Only store so many\x0d\n      if (this.history.length > this.historySize)\x0d\n        ArrayPrototypePop(this.history);\x0d\n    }\x0d\n\x0d\n    this.historyIndex = -1;\x0d\n\x0d\n    // The listener could change the history object\x2C possibly\x0d\n    // to remove the last added entry if it is sensitive and should\x0d\n    // not be persisted in the history\x2C like a password\x0d\n    const line = this.history[0];\x0d\n\x0d\n    // Emit history event to notify listeners of update\x0d\n    this.emit('history'\x2C this.history);\x0d\n\x0d\n    return line;\x0d\n  }\x0d\n\x0d\n  [kRefreshLine]() {\x0d\n    // line length\x0d\n    const line = this[kPrompt] + this.line;\x0d\n    const dispPos = this[kGetDisplayPos](line);\x0d\n    const lineCols = dispPos.cols;\x0d\n    const lineRows = dispPos.rows;\x0d\n\x0d\n    // cursor position\x0d\n    const cursorPos = this.getCursorPos();\x0d\n\x0d\n    // First move to the bottom of the current line\x2C based on cursor pos\x0d\n    const prevRows = this.prevRows || 0;\x0d\n    if (prevRows > 0) {\x0d\n      moveCursor(this.output\x2C 0\x2C -prevRows);\x0d\n    }\x0d\n\x0d\n    // Cursor to left edge.\x0d\n    cursorTo(this.output\x2C 0);\x0d\n    // erase data\x0d\n    clearScreenDown(this.output);\x0d\n\x0d\n    // Write the prompt and the current buffer content.\x0d\n    this[kWriteToOutput](line);\x0d\n\x0d\n    // Force terminal to allocate a new line\x0d\n    if (lineCols === 0) {\x0d\n      this[kWriteToOutput](' ');\x0d\n    }\x0d\n\x0d\n    // Move cursor to original position.\x0d\n    cursorTo(this.output\x2C cursorPos.cols);\x0d\n\x0d\n    const diff = lineRows - cursorPos.rows;\x0d\n    if (diff > 0) {\x0d\n      moveCursor(this.output\x2C 0\x2C -diff);\x0d\n    }\x0d\n\x0d\n    this.prevRows = cursorPos.rows;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * Closes the `readline.Interface` instance.\x0d\n   * @returns {void}\x0d\n   */\x0d\n  close() {\x0d\n    if (this.closed) return;\x0d\n    this.pause();\x0d\n    if (this.terminal) {\x0d\n      this[kSetRawMode](false);\x0d\n    }\x0d\n    this.closed = true;\x0d\n    this.emit('close');\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * Pauses the `input` stream.\x0d\n   * @returns {void | Interface}\x0d\n   */\x0d\n  pause() {\x0d\n    if (this.paused) return;\x0d\n    this.input.pause();\x0d\n    this.paused = true;\x0d\n    this.emit('pause');\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * Resumes the `input` stream if paused.\x0d\n   * @returns {void | Interface}\x0d\n   */\x0d\n  resume() {\x0d\n    if (!this.paused) return;\x0d\n    this.input.resume();\x0d\n    this.paused = false;\x0d\n    this.emit('resume');\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * Writes either `data` or a `key` sequence identified by\x0d\n   * `key` to the `output`.\x0d\n   * @param {string} d\x0d\n   * @param {{\x0d\n   *   ctrl?: boolean;\x0d\n   *   meta?: boolean;\x0d\n   *   shift?: boolean;\x0d\n   *   name?: string;\x0d\n   *   }} [key]\x0d\n   * @returns {void}\x0d\n   */\x0d\n  write(d\x2C key) {\x0d\n    if (this.paused) this.resume();\x0d\n    if (this.terminal) {\x0d\n      this[kTtyWrite](d\x2C key);\x0d\n    } else {\x0d\n      this[kNormalWrite](d);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  [kNormalWrite](b) {\x0d\n    if (b === undefined) {\x0d\n      return;\x0d\n    }\x0d\n    let string = this[kDecoder].write(b);\x0d\n    if (\x0d\n      this[kSawReturnAt] &&\x0d\n      DateNow() - this[kSawReturnAt] <= this.crlfDelay\x0d\n    ) {\x0d\n      if (StringPrototypeCodePointAt(string) === 10) string = StringPrototypeSlice(string\x2C 1);\x0d\n      this[kSawReturnAt] = 0;\x0d\n    }\x0d\n\x0d\n    // Run test() on the new string chunk\x2C not on the entire line buffer.\x0d\n    let newPartContainsEnding = RegExpPrototypeExec(lineEnding\x2C string);\x0d\n    if (newPartContainsEnding !== null) {\x0d\n      if (this[kLine_buffer]) {\x0d\n        string = this[kLine_buffer] + string;\x0d\n        this[kLine_buffer] = null;\x0d\n        newPartContainsEnding = RegExpPrototypeExec(lineEnding\x2C string);\x0d\n      }\x0d\n      this[kSawReturnAt] = StringPrototypeEndsWith(string\x2C '\\r') ?\x0d\n        DateNow() :\x0d\n        0;\x0d\n\x0d\n      const indexes = [0\x2C newPartContainsEnding.index\x2C lineEnding.lastIndex];\x0d\n      let nextMatch;\x0d\n      while ((nextMatch = RegExpPrototypeExec(lineEnding\x2C string)) !== null) {\x0d\n        ArrayPrototypePush(indexes\x2C nextMatch.index\x2C lineEnding.lastIndex);\x0d\n      }\x0d\n      const lastIndex = indexes.length - 1;\x0d\n      // Either '' or (conceivably) the unfinished portion of the next line\x0d\n      this[kLine_buffer] = StringPrototypeSlice(string\x2C indexes[lastIndex]);\x0d\n      for (let i = 1; i < lastIndex; i += 2) {\x0d\n        this[kOnLine](StringPrototypeSlice(string\x2C indexes[i - 1]\x2C indexes[i]));\x0d\n      }\x0d\n    } else if (string) {\x0d\n      // No newlines this time\x2C save what we have for next time\x0d\n      if (this[kLine_buffer]) {\x0d\n        this[kLine_buffer] += string;\x0d\n      } else {\x0d\n        this[kLine_buffer] = string;\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  [kInsertString](c) {\x0d\n    this[kBeforeEdit](this.line\x2C this.cursor);\x0d\n    if (this.cursor < this.line.length) {\x0d\n      const beg = StringPrototypeSlice(this.line\x2C 0\x2C this.cursor);\x0d\n      const end = StringPrototypeSlice(\x0d\n        this.line\x2C\x0d\n        this.cursor\x2C\x0d\n        this.line.length\x0d\n      );\x0d\n      this.line = beg + c + end;\x0d\n      this.cursor += c.length;\x0d\n      this[kRefreshLine]();\x0d\n    } else {\x0d\n      const oldPos = this.getCursorPos();\x0d\n      this.line += c;\x0d\n      this.cursor += c.length;\x0d\n      const newPos = this.getCursorPos();\x0d\n\x0d\n      if (oldPos.rows < newPos.rows) {\x0d\n        this[kRefreshLine]();\x0d\n      } else {\x0d\n        this[kWriteToOutput](c);\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  async [kTabComplete](lastKeypressWasTab) {\x0d\n    this.pause();\x0d\n    const string = StringPrototypeSlice(this.line\x2C 0\x2C this.cursor);\x0d\n    let value;\x0d\n    try {\x0d\n      value = await this.completer(string);\x0d\n    } catch (err) {\x0d\n      this[kWriteToOutput](`Tab completion error: ${inspect(err)}`);\x0d\n      return;\x0d\n    } finally {\x0d\n      this.resume();\x0d\n    }\x0d\n    this[kTabCompleter](lastKeypressWasTab\x2C value);\x0d\n  }\x0d\n\x0d\n  [kTabCompleter](lastKeypressWasTab\x2C { 0: completions\x2C 1: completeOn }) {\x0d\n    // Result and the text that was completed.\x0d\n\x0d\n    if (!completions || completions.length === 0) {\x0d\n      return;\x0d\n    }\x0d\n\x0d\n    // If there is a common prefix to all matches\x2C then apply that portion.\x0d\n    const prefix = commonPrefix(\x0d\n      ArrayPrototypeFilter(completions\x2C (e) => e !== '')\x0d\n    );\x0d\n    if (StringPrototypeStartsWith(prefix\x2C completeOn) &&\x0d\n        prefix.length > completeOn.length) {\x0d\n      this[kInsertString](StringPrototypeSlice(prefix\x2C completeOn.length));\x0d\n      return;\x0d\n    } else if (!StringPrototypeStartsWith(completeOn\x2C prefix)) {\x0d\n      this.line = StringPrototypeSlice(this.line\x2C\x0d\n                                       0\x2C\x0d\n                                       this.cursor - completeOn.length) +\x0d\n                  prefix +\x0d\n                  StringPrototypeSlice(this.line\x2C\x0d\n                                       this.cursor\x2C\x0d\n                                       this.line.length);\x0d\n      this.cursor = this.cursor - completeOn.length + prefix.length;\x0d\n      this._refreshLine();\x0d\n      return;\x0d\n    }\x0d\n\x0d\n    if (!lastKeypressWasTab) {\x0d\n      return;\x0d\n    }\x0d\n\x0d\n    this[kBeforeEdit](this.line\x2C this.cursor);\x0d\n\x0d\n    // Apply/show completions.\x0d\n    const completionsWidth = ArrayPrototypeMap(completions\x2C (e) =>\x0d\n      getStringWidth(e)\x0d\n    );\x0d\n    const width = MathMaxApply(completionsWidth) + 2; // 2 space padding\x0d\n    let maxColumns = MathFloor(this.columns / width) || 1;\x0d\n    if (maxColumns === Infinity) {\x0d\n      maxColumns = 1;\x0d\n    }\x0d\n    let output = '\\r\\n';\x0d\n    let lineIndex = 0;\x0d\n    let whitespace = 0;\x0d\n    for (let i = 0; i < completions.length; i++) {\x0d\n      const completion = completions[i];\x0d\n      if (completion === '' || lineIndex === maxColumns) {\x0d\n        output += '\\r\\n';\x0d\n        lineIndex = 0;\x0d\n        whitespace = 0;\x0d\n      } else {\x0d\n        output += StringPrototypeRepeat(' '\x2C whitespace);\x0d\n      }\x0d\n      if (completion !== '') {\x0d\n        output += completion;\x0d\n        whitespace = width - completionsWidth[i];\x0d\n        lineIndex++;\x0d\n      } else {\x0d\n        output += '\\r\\n';\x0d\n      }\x0d\n    }\x0d\n    if (lineIndex !== 0) {\x0d\n      output += '\\r\\n\\r\\n';\x0d\n    }\x0d\n    this[kWriteToOutput](output);\x0d\n    this[kRefreshLine]();\x0d\n  }\x0d\n\x0d\n  [kWordLeft]() {\x0d\n    if (this.cursor > 0) {\x0d\n      // Reverse the string and match a word near beginning\x0d\n      // to avoid quadratic time complexity\x0d\n      const leading = StringPrototypeSlice(this.line\x2C 0\x2C this.cursor);\x0d\n      const reversed = ArrayPrototypeJoin(\x0d\n        ArrayPrototypeReverse(ArrayFrom(leading))\x2C\x0d\n        ''\x0d\n      );\x0d\n      const match = RegExpPrototypeExec(/^\\s*(?:[^\\w\\s]+|\\w+)?/\x2C reversed);\x0d\n      this[kMoveCursor](-match[0].length);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  [kWordRight]() {\x0d\n    if (this.cursor < this.line.length) {\x0d\n      const trailing = StringPrototypeSlice(this.line\x2C this.cursor);\x0d\n      const match = RegExpPrototypeExec(/^(?:\\s+|[^\\w\\s]+|\\w+)\\s*/\x2C trailing);\x0d\n      this[kMoveCursor](match[0].length);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  [kDeleteLeft]() {\x0d\n    if (this.cursor > 0 && this.line.length > 0) {\x0d\n      this[kBeforeEdit](this.line\x2C this.cursor);\x0d\n      // The number of UTF-16 units comprising the character to the left\x0d\n      const charSize = charLengthLeft(this.line\x2C this.cursor);\x0d\n      this.line =\x0d\n        StringPrototypeSlice(this.line\x2C 0\x2C this.cursor - charSize) +\x0d\n        StringPrototypeSlice(this.line\x2C this.cursor\x2C this.line.length);\x0d\n\x0d\n      this.cursor -= charSize;\x0d\n      this[kRefreshLine]();\x0d\n    }\x0d\n  }\x0d\n\x0d\n  [kDeleteRight]() {\x0d\n    if (this.cursor < this.line.length) {\x0d\n      this[kBeforeEdit](this.line\x2C this.cursor);\x0d\n      // The number of UTF-16 units comprising the character to the left\x0d\n      const charSize = charLengthAt(this.line\x2C this.cursor);\x0d\n      this.line =\x0d\n        StringPrototypeSlice(this.line\x2C 0\x2C this.cursor) +\x0d\n        StringPrototypeSlice(\x0d\n          this.line\x2C\x0d\n          this.cursor + charSize\x2C\x0d\n          this.line.length\x0d\n        );\x0d\n      this[kRefreshLine]();\x0d\n    }\x0d\n  }\x0d\n\x0d\n  [kDeleteWordLeft]() {\x0d\n    if (this.cursor > 0) {\x0d\n      this[kBeforeEdit](this.line\x2C this.cursor);\x0d\n      // Reverse the string and match a word near beginning\x0d\n      // to avoid quadratic time complexity\x0d\n      let leading = StringPrototypeSlice(this.line\x2C 0\x2C this.cursor);\x0d\n      const reversed = ArrayPrototypeJoin(\x0d\n        ArrayPrototypeReverse(ArrayFrom(leading))\x2C\x0d\n        ''\x0d\n      );\x0d\n      const match = RegExpPrototypeExec(/^\\s*(?:[^\\w\\s]+|\\w+)?/\x2C reversed);\x0d\n      leading = StringPrototypeSlice(\x0d\n        leading\x2C\x0d\n        0\x2C\x0d\n        leading.length - match[0].length\x0d\n      );\x0d\n      this.line =\x0d\n        leading +\x0d\n        StringPrototypeSlice(this.line\x2C this.cursor\x2C this.line.length);\x0d\n      this.cursor = leading.length;\x0d\n      this[kRefreshLine]();\x0d\n    }\x0d\n  }\x0d\n\x0d\n  [kDeleteWordRight]() {\x0d\n    if (this.cursor < this.line.length) {\x0d\n      this[kBeforeEdit](this.line\x2C this.cursor);\x0d\n      const trailing = StringPrototypeSlice(this.line\x2C this.cursor);\x0d\n      const match = RegExpPrototypeExec(/^(?:\\s+|\\W+|\\w+)\\s*/\x2C trailing);\x0d\n      this.line =\x0d\n        StringPrototypeSlice(this.line\x2C 0\x2C this.cursor) +\x0d\n        StringPrototypeSlice(trailing\x2C match[0].length);\x0d\n      this[kRefreshLine]();\x0d\n    }\x0d\n  }\x0d\n\x0d\n  [kDeleteLineLeft]() {\x0d\n    this[kBeforeEdit](this.line\x2C this.cursor);\x0d\n    const del = StringPrototypeSlice(this.line\x2C 0\x2C this.cursor);\x0d\n    this.line = StringPrototypeSlice(this.line\x2C this.cursor);\x0d\n    this.cursor = 0;\x0d\n    this[kPushToKillRing](del);\x0d\n    this[kRefreshLine]();\x0d\n  }\x0d\n\x0d\n  [kDeleteLineRight]() {\x0d\n    this[kBeforeEdit](this.line\x2C this.cursor);\x0d\n    const del = StringPrototypeSlice(this.line\x2C this.cursor);\x0d\n    this.line = StringPrototypeSlice(this.line\x2C 0\x2C this.cursor);\x0d\n    this[kPushToKillRing](del);\x0d\n    this[kRefreshLine]();\x0d\n  }\x0d\n\x0d\n  [kPushToKillRing](del) {\x0d\n    if (!del || del === this[kKillRing][0]) return;\x0d\n    ArrayPrototypeUnshift(this[kKillRing]\x2C del);\x0d\n    this[kKillRingCursor] = 0;\x0d\n    while (this[kKillRing].length > kMaxLengthOfKillRing)\x0d\n      ArrayPrototypePop(this[kKillRing]);\x0d\n  }\x0d\n\x0d\n  [kYank]() {\x0d\n    if (this[kKillRing].length > 0) {\x0d\n      this[kYanking] = true;\x0d\n      this[kInsertString](this[kKillRing][this[kKillRingCursor]]);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  [kYankPop]() {\x0d\n    if (!this[kYanking]) {\x0d\n      return;\x0d\n    }\x0d\n    if (this[kKillRing].length > 1) {\x0d\n      const lastYank = this[kKillRing][this[kKillRingCursor]];\x0d\n      this[kKillRingCursor]++;\x0d\n      if (this[kKillRingCursor] >= this[kKillRing].length) {\x0d\n        this[kKillRingCursor] = 0;\x0d\n      }\x0d\n      const currentYank = this[kKillRing][this[kKillRingCursor]];\x0d\n      const head =\x0d\n            StringPrototypeSlice(this.line\x2C 0\x2C this.cursor - lastYank.length);\x0d\n      const tail =\x0d\n            StringPrototypeSlice(this.line\x2C this.cursor);\x0d\n      this.line = head + currentYank + tail;\x0d\n      this.cursor = head.length + currentYank.length;\x0d\n      this[kRefreshLine]();\x0d\n    }\x0d\n  }\x0d\n\x0d\n  clearLine() {\x0d\n    this[kMoveCursor](+Infinity);\x0d\n    this[kWriteToOutput]('\\r\\n');\x0d\n    this.line = '';\x0d\n    this.cursor = 0;\x0d\n    this.prevRows = 0;\x0d\n  }\x0d\n\x0d\n  [kLine]() {\x0d\n    const line = this[kAddHistory]();\x0d\n    this[kUndoStack] = [];\x0d\n    this[kRedoStack] = [];\x0d\n    this.clearLine();\x0d\n    this[kOnLine](line);\x0d\n  }\x0d\n\x0d\n  [kPushToUndoStack](text\x2C cursor) {\x0d\n    if (ArrayPrototypePush(this[kUndoStack]\x2C { text\x2C cursor }) >\x0d\n        kMaxUndoRedoStackSize) {\x0d\n      ArrayPrototypeShift(this[kUndoStack]);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  [kUndo]() {\x0d\n    if (this[kUndoStack].length <= 0) return;\x0d\n\x0d\n    ArrayPrototypePush(\x0d\n      this[kRedoStack]\x2C\x0d\n      { text: this.line\x2C cursor: this.cursor }\x2C\x0d\n    );\x0d\n\x0d\n    const entry = ArrayPrototypePop(this[kUndoStack]);\x0d\n    this.line = entry.text;\x0d\n    this.cursor = entry.cursor;\x0d\n\x0d\n    this[kRefreshLine]();\x0d\n  }\x0d\n\x0d\n  [kRedo]() {\x0d\n    if (this[kRedoStack].length <= 0) return;\x0d\n\x0d\n    ArrayPrototypePush(\x0d\n      this[kUndoStack]\x2C\x0d\n      { text: this.line\x2C cursor: this.cursor }\x2C\x0d\n    );\x0d\n\x0d\n    const entry = ArrayPrototypePop(this[kRedoStack]);\x0d\n    this.line = entry.text;\x0d\n    this.cursor = entry.cursor;\x0d\n\x0d\n    this[kRefreshLine]();\x0d\n  }\x0d\n\x0d\n  // TODO(BridgeAR): Add underscores to the search part and a red background in\x0d\n  // case no match is found. This should only be the visual part and not the\x0d\n  // actual line content!\x0d\n  // TODO(BridgeAR): In case the substring based search is active and the end is\x0d\n  // reached\x2C show a comment how to search the history as before. E.g.\x2C using\x0d\n  // <ctrl> + N. Only show this after two/three UPs or DOWNs\x2C not on the first\x0d\n  // one.\x0d\n  [kHistoryNext]() {\x0d\n    if (this.historyIndex >= 0) {\x0d\n      this[kBeforeEdit](this.line\x2C this.cursor);\x0d\n      const search = this[kSubstringSearch] || '';\x0d\n      let index = this.historyIndex - 1;\x0d\n      while (\x0d\n        index >= 0 &&\x0d\n        (!StringPrototypeStartsWith(this.history[index]\x2C search) ||\x0d\n          this.line === this.history[index])\x0d\n      ) {\x0d\n        index--;\x0d\n      }\x0d\n      if (index === -1) {\x0d\n        this.line = search;\x0d\n      } else {\x0d\n        this.line = this.history[index];\x0d\n      }\x0d\n      this.historyIndex = index;\x0d\n      this.cursor = this.line.length; // Set cursor to end of line.\x0d\n      this[kRefreshLine]();\x0d\n    }\x0d\n  }\x0d\n\x0d\n  [kHistoryPrev]() {\x0d\n    if (this.historyIndex < this.history.length && this.history.length) {\x0d\n      this[kBeforeEdit](this.line\x2C this.cursor);\x0d\n      const search = this[kSubstringSearch] || '';\x0d\n      let index = this.historyIndex + 1;\x0d\n      while (\x0d\n        index < this.history.length &&\x0d\n        (!StringPrototypeStartsWith(this.history[index]\x2C search) ||\x0d\n          this.line === this.history[index])\x0d\n      ) {\x0d\n        index++;\x0d\n      }\x0d\n      if (index === this.history.length) {\x0d\n        this.line = search;\x0d\n      } else {\x0d\n        this.line = this.history[index];\x0d\n      }\x0d\n      this.historyIndex = index;\x0d\n      this.cursor = this.line.length; // Set cursor to end of line.\x0d\n      this[kRefreshLine]();\x0d\n    }\x0d\n  }\x0d\n\x0d\n  // Returns the last character's display position of the given string\x0d\n  [kGetDisplayPos](str) {\x0d\n    let offset = 0;\x0d\n    const col = this.columns;\x0d\n    let rows = 0;\x0d\n    str = stripVTControlCharacters(str);\x0d\n    for (const char of new SafeStringIterator(str)) {\x0d\n      if (char === '\\n') {\x0d\n        // Rows must be incremented by 1 even if offset = 0 or col = +Infinity.\x0d\n        rows += MathCeil(offset / col) || 1;\x0d\n        offset = 0;\x0d\n        continue;\x0d\n      }\x0d\n      // Tabs must be aligned by an offset of the tab size.\x0d\n      if (char === '\\t') {\x0d\n        offset += this.tabSize - (offset % this.tabSize);\x0d\n        continue;\x0d\n      }\x0d\n      const width = getStringWidth(char\x2C false /* stripVTControlCharacters */);\x0d\n      if (width === 0 || width === 1) {\x0d\n        offset += width;\x0d\n      } else {\x0d\n        // width === 2\x0d\n        if ((offset + 1) % col === 0) {\x0d\n          offset++;\x0d\n        }\x0d\n        offset += 2;\x0d\n      }\x0d\n    }\x0d\n    const cols = offset % col;\x0d\n    rows += (offset - cols) / col;\x0d\n    return { cols\x2C rows };\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * Returns the real position of the cursor in relation\x0d\n   * to the input prompt + string.\x0d\n   * @returns {{\x0d\n   *   rows: number;\x0d\n   *   cols: number;\x0d\n   *   }}\x0d\n   */\x0d\n  getCursorPos() {\x0d\n    const strBeforeCursor =\x0d\n      this[kPrompt] + StringPrototypeSlice(this.line\x2C 0\x2C this.cursor);\x0d\n    return this[kGetDisplayPos](strBeforeCursor);\x0d\n  }\x0d\n\x0d\n  // This function moves cursor dx places to the right\x0d\n  // (-dx for left) and refreshes the line if it is needed.\x0d\n  [kMoveCursor](dx) {\x0d\n    if (dx === 0) {\x0d\n      return;\x0d\n    }\x0d\n    const oldPos = this.getCursorPos();\x0d\n    this.cursor += dx;\x0d\n\x0d\n    // Bounds check\x0d\n    if (this.cursor < 0) {\x0d\n      this.cursor = 0;\x0d\n    } else if (this.cursor > this.line.length) {\x0d\n      this.cursor = this.line.length;\x0d\n    }\x0d\n\x0d\n    const newPos = this.getCursorPos();\x0d\n\x0d\n    // Check if cursor stayed on the line.\x0d\n    if (oldPos.rows === newPos.rows) {\x0d\n      const diffWidth = newPos.cols - oldPos.cols;\x0d\n      moveCursor(this.output\x2C diffWidth\x2C 0);\x0d\n    } else {\x0d\n      this[kRefreshLine]();\x0d\n    }\x0d\n  }\x0d\n\x0d\n  // Handle a write from the tty\x0d\n  [kTtyWrite](s\x2C key) {\x0d\n    const previousKey = this[kPreviousKey];\x0d\n    key = key || kEmptyObject;\x0d\n    this[kPreviousKey] = key;\x0d\n\x0d\n    if (!key.meta || key.name !== 'y') {\x0d\n      // Reset yanking state unless we are doing yank pop.\x0d\n      this[kYanking] = false;\x0d\n    }\x0d\n\x0d\n    // Activate or deactivate substring search.\x0d\n    if (\x0d\n      (key.name === 'up' || key.name === 'down') &&\x0d\n      !key.ctrl &&\x0d\n      !key.meta &&\x0d\n      !key.shift\x0d\n    ) {\x0d\n      if (this[kSubstringSearch] === null) {\x0d\n        this[kSubstringSearch] = StringPrototypeSlice(\x0d\n          this.line\x2C\x0d\n          0\x2C\x0d\n          this.cursor\x0d\n        );\x0d\n      }\x0d\n    } else if (this[kSubstringSearch] !== null) {\x0d\n      this[kSubstringSearch] = null;\x0d\n      // Reset the index in case there's no match.\x0d\n      if (this.history.length === this.historyIndex) {\x0d\n        this.historyIndex = -1;\x0d\n      }\x0d\n    }\x0d\n\x0d\n    // Undo & Redo\x0d\n    if (typeof key.sequence === 'string') {\x0d\n      switch (StringPrototypeCodePointAt(key.sequence\x2C 0)) {\x0d\n        case 0x1f:\x0d\n          this[kUndo]();\x0d\n          return;\x0d\n        case 0x1e:\x0d\n          this[kRedo]();\x0d\n          return;\x0d\n        default:\x0d\n          break;\x0d\n      }\x0d\n    }\x0d\n\x0d\n    // Ignore escape key\x2C fixes\x0d\n    // https://github.com/nodejs/node-v0.x-archive/issues/2876.\x0d\n    if (key.name === 'escape') return;\x0d\n\x0d\n    if (key.ctrl && key.shift) {\x0d\n      /* Control and shift pressed */\x0d\n      switch (key.name) {\x0d\n        // TODO(BridgeAR): The transmitted escape sequence is `\\b` and that is\x0d\n        // identical to <ctrl>-h. It should have a unique escape sequence.\x0d\n        case 'backspace':\x0d\n          this[kDeleteLineLeft]();\x0d\n          break;\x0d\n\x0d\n        case 'delete':\x0d\n          this[kDeleteLineRight]();\x0d\n          break;\x0d\n      }\x0d\n    } else if (key.ctrl) {\x0d\n      /* Control key pressed */\x0d\n\x0d\n      switch (key.name) {\x0d\n        case 'c':\x0d\n          if (this.listenerCount('SIGINT') > 0) {\x0d\n            this.emit('SIGINT');\x0d\n          } else {\x0d\n            // This readline instance is finished\x0d\n            this.close();\x0d\n          }\x0d\n          break;\x0d\n\x0d\n        case 'h': // delete left\x0d\n          this[kDeleteLeft]();\x0d\n          break;\x0d\n\x0d\n        case 'd': // delete right or EOF\x0d\n          if (this.cursor === 0 && this.line.length === 0) {\x0d\n            // This readline instance is finished\x0d\n            this.close();\x0d\n          } else if (this.cursor < this.line.length) {\x0d\n            this[kDeleteRight]();\x0d\n          }\x0d\n          break;\x0d\n\x0d\n        case 'u': // Delete from current to start of line\x0d\n          this[kDeleteLineLeft]();\x0d\n          break;\x0d\n\x0d\n        case 'k': // Delete from current to end of line\x0d\n          this[kDeleteLineRight]();\x0d\n          break;\x0d\n\x0d\n        case 'a': // Go to the start of the line\x0d\n          this[kMoveCursor](-Infinity);\x0d\n          break;\x0d\n\x0d\n        case 'e': // Go to the end of the line\x0d\n          this[kMoveCursor](+Infinity);\x0d\n          break;\x0d\n\x0d\n        case 'b': // back one character\x0d\n          this[kMoveCursor](-charLengthLeft(this.line\x2C this.cursor));\x0d\n          break;\x0d\n\x0d\n        case 'f': // Forward one character\x0d\n          this[kMoveCursor](+charLengthAt(this.line\x2C this.cursor));\x0d\n          break;\x0d\n\x0d\n        case 'l': // Clear the whole screen\x0d\n          cursorTo(this.output\x2C 0\x2C 0);\x0d\n          clearScreenDown(this.output);\x0d\n          this[kRefreshLine]();\x0d\n          break;\x0d\n\x0d\n        case 'n': // next history item\x0d\n          this[kHistoryNext]();\x0d\n          break;\x0d\n\x0d\n        case 'p': // Previous history item\x0d\n          this[kHistoryPrev]();\x0d\n          break;\x0d\n\x0d\n        case 'y': // Yank killed string\x0d\n          this[kYank]();\x0d\n          break;\x0d\n\x0d\n        case 'z':\x0d\n          if (process.platform === 'win32') break;\x0d\n          if (this.listenerCount('SIGTSTP') > 0) {\x0d\n            this.emit('SIGTSTP');\x0d\n          } else {\x0d\n            process.once('SIGCONT'\x2C () => {\x0d\n              // Don't raise events if stream has already been abandoned.\x0d\n              if (!this.paused) {\x0d\n                // Stream must be paused and resumed after SIGCONT to catch\x0d\n                // SIGINT\x2C SIGTSTP\x2C and EOF.\x0d\n                this.pause();\x0d\n                this.emit('SIGCONT');\x0d\n              }\x0d\n              // Explicitly re-enable "raw mode" and move the cursor to\x0d\n              // the correct position.\x0d\n              // See https://github.com/joyent/node/issues/3295.\x0d\n              this[kSetRawMode](true);\x0d\n              this[kRefreshLine]();\x0d\n            });\x0d\n            this[kSetRawMode](false);\x0d\n            process.kill(process.pid\x2C 'SIGTSTP');\x0d\n          }\x0d\n          break;\x0d\n\x0d\n        case 'w': // Delete backwards to a word boundary\x0d\n        // TODO(BridgeAR): The transmitted escape sequence is `\\b` and that is\x0d\n        // identical to <ctrl>-h. It should have a unique escape sequence.\x0d\n        // Falls through\x0d\n        case 'backspace':\x0d\n          this[kDeleteWordLeft]();\x0d\n          break;\x0d\n\x0d\n        case 'delete': // Delete forward to a word boundary\x0d\n          this[kDeleteWordRight]();\x0d\n          break;\x0d\n\x0d\n        case 'left':\x0d\n          this[kWordLeft]();\x0d\n          break;\x0d\n\x0d\n        case 'right':\x0d\n          this[kWordRight]();\x0d\n          break;\x0d\n      }\x0d\n    } else if (key.meta) {\x0d\n      /* Meta key pressed */\x0d\n\x0d\n      switch (key.name) {\x0d\n        case 'b': // backward word\x0d\n          this[kWordLeft]();\x0d\n          break;\x0d\n\x0d\n        case 'f': // forward word\x0d\n          this[kWordRight]();\x0d\n          break;\x0d\n\x0d\n        case 'd': // delete forward word\x0d\n        case 'delete':\x0d\n          this[kDeleteWordRight]();\x0d\n          break;\x0d\n\x0d\n        case 'backspace': // Delete backwards to a word boundary\x0d\n          this[kDeleteWordLeft]();\x0d\n          break;\x0d\n\x0d\n        case 'y': // Doing yank pop\x0d\n          this[kYankPop]();\x0d\n          break;\x0d\n      }\x0d\n    } else {\x0d\n      /* No modifier keys used */\x0d\n\x0d\n      // \\r bookkeeping is only relevant if a \\n comes right after.\x0d\n      if (this[kSawReturnAt] && key.name !== 'enter') this[kSawReturnAt] = 0;\x0d\n\x0d\n      switch (key.name) {\x0d\n        case 'return': // Carriage return\x2C i.e. \\r\x0d\n          this[kSawReturnAt] = DateNow();\x0d\n          this[kLine]();\x0d\n          break;\x0d\n\x0d\n        case 'enter':\x0d\n          // When key interval > crlfDelay\x0d\n          if (\x0d\n            this[kSawReturnAt] === 0 ||\x0d\n            DateNow() - this[kSawReturnAt] > this.crlfDelay\x0d\n          ) {\x0d\n            this[kLine]();\x0d\n          }\x0d\n          this[kSawReturnAt] = 0;\x0d\n          break;\x0d\n\x0d\n        case 'backspace':\x0d\n          this[kDeleteLeft]();\x0d\n          break;\x0d\n\x0d\n        case 'delete':\x0d\n          this[kDeleteRight]();\x0d\n          break;\x0d\n\x0d\n        case 'left':\x0d\n          // Obtain the code point to the left\x0d\n          this[kMoveCursor](-charLengthLeft(this.line\x2C this.cursor));\x0d\n          break;\x0d\n\x0d\n        case 'right':\x0d\n          this[kMoveCursor](+charLengthAt(this.line\x2C this.cursor));\x0d\n          break;\x0d\n\x0d\n        case 'home':\x0d\n          this[kMoveCursor](-Infinity);\x0d\n          break;\x0d\n\x0d\n        case 'end':\x0d\n          this[kMoveCursor](+Infinity);\x0d\n          break;\x0d\n\x0d\n        case 'up':\x0d\n          this[kHistoryPrev]();\x0d\n          break;\x0d\n\x0d\n        case 'down':\x0d\n          this[kHistoryNext]();\x0d\n          break;\x0d\n\x0d\n        case 'tab':\x0d\n          // If tab completion enabled\x2C do that...\x0d\n          if (\x0d\n            typeof this.completer === 'function' &&\x0d\n            this.isCompletionEnabled\x0d\n          ) {\x0d\n            const lastKeypressWasTab =\x0d\n              previousKey && previousKey.name === 'tab';\x0d\n            this[kTabComplete](lastKeypressWasTab);\x0d\n            break;\x0d\n          }\x0d\n        // falls through\x0d\n        default:\x0d\n          if (typeof s === 'string' && s) {\x0d\n            let nextMatch = RegExpPrototypeExec(lineEnding\x2C s);\x0d\n            if (nextMatch !== null) {\x0d\n              this[kInsertString](StringPrototypeSlice(s\x2C 0\x2C nextMatch.index));\x0d\n              let { lastIndex } = lineEnding;\x0d\n              while ((nextMatch = RegExpPrototypeExec(lineEnding\x2C s)) !== null) {\x0d\n                this[kLine]();\x0d\n                this[kInsertString](StringPrototypeSlice(s\x2C lastIndex\x2C nextMatch.index));\x0d\n                ({ lastIndex } = lineEnding);\x0d\n              }\x0d\n              if (lastIndex === s.length) this[kLine]();\x0d\n            } else {\x0d\n              this[kInsertString](s);\x0d\n            }\x0d\n          }\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * Creates an `AsyncIterator` object that iterates through\x0d\n   * each line in the input stream as a string.\x0d\n   * @typedef {{\x0d\n   *   [Symbol.asyncIterator]: () => InterfaceAsyncIterator\x2C\x0d\n   *   next: () => Promise<string>\x0d\n   * }} InterfaceAsyncIterator\x0d\n   * @returns {InterfaceAsyncIterator}\x0d\n   */\x0d\n  [SymbolAsyncIterator]() {\x0d\n    if (this[kLineObjectStream] === undefined) {\x0d\n      if (Readable === undefined) {\x0d\n        Readable = require('stream').Readable;\x0d\n      }\x0d\n      const readable = new Readable({\x0d\n        objectMode: true\x2C\x0d\n        read: () => {\x0d\n          this.resume();\x0d\n        }\x2C\x0d\n        destroy: (err\x2C cb) => {\x0d\n          this.off('line'\x2C lineListener);\x0d\n          this.off('close'\x2C closeListener);\x0d\n          this.close();\x0d\n          cb(err);\x0d\n        }\x2C\x0d\n      });\x0d\n      const lineListener = (input) => {\x0d\n        if (!readable.push(input)) {\x0d\n          // TODO(rexagod): drain to resume flow\x0d\n          this.pause();\x0d\n        }\x0d\n      };\x0d\n      const closeListener = () => {\x0d\n        readable.push(null);\x0d\n      };\x0d\n      const errorListener = (err) => {\x0d\n        readable.destroy(err);\x0d\n      };\x0d\n      this.on('error'\x2C errorListener);\x0d\n      this.on('line'\x2C lineListener);\x0d\n      this.on('close'\x2C closeListener);\x0d\n      this[kLineObjectStream] = readable;\x0d\n    }\x0d\n\x0d\n    return this[kLineObjectStream][SymbolAsyncIterator]();\x0d\n  }\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  Interface\x2C\x0d\n  InterfaceConstructor\x2C\x0d\n  kAddHistory\x2C\x0d\n  kDecoder\x2C\x0d\n  kDeleteLeft\x2C\x0d\n  kDeleteLineLeft\x2C\x0d\n  kDeleteLineRight\x2C\x0d\n  kDeleteRight\x2C\x0d\n  kDeleteWordLeft\x2C\x0d\n  kDeleteWordRight\x2C\x0d\n  kGetDisplayPos\x2C\x0d\n  kHistoryNext\x2C\x0d\n  kHistoryPrev\x2C\x0d\n  kInsertString\x2C\x0d\n  kLine\x2C\x0d\n  kLine_buffer\x2C\x0d\n  kMoveCursor\x2C\x0d\n  kNormalWrite\x2C\x0d\n  kOldPrompt\x2C\x0d\n  kOnLine\x2C\x0d\n  kPreviousKey\x2C\x0d\n  kPrompt\x2C\x0d\n  kQuestionCallback\x2C\x0d\n  kQuestionCancel\x2C\x0d\n  kRefreshLine\x2C\x0d\n  kSawKeyPress\x2C\x0d\n  kSawReturnAt\x2C\x0d\n  kSetRawMode\x2C\x0d\n  kTabComplete\x2C\x0d\n  kTabCompleter\x2C\x0d\n  kTtyWrite\x2C\x0d\n  kWordLeft\x2C\x0d\n  kWordRight\x2C\x0d\n  kWriteToOutput\x2C\x0d\n};\x0d\n
code-source-info,0x2a6f0ba5d28,468,0,40912,C0O0C4O40912,,
code-creation,Function,10,338143,0x2a6f0ba88d0,1839, node:internal/readline/interface:1:1,0x2a6f0ba5ca0,~
code-source-info,0x2a6f0ba88d
code-creation,Eval,10,339025,0x2a6f0bacb98,5, node:internal/readline/utils:1:1,0x2a6f0bac9a0,~
script-source,469,node:internal/readline/utils,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeSlice\x2C\x0d\n  ArrayPrototypeSort\x2C\x0d\n  RegExpPrototypeExec\x2C\x0d\n  StringFromCharCode\x2C\x0d\n  StringPrototypeCharCodeAt\x2C\x0d\n  StringPrototypeCodePointAt\x2C\x0d\n  StringPrototypeSlice\x2C\x0d\n  StringPrototypeToLowerCase\x2C\x0d\n  Symbol\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst kUTF16SurrogateThreshold = 0x10000; // 2 ** 16\x0d\nconst kEscape = '\\x1b';\x0d\nconst kSubstringSearch = Symbol('kSubstringSearch');\x0d\n\x0d\nfunction CSI(strings\x2C ...args) {\x0d\n  let ret = `${kEscape}[`;\x0d\n  for (let n = 0; n < strings.length; n++) {\x0d\n    ret += strings[n];\x0d\n    if (n < args.length)\x0d\n      ret += args[n];\x0d\n  }\x0d\n  return ret;\x0d\n}\x0d\n\x0d\nCSI.kEscape = kEscape;\x0d\nCSI.kClearToLineBeginning = CSI`1K`;\x0d\nCSI.kClearToLineEnd = CSI`0K`;\x0d\nCSI.kClearLine = CSI`2K`;\x0d\nCSI.kClearScreenDown = CSI`0J`;\x0d\n\x0d\n// TODO(BridgeAR): Treat combined characters as single character\x2C i.e\x2C\x0d\n// 'a\\u0301' and '\\u0301a' (both have the same visual output).\x0d\n// Check Canonical_Combining_Class in\x0d\n// http://userguide.icu-project.org/strings/properties\x0d\nfunction charLengthLeft(str\x2C i) {\x0d\n  if (i <= 0)\x0d\n    return 0;\x0d\n  if ((i > 1 &&\x0d\n      StringPrototypeCodePointAt(str\x2C i - 2) >= kUTF16SurrogateThreshold) ||\x0d\n      StringPrototypeCodePointAt(str\x2C i - 1) >= kUTF16SurrogateThreshold) {\x0d\n    return 2;\x0d\n  }\x0d\n  return 1;\x0d\n}\x0d\n\x0d\nfunction charLengthAt(str\x2C i) {\x0d\n  if (str.length <= i) {\x0d\n    // Pretend to move to the right. This is necessary to autocomplete while\x0d\n    // moving to the right.\x0d\n    return 1;\x0d\n  }\x0d\n  return StringPrototypeCodePointAt(str\x2C i) >= kUTF16SurrogateThreshold ? 2 : 1;\x0d\n}\x0d\n\x0d\n/*\x0d\n  Some patterns seen in terminal key escape codes\x2C derived from combos seen\x0d\n  at http://www.midnight-commander.org/browser/lib/tty/key.c\x0d\n\x0d\n  ESC letter\x0d\n  ESC [ letter\x0d\n  ESC [ modifier letter\x0d\n  ESC [ 1 ; modifier letter\x0d\n  ESC [ num char\x0d\n  ESC [ num ; modifier char\x0d\n  ESC O letter\x0d\n  ESC O modifier letter\x0d\n  ESC O 1 ; modifier letter\x0d\n  ESC N letter\x0d\n  ESC [ [ num ; modifier char\x0d\n  ESC [ [ 1 ; modifier letter\x0d\n  ESC ESC [ num char\x0d\n  ESC ESC O letter\x0d\n\x0d\n  - char is usually ~ but $ and ^ also happen with rxvt\x0d\n  - modifier is 1 +\x0d\n                (shift     * 1) +\x0d\n                (left_alt  * 2) +\x0d\n                (ctrl      * 4) +\x0d\n                (right_alt * 8)\x0d\n  - two leading ESCs apparently mean the same as one leading ESC\x0d\n*/\x0d\nfunction* emitKeys(stream) {\x0d\n  while (true) {\x0d\n    let ch = yield;\x0d\n    let s = ch;\x0d\n    let escaped = false;\x0d\n    const key = {\x0d\n      sequence: null\x2C\x0d\n      name: undefined\x2C\x0d\n      ctrl: false\x2C\x0d\n      meta: false\x2C\x0d\n      shift: false\x0d\n    };\x0d\n\x0d\n    if (ch === kEscape) {\x0d\n      escaped = true;\x0d\n      s += (ch = yield);\x0d\n\x0d\n      if (ch === kEscape) {\x0d\n        s += (ch = yield);\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (escaped && (ch === 'O' || ch === '[')) {\x0d\n      // ANSI escape sequence\x0d\n      let code = ch;\x0d\n      let modifier = 0;\x0d\n\x0d\n      if (ch === 'O') {\x0d\n        // ESC O letter\x0d\n        // ESC O modifier letter\x0d\n        s += (ch = yield);\x0d\n\x0d\n        if (ch >= '0' && ch <= '9') {\x0d\n          modifier = (ch >> 0) - 1;\x0d\n          s += (ch = yield);\x0d\n        }\x0d\n\x0d\n        code += ch;\x0d\n      } else if (ch === '[') {\x0d\n        // ESC [ letter\x0d\n        // ESC [ modifier letter\x0d\n        // ESC [ [ modifier letter\x0d\n        // ESC [ [ num char\x0d\n        s += (ch = yield);\x0d\n\x0d\n        if (ch === '[') {\x0d\n          // \\x1b[[A\x0d\n          //      ^--- escape codes might have a second bracket\x0d\n          code += ch;\x0d\n          s += (ch = yield);\x0d\n        }\x0d\n\x0d\n        /*\x0d\n         * Here and later we try to buffer just enough data to get\x0d\n         * a complete ascii sequence.\x0d\n         *\x0d\n         * We have basically two classes of ascii characters to process:\x0d\n         *\x0d\n         *\x0d\n         * 1. `\\x1b[24;5~` should be parsed as { code: '[24~'\x2C modifier: 5 }\x0d\n         *\x0d\n         * This particular example is featuring Ctrl+F12 in xterm.\x0d\n         *\x0d\n         *  - `;5` part is optional\x2C e.g. it could be `\\x1b[24~`\x0d\n         *  - first part can contain one or two digits\x0d\n         *\x0d\n         * So the generic regexp is like /^\\d\\d?(;\\d)?[~^$]$/\x0d\n         *\x0d\n         *\x0d\n         * 2. `\\x1b[1;5H` should be parsed as { code: '[H'\x2C modifier: 5 }\x0d\n         *\x0d\n         * This particular example is featuring Ctrl+Home in xterm.\x0d\n         *\x0d\n         *  - `1;5` part is optional\x2C e.g. it could be `\\x1b[H`\x0d\n         *  - `1;` part is optional\x2C e.g. it could be `\\x1b[5H`\x0d\n         *\x0d\n         * So the generic regexp is like /^((\\d;)?\\d)?[A-Za-z]$/\x0d\n         *\x0d\n         */\x0d\n        const cmdStart = s.length - 1;\x0d\n\x0d\n        // Skip one or two leading digits\x0d\n        if (ch >= '0' && ch <= '9') {\x0d\n          s += (ch = yield);\x0d\n\x0d\n          if (ch >= '0' && ch <= '9') {\x0d\n            s += (ch = yield);\x0d\n          }\x0d\n        }\x0d\n\x0d\n        // skip modifier\x0d\n        if (ch === ';') {\x0d\n          s += (ch = yield);\x0d\n\x0d\n          if (ch >= '0' && ch <= '9') {\x0d\n            s += yield;\x0d\n          }\x0d\n        }\x0d\n\x0d\n        /*\x0d\n         * We buffered enough data\x2C now trying to extract code\x0d\n         * and modifier from it\x0d\n         */\x0d\n        const cmd = StringPrototypeSlice(s\x2C cmdStart);\x0d\n        let match;\x0d\n\x0d\n        if ((match = RegExpPrototypeExec(/^(\\d\\d?)(;(\\d))?([~^$])$/\x2C cmd))) {\x0d\n          code += match[1] + match[4];\x0d\n          modifier = (match[3] || 1) - 1;\x0d\n        } else if (\x0d\n          (match = RegExpPrototypeExec(/^((\\d;)?(\\d))?([A-Za-z])$/\x2C cmd))\x0d\n        ) {\x0d\n          code += match[4];\x0d\n          modifier = (match[3] || 1) - 1;\x0d\n        } else {\x0d\n          code += cmd;\x0d\n        }\x0d\n      }\x0d\n\x0d\n      // Parse the key modifier\x0d\n      key.ctrl = !!(modifier & 4);\x0d\n      key.meta = !!(modifier & 10);\x0d\n      key.shift = !!(modifier & 1);\x0d\n      key.code = code;\x0d\n\x0d\n      // Parse the key itself\x0d\n      switch (code) {\x0d\n        /* xterm/gnome ESC [ letter (with modifier) */\x0d\n        case '[P': key.name = 'f1'; break;\x0d\n        case '[Q': key.name = 'f2'; break;\x0d\n        case '[R': key.name = 'f3'; break;\x0d\n        case '[S': key.name = 'f4'; break;\x0d\n\x0d\n        /* xterm/gnome ESC O letter (without modifier) */\x0d\n        case 'OP': key.name = 'f1'; break;\x0d\n        case 'OQ': key.name = 'f2'; break;\x0d\n        case 'OR': key.name = 'f3'; break;\x0d\n        case 'OS': key.name = 'f4'; break;\x0d\n\x0d\n        /* xterm/rxvt ESC [ number ~ */\x0d\n        case '[11~': key.name = 'f1'; break;\x0d\n        case '[12~': key.name = 'f2'; break;\x0d\n        case '[13~': key.name = 'f3'; break;\x0d\n        case '[14~': key.name = 'f4'; break;\x0d\n\x0d\n        /* from Cygwin and used in libuv */\x0d\n        case '[[A': key.name = 'f1'; break;\x0d\n        case '[[B': key.name = 'f2'; break;\x0d\n        case '[[C': key.name = 'f3'; break;\x0d\n        case '[[D': key.name = 'f4'; break;\x0d\n        case '[[E': key.name = 'f5'; break;\x0d\n\x0d\n        /* common */\x0d\n        case '[15~': key.name = 'f5'; break;\x0d\n        case '[17~': key.name = 'f6'; break;\x0d\n        case '[18~': key.name = 'f7'; break;\x0d\n        case '[19~': key.name = 'f8'; break;\x0d\n        case '[20~': key.name = 'f9'; break;\x0d\n        case '[21~': key.name = 'f10'; break;\x0d\n        case '[23~': key.name = 'f11'; break;\x0d\n        case '[24~': key.name = 'f12'; break;\x0d\n\x0d\n        /* xterm ESC [ letter */\x0d\n        case '[A': key.name = 'up'; break;\x0d\n        case '[B': key.name = 'down'; break;\x0d\n        case '[C': key.name = 'right'; break;\x0d\n        case '[D': key.name = 'left'; break;\x0d\n        case '[E': key.name = 'clear'; break;\x0d\n        case '[F': key.name = 'end'; break;\x0d\n        case '[H': key.name = 'home'; break;\x0d\n\x0d\n        /* xterm/gnome ESC O letter */\x0d\n        case 'OA': key.name = 'up'; break;\x0d\n        case 'OB': key.name = 'down'; break;\x0d\n        case 'OC': key.name = 'right'; break;\x0d\n        case 'OD': key.name = 'left'; break;\x0d\n        case 'OE': key.name = 'clear'; break;\x0d\n        case 'OF': key.name = 'end'; break;\x0d\n        case 'OH': key.name = 'home'; break;\x0d\n\x0d\n        /* xterm/rxvt ESC [ number ~ */\x0d\n        case '[1~': key.name = 'home'; break;\x0d\n        case '[2~': key.name = 'insert'; break;\x0d\n        case '[3~': key.name = 'delete'; break;\x0d\n        case '[4~': key.name = 'end'; break;\x0d\n        case '[5~': key.name = 'pageup'; break;\x0d\n        case '[6~': key.name = 'pagedown'; break;\x0d\n\x0d\n        /* putty */\x0d\n        case '[[5~': key.name = 'pageup'; break;\x0d\n        case '[[6~': key.name = 'pagedown'; break;\x0d\n\x0d\n        /* rxvt */\x0d\n        case '[7~': key.name = 'home'; break;\x0d\n        case '[8~': key.name = 'end'; break;\x0d\n\x0d\n        /* rxvt keys with modifiers */\x0d\n        case '[a': key.name = 'up'; key.shift = true; break;\x0d\n        case '[b': key.name = 'down'; key.shift = true; break;\x0d\n        case '[c': key.name = 'right'; key.shift = true; break;\x0d\n        case '[d': key.name = 'left'; key.shift = true; break;\x0d\n        case '[e': key.name = 'clear'; key.shift = true; break;\x0d\n\x0d\n        case '[2$': key.name = 'insert'; key.shift = true; break;\x0d\n        case '[3$': key.name = 'delete'; key.shift = true; break;\x0d\n        case '[5$': key.name = 'pageup'; key.shift = true; break;\x0d\n        case '[6$': key.name = 'pagedown'; key.shift = true; break;\x0d\n        case '[7$': key.name = 'home'; key.shift = true; break;\x0d\n        case '[8$': key.name = 'end'; key.shift = true; break;\x0d\n\x0d\n        case 'Oa': key.name = 'up'; key.ctrl = true; break;\x0d\n        case 'Ob': key.name = 'down'; key.ctrl = true; break;\x0d\n        case 'Oc': key.name = 'right'; key.ctrl = true; break;\x0d\n        case 'Od': key.name = 'left'; key.ctrl = true; break;\x0d\n        case 'Oe': key.name = 'clear'; key.ctrl = true; break;\x0d\n\x0d\n        case '[2^': key.name = 'insert'; key.ctrl = true; break;\x0d\n        case '[3^': key.name = 'delete'; key.ctrl = true; break;\x0d\n        case '[5^': key.name = 'pageup'; key.ctrl = true; break;\x0d\n        case '[6^': key.name = 'pagedown'; key.ctrl = true; break;\x0d\n        case '[7^': key.name = 'home'; key.ctrl = true; break;\x0d\n        case '[8^': key.name = 'end'; key.ctrl = true; break;\x0d\n\x0d\n        /* misc. */\x0d\n        case '[Z': key.name = 'tab'; key.shift = true; break;\x0d\n        default: key.name = 'undefined'; break;\x0d\n      }\x0d\n    } else if (ch === '\\r') {\x0d\n      // carriage return\x0d\n      key.name = 'return';\x0d\n      key.meta = escaped;\x0d\n    } else if (ch === '\\n') {\x0d\n      // Enter\x2C should have been called linefeed\x0d\n      key.name = 'enter';\x0d\n      key.meta = escaped;\x0d\n    } else if (ch === '\\t') {\x0d\n      // tab\x0d\n      key.name = 'tab';\x0d\n      key.meta = escaped;\x0d\n    } else if (ch === '\\b' || ch === '\\x7f') {\x0d\n      // backspace or ctrl+h\x0d\n      key.name = 'backspace';\x0d\n      key.meta = escaped;\x0d\n    } else if (ch === kEscape) {\x0d\n      // escape key\x0d\n      key.name = 'escape';\x0d\n      key.meta = escaped;\x0d\n    } else if (ch === ' ') {\x0d\n      key.name = 'space';\x0d\n      key.meta = escaped;\x0d\n    } else if (!escaped && ch <= '\\x1a') {\x0d\n      // ctrl+letter\x0d\n      key.name = StringFromCharCode(\x0d\n        StringPrototypeCharCodeAt(ch) + StringPrototypeCharCodeAt('a') - 1\x0d\n      );\x0d\n      key.ctrl = true;\x0d\n    } else if (RegExpPrototypeExec(/^[0-9A-Za-z]$/\x2C ch) !== null) {\x0d\n      // Letter\x2C number\x2C shift+letter\x0d\n      key.name = StringPrototypeToLowerCase(ch);\x0d\n      key.shift = RegExpPrototypeExec(/^[A-Z]$/\x2C ch) !== null;\x0d\n      key.meta = escaped;\x0d\n    } else if (escaped) {\x0d\n      // Escape sequence timeout\x0d\n      key.name = ch.length ? undefined : 'escape';\x0d\n      key.meta = true;\x0d\n    }\x0d\n\x0d\n    key.sequence = s;\x0d\n\x0d\n    if (s.length !== 0 && (key.name !== undefined || escaped)) {\x0d\n      /* Named character or sequence */\x0d\n      stream.emit('keypress'\x2C escaped ? undefined : s\x2C key);\x0d\n    } else if (charLengthAt(s\x2C 0) === s.length) {\x0d\n      /* Single unnamed character\x2C e.g. "." */\x0d\n      stream.emit('keypress'\x2C s\x2C key);\x0d\n    }\x0d\n    /* Unrecognized or broken escape sequence\x2C don't emit anything */\x0d\n  }\x0d\n}\x0d\n\x0d\n// This runs in O(n log n).\x0d\nfunction commonPrefix(strings) {\x0d\n  if (strings.length === 0) {\x0d\n    return '';\x0d\n  }\x0d\n  if (strings.length === 1) {\x0d\n    return strings[0];\x0d\n  }\x0d\n  const sorted = ArrayPrototypeSort(ArrayPrototypeSlice(strings));\x0d\n  const min = sorted[0];\x0d\n  const max = sorted[sorted.length - 1];\x0d\n  for (let i = 0; i < min.length; i++) {\x0d\n    if (min[i] !== max[i]) {\x0d\n      return StringPrototypeSlice(min\x2C 0\x2C i);\x0d\n    }\x0d\n  }\x0d\n  return min;\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  charLengthAt\x2C\x0d\n  charLengthLeft\x2C\x0d\n  commonPrefix\x2C\x0d\n  emitKeys\x2C\x0d\n  kSubstringSearch\x2C\x0d\n  CSI\x0d\n};\x0d\n
code-source-info,0x2a6f0bacb98,469,0,12292,C0O0C4O12292,,
code-creation,Function,10,339883,0x2a6f0bacfe0,237, node:internal/readline/utils:1:1,0x2a6f0bacb10,~
code-source-info,0x2a6f0bacfe0,469,0,12292,C0O0C61O28C67O52C73O75C79O99C85O122C91O152C97O183C103O208C109O239C114O301C120O301C122O338C124O338C126O372C129O372C134O609C136O621C140O664C144O664C148O659C152O696C156O696C160O691C164O723C168O723C172O718C176O756C180O756C184O751C188O12174C195O12196C201O12213C207O12232C213O12249C219O12262C225O12283C231O12189C236O12291,,
code-creation,LazyCompile,10,340113,0x2a6f0bae158,75,CSI node:internal/readline/utils:19:13,0x2a6f0bacbc8,~
code-source-info,0x2a6f0bae158,469,415,605,C0O415C8O449C20O480C22O495C26O485C31O515C33O529C43O552C47O545C52O567C54O578C64O504C69O467C72O591C74O602,,
code-creation,Eval,10,340351,0x2a6f0baf360,5, node:internal/readline/callbacks:1:1,0x2a6f0baf178,~
script-source,470,node:internal/readline/callbacks,'use strict';\x0d\n\x0d\nconst {\x0d\n  NumberIsNaN\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  codes: {\x0d\n    ERR_INVALID_ARG_VALUE\x2C\x0d\n    ERR_INVALID_CURSOR_POS\x2C\x0d\n  }\x2C\x0d\n} = require('internal/errors');\x0d\n\x0d\nconst {\x0d\n  validateFunction\x2C\x0d\n} = require('internal/validators');\x0d\nconst {\x0d\n  CSI\x2C\x0d\n} = require('internal/readline/utils');\x0d\n\x0d\nconst {\x0d\n  kClearLine\x2C\x0d\n  kClearScreenDown\x2C\x0d\n  kClearToLineBeginning\x2C\x0d\n  kClearToLineEnd\x2C\x0d\n} = CSI;\x0d\n\x0d\n\x0d\n/**\x0d\n * moves the cursor to the x and y coordinate on the given stream\x0d\n */\x0d\n\x0d\nfunction cursorTo(stream\x2C x\x2C y\x2C callback) {\x0d\n  if (callback !== undefined) {\x0d\n    validateFunction(callback\x2C 'callback');\x0d\n  }\x0d\n\x0d\n  if (typeof y === 'function') {\x0d\n    callback = y;\x0d\n    y = undefined;\x0d\n  }\x0d\n\x0d\n  if (NumberIsNaN(x)) throw new ERR_INVALID_ARG_VALUE('x'\x2C x);\x0d\n  if (NumberIsNaN(y)) throw new ERR_INVALID_ARG_VALUE('y'\x2C y);\x0d\n\x0d\n  if (stream == null || (typeof x !== 'number' && typeof y !== 'number')) {\x0d\n    if (typeof callback === 'function') process.nextTick(callback\x2C null);\x0d\n    return true;\x0d\n  }\x0d\n\x0d\n  if (typeof x !== 'number') throw new ERR_INVALID_CURSOR_POS();\x0d\n\x0d\n  const data = typeof y !== 'number' ? CSI`${x + 1}G` : CSI`${y + 1};${x + 1}H`;\x0d\n  return stream.write(data\x2C callback);\x0d\n}\x0d\n\x0d\n/**\x0d\n * moves the cursor relative to its current location\x0d\n */\x0d\n\x0d\nfunction moveCursor(stream\x2C dx\x2C dy\x2C callback) {\x0d\n  if (callback !== undefined) {\x0d\n    validateFunction(callback\x2C 'callback');\x0d\n  }\x0d\n\x0d\n  if (stream == null || !(dx || dy)) {\x0d\n    if (typeof callback === 'function') process.nextTick(callback\x2C null);\x0d\n    return true;\x0d\n  }\x0d\n\x0d\n  let data = '';\x0d\n\x0d\n  if (dx < 0) {\x0d\n    data += CSI`${-dx}D`;\x0d\n  } else if (dx > 0) {\x0d\n    data += CSI`${dx}C`;\x0d\n  }\x0d\n\x0d\n  if (dy < 0) {\x0d\n    data += CSI`${-dy}A`;\x0d\n  } else if (dy > 0) {\x0d\n    data += CSI`${dy}B`;\x0d\n  }\x0d\n\x0d\n  return stream.write(data\x2C callback);\x0d\n}\x0d\n\x0d\n/**\x0d\n * clears the current line the cursor is on:\x0d\n *   -1 for left of the cursor\x0d\n *   +1 for right of the cursor\x0d\n *    0 for the entire line\x0d\n */\x0d\n\x0d\nfunction clearLine(stream\x2C dir\x2C callback) {\x0d\n  if (callback !== undefined) {\x0d\n    validateFunction(callback\x2C 'callback');\x0d\n  }\x0d\n\x0d\n  if (stream === null || stream === undefined) {\x0d\n    if (typeof callback === 'function') process.nextTick(callback\x2C null);\x0d\n    return true;\x0d\n  }\x0d\n\x0d\n  const type =\x0d\n    dir < 0 ? kClearToLineBeginning : dir > 0 ? kClearToLineEnd : kClearLine;\x0d\n  return stream.write(type\x2C callback);\x0d\n}\x0d\n\x0d\n/**\x0d\n * clears the screen from the current position of the cursor down\x0d\n */\x0d\n\x0d\nfunction clearScreenDown(stream\x2C callback) {\x0d\n  if (callback !== undefined) {\x0d\n    validateFunction(callback\x2C 'callback');\x0d\n  }\x0d\n\x0d\n  if (stream === null || stream === undefined) {\x0d\n    if (typeof callback === 'function') process.nextTick(callback\x2C null);\x0d\n    return true;\x0d\n  }\x0d\n\x0d\n  return stream.write(kClearScreenDown\x2C callback);\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  clearLine\x2C\x0d\n  clearScreenDown\x2C\x0d\n  cursorTo\x2C\x0d\n  moveCursor\x2C\x0d\n};\x0d\n
code-source-info,0x2a6f0baf360,470,0,2886,C0O0C4O2886,,
code-creation,Function,10,340616,0x2a6f0baf630,179, node:internal/readline/callbacks:1:1,0x2a6f0baf2d8,~
code-source-info,0x2a6f0baf630,470,0,2886,C0O0C56O28C62O150C65O150C70O150C75O87C81O115C87O215C90O215C95O192C101O269C104O269C109O259C115O403C118O319C124O334C130O355C136O381C142O2800C149O2822C155O2836C161O2856C167O2869C173O2815C178O2885,,
code-creation,LazyCompile,10,341076,0x2a6f0bb03f8,112,EventEmitterMixin node:internal/event_target:1061:27,0x113713cabd0,~
script-source,47,node:internal/event_target,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayFrom\x2C\x0d\n  Boolean\x2C\x0d\n  Error\x2C\x0d\n  FunctionPrototypeCall\x2C\x0d\n  NumberIsInteger\x2C\x0d\n  ObjectAssign\x2C\x0d\n  ObjectDefineProperties\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectGetOwnPropertyDescriptor\x2C\x0d\n  ObjectGetOwnPropertyDescriptors\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  ObjectValues\x2C\x0d\n  ReflectApply\x2C\x0d\n  SafeArrayIterator\x2C\x0d\n  SafeFinalizationRegistry\x2C\x0d\n  SafeMap\x2C\x0d\n  SafeWeakMap\x2C\x0d\n  SafeWeakRef\x2C\x0d\n  SafeWeakSet\x2C\x0d\n  String\x2C\x0d\n  Symbol\x2C\x0d\n  SymbolFor\x2C\x0d\n  SymbolToStringTag\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  codes: {\x0d\n    ERR_INVALID_ARG_TYPE\x2C\x0d\n    ERR_EVENT_RECURSION\x2C\x0d\n    ERR_MISSING_ARGS\x2C\x0d\n    ERR_INVALID_THIS\x2C\x0d\n  }\x0d\n} = require('internal/errors');\x0d\nconst { validateObject\x2C validateString } = require('internal/validators');\x0d\n\x0d\nconst {\x0d\n  customInspectSymbol\x2C\x0d\n  kEmptyObject\x2C\x0d\n  kEnumerableProperty\x2C\x0d\n} = require('internal/util');\x0d\nconst { inspect } = require('util');\x0d\n\x0d\nconst kIsEventTarget = SymbolFor('nodejs.event_target');\x0d\nconst kIsNodeEventTarget = Symbol('kIsNodeEventTarget');\x0d\n\x0d\nconst EventEmitter = require('events');\x0d\nconst {\x0d\n  kMaxEventTargetListeners\x2C\x0d\n  kMaxEventTargetListenersWarned\x2C\x0d\n} = EventEmitter;\x0d\n\x0d\nconst kEvents = Symbol('kEvents');\x0d\nconst kIsBeingDispatched = Symbol('kIsBeingDispatched');\x0d\nconst kStop = Symbol('kStop');\x0d\nconst kTarget = Symbol('kTarget');\x0d\nconst kHandlers = Symbol('khandlers');\x0d\nconst kWeakHandler = Symbol('kWeak');\x0d\n\x0d\nconst kHybridDispatch = SymbolFor('nodejs.internal.kHybridDispatch');\x0d\nconst kCreateEvent = Symbol('kCreateEvent');\x0d\nconst kNewListener = Symbol('kNewListener');\x0d\nconst kRemoveListener = Symbol('kRemoveListener');\x0d\nconst kIsNodeStyleListener = Symbol('kIsNodeStyleListener');\x0d\nconst kTrustEvent = Symbol('kTrustEvent');\x0d\n\x0d\nconst { now } = require('internal/perf/utils');\x0d\n\x0d\nconst kType = Symbol('type');\x0d\nconst kDetail = Symbol('detail');\x0d\n\x0d\nconst isTrustedSet = new SafeWeakSet();\x0d\nconst isTrusted = ObjectGetOwnPropertyDescriptor({\x0d\n  get isTrusted() {\x0d\n    return isTrustedSet.has(this);\x0d\n  }\x0d\n}\x2C 'isTrusted').get;\x0d\n\x0d\nfunction isEvent(value) {\x0d\n  return typeof value?.[kType] === 'string';\x0d\n}\x0d\n\x0d\nclass Event {\x0d\n  #cancelable = false;\x0d\n  #bubbles = false;\x0d\n  #composed = false;\x0d\n  #defaultPrevented = false;\x0d\n  #timestamp = now();\x0d\n  #propagationStopped = false;\x0d\n\x0d\n  /**\x0d\n   * @param {string} type\x0d\n   * @param {{\x0d\n   *   bubbles?: boolean\x2C\x0d\n   *   cancelable?: boolean\x2C\x0d\n   *   composed?: boolean\x2C\x0d\n   * }} [options]\x0d\n   */\x0d\n  constructor(type\x2C options = kEmptyObject) {\x0d\n    if (arguments.length === 0)\x0d\n      throw new ERR_MISSING_ARGS('type');\x0d\n    validateObject(options\x2C 'options');\x0d\n    const { bubbles\x2C cancelable\x2C composed } = options;\x0d\n    this.#cancelable = !!cancelable;\x0d\n    this.#bubbles = !!bubbles;\x0d\n    this.#composed = !!composed;\x0d\n\x0d\n    this[kType] = `${type}`;\x0d\n    if (options?.[kTrustEvent]) {\x0d\n      isTrustedSet.add(this);\x0d\n    }\x0d\n\x0d\n    // isTrusted is special (LegacyUnforgeable)\x0d\n    ObjectDefineProperty(this\x2C 'isTrusted'\x2C {\x0d\n      __proto__: null\x2C\x0d\n      get: isTrusted\x2C\x0d\n      enumerable: true\x2C\x0d\n      configurable: false\x0d\n    });\x0d\n    this[kTarget] = null;\x0d\n    this[kIsBeingDispatched] = false;\x0d\n  }\x0d\n\x0d\n  [customInspectSymbol](depth\x2C options) {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    const name = this.constructor.name;\x0d\n    if (depth < 0)\x0d\n      return name;\x0d\n\x0d\n    const opts = ObjectAssign({}\x2C options\x2C {\x0d\n      depth: NumberIsInteger(options.depth) ? options.depth - 1 : options.depth\x0d\n    });\x0d\n\x0d\n    return `${name} ${inspect({\x0d\n      type: this[kType]\x2C\x0d\n      defaultPrevented: this.#defaultPrevented\x2C\x0d\n      cancelable: this.#cancelable\x2C\x0d\n      timeStamp: this.#timestamp\x2C\x0d\n    }\x2C opts)}`;\x0d\n  }\x0d\n\x0d\n  stopImmediatePropagation() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    this[kStop] = true;\x0d\n  }\x0d\n\x0d\n  preventDefault() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    this.#defaultPrevented = true;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @type {EventTarget}\x0d\n   */\x0d\n  get target() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    return this[kTarget];\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @type {EventTarget}\x0d\n   */\x0d\n  get currentTarget() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    return this[kTarget];\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @type {EventTarget}\x0d\n   */\x0d\n  get srcElement() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    return this[kTarget];\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @type {string}\x0d\n   */\x0d\n  get type() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    return this[kType];\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @type {boolean}\x0d\n   */\x0d\n  get cancelable() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    return this.#cancelable;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @type {boolean}\x0d\n   */\x0d\n  get defaultPrevented() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    return this.#cancelable && this.#defaultPrevented;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @type {number}\x0d\n   */\x0d\n  get timeStamp() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    return this.#timestamp;\x0d\n  }\x0d\n\x0d\n\x0d\n  // The following are non-op and unused properties/methods from Web API Event.\x0d\n  // These are not supported in Node.js and are provided purely for\x0d\n  // API completeness.\x0d\n  /**\x0d\n   * @returns {EventTarget[]}\x0d\n   */\x0d\n  composedPath() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    return this[kIsBeingDispatched] ? [this[kTarget]] : [];\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @type {boolean}\x0d\n   */\x0d\n  get returnValue() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    return !this.defaultPrevented;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @type {boolean}\x0d\n   */\x0d\n  get bubbles() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    return this.#bubbles;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @type {boolean}\x0d\n   */\x0d\n  get composed() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    return this.#composed;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @type {number}\x0d\n   */\x0d\n  get eventPhase() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    return this[kIsBeingDispatched] ? Event.AT_TARGET : Event.NONE;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @type {boolean}\x0d\n   */\x0d\n  get cancelBubble() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    return this.#propagationStopped;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @type {boolean}\x0d\n   */\x0d\n  set cancelBubble(value) {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    if (value) {\x0d\n      this.stopPropagation();\x0d\n    }\x0d\n  }\x0d\n\x0d\n  stopPropagation() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    this.#propagationStopped = true;\x0d\n  }\x0d\n\x0d\n  static NONE = 0;\x0d\n  static CAPTURING_PHASE = 1;\x0d\n  static AT_TARGET = 2;\x0d\n  static BUBBLING_PHASE = 3;\x0d\n}\x0d\n\x0d\nObjectDefineProperties(\x0d\n  Event.prototype\x2C {\x0d\n    [SymbolToStringTag]: {\x0d\n      __proto__: null\x2C\x0d\n      writable: false\x2C\x0d\n      enumerable: false\x2C\x0d\n      configurable: true\x2C\x0d\n      value: 'Event'\x2C\x0d\n    }\x2C\x0d\n    stopImmediatePropagation: kEnumerableProperty\x2C\x0d\n    preventDefault: kEnumerableProperty\x2C\x0d\n    target: kEnumerableProperty\x2C\x0d\n    currentTarget: kEnumerableProperty\x2C\x0d\n    srcElement: kEnumerableProperty\x2C\x0d\n    type: kEnumerableProperty\x2C\x0d\n    cancelable: kEnumerableProperty\x2C\x0d\n    defaultPrevented: kEnumerableProperty\x2C\x0d\n    timeStamp: kEnumerableProperty\x2C\x0d\n    composedPath: kEnumerableProperty\x2C\x0d\n    returnValue: kEnumerableProperty\x2C\x0d\n    bubbles: kEnumerableProperty\x2C\x0d\n    composed: kEnumerableProperty\x2C\x0d\n    eventPhase: kEnumerableProperty\x2C\x0d\n    cancelBubble: kEnumerableProperty\x2C\x0d\n    stopPropagation: kEnumerableProperty\x2C\x0d\n  });\x0d\n\x0d\nfunction isCustomEvent(value) {\x0d\n  return isEvent(value) && (value?.[kDetail] !== undefined);\x0d\n}\x0d\n\x0d\nclass CustomEvent extends Event {\x0d\n  /**\x0d\n   * @constructor\x0d\n   * @param {string} type\x0d\n   * @param {{\x0d\n   *   bubbles?: boolean\x2C\x0d\n   *   cancelable?: boolean\x2C\x0d\n   *   composed?: boolean\x2C\x0d\n   *   detail?: any\x2C\x0d\n   * }} [options]\x0d\n   */\x0d\n  constructor(type\x2C options = kEmptyObject) {\x0d\n    if (arguments.length === 0)\x0d\n      throw new ERR_MISSING_ARGS('type');\x0d\n    super(type\x2C options);\x0d\n    this[kDetail] = options?.detail ?? null;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @type {any}\x0d\n   */\x0d\n  get detail() {\x0d\n    if (!isCustomEvent(this))\x0d\n      throw new ERR_INVALID_THIS('CustomEvent');\x0d\n    return this[kDetail];\x0d\n  }\x0d\n}\x0d\n\x0d\nObjectDefineProperties(CustomEvent.prototype\x2C {\x0d\n  [SymbolToStringTag]: {\x0d\n    __proto__: null\x2C\x0d\n    writable: false\x2C\x0d\n    enumerable: false\x2C\x0d\n    configurable: true\x2C\x0d\n    value: 'CustomEvent'\x2C\x0d\n  }\x2C\x0d\n  detail: kEnumerableProperty\x2C\x0d\n});\x0d\n\x0d\nclass NodeCustomEvent extends Event {\x0d\n  constructor(type\x2C options) {\x0d\n    super(type\x2C options);\x0d\n    if (options?.detail) {\x0d\n      this.detail = options.detail;\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\n// Weak listener cleanup\x0d\n// This has to be lazy for snapshots to work\x0d\nlet weakListenersState = null;\x0d\n// The resource needs to retain the callback so that it doesn't\x0d\n// get garbage collected now that it's weak.\x0d\nlet objectToWeakListenerMap = null;\x0d\nfunction weakListeners() {\x0d\n  weakListenersState ??= new SafeFinalizationRegistry(\x0d\n    (listener) => listener.remove()\x0d\n  );\x0d\n  objectToWeakListenerMap ??= new SafeWeakMap();\x0d\n  return { registry: weakListenersState\x2C map: objectToWeakListenerMap };\x0d\n}\x0d\n\x0d\nconst kFlagOnce = 1 << 0;\x0d\nconst kFlagCapture = 1 << 1;\x0d\nconst kFlagPassive = 1 << 2;\x0d\nconst kFlagNodeStyle = 1 << 3;\x0d\nconst kFlagWeak = 1 << 4;\x0d\nconst kFlagRemoved = 1 << 5;\x0d\n\x0d\n// The listeners for an EventTarget are maintained as a linked list.\x0d\n// Unfortunately\x2C the way EventTarget is defined\x2C listeners are accounted\x0d\n// using the tuple [handler\x2Ccapture]\x2C and even if we don't actually make\x0d\n// use of capture or bubbling\x2C in order to be spec compliant we have to\x0d\n// take on the additional complexity of supporting it. Fortunately\x2C using\x0d\n// the linked list makes dispatching faster\x2C even if adding/removing is\x0d\n// slower.\x0d\nclass Listener {\x0d\n  constructor(previous\x2C listener\x2C once\x2C capture\x2C passive\x2C\x0d\n              isNodeStyleListener\x2C weak) {\x0d\n    this.next = undefined;\x0d\n    if (previous !== undefined)\x0d\n      previous.next = this;\x0d\n    this.previous = previous;\x0d\n    this.listener = listener;\x0d\n\x0d\n    let flags = 0b0;\x0d\n    if (once)\x0d\n      flags |= kFlagOnce;\x0d\n    if (capture)\x0d\n      flags |= kFlagCapture;\x0d\n    if (passive)\x0d\n      flags |= kFlagPassive;\x0d\n    if (isNodeStyleListener)\x0d\n      flags |= kFlagNodeStyle;\x0d\n    if (weak)\x0d\n      flags |= kFlagWeak;\x0d\n    this.flags = flags;\x0d\n\x0d\n    this.removed = false;\x0d\n\x0d\n    if (this.weak) {\x0d\n      this.callback = new SafeWeakRef(listener);\x0d\n      weakListeners().registry.register(listener\x2C this\x2C this);\x0d\n      // Make the retainer retain the listener in a WeakMap\x0d\n      weakListeners().map.set(weak\x2C listener);\x0d\n      this.listener = this.callback;\x0d\n    } else if (typeof listener === 'function') {\x0d\n      this.callback = listener;\x0d\n      this.listener = listener;\x0d\n    } else {\x0d\n      this.callback = async (...args) => {\x0d\n        if (listener.handleEvent)\x0d\n          await ReflectApply(listener.handleEvent\x2C listener\x2C args);\x0d\n      };\x0d\n      this.listener = listener;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  get once() {\x0d\n    return Boolean(this.flags & kFlagOnce);\x0d\n  }\x0d\n  get capture() {\x0d\n    return Boolean(this.flags & kFlagCapture);\x0d\n  }\x0d\n  get passive() {\x0d\n    return Boolean(this.flags & kFlagPassive);\x0d\n  }\x0d\n  get isNodeStyleListener() {\x0d\n    return Boolean(this.flags & kFlagNodeStyle);\x0d\n  }\x0d\n  get weak() {\x0d\n    return Boolean(this.flags & kFlagWeak);\x0d\n  }\x0d\n  get removed() {\x0d\n    return Boolean(this.flags & kFlagRemoved);\x0d\n  }\x0d\n  set removed(value) {\x0d\n    if (value)\x0d\n      this.flags |= kFlagRemoved;\x0d\n    else\x0d\n      this.flags &= ~kFlagRemoved;\x0d\n  }\x0d\n\x0d\n  same(listener\x2C capture) {\x0d\n    const myListener = this.weak ? this.listener.deref() : this.listener;\x0d\n    return myListener === listener && this.capture === capture;\x0d\n  }\x0d\n\x0d\n  remove() {\x0d\n    if (this.previous !== undefined)\x0d\n      this.previous.next = this.next;\x0d\n    if (this.next !== undefined)\x0d\n      this.next.previous = this.previous;\x0d\n    this.removed = true;\x0d\n    if (this.weak)\x0d\n      weakListeners().registry.unregister(this);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction initEventTarget(self) {\x0d\n  self[kEvents] = new SafeMap();\x0d\n  self[kMaxEventTargetListeners] = EventEmitter.defaultMaxListeners;\x0d\n  self[kMaxEventTargetListenersWarned] = false;\x0d\n}\x0d\n\x0d\nclass EventTarget {\x0d\n  // Used in checking whether an object is an EventTarget. This is a well-known\x0d\n  // symbol as EventTarget may be used cross-realm.\x0d\n  // Ref: https://github.com/nodejs/node/pull/33661\x0d\n  static [kIsEventTarget] = true;\x0d\n\x0d\n  constructor() {\x0d\n    initEventTarget(this);\x0d\n  }\x0d\n\x0d\n  [kNewListener](size\x2C type\x2C listener\x2C once\x2C capture\x2C passive\x2C weak) {\x0d\n    if (this[kMaxEventTargetListeners] > 0 &&\x0d\n        size > this[kMaxEventTargetListeners] &&\x0d\n        !this[kMaxEventTargetListenersWarned]) {\x0d\n      this[kMaxEventTargetListenersWarned] = true;\x0d\n      // No error code for this since it is a Warning\x0d\n      // eslint-disable-next-line no-restricted-syntax\x0d\n      const w = new Error('Possible EventTarget memory leak detected. ' +\x0d\n                          `${size} ${type} listeners ` +\x0d\n                          `added to ${inspect(this\x2C { depth: -1 })}. Use ` +\x0d\n                          'events.setMaxListeners() to increase limit');\x0d\n      w.name = 'MaxListenersExceededWarning';\x0d\n      w.target = this;\x0d\n      w.type = type;\x0d\n      w.count = size;\x0d\n      process.emitWarning(w);\x0d\n    }\x0d\n  }\x0d\n  [kRemoveListener](size\x2C type\x2C listener\x2C capture) {}\x0d\n\x0d\n  /**\x0d\n   * @callback EventTargetCallback\x0d\n   * @param {Event} event\x0d\n   */\x0d\n\x0d\n  /**\x0d\n   * @typedef {{ handleEvent: EventTargetCallback }} EventListener\x0d\n   */\x0d\n\x0d\n  /**\x0d\n   * @param {string} type\x0d\n   * @param {EventTargetCallback|EventListener} listener\x0d\n   * @param {{\x0d\n   *   capture?: boolean\x2C\x0d\n   *   once?: boolean\x2C\x0d\n   *   passive?: boolean\x2C\x0d\n   *   signal?: AbortSignal\x0d\n   * }} [options]\x0d\n   */\x0d\n  addEventListener(type\x2C listener\x2C options = kEmptyObject) {\x0d\n    if (!isEventTarget(this))\x0d\n      throw new ERR_INVALID_THIS('EventTarget');\x0d\n    if (arguments.length < 2)\x0d\n      throw new ERR_MISSING_ARGS('type'\x2C 'listener');\x0d\n\x0d\n    // We validateOptions before the validateListener check because the spec\x0d\n    // requires us to hit getters.\x0d\n    const {\x0d\n      once\x2C\x0d\n      capture\x2C\x0d\n      passive\x2C\x0d\n      signal\x2C\x0d\n      isNodeStyleListener\x2C\x0d\n      weak\x2C\x0d\n    } = validateEventListenerOptions(options);\x0d\n\x0d\n    if (!validateEventListener(listener)) {\x0d\n      // The DOM silently allows passing undefined as a second argument\x0d\n      // No error code for this since it is a Warning\x0d\n      // eslint-disable-next-line no-restricted-syntax\x0d\n      const w = new Error(`addEventListener called with ${listener}` +\x0d\n                          ' which has no effect.');\x0d\n      w.name = 'AddEventListenerArgumentTypeWarning';\x0d\n      w.target = this;\x0d\n      w.type = type;\x0d\n      process.emitWarning(w);\x0d\n      return;\x0d\n    }\x0d\n    type = String(type);\x0d\n\x0d\n    if (signal) {\x0d\n      if (signal.aborted) {\x0d\n        return;\x0d\n      }\x0d\n      // TODO(benjamingr) make this weak somehow? ideally the signal would\x0d\n      // not prevent the event target from GC.\x0d\n      signal.addEventListener('abort'\x2C () => {\x0d\n        this.removeEventListener(type\x2C listener\x2C options);\x0d\n      }\x2C { once: true\x2C [kWeakHandler]: this });\x0d\n    }\x0d\n\x0d\n    let root = this[kEvents].get(type);\x0d\n\x0d\n    if (root === undefined) {\x0d\n      root = { size: 1\x2C next: undefined };\x0d\n      // This is the first handler in our linked list.\x0d\n      new Listener(root\x2C listener\x2C once\x2C capture\x2C passive\x2C\x0d\n                   isNodeStyleListener\x2C weak);\x0d\n      this[kNewListener](\x0d\n        root.size\x2C\x0d\n        type\x2C\x0d\n        listener\x2C\x0d\n        once\x2C\x0d\n        capture\x2C\x0d\n        passive\x2C\x0d\n        weak);\x0d\n      this[kEvents].set(type\x2C root);\x0d\n      return;\x0d\n    }\x0d\n\x0d\n    let handler = root.next;\x0d\n    let previous = root;\x0d\n\x0d\n    // We have to walk the linked list to see if we have a match\x0d\n    while (handler !== undefined && !handler.same(listener\x2C capture)) {\x0d\n      previous = handler;\x0d\n      handler = handler.next;\x0d\n    }\x0d\n\x0d\n    if (handler !== undefined) { // Duplicate! Ignore\x0d\n      return;\x0d\n    }\x0d\n\x0d\n    new Listener(previous\x2C listener\x2C once\x2C capture\x2C passive\x2C\x0d\n                 isNodeStyleListener\x2C weak);\x0d\n    root.size++;\x0d\n    this[kNewListener](root.size\x2C type\x2C listener\x2C once\x2C capture\x2C passive\x2C weak);\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @param {string} type\x0d\n   * @param {EventTargetCallback|EventListener} listener\x0d\n   * @param {{\x0d\n   *   capture?: boolean\x2C\x0d\n   * }} [options]\x0d\n   */\x0d\n  removeEventListener(type\x2C listener\x2C options = kEmptyObject) {\x0d\n    if (!isEventTarget(this))\x0d\n      throw new ERR_INVALID_THIS('EventTarget');\x0d\n    if (arguments.length < 2)\x0d\n      throw new ERR_MISSING_ARGS('type'\x2C 'listener');\x0d\n    if (!validateEventListener(listener))\x0d\n      return;\x0d\n\x0d\n    type = String(type);\x0d\n    const capture = options?.capture === true;\x0d\n\x0d\n    const root = this[kEvents].get(type);\x0d\n    if (root === undefined || root.next === undefined)\x0d\n      return;\x0d\n\x0d\n    let handler = root.next;\x0d\n    while (handler !== undefined) {\x0d\n      if (handler.same(listener\x2C capture)) {\x0d\n        handler.remove();\x0d\n        root.size--;\x0d\n        if (root.size === 0)\x0d\n          this[kEvents].delete(type);\x0d\n        this[kRemoveListener](root.size\x2C type\x2C listener\x2C capture);\x0d\n        break;\x0d\n      }\x0d\n      handler = handler.next;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @param {Event} event\x0d\n   */\x0d\n  dispatchEvent(event) {\x0d\n    if (!isEventTarget(this))\x0d\n      throw new ERR_INVALID_THIS('EventTarget');\x0d\n    if (arguments.length < 1)\x0d\n      throw new ERR_MISSING_ARGS('event');\x0d\n\x0d\n    if (!(event instanceof Event))\x0d\n      throw new ERR_INVALID_ARG_TYPE('event'\x2C 'Event'\x2C event);\x0d\n\x0d\n    if (event[kIsBeingDispatched])\x0d\n      throw new ERR_EVENT_RECURSION(event.type);\x0d\n\x0d\n    this[kHybridDispatch](event\x2C event.type\x2C event);\x0d\n\x0d\n    return event.defaultPrevented !== true;\x0d\n  }\x0d\n\x0d\n  [kHybridDispatch](nodeValue\x2C type\x2C event) {\x0d\n    const createEvent = () => {\x0d\n      if (event === undefined) {\x0d\n        event = this[kCreateEvent](nodeValue\x2C type);\x0d\n        event[kTarget] = this;\x0d\n        event[kIsBeingDispatched] = true;\x0d\n      }\x0d\n      return event;\x0d\n    };\x0d\n    if (event !== undefined) {\x0d\n      event[kTarget] = this;\x0d\n      event[kIsBeingDispatched] = true;\x0d\n    }\x0d\n\x0d\n    const root = this[kEvents].get(type);\x0d\n    if (root === undefined || root.next === undefined) {\x0d\n      if (event !== undefined)\x0d\n        event[kIsBeingDispatched] = false;\x0d\n      return true;\x0d\n    }\x0d\n\x0d\n    let handler = root.next;\x0d\n    let next;\x0d\n\x0d\n    while (handler !== undefined &&\x0d\n           (handler.passive || event?.[kStop] !== true)) {\x0d\n      // Cache the next item in case this iteration removes the current one\x0d\n      next = handler.next;\x0d\n\x0d\n      if (handler.removed) {\x0d\n        // Deal with the case an event is removed while event handlers are\x0d\n        // Being processed (removeEventListener called from a listener)\x0d\n        handler = next;\x0d\n        continue;\x0d\n      }\x0d\n      if (handler.once) {\x0d\n        handler.remove();\x0d\n        root.size--;\x0d\n        const { listener\x2C capture } = handler;\x0d\n        this[kRemoveListener](root.size\x2C type\x2C listener\x2C capture);\x0d\n      }\x0d\n\x0d\n      try {\x0d\n        let arg;\x0d\n        if (handler.isNodeStyleListener) {\x0d\n          arg = nodeValue;\x0d\n        } else {\x0d\n          arg = createEvent();\x0d\n        }\x0d\n        const callback = handler.weak ?\x0d\n          handler.callback.deref() : handler.callback;\x0d\n        let result;\x0d\n        if (callback) {\x0d\n          result = FunctionPrototypeCall(callback\x2C this\x2C arg);\x0d\n          if (!handler.isNodeStyleListener) {\x0d\n            arg[kIsBeingDispatched] = false;\x0d\n          }\x0d\n        }\x0d\n        if (result !== undefined && result !== null)\x0d\n          addCatch(result);\x0d\n      } catch (err) {\x0d\n        emitUncaughtException(err);\x0d\n      }\x0d\n\x0d\n      handler = next;\x0d\n    }\x0d\n\x0d\n    if (event !== undefined)\x0d\n      event[kIsBeingDispatched] = false;\x0d\n  }\x0d\n\x0d\n  [kCreateEvent](nodeValue\x2C type) {\x0d\n    return new NodeCustomEvent(type\x2C { detail: nodeValue });\x0d\n  }\x0d\n  [customInspectSymbol](depth\x2C options) {\x0d\n    if (!isEventTarget(this))\x0d\n      throw new ERR_INVALID_THIS('EventTarget');\x0d\n    const name = this.constructor.name;\x0d\n    if (depth < 0)\x0d\n      return name;\x0d\n\x0d\n    const opts = ObjectAssign({}\x2C options\x2C {\x0d\n      depth: NumberIsInteger(options.depth) ? options.depth - 1 : options.depth\x0d\n    });\x0d\n\x0d\n    return `${name} ${inspect({}\x2C opts)}`;\x0d\n  }\x0d\n}\x0d\n\x0d\nObjectDefineProperties(EventTarget.prototype\x2C {\x0d\n  addEventListener: kEnumerableProperty\x2C\x0d\n  removeEventListener: kEnumerableProperty\x2C\x0d\n  dispatchEvent: kEnumerableProperty\x2C\x0d\n  [SymbolToStringTag]: {\x0d\n    __proto__: null\x2C\x0d\n    writable: false\x2C\x0d\n    enumerable: false\x2C\x0d\n    configurable: true\x2C\x0d\n    value: 'EventTarget'\x2C\x0d\n  }\x0d\n});\x0d\n\x0d\nfunction initNodeEventTarget(self) {\x0d\n  initEventTarget(self);\x0d\n}\x0d\n\x0d\nclass NodeEventTarget extends EventTarget {\x0d\n  static [kIsNodeEventTarget] = true;\x0d\n  static defaultMaxListeners = 10;\x0d\n\x0d\n  constructor() {\x0d\n    super();\x0d\n    initNodeEventTarget(this);\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @param {number} n\x0d\n   */\x0d\n  setMaxListeners(n) {\x0d\n    if (!isNodeEventTarget(this))\x0d\n      throw new ERR_INVALID_THIS('NodeEventTarget');\x0d\n    EventEmitter.setMaxListeners(n\x2C this);\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @returns {number}\x0d\n   */\x0d\n  getMaxListeners() {\x0d\n    if (!isNodeEventTarget(this))\x0d\n      throw new ERR_INVALID_THIS('NodeEventTarget');\x0d\n    return this[kMaxEventTargetListeners];\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @returns {string[]}\x0d\n   */\x0d\n  eventNames() {\x0d\n    if (!isNodeEventTarget(this))\x0d\n      throw new ERR_INVALID_THIS('NodeEventTarget');\x0d\n    return ArrayFrom(this[kEvents].keys());\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @param {string} [type]\x0d\n   * @returns {number}\x0d\n   */\x0d\n  listenerCount(type) {\x0d\n    if (!isNodeEventTarget(this))\x0d\n      throw new ERR_INVALID_THIS('NodeEventTarget');\x0d\n    const root = this[kEvents].get(String(type));\x0d\n    return root !== undefined ? root.size : 0;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @param {string} type\x0d\n   * @param {EventTargetCallback|EventListener} listener\x0d\n   * @param {{\x0d\n   *   capture?: boolean\x2C\x0d\n   * }} [options]\x0d\n   * @returns {NodeEventTarget}\x0d\n   */\x0d\n  off(type\x2C listener\x2C options) {\x0d\n    if (!isNodeEventTarget(this))\x0d\n      throw new ERR_INVALID_THIS('NodeEventTarget');\x0d\n    this.removeEventListener(type\x2C listener\x2C options);\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @param {string} type\x0d\n   * @param {EventTargetCallback|EventListener} listener\x0d\n   * @param {{\x0d\n   *   capture?: boolean\x2C\x0d\n   * }} [options]\x0d\n   * @returns {NodeEventTarget}\x0d\n   */\x0d\n  removeListener(type\x2C listener\x2C options) {\x0d\n    if (!isNodeEventTarget(this))\x0d\n      throw new ERR_INVALID_THIS('NodeEventTarget');\x0d\n    this.removeEventListener(type\x2C listener\x2C options);\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @param {string} type\x0d\n   * @param {EventTargetCallback|EventListener} listener\x0d\n   * @returns {NodeEventTarget}\x0d\n   */\x0d\n  on(type\x2C listener) {\x0d\n    if (!isNodeEventTarget(this))\x0d\n      throw new ERR_INVALID_THIS('NodeEventTarget');\x0d\n    this.addEventListener(type\x2C listener\x2C { [kIsNodeStyleListener]: true });\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @param {string} type\x0d\n   * @param {EventTargetCallback|EventListener} listener\x0d\n   * @returns {NodeEventTarget}\x0d\n   */\x0d\n  addListener(type\x2C listener) {\x0d\n    if (!isNodeEventTarget(this))\x0d\n      throw new ERR_INVALID_THIS('NodeEventTarget');\x0d\n    this.addEventListener(type\x2C listener\x2C { [kIsNodeStyleListener]: true });\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @param {string} type\x0d\n   * @param {any} arg\x0d\n   * @returns {boolean}\x0d\n   */\x0d\n  emit(type\x2C arg) {\x0d\n    if (!isNodeEventTarget(this))\x0d\n      throw new ERR_INVALID_THIS('NodeEventTarget');\x0d\n    validateString(type\x2C 'type');\x0d\n    const hadListeners = this.listenerCount(type) > 0;\x0d\n    this[kHybridDispatch](arg\x2C type);\x0d\n    return hadListeners;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @param {string} type\x0d\n   * @param {EventTargetCallback|EventListener} listener\x0d\n   * @returns {NodeEventTarget}\x0d\n   */\x0d\n  once(type\x2C listener) {\x0d\n    if (!isNodeEventTarget(this))\x0d\n      throw new ERR_INVALID_THIS('NodeEventTarget');\x0d\n    this.addEventListener(type\x2C listener\x2C\x0d\n                          { once: true\x2C [kIsNodeStyleListener]: true });\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @param {string} type\x0d\n   * @returns {NodeEventTarget}\x0d\n   */\x0d\n  removeAllListeners(type) {\x0d\n    if (!isNodeEventTarget(this))\x0d\n      throw new ERR_INVALID_THIS('NodeEventTarget');\x0d\n    if (type !== undefined) {\x0d\n      this[kEvents].delete(String(type));\x0d\n    } else {\x0d\n      this[kEvents].clear();\x0d\n    }\x0d\n\x0d\n    return this;\x0d\n  }\x0d\n}\x0d\n\x0d\nObjectDefineProperties(NodeEventTarget.prototype\x2C {\x0d\n  setMaxListeners: kEnumerableProperty\x2C\x0d\n  getMaxListeners: kEnumerableProperty\x2C\x0d\n  eventNames: kEnumerableProperty\x2C\x0d\n  listenerCount: kEnumerableProperty\x2C\x0d\n  off: kEnumerableProperty\x2C\x0d\n  removeListener: kEnumerableProperty\x2C\x0d\n  on: kEnumerableProperty\x2C\x0d\n  addListener: kEnumerableProperty\x2C\x0d\n  once: kEnumerableProperty\x2C\x0d\n  emit: kEnumerableProperty\x2C\x0d\n  removeAllListeners: kEnumerableProperty\x2C\x0d\n});\x0d\n\x0d\n// EventTarget API\x0d\n\x0d\nfunction validateEventListener(listener) {\x0d\n  if (typeof listener === 'function' ||\x0d\n      typeof listener?.handleEvent === 'function') {\x0d\n    return true;\x0d\n  }\x0d\n\x0d\n  if (listener == null)\x0d\n    return false;\x0d\n\x0d\n  if (typeof listener === 'object') {\x0d\n    // Require `handleEvent` lazily.\x0d\n    return true;\x0d\n  }\x0d\n\x0d\n  throw new ERR_INVALID_ARG_TYPE('listener'\x2C 'EventListener'\x2C listener);\x0d\n}\x0d\n\x0d\nfunction validateEventListenerOptions(options) {\x0d\n  if (typeof options === 'boolean')\x0d\n    return { capture: options };\x0d\n\x0d\n  if (options === null)\x0d\n    return kEmptyObject;\x0d\n  validateObject(options\x2C 'options'\x2C {\x0d\n    allowArray: true\x2C allowFunction: true\x2C\x0d\n  });\x0d\n  return {\x0d\n    once: Boolean(options.once)\x2C\x0d\n    capture: Boolean(options.capture)\x2C\x0d\n    passive: Boolean(options.passive)\x2C\x0d\n    signal: options.signal\x2C\x0d\n    weak: options[kWeakHandler]\x2C\x0d\n    isNodeStyleListener: Boolean(options[kIsNodeStyleListener])\x0d\n  };\x0d\n}\x0d\n\x0d\n// Test whether the argument is an event object. This is far from a fool-proof\x0d\n// test\x2C for example this input will result in a false positive:\x0d\n// > isEventTarget({ constructor: EventTarget })\x0d\n// It stands in its current implementation as a compromise.\x0d\n// Ref: https://github.com/nodejs/node/pull/33661\x0d\nfunction isEventTarget(obj) {\x0d\n  return obj?.constructor?.[kIsEventTarget];\x0d\n}\x0d\n\x0d\nfunction isNodeEventTarget(obj) {\x0d\n  return obj?.constructor?.[kIsNodeEventTarget];\x0d\n}\x0d\n\x0d\nfunction addCatch(promise) {\x0d\n  const then = promise.then;\x0d\n  if (typeof then === 'function') {\x0d\n    FunctionPrototypeCall(then\x2C promise\x2C undefined\x2C function(err) {\x0d\n      // The callback is called with nextTick to avoid a follow-up\x0d\n      // rejection from this promise.\x0d\n      emitUncaughtException(err);\x0d\n    });\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction emitUncaughtException(err) {\x0d\n  process.nextTick(() => { throw err; });\x0d\n}\x0d\n\x0d\nfunction makeEventHandler(handler) {\x0d\n  // Event handlers are dispatched in the order they were first set\x0d\n  // See https://github.com/nodejs/node/pull/35949#issuecomment-722496598\x0d\n  function eventHandler(...args) {\x0d\n    if (typeof eventHandler.handler !== 'function') {\x0d\n      return;\x0d\n    }\x0d\n    return ReflectApply(eventHandler.handler\x2C this\x2C args);\x0d\n  }\x0d\n  eventHandler.handler = handler;\x0d\n  return eventHandler;\x0d\n}\x0d\n\x0d\nfunction defineEventHandler(emitter\x2C name) {\x0d\n  // 8.1.5.1 Event handlers - basically `on[eventName]` attributes\x0d\n  ObjectDefineProperty(emitter\x2C `on${name}`\x2C {\x0d\n    __proto__: null\x2C\x0d\n    get() {\x0d\n      return this[kHandlers]?.get(name)?.handler ?? null;\x0d\n    }\x2C\x0d\n    set(value) {\x0d\n      if (!this[kHandlers]) {\x0d\n        this[kHandlers] = new SafeMap();\x0d\n      }\x0d\n      let wrappedHandler = this[kHandlers]?.get(name);\x0d\n      if (wrappedHandler) {\x0d\n        if (typeof wrappedHandler.handler === 'function') {\x0d\n          this[kEvents].get(name).size--;\x0d\n          const size = this[kEvents].get(name).size;\x0d\n          this[kRemoveListener](size\x2C name\x2C wrappedHandler.handler\x2C false);\x0d\n        }\x0d\n        wrappedHandler.handler = value;\x0d\n        if (typeof wrappedHandler.handler === 'function') {\x0d\n          this[kEvents].get(name).size++;\x0d\n          const size = this[kEvents].get(name).size;\x0d\n          this[kNewListener](size\x2C name\x2C value\x2C false\x2C false\x2C false\x2C false);\x0d\n        }\x0d\n      } else {\x0d\n        wrappedHandler = makeEventHandler(value);\x0d\n        this.addEventListener(name\x2C wrappedHandler);\x0d\n      }\x0d\n      this[kHandlers].set(name\x2C wrappedHandler);\x0d\n    }\x2C\x0d\n    configurable: true\x2C\x0d\n    enumerable: true\x0d\n  });\x0d\n}\x0d\n\x0d\nconst EventEmitterMixin = (Superclass) => {\x0d\n  class MixedEventEmitter extends Superclass {\x0d\n    constructor(...args) {\x0d\n      args = new SafeArrayIterator(args);\x0d\n      super(...args);\x0d\n      FunctionPrototypeCall(EventEmitter\x2C this);\x0d\n    }\x0d\n  }\x0d\n  const protoProps = ObjectGetOwnPropertyDescriptors(EventEmitter.prototype);\x0d\n  delete protoProps.constructor;\x0d\n  const propertiesValues = ObjectValues(protoProps);\x0d\n  for (let i = 0; i < propertiesValues.length; i++) {\x0d\n    // We want to use null-prototype objects to not rely on globally mutable\x0d\n    // %Object.prototype%.\x0d\n    ObjectSetPrototypeOf(propertiesValues[i]\x2C null);\x0d\n  }\x0d\n  ObjectDefineProperties(MixedEventEmitter.prototype\x2C protoProps);\x0d\n  return MixedEventEmitter;\x0d\n};\x0d\n\x0d\nmodule.exports = {\x0d\n  Event\x2C\x0d\n  CustomEvent\x2C\x0d\n  EventEmitterMixin\x2C\x0d\n  EventTarget\x2C\x0d\n  NodeEventTarget\x2C\x0d\n  defineEventHandler\x2C\x0d\n  initEventTarget\x2C\x0d\n  initNodeEventTarget\x2C\x0d\n  kCreateEvent\x2C\x0d\n  kNewListener\x2C\x0d\n  kTrustEvent\x2C\x0d\n  kRemoveListener\x2C\x0d\n  kEvents\x2C\x0d\n  kWeakHandler\x2C\x0d\n  isEventTarget\x2C\x0d\n};\x0d\n
code-source-info,0x2a6f0bb03f8,47,28488,29196,C0O28541C23O28732C30O28764C33O28777C38O28732C43O28792C47O28851C52O28851C57O28893C59O28917C63O28898C68O29043C75O29080C81O29043C86O28926C91O28880C94O29100C99O29141C104O29100C109O29168C111O29193,,
new,MemoryChunk,0x9983f00000,262144
code-creation,Eval,10,343876,0x2a6f0bb3178,5, node:internal/modules/esm/translators:1:1,0x2a6f0bb2d20,~
script-source,471,node:internal/modules/esm/translators,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeForEach\x2C\x0d\n  ArrayPrototypeMap\x2C\x0d\n  Boolean\x2C\x0d\n  JSONParse\x2C\x0d\n  ObjectGetPrototypeOf\x2C\x0d\n  ObjectPrototypeHasOwnProperty\x2C\x0d\n  ObjectKeys\x2C\x0d\n  SafeArrayIterator\x2C\x0d\n  SafeMap\x2C\x0d\n  SafeSet\x2C\x0d\n  StringPrototypeReplaceAll\x2C\x0d\n  StringPrototypeSlice\x2C\x0d\n  StringPrototypeStartsWith\x2C\x0d\n  SyntaxErrorPrototype\x2C\x0d\n  globalThis: { WebAssembly }\x2C\x0d\n} = primordials;\x0d\n\x0d\nlet _TYPES = null;\x0d\nfunction lazyTypes() {\x0d\n  if (_TYPES !== null) return _TYPES;\x0d\n  return _TYPES = require('internal/util/types');\x0d\n}\x0d\n\x0d\nconst { readFileSync } = require('fs');\x0d\nconst { extname\x2C isAbsolute } = require('path');\x0d\nconst {\x0d\n  hasEsmSyntax\x2C\x0d\n  loadBuiltinModule\x2C\x0d\n  stripBOM\x2C\x0d\n} = require('internal/modules/cjs/helpers');\x0d\nconst {\x0d\n  Module: CJSModule\x2C\x0d\n  cjsParseCache\x0d\n} = require('internal/modules/cjs/loader');\x0d\nconst internalURLModule = require('internal/url');\x0d\nconst createDynamicModule = require(\x0d\n  'internal/modules/esm/create_dynamic_module');\x0d\nconst { fileURLToPath\x2C URL } = require('url');\x0d\nlet debug = require('internal/util/debuglog').debuglog('esm'\x2C (fn) => {\x0d\n  debug = fn;\x0d\n});\x0d\nconst { emitExperimentalWarning } = require('internal/util');\x0d\nconst {\x0d\n  ERR_UNKNOWN_BUILTIN_MODULE\x2C\x0d\n  ERR_INVALID_RETURN_PROPERTY_VALUE\x0d\n} = require('internal/errors').codes;\x0d\nconst { maybeCacheSourceMap } = require('internal/source_map/source_map_cache');\x0d\nconst moduleWrap = internalBinding('module_wrap');\x0d\nconst { ModuleWrap } = moduleWrap;\x0d\nconst asyncESM = require('internal/process/esm_loader');\x0d\nconst { emitWarningSync } = require('internal/process/warning');\x0d\nconst { TextDecoder } = require('internal/encoding');\x0d\n\x0d\nlet cjsParse;\x0d\nasync function initCJSParse() {\x0d\n  if (typeof WebAssembly === 'undefined') {\x0d\n    cjsParse = require('internal/deps/cjs-module-lexer/lexer').parse;\x0d\n  } else {\x0d\n    const { parse\x2C init } =\x0d\n        require('internal/deps/cjs-module-lexer/dist/lexer');\x0d\n    try {\x0d\n      await init();\x0d\n      cjsParse = parse;\x0d\n    } catch {\x0d\n      cjsParse = require('internal/deps/cjs-module-lexer/lexer').parse;\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\nconst translators = new SafeMap();\x0d\nexports.translators = translators;\x0d\nexports.enrichCJSError = enrichCJSError;\x0d\n\x0d\nlet DECODER = null;\x0d\nfunction assertBufferSource(body\x2C allowString\x2C hookName) {\x0d\n  if (allowString && typeof body === 'string') {\x0d\n    return;\x0d\n  }\x0d\n  const { isArrayBufferView\x2C isAnyArrayBuffer } = lazyTypes();\x0d\n  if (isArrayBufferView(body) || isAnyArrayBuffer(body)) {\x0d\n    return;\x0d\n  }\x0d\n  throw new ERR_INVALID_RETURN_PROPERTY_VALUE(\x0d\n    `${allowString ? 'string\x2C ' : ''}array buffer\x2C or typed array`\x2C\x0d\n    hookName\x2C\x0d\n    'source'\x2C\x0d\n    body\x0d\n  );\x0d\n}\x0d\n\x0d\nfunction stringify(body) {\x0d\n  if (typeof body === 'string') return body;\x0d\n  assertBufferSource(body\x2C false\x2C 'transformSource');\x0d\n  DECODER = DECODER === null ? new TextDecoder() : DECODER;\x0d\n  return DECODER.decode(body);\x0d\n}\x0d\n\x0d\nfunction errPath(url) {\x0d\n  const parsed = new URL(url);\x0d\n  if (parsed.protocol === 'file:') {\x0d\n    return fileURLToPath(parsed);\x0d\n  }\x0d\n  return url;\x0d\n}\x0d\n\x0d\nasync function importModuleDynamically(specifier\x2C { url }\x2C assertions) {\x0d\n  return asyncESM.esmLoader.import(specifier\x2C url\x2C assertions);\x0d\n}\x0d\n\x0d\n// Strategy for loading a standard JavaScript module.\x0d\ntranslators.set('module'\x2C async function moduleStrategy(url\x2C source\x2C isMain) {\x0d\n  assertBufferSource(source\x2C true\x2C 'load');\x0d\n  source = stringify(source);\x0d\n  maybeCacheSourceMap(url\x2C source);\x0d\n  debug(`Translating StandardModule ${url}`);\x0d\n  const module = new ModuleWrap(url\x2C undefined\x2C source\x2C 0\x2C 0);\x0d\n  moduleWrap.callbackMap.set(module\x2C {\x0d\n    initializeImportMeta: (meta\x2C wrap) => this.importMetaInitialize(meta\x2C { url })\x2C\x0d\n    importModuleDynamically\x2C\x0d\n  });\x0d\n  return module;\x0d\n});\x0d\n\x0d\n/**\x0d\n * @param {Error | any} err\x0d\n * @param {string} [content] Content of the file\x2C if known.\x0d\n * @param {string} [filename] Useful only if `content` is unknown.\x0d\n */\x0d\nfunction enrichCJSError(err\x2C content\x2C filename) {\x0d\n  if (err != null && ObjectGetPrototypeOf(err) === SyntaxErrorPrototype &&\x0d\n      hasEsmSyntax(content || readFileSync(filename\x2C 'utf-8'))) {\x0d\n    // Emit the warning synchronously because we are in the middle of handling\x0d\n    // a SyntaxError that will throw and likely terminate the process before an\x0d\n    // asynchronous warning would be emitted.\x0d\n    emitWarningSync(\x0d\n      'To load an ES module\x2C set "type": "module" in the package.json or use ' +\x0d\n      'the .mjs extension.'\x0d\n    );\x0d\n  }\x0d\n}\x0d\n\x0d\n// Strategy for loading a node-style CommonJS module\x0d\nconst isWindows = process.platform === 'win32';\x0d\ntranslators.set('commonjs'\x2C async function commonjsStrategy(url\x2C source\x2C\x0d\n                                                            isMain) {\x0d\n  debug(`Translating CJSModule ${url}`);\x0d\n\x0d\n  let filename = internalURLModule.fileURLToPath(new URL(url));\x0d\n  if (isWindows)\x0d\n    filename = StringPrototypeReplaceAll(filename\x2C '/'\x2C '\\\\');\x0d\n\x0d\n  if (!cjsParse) await initCJSParse();\x0d\n  const { module\x2C exportNames } = cjsPreparseModuleExports(filename);\x0d\n  const namesWithDefault = exportNames.has('default') ?\x0d\n    [...exportNames] : ['default'\x2C ...exportNames];\x0d\n\x0d\n  return new ModuleWrap(url\x2C undefined\x2C namesWithDefault\x2C function() {\x0d\n    debug(`Loading CJSModule ${url}`);\x0d\n\x0d\n    let exports;\x0d\n    if (asyncESM.esmLoader.cjsCache.has(module)) {\x0d\n      exports = asyncESM.esmLoader.cjsCache.get(module);\x0d\n      asyncESM.esmLoader.cjsCache.delete(module);\x0d\n    } else {\x0d\n      try {\x0d\n        exports = CJSModule._load(filename\x2C undefined\x2C isMain);\x0d\n      } catch (err) {\x0d\n        enrichCJSError(err\x2C undefined\x2C filename);\x0d\n        throw err;\x0d\n      }\x0d\n    }\x0d\n\x0d\n    for (const exportName of exportNames) {\x0d\n      if (!ObjectPrototypeHasOwnProperty(exports\x2C exportName) ||\x0d\n          exportName === 'default')\x0d\n        continue;\x0d\n      // We might trigger a getter -> dont fail.\x0d\n      let value;\x0d\n      try {\x0d\n        value = exports[exportName];\x0d\n      } catch {\x0d\n        // Continue regardless of error.\x0d\n      }\x0d\n      this.setExport(exportName\x2C value);\x0d\n    }\x0d\n    this.setExport('default'\x2C exports);\x0d\n  });\x0d\n});\x0d\n\x0d\nfunction cjsPreparseModuleExports(filename) {\x0d\n  let module = CJSModule._cache[filename];\x0d\n  if (module) {\x0d\n    const cached = cjsParseCache.get(module);\x0d\n    if (cached)\x0d\n      return { module\x2C exportNames: cached.exportNames };\x0d\n  }\x0d\n  const loaded = Boolean(module);\x0d\n  if (!loaded) {\x0d\n    module = new CJSModule(filename);\x0d\n    module.filename = filename;\x0d\n    module.paths = CJSModule._nodeModulePaths(module.path);\x0d\n    CJSModule._cache[filename] = module;\x0d\n  }\x0d\n\x0d\n  let source;\x0d\n  try {\x0d\n    source = readFileSync(filename\x2C 'utf8');\x0d\n  } catch {\x0d\n    // Continue regardless of error.\x0d\n  }\x0d\n\x0d\n  let exports\x2C reexports;\x0d\n  try {\x0d\n    ({ exports\x2C reexports } = cjsParse(source || ''));\x0d\n  } catch {\x0d\n    exports = [];\x0d\n    reexports = [];\x0d\n  }\x0d\n\x0d\n  const exportNames = new SafeSet(new SafeArrayIterator(exports));\x0d\n\x0d\n  // Set first for cycles.\x0d\n  cjsParseCache.set(module\x2C { source\x2C exportNames\x2C loaded });\x0d\n\x0d\n  if (reexports.length) {\x0d\n    module.filename = filename;\x0d\n    module.paths = CJSModule._nodeModulePaths(module.path);\x0d\n  }\x0d\n  ArrayPrototypeForEach(reexports\x2C (reexport) => {\x0d\n    let resolved;\x0d\n    try {\x0d\n      resolved = CJSModule._resolveFilename(reexport\x2C module);\x0d\n    } catch {\x0d\n      return;\x0d\n    }\x0d\n    const ext = extname(resolved);\x0d\n    if ((ext === '.js' || ext === '.cjs' || !CJSModule._extensions[ext]) &&\x0d\n        isAbsolute(resolved)) {\x0d\n      const { exportNames: reexportNames } = cjsPreparseModuleExports(resolved);\x0d\n      for (const name of reexportNames)\x0d\n        exportNames.add(name);\x0d\n    }\x0d\n  });\x0d\n\x0d\n  return { module\x2C exportNames };\x0d\n}\x0d\n\x0d\n// Strategy for loading a node builtin CommonJS module that isn't\x0d\n// through normal resolution\x0d\ntranslators.set('builtin'\x2C async function builtinStrategy(url) {\x0d\n  debug(`Translating BuiltinModule ${url}`);\x0d\n  // Slice 'node:' scheme\x0d\n  const id = StringPrototypeSlice(url\x2C 5);\x0d\n  const module = loadBuiltinModule(id\x2C url);\x0d\n  if (!StringPrototypeStartsWith(url\x2C 'node:') || !module) {\x0d\n    throw new ERR_UNKNOWN_BUILTIN_MODULE(url);\x0d\n  }\x0d\n  debug(`Loading BuiltinModule ${url}`);\x0d\n  return module.getESMFacade();\x0d\n});\x0d\n\x0d\n// Strategy for loading a JSON file\x0d\ntranslators.set('json'\x2C async function jsonStrategy(url\x2C source) {\x0d\n  emitExperimentalWarning('Importing JSON modules');\x0d\n  assertBufferSource(source\x2C true\x2C 'load');\x0d\n  debug(`Loading JSONModule ${url}`);\x0d\n  const pathname = StringPrototypeStartsWith(url\x2C 'file:') ?\x0d\n    fileURLToPath(url) : null;\x0d\n  let modulePath;\x0d\n  let module;\x0d\n  if (pathname) {\x0d\n    modulePath = isWindows ?\x0d\n      StringPrototypeReplaceAll(pathname\x2C '/'\x2C '\\\\') : pathname;\x0d\n    module = CJSModule._cache[modulePath];\x0d\n    if (module && module.loaded) {\x0d\n      const exports = module.exports;\x0d\n      return new ModuleWrap(url\x2C undefined\x2C ['default']\x2C function() {\x0d\n        this.setExport('default'\x2C exports);\x0d\n      });\x0d\n    }\x0d\n  }\x0d\n  source = stringify(source);\x0d\n  if (pathname) {\x0d\n    // A require call could have been called on the same file during loading and\x0d\n    // that resolves synchronously. To make sure we always return the identical\x0d\n    // export\x2C we have to check again if the module already exists or not.\x0d\n    module = CJSModule._cache[modulePath];\x0d\n    if (module && module.loaded) {\x0d\n      const exports = module.exports;\x0d\n      return new ModuleWrap(url\x2C undefined\x2C ['default']\x2C function() {\x0d\n        this.setExport('default'\x2C exports);\x0d\n      });\x0d\n    }\x0d\n  }\x0d\n  try {\x0d\n    const exports = JSONParse(stripBOM(source));\x0d\n    module = {\x0d\n      exports\x2C\x0d\n      loaded: true\x0d\n    };\x0d\n  } catch (err) {\x0d\n    // TODO (BridgeAR): We could add a NodeCore error that wraps the JSON\x0d\n    // parse error instead of just manipulating the original error message.\x0d\n    // That would allow to add further properties and maybe additional\x0d\n    // debugging information.\x0d\n    err.message = errPath(url) + ': ' + err.message;\x0d\n    throw err;\x0d\n  }\x0d\n  if (pathname) {\x0d\n    CJSModule._cache[modulePath] = module;\x0d\n  }\x0d\n  return new ModuleWrap(url\x2C undefined\x2C ['default']\x2C function() {\x0d\n    debug(`Parsing JSONModule ${url}`);\x0d\n    this.setExport('default'\x2C module.exports);\x0d\n  });\x0d\n});\x0d\n\x0d\n// Strategy for loading a wasm module\x0d\ntranslators.set('wasm'\x2C async function(url\x2C source) {\x0d\n  emitExperimentalWarning('Importing WebAssembly modules');\x0d\n\x0d\n  assertBufferSource(source\x2C false\x2C 'load');\x0d\n\x0d\n  debug(`Translating WASMModule ${url}`);\x0d\n\x0d\n  let compiled;\x0d\n  try {\x0d\n    compiled = await WebAssembly.compile(source);\x0d\n  } catch (err) {\x0d\n    err.message = errPath(url) + ': ' + err.message;\x0d\n    throw err;\x0d\n  }\x0d\n\x0d\n  const imports =\x0d\n      ArrayPrototypeMap(WebAssembly.Module.imports(compiled)\x2C\x0d\n                        ({ module }) => module);\x0d\n  const exports =\x0d\n    ArrayPrototypeMap(WebAssembly.Module.exports(compiled)\x2C\x0d\n                      ({ name }) => name);\x0d\n\x0d\n  return createDynamicModule(imports\x2C exports\x2C url\x2C (reflect) => {\x0d\n    const { exports } = new WebAssembly.Instance(compiled\x2C reflect.imports);\x0d\n    for (const expt of ObjectKeys(exports))\x0d\n      reflect.exports[expt].set(exports[expt]);\x0d\n  }).module;\x0d\n});\x0d\n
code-source-info,0x2a6f0bb3178,471,0,11080,C0O0C4O11080,,
code-creation,Function,10,344696,0x2a6f0bb3918,706, node:internal/modules/esm/translators:1:1,0x2a6f0bb30f0,~
code-source-info,0x2a6f0bb
code-creation,Eval,10,345082,0x2a6f0bb4e18,5, node:internal/modules/esm/create_dynamic_module:1:1,0x2a6f0bb4c40,~
script-source,472,node:internal/modules/esm/create_dynamic_module,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeJoin\x2C\x0d\n  ArrayPrototypeMap\x2C\x0d\n  JSONStringify\x2C\x0d\n  ObjectCreate\x2C\x0d\n  SafeSet\x2C\x0d\n} = primordials;\x0d\n\x0d\nlet debug = require('internal/util/debuglog').debuglog('esm'\x2C (fn) => {\x0d\n  debug = fn;\x0d\n});\x0d\n\x0d\nfunction createImport(impt\x2C index) {\x0d\n  const imptPath = JSONStringify(impt);\x0d\n  return `import * as $import_${index} from ${imptPath};\x0d\nimport.meta.imports[${imptPath}] = $import_${index};`;\x0d\n}\x0d\n\x0d\nfunction createExport(expt) {\x0d\n  const name = `${expt}`;\x0d\n  return `let $${name};\x0d\nexport { $${name} as ${name} };\x0d\nimport.meta.exports.${name} = {\x0d\n  get: () => $${name}\x2C\x0d\n  set: (v) => $${name} = v\x2C\x0d\n};`;\x0d\n}\x0d\n\x0d\nconst createDynamicModule = (imports\x2C exports\x2C url = ''\x2C evaluate) => {\x0d\n  debug('creating ESM facade for %s with exports: %j'\x2C url\x2C exports);\x0d\n  const source = `\x0d\n${ArrayPrototypeJoin(ArrayPrototypeMap(imports\x2C createImport)\x2C '\\n')}\x0d\n${ArrayPrototypeJoin(ArrayPrototypeMap(exports\x2C createExport)\x2C '\\n')}\x0d\nimport.meta.done();\x0d\n`;\x0d\n  const { ModuleWrap\x2C callbackMap } = internalBinding('module_wrap');\x0d\n  const m = new ModuleWrap(`${url}`\x2C undefined\x2C source\x2C 0\x2C 0);\x0d\n\x0d\n  const readyfns = new SafeSet();\x0d\n  const reflect = {\x0d\n    exports: ObjectCreate(null)\x2C\x0d\n    onReady: (cb) => { readyfns.add(cb); }\x2C\x0d\n  };\x0d\n\x0d\n  if (imports.length)\x0d\n    reflect.imports = ObjectCreate(null);\x0d\n\x0d\n  callbackMap.set(m\x2C {\x0d\n    initializeImportMeta: (meta\x2C wrap) => {\x0d\n      meta.exports = reflect.exports;\x0d\n      if (reflect.imports)\x0d\n        meta.imports = reflect.imports;\x0d\n      meta.done = () => {\x0d\n        evaluate(reflect);\x0d\n        reflect.onReady = (cb) => cb(reflect);\x0d\n        for (const fn of readyfns) {\x0d\n          readyfns.delete(fn);\x0d\n          fn(reflect);\x0d\n        }\x0d\n      };\x0d\n    }\x2C\x0d\n  });\x0d\n\x0d\n  return {\x0d\n    module: m\x2C\x0d\n    reflect\x2C\x0d\n  };\x0d\n};\x0d\n\x0d\nmodule.exports = createDynamicModule;\x0d\n
code-source-info,0x2a6f0bb4e18,472,0,1828,C0O0C4O1828,,
code-creation,Function,10,345266,0x2a6f0bb5040,111, node:internal/modules/esm/create_dynamic_module:1:1,0x2a6f0bb4d90,~
code-source-info,0x2a6f0bb5040,472,0,1828,C0O0C39O28C45O51C51O73C57O91C63O108C69O150C72O150C77O183C90O184C96O150C98O672C103O1789C105O1804C110O1827,,
code-creation,Eval,10,345858,0x2a6f0bb5f48,5, node:internal/vm/module:1:1,0x2a6f0bb59d0,~
script-source,473,node:internal/vm/module,'use strict';\x0d\n\x0d\nconst assert = require('internal/assert');\x0d\nconst {\x0d\n  ArrayIsArray\x2C\x0d\n  ArrayPrototypeForEach\x2C\x0d\n  ArrayPrototypeIndexOf\x2C\x0d\n  ArrayPrototypeSome\x2C\x0d\n  ObjectCreate\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectGetPrototypeOf\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  ReflectApply\x2C\x0d\n  SafePromiseAllReturnVoid\x2C\x0d\n  SafeWeakMap\x2C\x0d\n  Symbol\x2C\x0d\n  SymbolToStringTag\x2C\x0d\n  TypeError\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst { isContext } = internalBinding('contextify');\x0d\nconst {\x0d\n  isModuleNamespaceObject\x2C\x0d\n  isArrayBufferView\x2C\x0d\n} = require('internal/util/types');\x0d\nconst {\x0d\n  customInspectSymbol\x2C\x0d\n  emitExperimentalWarning\x2C\x0d\n  getConstructorOf\x2C\x0d\n  kEmptyObject\x2C\x0d\n} = require('internal/util');\x0d\nconst {\x0d\n  ERR_INVALID_ARG_TYPE\x2C\x0d\n  ERR_INVALID_ARG_VALUE\x2C\x0d\n  ERR_VM_MODULE_ALREADY_LINKED\x2C\x0d\n  ERR_VM_MODULE_DIFFERENT_CONTEXT\x2C\x0d\n  ERR_VM_MODULE_CANNOT_CREATE_CACHED_DATA\x2C\x0d\n  ERR_VM_MODULE_LINK_FAILURE\x2C\x0d\n  ERR_VM_MODULE_NOT_MODULE\x2C\x0d\n  ERR_VM_MODULE_STATUS\x2C\x0d\n} = require('internal/errors').codes;\x0d\nconst {\x0d\n  validateBoolean\x2C\x0d\n  validateFunction\x2C\x0d\n  validateInt32\x2C\x0d\n  validateObject\x2C\x0d\n  validateUint32\x2C\x0d\n  validateString\x2C\x0d\n} = require('internal/validators');\x0d\n\x0d\nconst binding = internalBinding('module_wrap');\x0d\nconst {\x0d\n  ModuleWrap\x2C\x0d\n  kUninstantiated\x2C\x0d\n  kInstantiating\x2C\x0d\n  kInstantiated\x2C\x0d\n  kEvaluating\x2C\x0d\n  kEvaluated\x2C\x0d\n  kErrored\x2C\x0d\n} = binding;\x0d\n\x0d\nconst STATUS_MAP = {\x0d\n  [kUninstantiated]: 'unlinked'\x2C\x0d\n  [kInstantiating]: 'linking'\x2C\x0d\n  [kInstantiated]: 'linked'\x2C\x0d\n  [kEvaluating]: 'evaluating'\x2C\x0d\n  [kEvaluated]: 'evaluated'\x2C\x0d\n  [kErrored]: 'errored'\x2C\x0d\n};\x0d\n\x0d\nlet globalModuleId = 0;\x0d\nconst defaultModuleName = 'vm:module';\x0d\nconst wrapToModuleMap = new SafeWeakMap();\x0d\n\x0d\nconst kWrap = Symbol('kWrap');\x0d\nconst kContext = Symbol('kContext');\x0d\nconst kPerContextModuleId = Symbol('kPerContextModuleId');\x0d\nconst kLink = Symbol('kLink');\x0d\n\x0d\nclass Module {\x0d\n  constructor(options) {\x0d\n    emitExperimentalWarning('VM Modules');\x0d\n\x0d\n    if (new.target === Module) {\x0d\n      // eslint-disable-next-line no-restricted-syntax\x0d\n      throw new TypeError('Module is not a constructor');\x0d\n    }\x0d\n\x0d\n    const {\x0d\n      context\x2C\x0d\n      sourceText\x2C\x0d\n      syntheticExportNames\x2C\x0d\n      syntheticEvaluationSteps\x2C\x0d\n    } = options;\x0d\n\x0d\n    if (context !== undefined) {\x0d\n      validateObject(context\x2C 'context');\x0d\n      if (!isContext(context)) {\x0d\n        throw new ERR_INVALID_ARG_TYPE('options.context'\x2C 'vm.Context'\x2C\x0d\n                                       context);\x0d\n      }\x0d\n    }\x0d\n\x0d\n    let { identifier } = options;\x0d\n    if (identifier !== undefined) {\x0d\n      validateString(identifier\x2C 'options.identifier');\x0d\n    } else if (context === undefined) {\x0d\n      identifier = `${defaultModuleName}(${globalModuleId++})`;\x0d\n    } else if (context[kPerContextModuleId] !== undefined) {\x0d\n      const curId = context[kPerContextModuleId];\x0d\n      identifier = `${defaultModuleName}(${curId})`;\x0d\n      context[kPerContextModuleId] += 1;\x0d\n    } else {\x0d\n      identifier = `${defaultModuleName}(0)`;\x0d\n      ObjectDefineProperty(context\x2C kPerContextModuleId\x2C {\x0d\n        __proto__: null\x2C\x0d\n        value: 1\x2C\x0d\n        writable: true\x2C\x0d\n        enumerable: false\x2C\x0d\n        configurable: true\x2C\x0d\n      });\x0d\n    }\x0d\n\x0d\n    if (sourceText !== undefined) {\x0d\n      this[kWrap] = new ModuleWrap(identifier\x2C context\x2C sourceText\x2C\x0d\n                                   options.lineOffset\x2C options.columnOffset\x2C\x0d\n                                   options.cachedData);\x0d\n\x0d\n      binding.callbackMap.set(this[kWrap]\x2C {\x0d\n        initializeImportMeta: options.initializeImportMeta\x2C\x0d\n        importModuleDynamically: options.importModuleDynamically ?\x0d\n          importModuleDynamicallyWrap(options.importModuleDynamically) :\x0d\n          undefined\x2C\x0d\n      });\x0d\n    } else {\x0d\n      assert(syntheticEvaluationSteps);\x0d\n      this[kWrap] = new ModuleWrap(identifier\x2C context\x2C\x0d\n                                   syntheticExportNames\x2C\x0d\n                                   syntheticEvaluationSteps);\x0d\n    }\x0d\n\x0d\n    wrapToModuleMap.set(this[kWrap]\x2C this);\x0d\n\x0d\n    this[kContext] = context;\x0d\n  }\x0d\n\x0d\n  get identifier() {\x0d\n    if (this[kWrap] === undefined) {\x0d\n      throw new ERR_VM_MODULE_NOT_MODULE();\x0d\n    }\x0d\n    return this[kWrap].url;\x0d\n  }\x0d\n\x0d\n  get context() {\x0d\n    if (this[kWrap] === undefined) {\x0d\n      throw new ERR_VM_MODULE_NOT_MODULE();\x0d\n    }\x0d\n    return this[kContext];\x0d\n  }\x0d\n\x0d\n  get namespace() {\x0d\n    if (this[kWrap] === undefined) {\x0d\n      throw new ERR_VM_MODULE_NOT_MODULE();\x0d\n    }\x0d\n    if (this[kWrap].getStatus() < kInstantiated) {\x0d\n      throw new ERR_VM_MODULE_STATUS('must not be unlinked or linking');\x0d\n    }\x0d\n    return this[kWrap].getNamespace();\x0d\n  }\x0d\n\x0d\n  get status() {\x0d\n    if (this[kWrap] === undefined) {\x0d\n      throw new ERR_VM_MODULE_NOT_MODULE();\x0d\n    }\x0d\n    return STATUS_MAP[this[kWrap].getStatus()];\x0d\n  }\x0d\n\x0d\n  get error() {\x0d\n    if (this[kWrap] === undefined) {\x0d\n      throw new ERR_VM_MODULE_NOT_MODULE();\x0d\n    }\x0d\n    if (this[kWrap].getStatus() !== kErrored) {\x0d\n      throw new ERR_VM_MODULE_STATUS('must be errored');\x0d\n    }\x0d\n    return this[kWrap].getError();\x0d\n  }\x0d\n\x0d\n  async link(linker) {\x0d\n    if (this[kWrap] === undefined) {\x0d\n      throw new ERR_VM_MODULE_NOT_MODULE();\x0d\n    }\x0d\n    validateFunction(linker\x2C 'linker');\x0d\n    if (this.status === 'linked') {\x0d\n      throw new ERR_VM_MODULE_ALREADY_LINKED();\x0d\n    }\x0d\n    if (this.status !== 'unlinked') {\x0d\n      throw new ERR_VM_MODULE_STATUS('must be unlinked');\x0d\n    }\x0d\n    await this[kLink](linker);\x0d\n    this[kWrap].instantiate();\x0d\n  }\x0d\n\x0d\n  async evaluate(options = kEmptyObject) {\x0d\n    if (this[kWrap] === undefined) {\x0d\n      throw new ERR_VM_MODULE_NOT_MODULE();\x0d\n    }\x0d\n\x0d\n    validateObject(options\x2C 'options');\x0d\n\x0d\n    let timeout = options.timeout;\x0d\n    if (timeout === undefined) {\x0d\n      timeout = -1;\x0d\n    } else {\x0d\n      validateUint32(timeout\x2C 'options.timeout'\x2C true);\x0d\n    }\x0d\n    const { breakOnSigint = false } = options;\x0d\n    validateBoolean(breakOnSigint\x2C 'options.breakOnSigint');\x0d\n    const status = this[kWrap].getStatus();\x0d\n    if (status !== kInstantiated &&\x0d\n        status !== kEvaluated &&\x0d\n        status !== kErrored) {\x0d\n      throw new ERR_VM_MODULE_STATUS(\x0d\n        'must be one of linked\x2C evaluated\x2C or errored'\x0d\n      );\x0d\n    }\x0d\n    await this[kWrap].evaluate(timeout\x2C breakOnSigint);\x0d\n  }\x0d\n\x0d\n  [customInspectSymbol](depth\x2C options) {\x0d\n    if (this[kWrap] === undefined) {\x0d\n      throw new ERR_VM_MODULE_NOT_MODULE();\x0d\n    }\x0d\n    if (typeof depth === 'number' && depth < 0)\x0d\n      return this;\x0d\n\x0d\n    const constructor = getConstructorOf(this) || Module;\x0d\n    const o = ObjectCreate({ constructor });\x0d\n    o.status = this.status;\x0d\n    o.identifier = this.identifier;\x0d\n    o.context = this.context;\x0d\n\x0d\n    ObjectSetPrototypeOf(o\x2C ObjectGetPrototypeOf(this));\x0d\n    ObjectDefineProperty(o\x2C SymbolToStringTag\x2C {\x0d\n      __proto__: null\x2C\x0d\n      value: constructor.name\x2C\x0d\n      configurable: true\x0d\n    });\x0d\n\x0d\n    // Lazy to avoid circular dependency\x0d\n    const { inspect } = require('internal/util/inspect');\x0d\n    return inspect(o\x2C { ...options\x2C customInspect: false });\x0d\n  }\x0d\n}\x0d\n\x0d\nconst kDependencySpecifiers = Symbol('kDependencySpecifiers');\x0d\nconst kNoError = Symbol('kNoError');\x0d\n\x0d\nclass SourceTextModule extends Module {\x0d\n  #error = kNoError;\x0d\n  #statusOverride;\x0d\n\x0d\n  constructor(sourceText\x2C options = kEmptyObject) {\x0d\n    validateString(sourceText\x2C 'sourceText');\x0d\n    validateObject(options\x2C 'options');\x0d\n\x0d\n    const {\x0d\n      lineOffset = 0\x2C\x0d\n      columnOffset = 0\x2C\x0d\n      initializeImportMeta\x2C\x0d\n      importModuleDynamically\x2C\x0d\n      context\x2C\x0d\n      identifier\x2C\x0d\n      cachedData\x2C\x0d\n    } = options;\x0d\n\x0d\n    validateInt32(lineOffset\x2C 'options.lineOffset');\x0d\n    validateInt32(columnOffset\x2C 'options.columnOffset');\x0d\n\x0d\n    if (initializeImportMeta !== undefined &&\x0d\n        typeof initializeImportMeta !== 'function') {\x0d\n      throw new ERR_INVALID_ARG_TYPE(\x0d\n        'options.initializeImportMeta'\x2C 'function'\x2C initializeImportMeta);\x0d\n    }\x0d\n\x0d\n    if (importModuleDynamically !== undefined &&\x0d\n        typeof importModuleDynamically !== 'function') {\x0d\n      throw new ERR_INVALID_ARG_TYPE(\x0d\n        'options.importModuleDynamically'\x2C 'function'\x2C\x0d\n        importModuleDynamically);\x0d\n    }\x0d\n\x0d\n    if (cachedData !== undefined && !isArrayBufferView(cachedData)) {\x0d\n      throw new ERR_INVALID_ARG_TYPE(\x0d\n        'options.cachedData'\x2C\x0d\n        ['Buffer'\x2C 'TypedArray'\x2C 'DataView']\x2C\x0d\n        cachedData\x0d\n      );\x0d\n    }\x0d\n\x0d\n    super({\x0d\n      sourceText\x2C\x0d\n      context\x2C\x0d\n      identifier\x2C\x0d\n      lineOffset\x2C\x0d\n      columnOffset\x2C\x0d\n      cachedData\x2C\x0d\n      initializeImportMeta\x2C\x0d\n      importModuleDynamically\x2C\x0d\n    });\x0d\n\x0d\n    this[kLink] = async (linker) => {\x0d\n      this.#statusOverride = 'linking';\x0d\n\x0d\n      const promises = this[kWrap].link(async (identifier\x2C assert) => {\x0d\n        const module = await linker(identifier\x2C this\x2C { assert });\x0d\n        if (module[kWrap] === undefined) {\x0d\n          throw new ERR_VM_MODULE_NOT_MODULE();\x0d\n        }\x0d\n        if (module.context !== this.context) {\x0d\n          throw new ERR_VM_MODULE_DIFFERENT_CONTEXT();\x0d\n        }\x0d\n        if (module.status === 'errored') {\x0d\n          throw new ERR_VM_MODULE_LINK_FAILURE(`request for '${identifier}' resolved to an errored module`\x2C module.error);\x0d\n        }\x0d\n        if (module.status === 'unlinked') {\x0d\n          await module[kLink](linker);\x0d\n        }\x0d\n        return module[kWrap];\x0d\n      });\x0d\n\x0d\n      try {\x0d\n        if (promises !== undefined) {\x0d\n          await SafePromiseAllReturnVoid(promises);\x0d\n        }\x0d\n      } catch (e) {\x0d\n        this.#error = e;\x0d\n        throw e;\x0d\n      } finally {\x0d\n        this.#statusOverride = undefined;\x0d\n      }\x0d\n    };\x0d\n\x0d\n    this[kDependencySpecifiers] = undefined;\x0d\n  }\x0d\n\x0d\n  get dependencySpecifiers() {\x0d\n    if (this[kWrap] === undefined) {\x0d\n      throw new ERR_VM_MODULE_NOT_MODULE();\x0d\n    }\x0d\n    if (this[kDependencySpecifiers] === undefined) {\x0d\n      this[kDependencySpecifiers] = this[kWrap].getStaticDependencySpecifiers();\x0d\n    }\x0d\n    return this[kDependencySpecifiers];\x0d\n  }\x0d\n\x0d\n  get status() {\x0d\n    if (this[kWrap] === undefined) {\x0d\n      throw new ERR_VM_MODULE_NOT_MODULE();\x0d\n    }\x0d\n    if (this.#error !== kNoError) {\x0d\n      return 'errored';\x0d\n    }\x0d\n    if (this.#statusOverride) {\x0d\n      return this.#statusOverride;\x0d\n    }\x0d\n    return super.status;\x0d\n  }\x0d\n\x0d\n  get error() {\x0d\n    if (this[kWrap] === undefined) {\x0d\n      throw new ERR_VM_MODULE_NOT_MODULE();\x0d\n    }\x0d\n    if (this.#error !== kNoError) {\x0d\n      return this.#error;\x0d\n    }\x0d\n    return super.error;\x0d\n  }\x0d\n\x0d\n  createCachedData() {\x0d\n    const { status } = this;\x0d\n    if (status === 'evaluating' ||\x0d\n        status === 'evaluated' ||\x0d\n        status === 'errored') {\x0d\n      throw new ERR_VM_MODULE_CANNOT_CREATE_CACHED_DATA();\x0d\n    }\x0d\n    return this[kWrap].createCachedData();\x0d\n  }\x0d\n}\x0d\n\x0d\nclass SyntheticModule extends Module {\x0d\n  constructor(exportNames\x2C evaluateCallback\x2C options = kEmptyObject) {\x0d\n    if (!ArrayIsArray(exportNames) ||\x0d\n      ArrayPrototypeSome(exportNames\x2C (e) => typeof e !== 'string')) {\x0d\n      throw new ERR_INVALID_ARG_TYPE('exportNames'\x2C\x0d\n                                     'Array of unique strings'\x2C\x0d\n                                     exportNames);\x0d\n    } else {\x0d\n      ArrayPrototypeForEach(exportNames\x2C (name\x2C i) => {\x0d\n        if (ArrayPrototypeIndexOf(exportNames\x2C name\x2C i + 1) !== -1) {\x0d\n          throw new ERR_INVALID_ARG_VALUE(`exportNames.${name}`\x2C\x0d\n                                          name\x2C\x0d\n                                          'is duplicated');\x0d\n        }\x0d\n      });\x0d\n    }\x0d\n    validateFunction(evaluateCallback\x2C 'evaluateCallback');\x0d\n\x0d\n    validateObject(options\x2C 'options');\x0d\n\x0d\n    const { context\x2C identifier } = options;\x0d\n\x0d\n    super({\x0d\n      syntheticExportNames: exportNames\x2C\x0d\n      syntheticEvaluationSteps: evaluateCallback\x2C\x0d\n      context\x2C\x0d\n      identifier\x2C\x0d\n    });\x0d\n\x0d\n    this[kLink] = () => this[kWrap].link(() => {\x0d\n      assert.fail('link callback should not be called');\x0d\n    });\x0d\n  }\x0d\n\x0d\n  setExport(name\x2C value) {\x0d\n    if (this[kWrap] === undefined) {\x0d\n      throw new ERR_VM_MODULE_NOT_MODULE();\x0d\n    }\x0d\n    validateString(name\x2C 'name');\x0d\n    if (this[kWrap].getStatus() < kInstantiated) {\x0d\n      throw new ERR_VM_MODULE_STATUS('must be linked');\x0d\n    }\x0d\n    this[kWrap].setExport(name\x2C value);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction importModuleDynamicallyWrap(importModuleDynamically) {\x0d\n  const importModuleDynamicallyWrapper = async (...args) => {\x0d\n    const m = await ReflectApply(importModuleDynamically\x2C this\x2C args);\x0d\n    if (isModuleNamespaceObject(m)) {\x0d\n      return m;\x0d\n    }\x0d\n    if (!m || m[kWrap] === undefined) {\x0d\n      throw new ERR_VM_MODULE_NOT_MODULE();\x0d\n    }\x0d\n    if (m.status === 'errored') {\x0d\n      throw m.error;\x0d\n    }\x0d\n    return m.namespace;\x0d\n  };\x0d\n  return importModuleDynamicallyWrapper;\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  Module\x2C\x0d\n  SourceTextModule\x2C\x0d\n  SyntheticModule\x2C\x0d\n  importModuleDynamicallyWrap\x2C\x0d\n  getModuleFromWrap: (wrap) => wrapToModuleMap.get(wrap)\x2C\x0d\n};\x0d\n
code-source-info,0x2a6f0bb5f48,473,0,12851,C0O0C4O12851,,
code-creation,Function,10,346806,0x2a6f0bb71b0,881, node:internal/vm/module:1:1,0x2a6f0bb5ec0,~
code-source-info,0x2a6f0bb71b
code-creation,Function,10,346966,0x2a6f0bb7700,23,<instance_members_initializer> node:internal/vm/module:258:1,0x2a6f0bb6530,~
code-source-info,0x2a6f0bb7700,473,7096,10692,C3O7148C17O7161C22O10692,,
code-creation,LazyCompile,10,347292,0x2a6f0bb8c68,161,ESMLoader node:internal/modules/esm/loader:237:14,0x14dbcbacb10,~
code-source-info,0x2a6f0bb8c68,451,7285,7908,C5O7285C23O7295C33O7299C38O7338C44O7346C49O7360C59O7360C63O7419C73O7423C79O7482C89O7482C93O7538C105O7595C111O7595C118O7649C123O7676C128O7684C139O7684C145O7855C151O7889C160O7907,,
code-creation,LazyCompile,10,347454,0x2a6f0bbaa98,27,ModuleMap node:internal/modules/esm/module_map:17:14,0x14dbcbafbd8,~
code-source-info,0x2a6f0bbaa98,452,534,551,C3O540C7O546C11O540C26O550,,
code-creation,LazyCompile,10,347607,0x2a6f0bbad50,13,desc.value node:internal/per_context/primordials:368:32,0x1f81b712ba0,~
script-source,12,node:internal/per_context/primordials,'use strict';\x0d\n\x0d\n/* eslint-disable node-core/prefer-primordials */\x0d\n\x0d\n// This file subclasses and stores the JS builtins that come from the VM\x0d\n// so that Node.js's builtin modules do not need to later look these up from\x0d\n// the global proxy\x2C which can be mutated by users.\x0d\n\x0d\n// Use of primordials have sometimes a dramatic impact on performance\x2C please\x0d\n// benchmark all changes made in performance-sensitive areas of the codebase.\x0d\n// See: https://github.com/nodejs/node/pull/38248\x0d\n\x0d\nconst {\x0d\n  defineProperty: ReflectDefineProperty\x2C\x0d\n  getOwnPropertyDescriptor: ReflectGetOwnPropertyDescriptor\x2C\x0d\n  ownKeys: ReflectOwnKeys\x2C\x0d\n} = Reflect;\x0d\n\x0d\n// `uncurryThis` is equivalent to `func => Function.prototype.call.bind(func)`.\x0d\n// It is using `bind.bind(call)` to avoid using `Function.prototype.bind`\x0d\n// and `Function.prototype.call` after it may have been mutated by users.\x0d\nconst { apply\x2C bind\x2C call } = Function.prototype;\x0d\nconst uncurryThis = bind.bind(call);\x0d\nprimordials.uncurryThis = uncurryThis;\x0d\n\x0d\n// `applyBind` is equivalent to `func => Function.prototype.apply.bind(func)`.\x0d\n// It is using `bind.bind(apply)` to avoid using `Function.prototype.bind`\x0d\n// and `Function.prototype.apply` after it may have been mutated by users.\x0d\nconst applyBind = bind.bind(apply);\x0d\nprimordials.applyBind = applyBind;\x0d\n\x0d\n// Methods that accept a variable number of arguments\x2C and thus it's useful to\x0d\n// also create `${prefix}${key}Apply`\x2C which uses `Function.prototype.apply`\x2C\x0d\n// instead of `Function.prototype.call`\x2C and thus doesn't require iterator\x0d\n// destructuring.\x0d\nconst varargsMethods = [\x0d\n  // 'ArrayPrototypeConcat' is omitted\x2C because it performs the spread\x0d\n  // on its own for arrays and array-likes with a truthy\x0d\n  // @@isConcatSpreadable symbol property.\x0d\n  'ArrayOf'\x2C\x0d\n  'ArrayPrototypePush'\x2C\x0d\n  'ArrayPrototypeUnshift'\x2C\x0d\n  // 'FunctionPrototypeCall' is omitted\x2C since there's 'ReflectApply'\x0d\n  // and 'FunctionPrototypeApply'.\x0d\n  'MathHypot'\x2C\x0d\n  'MathMax'\x2C\x0d\n  'MathMin'\x2C\x0d\n  'StringFromCharCode'\x2C\x0d\n  'StringFromCodePoint'\x2C\x0d\n  'StringPrototypeConcat'\x2C\x0d\n  'TypedArrayOf'\x2C\x0d\n];\x0d\n\x0d\nfunction getNewKey(key) {\x0d\n  return typeof key === 'symbol' ?\x0d\n    `Symbol${key.description[7].toUpperCase()}${key.description.slice(8)}` :\x0d\n    `${key[0].toUpperCase()}${key.slice(1)}`;\x0d\n}\x0d\n\x0d\nfunction copyAccessor(dest\x2C prefix\x2C key\x2C { enumerable\x2C get\x2C set }) {\x0d\n  ReflectDefineProperty(dest\x2C `${prefix}Get${key}`\x2C {\x0d\n    __proto__: null\x2C\x0d\n    value: uncurryThis(get)\x2C\x0d\n    enumerable\x0d\n  });\x0d\n  if (set !== undefined) {\x0d\n    ReflectDefineProperty(dest\x2C `${prefix}Set${key}`\x2C {\x0d\n      __proto__: null\x2C\x0d\n      value: uncurryThis(set)\x2C\x0d\n      enumerable\x0d\n    });\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction copyPropsRenamed(src\x2C dest\x2C prefix) {\x0d\n  for (const key of ReflectOwnKeys(src)) {\x0d\n    const newKey = getNewKey(key);\x0d\n    const desc = ReflectGetOwnPropertyDescriptor(src\x2C key);\x0d\n    if ('get' in desc) {\x0d\n      copyAccessor(dest\x2C prefix\x2C newKey\x2C desc);\x0d\n    } else {\x0d\n      const name = `${prefix}${newKey}`;\x0d\n      ReflectDefineProperty(dest\x2C name\x2C { __proto__: null\x2C ...desc });\x0d\n      if (varargsMethods.includes(name)) {\x0d\n        ReflectDefineProperty(dest\x2C `${name}Apply`\x2C {\x0d\n          __proto__: null\x2C\x0d\n          // `src` is bound as the `this` so that the static `this` points\x0d\n          // to the object it was defined on\x2C\x0d\n          // e.g.: `ArrayOfApply` gets a `this` of `Array`:\x0d\n          value: applyBind(desc.value\x2C src)\x2C\x0d\n        });\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction copyPropsRenamedBound(src\x2C dest\x2C prefix) {\x0d\n  for (const key of ReflectOwnKeys(src)) {\x0d\n    const newKey = getNewKey(key);\x0d\n    const desc = ReflectGetOwnPropertyDescriptor(src\x2C key);\x0d\n    if ('get' in desc) {\x0d\n      copyAccessor(dest\x2C prefix\x2C newKey\x2C desc);\x0d\n    } else {\x0d\n      const { value } = desc;\x0d\n      if (typeof value === 'function') {\x0d\n        desc.value = value.bind(src);\x0d\n      }\x0d\n\x0d\n      const name = `${prefix}${newKey}`;\x0d\n      ReflectDefineProperty(dest\x2C name\x2C { __proto__: null\x2C ...desc });\x0d\n      if (varargsMethods.includes(name)) {\x0d\n        ReflectDefineProperty(dest\x2C `${name}Apply`\x2C {\x0d\n          __proto__: null\x2C\x0d\n          value: applyBind(value\x2C src)\x2C\x0d\n        });\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction copyPrototype(src\x2C dest\x2C prefix) {\x0d\n  for (const key of ReflectOwnKeys(src)) {\x0d\n    const newKey = getNewKey(key);\x0d\n    const desc = ReflectGetOwnPropertyDescriptor(src\x2C key);\x0d\n    if ('get' in desc) {\x0d\n      copyAccessor(dest\x2C prefix\x2C newKey\x2C desc);\x0d\n    } else {\x0d\n      const { value } = desc;\x0d\n      if (typeof value === 'function') {\x0d\n        desc.value = uncurryThis(value);\x0d\n      }\x0d\n\x0d\n      const name = `${prefix}${newKey}`;\x0d\n      ReflectDefineProperty(dest\x2C name\x2C { __proto__: null\x2C ...desc });\x0d\n      if (varargsMethods.includes(name)) {\x0d\n        ReflectDefineProperty(dest\x2C `${name}Apply`\x2C {\x0d\n          __proto__: null\x2C\x0d\n          value: applyBind(value)\x2C\x0d\n        });\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\n// Create copies of configurable value properties of the global object\x0d\n[\x0d\n  'Proxy'\x2C\x0d\n  'globalThis'\x2C\x0d\n].forEach((name) => {\x0d\n  // eslint-disable-next-line no-restricted-globals\x0d\n  primordials[name] = globalThis[name];\x0d\n});\x0d\n\x0d\n// Create copies of URI handling functions\x0d\n[\x0d\n  decodeURI\x2C\x0d\n  decodeURIComponent\x2C\x0d\n  encodeURI\x2C\x0d\n  encodeURIComponent\x2C\x0d\n].forEach((fn) => {\x0d\n  primordials[fn.name] = fn;\x0d\n});\x0d\n\x0d\n// Create copies of legacy functions\x0d\n[\x0d\n  escape\x2C\x0d\n  eval\x2C\x0d\n  unescape\x2C\x0d\n].forEach((fn) => {\x0d\n  primordials[fn.name] = fn;\x0d\n});\x0d\n\x0d\n// Create copies of the namespace objects\x0d\n[\x0d\n  'JSON'\x2C\x0d\n  'Math'\x2C\x0d\n  'Proxy'\x2C\x0d\n  'Reflect'\x2C\x0d\n].forEach((name) => {\x0d\n  // eslint-disable-next-line no-restricted-globals\x0d\n  copyPropsRenamed(globalThis[name]\x2C primordials\x2C name);\x0d\n});\x0d\n\x0d\n// Create copies of intrinsic objects\x0d\n[\x0d\n  'AggregateError'\x2C\x0d\n  'Array'\x2C\x0d\n  'ArrayBuffer'\x2C\x0d\n  'BigInt'\x2C\x0d\n  'BigInt64Array'\x2C\x0d\n  'BigUint64Array'\x2C\x0d\n  'Boolean'\x2C\x0d\n  'DataView'\x2C\x0d\n  'Date'\x2C\x0d\n  'Error'\x2C\x0d\n  'EvalError'\x2C\x0d\n  'FinalizationRegistry'\x2C\x0d\n  'Float32Array'\x2C\x0d\n  'Float64Array'\x2C\x0d\n  'Function'\x2C\x0d\n  'Int16Array'\x2C\x0d\n  'Int32Array'\x2C\x0d\n  'Int8Array'\x2C\x0d\n  'Map'\x2C\x0d\n  'Number'\x2C\x0d\n  'Object'\x2C\x0d\n  'RangeError'\x2C\x0d\n  'ReferenceError'\x2C\x0d\n  'RegExp'\x2C\x0d\n  'Set'\x2C\x0d\n  'String'\x2C\x0d\n  'Symbol'\x2C\x0d\n  'SyntaxError'\x2C\x0d\n  'TypeError'\x2C\x0d\n  'URIError'\x2C\x0d\n  'Uint16Array'\x2C\x0d\n  'Uint32Array'\x2C\x0d\n  'Uint8Array'\x2C\x0d\n  'Uint8ClampedArray'\x2C\x0d\n  'WeakMap'\x2C\x0d\n  'WeakRef'\x2C\x0d\n  'WeakSet'\x2C\x0d\n].forEach((name) => {\x0d\n  // eslint-disable-next-line no-restricted-globals\x0d\n  const original = globalThis[name];\x0d\n  primordials[name] = original;\x0d\n  copyPropsRenamed(original\x2C primordials\x2C name);\x0d\n  copyPrototype(original.prototype\x2C primordials\x2C `${name}Prototype`);\x0d\n});\x0d\n\x0d\n// Create copies of intrinsic objects that require a valid `this` to call\x0d\n// static methods.\x0d\n// Refs: https://www.ecma-international.org/ecma-262/#sec-promise.all\x0d\n[\x0d\n  'Promise'\x2C\x0d\n].forEach((name) => {\x0d\n  // eslint-disable-next-line no-restricted-globals\x0d\n  const original = globalThis[name];\x0d\n  primordials[name] = original;\x0d\n  copyPropsRenamedBound(original\x2C primordials\x2C name);\x0d\n  copyPrototype(original.prototype\x2C primordials\x2C `${name}Prototype`);\x0d\n});\x0d\n\x0d\n// Create copies of abstract intrinsic objects that are not directly exposed\x0d\n// on the global object.\x0d\n// Refs: https://tc39.es/ecma262/#sec-%typedarray%-intrinsic-object\x0d\n[\x0d\n  { name: 'TypedArray'\x2C original: Reflect.getPrototypeOf(Uint8Array) }\x2C\x0d\n  { name: 'ArrayIterator'\x2C original: {\x0d\n    prototype: Reflect.getPrototypeOf(Array.prototype[Symbol.iterator]())\x2C\x0d\n  } }\x2C\x0d\n  { name: 'StringIterator'\x2C original: {\x0d\n    prototype: Reflect.getPrototypeOf(String.prototype[Symbol.iterator]())\x2C\x0d\n  } }\x2C\x0d\n].forEach(({ name\x2C original }) => {\x0d\n  primordials[name] = original;\x0d\n  // The static %TypedArray% methods require a valid `this`\x2C but can't be bound\x2C\x0d\n  // as they need a subclass constructor as the receiver:\x0d\n  copyPrototype(original\x2C primordials\x2C name);\x0d\n  copyPrototype(original.prototype\x2C primordials\x2C `${name}Prototype`);\x0d\n});\x0d\n\x0d\n/* eslint-enable node-core/prefer-primordials */\x0d\n\x0d\nconst {\x0d\n  Array: ArrayConstructor\x2C\x0d\n  ArrayPrototypeForEach\x2C\x0d\n  ArrayPrototypeMap\x2C\x0d\n  FinalizationRegistry\x2C\x0d\n  FunctionPrototypeCall\x2C\x0d\n  Map\x2C\x0d\n  ObjectDefineProperties\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectFreeze\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  Promise\x2C\x0d\n  PromisePrototypeThen\x2C\x0d\n  PromiseResolve\x2C\x0d\n  ReflectApply\x2C\x0d\n  ReflectConstruct\x2C\x0d\n  ReflectSet\x2C\x0d\n  ReflectGet\x2C\x0d\n  RegExp\x2C\x0d\n  RegExpPrototype\x2C\x0d\n  RegExpPrototypeExec\x2C\x0d\n  RegExpPrototypeGetDotAll\x2C\x0d\n  RegExpPrototypeGetFlags\x2C\x0d\n  RegExpPrototypeGetGlobal\x2C\x0d\n  RegExpPrototypeGetHasIndices\x2C\x0d\n  RegExpPrototypeGetIgnoreCase\x2C\x0d\n  RegExpPrototypeGetMultiline\x2C\x0d\n  RegExpPrototypeGetSource\x2C\x0d\n  RegExpPrototypeGetSticky\x2C\x0d\n  RegExpPrototypeGetUnicode\x2C\x0d\n  Set\x2C\x0d\n  SymbolIterator\x2C\x0d\n  SymbolMatch\x2C\x0d\n  SymbolMatchAll\x2C\x0d\n  SymbolReplace\x2C\x0d\n  SymbolSearch\x2C\x0d\n  SymbolSpecies\x2C\x0d\n  SymbolSplit\x2C\x0d\n  WeakMap\x2C\x0d\n  WeakRef\x2C\x0d\n  WeakSet\x2C\x0d\n} = primordials;\x0d\n\x0d\n// Because these functions are used by `makeSafe`\x2C which is exposed\x0d\n// on the `primordials` object\x2C it's important to use const references\x0d\n// to the primordials that they use:\x0d\nconst createSafeIterator = (factory\x2C next) => {\x0d\n  class SafeIterator {\x0d\n    constructor(iterable) {\x0d\n      this._iterator = factory(iterable);\x0d\n    }\x0d\n    next() {\x0d\n      return next(this._iterator);\x0d\n    }\x0d\n    [SymbolIterator]() {\x0d\n      return this;\x0d\n    }\x0d\n  }\x0d\n  ObjectSetPrototypeOf(SafeIterator.prototype\x2C null);\x0d\n  ObjectFreeze(SafeIterator.prototype);\x0d\n  ObjectFreeze(SafeIterator);\x0d\n  return SafeIterator;\x0d\n};\x0d\n\x0d\nprimordials.SafeArrayIterator = createSafeIterator(\x0d\n  primordials.ArrayPrototypeSymbolIterator\x2C\x0d\n  primordials.ArrayIteratorPrototypeNext\x0d\n);\x0d\nprimordials.SafeStringIterator = createSafeIterator(\x0d\n  primordials.StringPrototypeSymbolIterator\x2C\x0d\n  primordials.StringIteratorPrototypeNext\x0d\n);\x0d\n\x0d\nconst copyProps = (src\x2C dest) => {\x0d\n  ArrayPrototypeForEach(ReflectOwnKeys(src)\x2C (key) => {\x0d\n    if (!ReflectGetOwnPropertyDescriptor(dest\x2C key)) {\x0d\n      ReflectDefineProperty(\x0d\n        dest\x2C\x0d\n        key\x2C\x0d\n        { __proto__: null\x2C ...ReflectGetOwnPropertyDescriptor(src\x2C key) });\x0d\n    }\x0d\n  });\x0d\n};\x0d\n\x0d\n/**\x0d\n * @type {typeof primordials.makeSafe}\x0d\n */\x0d\nconst makeSafe = (unsafe\x2C safe) => {\x0d\n  if (SymbolIterator in unsafe.prototype) {\x0d\n    const dummy = new unsafe();\x0d\n    let next; // We can reuse the same `next` method.\x0d\n\x0d\n    ArrayPrototypeForEach(ReflectOwnKeys(unsafe.prototype)\x2C (key) => {\x0d\n      if (!ReflectGetOwnPropertyDescriptor(safe.prototype\x2C key)) {\x0d\n        const desc = ReflectGetOwnPropertyDescriptor(unsafe.prototype\x2C key);\x0d\n        if (\x0d\n          typeof desc.value === 'function' &&\x0d\n          desc.value.length === 0 &&\x0d\n          SymbolIterator in (FunctionPrototypeCall(desc.value\x2C dummy) ?? {})\x0d\n        ) {\x0d\n          const createIterator = uncurryThis(desc.value);\x0d\n          next ??= uncurryThis(createIterator(dummy).next);\x0d\n          const SafeIterator = createSafeIterator(createIterator\x2C next);\x0d\n          desc.value = function() {\x0d\n            return new SafeIterator(this);\x0d\n          };\x0d\n        }\x0d\n        ReflectDefineProperty(safe.prototype\x2C key\x2C { __proto__: null\x2C ...desc });\x0d\n      }\x0d\n    });\x0d\n  } else {\x0d\n    copyProps(unsafe.prototype\x2C safe.prototype);\x0d\n  }\x0d\n  copyProps(unsafe\x2C safe);\x0d\n\x0d\n  ObjectSetPrototypeOf(safe.prototype\x2C null);\x0d\n  ObjectFreeze(safe.prototype);\x0d\n  ObjectFreeze(safe);\x0d\n  return safe;\x0d\n};\x0d\nprimordials.makeSafe = makeSafe;\x0d\n\x0d\n// Subclass the constructors because we need to use their prototype\x0d\n// methods later.\x0d\n// Defining the `constructor` is necessary here to avoid the default\x0d\n// constructor which uses the user-mutable `%ArrayIteratorPrototype%.next`.\x0d\nprimordials.SafeMap = makeSafe(\x0d\n  Map\x2C\x0d\n  class SafeMap extends Map {\x0d\n    constructor(i) { super(i); } // eslint-disable-line no-useless-constructor\x0d\n  }\x0d\n);\x0d\nprimordials.SafeWeakMap = makeSafe(\x0d\n  WeakMap\x2C\x0d\n  class SafeWeakMap extends WeakMap {\x0d\n    constructor(i) { super(i); } // eslint-disable-line no-useless-constructor\x0d\n  }\x0d\n);\x0d\n\x0d\nprimordials.SafeSet = makeSafe(\x0d\n  Set\x2C\x0d\n  class SafeSet extends Set {\x0d\n    constructor(i) { super(i); } // eslint-disable-line no-useless-constructor\x0d\n  }\x0d\n);\x0d\nprimordials.SafeWeakSet = makeSafe(\x0d\n  WeakSet\x2C\x0d\n  class SafeWeakSet extends WeakSet {\x0d\n    constructor(i) { super(i); } // eslint-disable-line no-useless-constructor\x0d\n  }\x0d\n);\x0d\n\x0d\nprimordials.SafeFinalizationRegistry = makeSafe(\x0d\n  FinalizationRegistry\x2C\x0d\n  class SafeFinalizationRegistry extends FinalizationRegistry {\x0d\n    // eslint-disable-next-line no-useless-constructor\x0d\n    constructor(cleanupCallback) { super(cleanupCallback); }\x0d\n  }\x0d\n);\x0d\nprimordials.SafeWeakRef = makeSafe(\x0d\n  WeakRef\x2C\x0d\n  class SafeWeakRef extends WeakRef {\x0d\n    // eslint-disable-next-line no-useless-constructor\x0d\n    constructor(target) { super(target); }\x0d\n  }\x0d\n);\x0d\n\x0d\nconst SafePromise = makeSafe(\x0d\n  Promise\x2C\x0d\n  class SafePromise extends Promise {\x0d\n    // eslint-disable-next-line no-useless-constructor\x0d\n    constructor(executor) { super(executor); }\x0d\n  }\x0d\n);\x0d\n\x0d\n/**\x0d\n * Attaches a callback that is invoked when the Promise is settled (fulfilled or\x0d\n * rejected). The resolved value cannot be modified from the callback.\x0d\n * Prefer using async functions when possible.\x0d\n * @param {Promise<any>} thisPromise\x0d\n * @param {() => void) | undefined | null} onFinally The callback to execute\x0d\n *        when the Promise is settled (fulfilled or rejected).\x0d\n * @returns {Promise} A Promise for the completion of the callback.\x0d\n */\x0d\nprimordials.SafePromisePrototypeFinally = (thisPromise\x2C onFinally) =>\x0d\n  // Wrapping on a new Promise is necessary to not expose the SafePromise\x0d\n  // prototype to user-land.\x0d\n  new Promise((a\x2C b) =>\x0d\n    new SafePromise((a\x2C b) => PromisePrototypeThen(thisPromise\x2C a\x2C b))\x0d\n      .finally(onFinally)\x0d\n      .then(a\x2C b)\x0d\n  );\x0d\n\x0d\nprimordials.AsyncIteratorPrototype =\x0d\n  primordials.ReflectGetPrototypeOf(\x0d\n    primordials.ReflectGetPrototypeOf(\x0d\n      async function* () {}).prototype);\x0d\n\x0d\nconst arrayToSafePromiseIterable = (promises\x2C mapFn) =>\x0d\n  new primordials.SafeArrayIterator(\x0d\n    ArrayPrototypeMap(\x0d\n      promises\x2C\x0d\n      (promise\x2C i) =>\x0d\n        new SafePromise((a\x2C b) => PromisePrototypeThen(mapFn == null ? promise : mapFn(promise\x2C i)\x2C a\x2C b))\x0d\n    )\x0d\n  );\x0d\n\x0d\n/**\x0d\n * @template T\x2CU\x0d\n * @param {Array<T | PromiseLike<T>>} promises\x0d\n * @param {(v: T|PromiseLike<T>\x2C k: number) => U|PromiseLike<U>} [mapFn]\x0d\n * @returns {Promise<Awaited<U>[]>}\x0d\n */\x0d\nprimordials.SafePromiseAll = (promises\x2C mapFn) =>\x0d\n  // Wrapping on a new Promise is necessary to not expose the SafePromise\x0d\n  // prototype to user-land.\x0d\n  new Promise((a\x2C b) =>\x0d\n    SafePromise.all(arrayToSafePromiseIterable(promises\x2C mapFn)).then(a\x2C b)\x0d\n  );\x0d\n\x0d\n/**\x0d\n * Should only be used for internal functions\x2C this would produce similar\x0d\n * results as `Promise.all` but without prototype pollution\x2C and the return\x0d\n * value is not a genuine Array but an array-like object.\x0d\n * @template T\x2CU\x0d\n * @param {ArrayLike<T | PromiseLike<T>>} promises\x0d\n * @param {(v: T|PromiseLike<T>\x2C k: number) => U|PromiseLike<U>} [mapFn]\x0d\n * @returns {Promise<ArrayLike<Awaited<U>>>}\x0d\n */\x0d\nprimordials.SafePromiseAllReturnArrayLike = (promises\x2C mapFn) =>\x0d\n  new Promise((resolve\x2C reject) => {\x0d\n    const { length } = promises;\x0d\n\x0d\n    const returnVal = ArrayConstructor(length);\x0d\n    ObjectSetPrototypeOf(returnVal\x2C null);\x0d\n    if (length === 0) resolve(returnVal);\x0d\n\x0d\n    let pendingPromises = length;\x0d\n    for (let i = 0; i < length; i++) {\x0d\n      const promise = mapFn != null ? mapFn(promises[i]\x2C i) : promises[i];\x0d\n      PromisePrototypeThen(PromiseResolve(promise)\x2C (result) => {\x0d\n        returnVal[i] = result;\x0d\n        if (--pendingPromises === 0) resolve(returnVal);\x0d\n      }\x2C reject);\x0d\n    }\x0d\n  });\x0d\n\x0d\n/**\x0d\n * Should only be used when we only care about waiting for all the promises to\x0d\n * resolve\x2C not what value they resolve to.\x0d\n * @template T\x2CU\x0d\n * @param {ArrayLike<T | PromiseLike<T>>} promises\x0d\n * @param {(v: T|PromiseLike<T>\x2C k: number) => U|PromiseLike<U>} [mapFn]\x0d\n * @returns {Promise<void>}\x0d\n */\x0d\nprimordials.SafePromiseAllReturnVoid = (promises\x2C mapFn) =>\x0d\n  new Promise((resolve\x2C reject) => {\x0d\n    let pendingPromises = promises.length;\x0d\n    if (pendingPromises === 0) resolve();\x0d\n    for (let i = 0; i < promises.length; i++) {\x0d\n      const promise = mapFn != null ? mapFn(promises[i]\x2C i) : promises[i];\x0d\n      PromisePrototypeThen(PromiseResolve(promise)\x2C () => {\x0d\n        if (--pendingPromises === 0) resolve();\x0d\n      }\x2C reject);\x0d\n    }\x0d\n  });\x0d\n\x0d\n/**\x0d\n * @template T\x2CU\x0d\n * @param {Array<T|PromiseLike<T>>} promises\x0d\n * @param {(v: T|PromiseLike<T>\x2C k: number) => U|PromiseLike<U>} [mapFn]\x0d\n * @returns {Promise<PromiseSettledResult<any>[]>}\x0d\n */\x0d\nprimordials.SafePromiseAllSettled = (promises\x2C mapFn) =>\x0d\n  // Wrapping on a new Promise is necessary to not expose the SafePromise\x0d\n  // prototype to user-land.\x0d\n  new Promise((a\x2C b) =>\x0d\n    SafePromise.allSettled(arrayToSafePromiseIterable(promises\x2C mapFn)).then(a\x2C b)\x0d\n  );\x0d\n\x0d\n/**\x0d\n * Should only be used when we only care about waiting for all the promises to\x0d\n * settle\x2C not what value they resolve or reject to.\x0d\n * @template T\x2CU\x0d\n * @param {ArrayLike<T|PromiseLike<T>>} promises\x0d\n * @param {(v: T|PromiseLike<T>\x2C k: number) => U|PromiseLike<U>} [mapFn]\x0d\n * @returns {Promise<void>}\x0d\n */\x0d\nprimordials.SafePromiseAllSettledReturnVoid = async (promises\x2C mapFn) => {\x0d\n  for (let i = 0; i < promises.length; i++) {\x0d\n    try {\x0d\n      await (mapFn != null ? mapFn(promises[i]\x2C i) : promises[i]);\x0d\n    } catch {\x0d\n      // In all settled\x2C we can ignore errors.\x0d\n    }\x0d\n  }\x0d\n};\x0d\n\x0d\n/**\x0d\n * @template T\x2CU\x0d\n * @param {Array<T|PromiseLike<T>>} promises\x0d\n * @param {(v: T|PromiseLike<T>\x2C k: number) => U|PromiseLike<U>} [mapFn]\x0d\n * @returns {Promise<Awaited<U>>}\x0d\n */\x0d\nprimordials.SafePromiseAny = (promises\x2C mapFn) =>\x0d\n  // Wrapping on a new Promise is necessary to not expose the SafePromise\x0d\n  // prototype to user-land.\x0d\n  new Promise((a\x2C b) =>\x0d\n    SafePromise.any(arrayToSafePromiseIterable(promises\x2C mapFn)).then(a\x2C b)\x0d\n  );\x0d\n\x0d\n/**\x0d\n * @template T\x2CU\x0d\n * @param {Array<T|PromiseLike<T>>} promises\x0d\n * @param {(v: T|PromiseLike<T>\x2C k: number) => U|PromiseLike<U>} [mapFn]\x0d\n * @returns {Promise<Awaited<U>>}\x0d\n */\x0d\nprimordials.SafePromiseRace = (promises\x2C mapFn) =>\x0d\n  // Wrapping on a new Promise is necessary to not expose the SafePromise\x0d\n  // prototype to user-land.\x0d\n  new Promise((a\x2C b) =>\x0d\n    SafePromise.race(arrayToSafePromiseIterable(promises\x2C mapFn)).then(a\x2C b)\x0d\n  );\x0d\n\x0d\n\x0d\nconst {\x0d\n  exec: OriginalRegExpPrototypeExec\x2C\x0d\n  [SymbolMatch]: OriginalRegExpPrototypeSymbolMatch\x2C\x0d\n  [SymbolMatchAll]: OriginalRegExpPrototypeSymbolMatchAll\x2C\x0d\n  [SymbolReplace]: OriginalRegExpPrototypeSymbolReplace\x2C\x0d\n  [SymbolSearch]: OriginalRegExpPrototypeSymbolSearch\x2C\x0d\n  [SymbolSplit]: OriginalRegExpPrototypeSymbolSplit\x2C\x0d\n} = RegExpPrototype;\x0d\n\x0d\nclass RegExpLikeForStringSplitting {\x0d\n  #regex;\x0d\n  constructor() {\x0d\n    this.#regex = ReflectConstruct(RegExp\x2C arguments);\x0d\n  }\x0d\n\x0d\n  get lastIndex() {\x0d\n    return ReflectGet(this.#regex\x2C 'lastIndex');\x0d\n  }\x0d\n  set lastIndex(value) {\x0d\n    ReflectSet(this.#regex\x2C 'lastIndex'\x2C value);\x0d\n  }\x0d\n\x0d\n  exec() {\x0d\n    return ReflectApply(OriginalRegExpPrototypeExec\x2C this.#regex\x2C arguments);\x0d\n  }\x0d\n}\x0d\nObjectSetPrototypeOf(RegExpLikeForStringSplitting.prototype\x2C null);\x0d\n\x0d\nprimordials.hardenRegExp = function hardenRegExp(pattern) {\x0d\n  ObjectDefineProperties(pattern\x2C {\x0d\n    [SymbolMatch]: {\x0d\n      __proto__: null\x2C\x0d\n      configurable: true\x2C\x0d\n      value: OriginalRegExpPrototypeSymbolMatch\x2C\x0d\n    }\x2C\x0d\n    [SymbolMatchAll]: {\x0d\n      __proto__: null\x2C\x0d\n      configurable: true\x2C\x0d\n      value: OriginalRegExpPrototypeSymbolMatchAll\x2C\x0d\n    }\x2C\x0d\n    [SymbolReplace]: {\x0d\n      __proto__: null\x2C\x0d\n      configurable: true\x2C\x0d\n      value: OriginalRegExpPrototypeSymbolReplace\x2C\x0d\n    }\x2C\x0d\n    [SymbolSearch]: {\x0d\n      __proto__: null\x2C\x0d\n      configurable: true\x2C\x0d\n      value: OriginalRegExpPrototypeSymbolSearch\x2C\x0d\n    }\x2C\x0d\n    [SymbolSplit]: {\x0d\n      __proto__: null\x2C\x0d\n      configurable: true\x2C\x0d\n      value: OriginalRegExpPrototypeSymbolSplit\x2C\x0d\n    }\x2C\x0d\n    constructor: {\x0d\n      __proto__: null\x2C\x0d\n      configurable: true\x2C\x0d\n      value: {\x0d\n        [SymbolSpecies]: RegExpLikeForStringSplitting\x2C\x0d\n      }\x0d\n    }\x2C\x0d\n    dotAll: {\x0d\n      __proto__: null\x2C\x0d\n      configurable: true\x2C\x0d\n      value: RegExpPrototypeGetDotAll(pattern)\x2C\x0d\n    }\x2C\x0d\n    exec: {\x0d\n      __proto__: null\x2C\x0d\n      configurable: true\x2C\x0d\n      value: OriginalRegExpPrototypeExec\x2C\x0d\n    }\x2C\x0d\n    global: {\x0d\n      __proto__: null\x2C\x0d\n      configurable: true\x2C\x0d\n      value: RegExpPrototypeGetGlobal(pattern)\x2C\x0d\n    }\x2C\x0d\n    hasIndices: {\x0d\n      __proto__: null\x2C\x0d\n      configurable: true\x2C\x0d\n      value: RegExpPrototypeGetHasIndices(pattern)\x2C\x0d\n    }\x2C\x0d\n    ignoreCase: {\x0d\n      __proto__: null\x2C\x0d\n      configurable: true\x2C\x0d\n      value: RegExpPrototypeGetIgnoreCase(pattern)\x2C\x0d\n    }\x2C\x0d\n    multiline: {\x0d\n      __proto__: null\x2C\x0d\n      configurable: true\x2C\x0d\n      value: RegExpPrototypeGetMultiline(pattern)\x2C\x0d\n    }\x2C\x0d\n    source: {\x0d\n      __proto__: null\x2C\x0d\n      configurable: true\x2C\x0d\n      value: RegExpPrototypeGetSource(pattern)\x2C\x0d\n    }\x2C\x0d\n    sticky: {\x0d\n      __proto__: null\x2C\x0d\n      configurable: true\x2C\x0d\n      value: RegExpPrototypeGetSticky(pattern)\x2C\x0d\n    }\x2C\x0d\n    unicode: {\x0d\n      __proto__: null\x2C\x0d\n      configurable: true\x2C\x0d\n      value: RegExpPrototypeGetUnicode(pattern)\x2C\x0d\n    }\x2C\x0d\n  });\x0d\n  ObjectDefineProperty(pattern\x2C 'flags'\x2C {\x0d\n    __proto__: null\x2C\x0d\n    configurable: true\x2C\x0d\n    value: RegExpPrototypeGetFlags(pattern)\x2C\x0d\n  });\x0d\n  return pattern;\x0d\n};\x0d\n\x0d\n\x0d\nprimordials.SafeStringPrototypeSearch = (str\x2C regexp) => {\x0d\n  regexp.lastIndex = 0;\x0d\n  const match = RegExpPrototypeExec(regexp\x2C str);\x0d\n  return match ? match.index : -1;\x0d\n};\x0d\n\x0d\nObjectSetPrototypeOf(primordials\x2C null);\x0d\nObjectFreeze(primordials);\x0d\n
code-source-info,0x2a6f0bbad50,12,10861,10922,C0O10879C7O10886C12O10909,,
tick,0x7ff7258a7f0c,349328,0,0x0,3,0x7ff726074500,0x14dbcba67c8,0x1f81b7195f7,0x7ff6a66c32e1,0x14dbcba11ae,0x14dbcba0fa3,0xb50533ad4e,0xb505339468,0xb5053356e1
code-creation,LazyCompile,10,349393,0x2a6f0bbc4f0,19,canBeRequiredWithoutScheme node:internal/bootstrap/loaders:255:36,0x1f81b719368,~
code-source-info,0x2a6f0bbc4f0,15,8054,8107,C0O8066C7O8094C12O8094C18O8102,,
new,MemoryChunk,0x8572800000,262144
code-creation,Function,11,349996,0x7ff6a66c4400,28076, node:internal/modules/cjs/loader:1:1,0x14dbcba3fa8,^
code-source-info,0x7ff6a66c4400,448,0,45576,,,
code-creation,Function,11,350044,0x7ff6a66cb240,412,getCLIOptionsFromBinding node:internal/options:18:34,0x914792d5a8,^
code-source-info,0x7ff6a66cb240,87,514,620,,,
code-creation,Function,11,350094,0x7ff6a66cb480,1228,compileForInternalLoader node:internal/bootstrap/loaders:319:27,0x1f81b719520,^
code-source-info,0x7ff6a66cb480,15,10455,11279,,,
code-creation,Function,11,350139,0x7ff6a66cba00,536,internalBinding node:internal/bootstrap/loaders:172:45,0x1f81b718e50,^
code-source-info,0x7ff6a66cba00,15,5454,5699,,,
code-creation,Function,11,350178,0x7ff6a66cbcc0,260,protoGetter node:net:842:21,0xb50533f570,^
code-source-info,0x7ff6a66cbcc0,459,23013,23181,,,
code-creation,Function,11,350215,0x7ff6a66cbe80,240,SafeMap node:internal/per_context/primordials:394:16,0x1f81b712d78,^
code-source-info,0x7ff6a66cbe80,12,11615,11632,,,
code-creation,Function,11,350253,0x7ff6a66cc000,100,next node:internal/per_context/primordials:316:9,0x1f81b7121d0,^
code-source-info,0x7ff6a66cc000,12,9143,9190,,,
code-creation,Function,11,350288,0x7ff6a66cc100,180,canBeRequiredWithoutScheme node:internal/bootstrap/loaders:255:36,0x1f81b719368,^
code-source-info,0x7ff6a66cc100,15,8054,8107,,,
code-creation,LazyCompile,10,350414,0x8572804048,32, node:internal/modules/cjs/loader:226:41,0x14dbcba4930,~
code-source-info,0x8572804048,448,6936,6962,C0O6944C9O6945C21O6957C31O6962,,
code-creation,LazyCompile,10,350595,0x85728041e8,19,getSchemeOnlyModuleNames node:internal/bootstrap/loaders:259:34,0x1f81b7193b8,~
code-source-info,0x85728041e8,15,8144,8197,C0O8154C11O8171C14O8161C18O8192,,
code-creation,LazyCompile,10,350695,0x8572804360,26, node:internal/modules/cjs/loader:228:50,0x14dbcba4980,~
code-source-info,0x8572804360,448,7018,7065,C0O7043C5O7043C15O7055C20O7043C25O7065,,
code-creation,LazyCompile,10,350888,0x8572804ab8,28,getEmbedderOptions node:internal/options:32:28,0x914792d720,~
code-source-info,0x8572804ab8,87,791,913,C0O799C6O828C11O846C17O844C23O887C27O910,,
code-creation,LazyCompile,10,351017,0x8572804d60,315,Module._initPaths node:internal/modules/cjs/loader:1346:29,0x14dbcba5530,~
code-source-info,0x8572804d
code-creation,Eval,10,351355,0x85728053f0,5, node:internal/modules/run_main:1:1,0x85728051c8,~
script-source,474,node:internal/modules/run_main,'use strict';\x0d\n\x0d\nconst {\x0d\n  ObjectCreate\x2C\x0d\n  StringPrototypeEndsWith\x2C\x0d\n} = primordials;\x0d\nconst CJSLoader = require('internal/modules/cjs/loader');\x0d\nconst { Module\x2C toRealPath\x2C readPackageScope } = CJSLoader;\x0d\nconst { getOptionValue } = require('internal/options');\x0d\nconst path = require('path');\x0d\nconst {\x0d\n  handleProcessExit\x2C\x0d\n} = require('internal/modules/esm/handle_process_exit');\x0d\n\x0d\nfunction resolveMainPath(main) {\x0d\n  // Note extension resolution for the main entry point can be deprecated in a\x0d\n  // future major.\x0d\n  // Module._findPath is monkey-patchable here.\x0d\n  let mainPath = Module._findPath(path.resolve(main)\x2C null\x2C true);\x0d\n  if (!mainPath)\x0d\n    return;\x0d\n\x0d\n  const preserveSymlinksMain = getOptionValue('--preserve-symlinks-main');\x0d\n  if (!preserveSymlinksMain)\x0d\n    mainPath = toRealPath(mainPath);\x0d\n\x0d\n  return mainPath;\x0d\n}\x0d\n\x0d\nfunction shouldUseESMLoader(mainPath) {\x0d\n  /**\x0d\n   * @type {string[]} userLoaders A list of custom loaders registered by the user\x0d\n   * (or an empty list when none have been registered).\x0d\n   */\x0d\n  const userLoaders = getOptionValue('--experimental-loader');\x0d\n  if (userLoaders.length > 0)\x0d\n    return true;\x0d\n  const esModuleSpecifierResolution =\x0d\n    getOptionValue('--experimental-specifier-resolution');\x0d\n  if (esModuleSpecifierResolution === 'node')\x0d\n    return true;\x0d\n  // Determine the module format of the main\x0d\n  if (mainPath && StringPrototypeEndsWith(mainPath\x2C '.mjs'))\x0d\n    return true;\x0d\n  if (!mainPath || StringPrototypeEndsWith(mainPath\x2C '.cjs'))\x0d\n    return false;\x0d\n  const pkg = readPackageScope(mainPath);\x0d\n  return pkg && pkg.data.type === 'module';\x0d\n}\x0d\n\x0d\nfunction runMainESM(mainPath) {\x0d\n  const { loadESM } = require('internal/process/esm_loader');\x0d\n  const { pathToFileURL } = require('internal/url');\x0d\n\x0d\n  handleMainPromise(loadESM((esmLoader) => {\x0d\n    const main = path.isAbsolute(mainPath) ?\x0d\n      pathToFileURL(mainPath).href : mainPath;\x0d\n    return esmLoader.import(main\x2C undefined\x2C ObjectCreate(null));\x0d\n  }));\x0d\n}\x0d\n\x0d\nasync function handleMainPromise(promise) {\x0d\n  process.on('exit'\x2C handleProcessExit);\x0d\n  try {\x0d\n    return await promise;\x0d\n  } finally {\x0d\n    process.off('exit'\x2C handleProcessExit);\x0d\n  }\x0d\n}\x0d\n\x0d\n// For backwards compatibility\x2C we have to run a bunch of\x0d\n// monkey-patchable code that belongs to the CJS loader (exposed by\x0d\n// `require('module')`) even when the entry point is ESM.\x0d\nfunction executeUserEntryPoint(main = process.argv[1]) {\x0d\n  const resolvedMain = resolveMainPath(main);\x0d\n  const useESMLoader = shouldUseESMLoader(resolvedMain);\x0d\n  if (useESMLoader) {\x0d\n    runMainESM(resolvedMain || main);\x0d\n  } else {\x0d\n    // Module._load is the monkey-patchable CJS module loader.\x0d\n    Module._load(main\x2C null\x2C true);\x0d\n  }\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  executeUserEntryPoint\x2C\x0d\n  handleMainPromise\x2C\x0d\n};\x0d\n
code-source-info,0x85728053f0,474,0,2788,C0O0C4O2788,,
code-creation,Function,10,351580,0x85728056d8,178, node:internal/modules/run_main:1:1,0x8572805368,~
code-source-info,0x85728056d8,474,0,2788,C0O0C66O28C72O45C78O107C84O107C89O156C95O164C101O176C107O236C113O236C118O217C124O279C130O279C134O279C136O332C142O332C147O308C153O2716C160O2738C166O2764C172O2731C177O2787,,
code-creation,LazyCompile,10,351762,0x8572805cf0,163,initializeESMLoader node:internal/process/pre_execution:567:29,0xb505337220,~
code-source-info,0x8572805cf0,439,18464,19579,C0O18548C6O18548C13O18597C16O18593C21O18591C25O18617C30O18621C34O18641C40O18670C41O18677C42O18782C48O18782C53O18696C58O18737C63O18829C69O18829C74O19033C79O18991C83O19104C88O19065C92O19274C100O19278C106O19397C112O19397C117O19345C122O19353C127O19371C132O19444C138O19444C143O19464C145O19474C149O19489C151O19509C155O19534C157O19553C162O19578,,
code-creation,LazyCompile,10,351886,0x8572805f08,5,get hasLoadedAnyUserCJSModule node:internal/modules/cjs/loader:75:32,0x14dbcba4840,~
code-source-info,0x8572805f08,448,2390,2430,C0O2395C4O2428,,
code-creation,LazyCompile,10,351958,0x8572805ff0,53,loadPreloadModules node:internal/process/pre_execution:612:28,0xb505337310,~
code-source-info,0x8572805ff0,439,20174,20505,C0O20263C8O20263C13O20295C15O20332C21O20339C26O20420C32O20420C37O20420C42O20385C47O20465C52O20504,,
code-creation,LazyCompile,10,352028,0x85728061e0,50,initializeFrozenIntrinsics node:internal/process/pre_execution:604:36,0xb5053372c0,~
code-source-info,0x85728061e0,439,19915,20143,C0O19923C8O19927C14O19973C17O19981C28O19981C34O20095C40O20095C45O20132C49O20142,,
code-creation,LazyCompile,10,352085,0x8572806308,22,markBootstrapComplete node:internal/process/pre_execution:625:31,0xb505337360,~
code-source-info,0x8572806308,439,20539,20605,C0O20547C6O20547C11O20577C16O20578C21O20604,,
code-creation,LazyCompile,10,352241,0x8572806408,80,executeUserEntryPoint node:internal/modules/run_main:74:31,0x8572805560,~
code-source-info,0x8572806408,474,2398,2712,C7O2414C14O2418C22O2449C25O2449C30O2496C33O2496C38O2533C40O2558C45O2569C50O2558C56O2673C61O2680C73O2680C79O2711,,
code-creation,LazyCompile,10,352323,0x8572806858,68,resolveMainPath node:internal/modules/run_main:15:25,0x8572805420,~
code-source-info,0x8572806858,474,412,839,C0O588C5O595C12O605C15O610C20O610C30O595C36O641C38O661C39O668C40O703C48O703C53O750C55O782C60O793C65O820C67O836,,
code-creation,LazyCompile,10,352575,0x8572806b18,815,Module._findPath node:internal/modules/cjs/loader:555:28,0x14dbcba4d40,~
code-source-info,0x8572806b18,448,16539,20449,C0O16593C5O16598C10O16598C16O16622C18O16650C26O16674C30O16694C36O16701C41O16715C42O16728C43O16756C45O16764C51O16775C58O16775C63O16773C67O16827C70O16834C77O16844C81O16859C83O16875C85O16888C86O16898C88O16937C94O16944C101O16957C104O17000C108O17007C113O16957C121O17016C123O17012C130O17047C133O17090C137O17097C142O17047C150O17106C152O17102C157O17144C164O17151C171O17169C174O17212C178O17219C183O17169C191O17228C193O17224C200O17260C203O17303C207O17310C212O17260C220O17319C222O17315C227O17352C234O17359C241O17379C244O17422C248O17429C253O17379C261O17438C263O17434C267O17511C275O17511C283O17553C285O17549C290O17587C297O17594C304O17610C311O17610C319O17652C321O17648C328O17682C334O17695C341O17695C349O17737C351O17733C358O17769C365O17769C373O17811C375O17807C380O17843C387O17850C394O17868C401O17868C409O17910C411O17906C418O17943C424O17956C431O17956C439O17998C441O17994C445O18049C447O18058C451O18107C456O18112C461O18112C467O18137C476O18141C483O18202C485O18272C487O18285C491O18277C496O18403C498O18408C502O18418C508O18436C512O18447C515O18447C522O18462C527O18467C529O18484C533O18539C536O18539C542O18580C544O18610C546O18633C547O18665C552O18670C557O18670C564O18706C566O18734C571O18734C576O18756C580O18785C581O18792C586O18820C590O18846C596O18883C601O18899C606O18899C614O18951C617O18962C624O19013C630O19636C635O19652C640O19652C648O19700C651O19711C656O19762C660O19835C664O19870C672O19895C677O19877C682O19918C694O19929C700O19991C706O20011C711O20098C715O20131C723O20156C728O20138C733O20177C748O20188C754O20247C758O20270C761O20277C768O20298C772O20317C774O20333C775O20346C780O20388C790O20388C797O20346C802O18294C807O18259C813O20433C814O20446,,
code-creation,LazyCompile,10,352852,0x8572807108,109,isAbsolute node:path:402:13,0x2dbe93daeb8,~
code-source-info,0x8572807108,73,13104,13523,C0O13118C8O13118C13O13170C18O13183C19O13191C24O13205C25O13218C26O13239C33O13239C39O13280C42O13287C50O13355C58O13369C66O13405C72O13405C80O13444C82O13440C92O13481C98O13481C104O13465C108O13518,,
code-creation,LazyCompile,10,352987,0x8572807328,85,stat node:internal/modules/cjs/loader:161:14,0x14dbcba4060,~
code-source-info,0x8572807328,448,5042,5451,C0O5058C5O5074C10O5074C17O5105C23O5151C28O5161C33O5161C39O5181C41O5207C43O5221C44O5245C49O5245C54O5278C61O5311C66O5393C71O5403C76O5403C82O5434C84O5448,,
code-creation,LazyCompile,10,353105,0x8572807538,232,toNamespacedPath node:path:618:19,0x2dbe93dafa8,~
code-source-info,0x8572807538,73,20086,21201,C0O20152C6O20189C12O20196C17O20210C19O20222C20O20251C25O20257C30O20257C36O20296C43O20303C48O20316C50O20328C51O20336C58O20340C66O20387C68O20383C73O20445C81O20449C89O20496C91O20492C96O20541C104O20541C110O20594C112O20607C114O20603C121O20638C123O20634C128O20738C133O20760C139O20760C148O20800C151O20833C156O20865C161O20865C167O20845C175O20919C181O20919C189O20966C191O20962C198O20987C204O20987C212O21034C214O21030C219O21137C224O21154C228O21169C229O21184C231O21196,,
code-creation,LazyCompile,10,353354,0x8572807798,42,toRealPath node:internal/modules/cjs/loader:449:20,0x14dbcba43d0,~
code-source-info,0x8572807798,448,13204,13320,C0O13223C5O13233C10O13246C17O13267C20O13278C28O13297C35O13233C41O13317,,
code-creation,LazyCompile,10,353816,0x8572807fb8,1079,realpathSync node:fs:2474:22,0x2dbe93f58b0,~
script-source,75,node:fs,// Copyright Joyent\x2C Inc. and other Node contributors.\x0d\n//\x0d\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\x0d\n// copy of this software and associated documentation files (the\x0d\n// "Software")\x2C to deal in the Software without restriction\x2C including\x0d\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\x0d\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\x0d\n// persons to whom the Software is furnished to do so\x2C subject to the\x0d\n// following conditions:\x0d\n//\x0d\n// The above copyright notice and this permission notice shall be included\x0d\n// in all copies or substantial portions of the Software.\x0d\n//\x0d\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\x0d\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\x0d\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\x0d\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\x0d\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\x0d\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\x0d\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\x0d\n\x0d\n// Maintainers\x2C keep in mind that ES1-style octal literals (`0666`) are not\x0d\n// allowed in strict mode. Use ES6-style octal literals instead (`0o666`).\x0d\n\x0d\n'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypePush\x2C\x0d\n  BigIntPrototypeToString\x2C\x0d\n  MathMax\x2C\x0d\n  Number\x2C\x0d\n  ObjectDefineProperties\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  Promise\x2C\x0d\n  ReflectApply\x2C\x0d\n  SafeMap\x2C\x0d\n  SafeSet\x2C\x0d\n  String\x2C\x0d\n  StringPrototypeCharCodeAt\x2C\x0d\n  StringPrototypeIndexOf\x2C\x0d\n  StringPrototypeSlice\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst { fs: constants } = internalBinding('constants');\x0d\nconst {\x0d\n  S_IFIFO\x2C\x0d\n  S_IFLNK\x2C\x0d\n  S_IFMT\x2C\x0d\n  S_IFREG\x2C\x0d\n  S_IFSOCK\x2C\x0d\n  F_OK\x2C\x0d\n  R_OK\x2C\x0d\n  W_OK\x2C\x0d\n  X_OK\x2C\x0d\n  O_WRONLY\x2C\x0d\n  O_SYMLINK\x0d\n} = constants;\x0d\n\x0d\nconst pathModule = require('path');\x0d\nconst { isArrayBufferView } = require('internal/util/types');\x0d\n\x0d\n// We need to get the statValues from the binding at the callsite since\x0d\n// it's re-initialized after deserialization.\x0d\n\x0d\nconst binding = internalBinding('fs');\x0d\nconst { Buffer } = require('buffer');\x0d\nconst {\x0d\n  aggregateTwoErrors\x2C\x0d\n  codes: {\x0d\n    ERR_FS_FILE_TOO_LARGE\x2C\x0d\n    ERR_INVALID_ARG_VALUE\x2C\x0d\n    ERR_FEATURE_UNAVAILABLE_ON_PLATFORM\x2C\x0d\n  }\x2C\x0d\n  AbortError\x2C\x0d\n  uvErrmapGet\x2C\x0d\n  uvException\x0d\n} = require('internal/errors');\x0d\n\x0d\nconst { FSReqCallback } = binding;\x0d\nconst { toPathIfFileURL } = require('internal/url');\x0d\nconst {\x0d\n  customPromisifyArgs: kCustomPromisifyArgsSymbol\x2C\x0d\n  deprecate\x2C\x0d\n  kEmptyObject\x2C\x0d\n  promisify: {\x0d\n    custom: kCustomPromisifiedSymbol\x2C\x0d\n  }\x2C\x0d\n  SideEffectFreeRegExpPrototypeExec\x2C\x0d\n} = require('internal/util');\x0d\nconst {\x0d\n  constants: {\x0d\n    kIoMaxLength\x2C\x0d\n    kMaxUserId\x2C\x0d\n  }\x2C\x0d\n  copyObject\x2C\x0d\n  Dirent\x2C\x0d\n  emitRecursiveRmdirWarning\x2C\x0d\n  getDirents\x2C\x0d\n  getOptions\x2C\x0d\n  getValidatedFd\x2C\x0d\n  getValidatedPath\x2C\x0d\n  getValidMode\x2C\x0d\n  handleErrorFromBinding\x2C\x0d\n  nullCheck\x2C\x0d\n  preprocessSymlinkDestination\x2C\x0d\n  Stats\x2C\x0d\n  getStatsFromBinding\x2C\x0d\n  realpathCacheKey\x2C\x0d\n  stringToFlags\x2C\x0d\n  stringToSymlinkType\x2C\x0d\n  toUnixTimestamp\x2C\x0d\n  validateBufferArray\x2C\x0d\n  validateCpOptions\x2C\x0d\n  validateOffsetLengthRead\x2C\x0d\n  validateOffsetLengthWrite\x2C\x0d\n  validatePath\x2C\x0d\n  validatePosition\x2C\x0d\n  validateRmOptions\x2C\x0d\n  validateRmOptionsSync\x2C\x0d\n  validateRmdirOptions\x2C\x0d\n  validateStringAfterArrayBufferView\x2C\x0d\n  validatePrimitiveStringAfterArrayBufferView\x2C\x0d\n  warnOnNonPortableTemplate\x0d\n} = require('internal/fs/utils');\x0d\nconst {\x0d\n  Dir\x2C\x0d\n  opendir\x2C\x0d\n  opendirSync\x0d\n} = require('internal/fs/dir');\x0d\nconst {\x0d\n  CHAR_FORWARD_SLASH\x2C\x0d\n  CHAR_BACKWARD_SLASH\x2C\x0d\n} = require('internal/constants');\x0d\nconst {\x0d\n  isUint32\x2C\x0d\n  parseFileMode\x2C\x0d\n  validateBoolean\x2C\x0d\n  validateBuffer\x2C\x0d\n  validateEncoding\x2C\x0d\n  validateFunction\x2C\x0d\n  validateInteger\x2C\x0d\n  validateObject\x2C\x0d\n  validateString\x2C\x0d\n} = require('internal/validators');\x0d\n\x0d\nconst watchers = require('internal/fs/watchers');\x0d\nconst ReadFileContext = require('internal/fs/read_file_context');\x0d\n\x0d\nlet truncateWarn = true;\x0d\nlet fs;\x0d\n\x0d\n// Lazy loaded\x0d\nlet cpFn;\x0d\nlet cpSyncFn;\x0d\nlet promises = null;\x0d\nlet ReadStream;\x0d\nlet WriteStream;\x0d\nlet rimraf;\x0d\nlet rimrafSync;\x0d\n\x0d\n// These have to be separate because of how graceful-fs happens to do it's\x0d\n// monkeypatching.\x0d\nlet FileReadStream;\x0d\nlet FileWriteStream;\x0d\n\x0d\nconst isWindows = process.platform === 'win32';\x0d\nconst isOSX = process.platform === 'darwin';\x0d\n\x0d\n\x0d\nconst showStringCoercionDeprecation = deprecate(\x0d\n  () => {}\x2C\x0d\n  'Implicit coercion of objects with own toString property is deprecated.'\x2C\x0d\n  'DEP0162'\x0d\n);\x0d\nfunction showTruncateDeprecation() {\x0d\n  if (truncateWarn) {\x0d\n    process.emitWarning(\x0d\n      'Using fs.truncate with a file descriptor is deprecated. Please use ' +\x0d\n      'fs.ftruncate with a file descriptor instead.'\x2C\x0d\n      'DeprecationWarning'\x2C 'DEP0081');\x0d\n    truncateWarn = false;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction maybeCallback(cb) {\x0d\n  validateFunction(cb\x2C 'cb');\x0d\n\x0d\n  return cb;\x0d\n}\x0d\n\x0d\n// Ensure that callbacks run in the global context. Only use this function\x0d\n// for callbacks that are passed to the binding layer\x2C callbacks that are\x0d\n// invoked from JS already run in the proper scope.\x0d\nfunction makeCallback(cb) {\x0d\n  validateFunction(cb\x2C 'cb');\x0d\n\x0d\n  return (...args) => ReflectApply(cb\x2C this\x2C args);\x0d\n}\x0d\n\x0d\n// Special case of `makeCallback()` that is specific to async `*stat()` calls as\x0d\n// an optimization\x2C since the data passed back to the callback needs to be\x0d\n// transformed anyway.\x0d\nfunction makeStatsCallback(cb) {\x0d\n  validateFunction(cb\x2C 'cb');\x0d\n\x0d\n  return (err\x2C stats) => {\x0d\n    if (err) return cb(err);\x0d\n    cb(err\x2C getStatsFromBinding(stats));\x0d\n  };\x0d\n}\x0d\n\x0d\nconst isFd = isUint32;\x0d\n\x0d\nfunction isFileType(stats\x2C fileType) {\x0d\n  // Use stats array directly to avoid creating an fs.Stats instance just for\x0d\n  // our internal use.\x0d\n  let mode = stats[1];\x0d\n  if (typeof mode === 'bigint')\x0d\n    mode = Number(mode);\x0d\n  return (mode & S_IFMT) === fileType;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Tests a user's permissions for the file or directory\x0d\n * specified by `path`.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {number} [mode]\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction access(path\x2C mode\x2C callback) {\x0d\n  if (typeof mode === 'function') {\x0d\n    callback = mode;\x0d\n    mode = F_OK;\x0d\n  }\x0d\n\x0d\n  path = getValidatedPath(path);\x0d\n  mode = getValidMode(mode\x2C 'access');\x0d\n  callback = makeCallback(callback);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.access(pathModule.toNamespacedPath(path)\x2C mode\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously tests a user's permissions for the file or\x0d\n * directory specified by `path`.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {number} [mode]\x0d\n * @returns {void}\x0d\n */\x0d\nfunction accessSync(path\x2C mode) {\x0d\n  path = getValidatedPath(path);\x0d\n  mode = getValidMode(mode\x2C 'access');\x0d\n\x0d\n  const ctx = { path };\x0d\n  binding.access(pathModule.toNamespacedPath(path)\x2C mode\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Tests whether or not the given path exists.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {(exists?: boolean) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction exists(path\x2C callback) {\x0d\n  maybeCallback(callback);\x0d\n\x0d\n  function suppressedCallback(err) {\x0d\n    callback(err ? false : true);\x0d\n  }\x0d\n\x0d\n  try {\x0d\n    fs.access(path\x2C F_OK\x2C suppressedCallback);\x0d\n  } catch {\x0d\n    return callback(false);\x0d\n  }\x0d\n}\x0d\n\x0d\nObjectDefineProperty(exists\x2C kCustomPromisifiedSymbol\x2C {\x0d\n  __proto__: null\x2C\x0d\n  value: function exists(path) { // eslint-disable-line func-name-matching\x0d\n    return new Promise((resolve) => fs.exists(path\x2C resolve));\x0d\n  }\x2C\x0d\n});\x0d\n\x0d\n// fs.existsSync never throws\x2C it only returns true or false.\x0d\n// Since fs.existsSync never throws\x2C users have established\x0d\n// the expectation that passing invalid arguments to it\x2C even like\x0d\n// fs.existsSync()\x2C would only get a false in return\x2C so we cannot signal\x0d\n// validation errors to users properly out of compatibility concerns.\x0d\n// TODO(joyeecheung): deprecate the never-throw-on-invalid-arguments behavior\x0d\n/**\x0d\n * Synchronously tests whether or not the given path exists.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @returns {boolean}\x0d\n */\x0d\nfunction existsSync(path) {\x0d\n  try {\x0d\n    path = getValidatedPath(path);\x0d\n  } catch {\x0d\n    return false;\x0d\n  }\x0d\n  const ctx = { path };\x0d\n  const nPath = pathModule.toNamespacedPath(path);\x0d\n  binding.access(nPath\x2C F_OK\x2C undefined\x2C ctx);\x0d\n\x0d\n  // In case of an invalid symlink\x2C `binding.access()` on win32\x0d\n  // will **not** return an error and is therefore not enough.\x0d\n  // Double check with `binding.stat()`.\x0d\n  if (isWindows && ctx.errno === undefined) {\x0d\n    binding.stat(nPath\x2C false\x2C undefined\x2C ctx);\x0d\n  }\x0d\n\x0d\n  return ctx.errno === undefined;\x0d\n}\x0d\n\x0d\nfunction readFileAfterOpen(err\x2C fd) {\x0d\n  const context = this.context;\x0d\n\x0d\n  if (err) {\x0d\n    context.callback(err);\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  context.fd = fd;\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = readFileAfterStat;\x0d\n  req.context = context;\x0d\n  binding.fstat(fd\x2C false\x2C req);\x0d\n}\x0d\n\x0d\nfunction readFileAfterStat(err\x2C stats) {\x0d\n  const context = this.context;\x0d\n\x0d\n  if (err)\x0d\n    return context.close(err);\x0d\n\x0d\n  // TODO(BridgeAR): Check if allocating a smaller chunk is better performance\x0d\n  // wise\x2C similar to the promise based version (less peak memory and chunked\x0d\n  // stringify operations vs multiple C++/JS boundary crossings).\x0d\n  const size = context.size = isFileType(stats\x2C S_IFREG) ? stats[8] : 0;\x0d\n\x0d\n  if (size > kIoMaxLength) {\x0d\n    err = new ERR_FS_FILE_TOO_LARGE(size);\x0d\n    return context.close(err);\x0d\n  }\x0d\n\x0d\n  try {\x0d\n    if (size === 0) {\x0d\n      // TODO(BridgeAR): If an encoding is set\x2C use the StringDecoder to concat\x0d\n      // the result and reuse the buffer instead of allocating a new one.\x0d\n      context.buffers = [];\x0d\n    } else {\x0d\n      context.buffer = Buffer.allocUnsafeSlow(size);\x0d\n    }\x0d\n  } catch (err) {\x0d\n    return context.close(err);\x0d\n  }\x0d\n  context.read();\x0d\n}\x0d\n\x0d\nfunction checkAborted(signal\x2C callback) {\x0d\n  if (signal?.aborted) {\x0d\n    callback(new AbortError(undefined\x2C { cause: signal?.reason }));\x0d\n    return true;\x0d\n  }\x0d\n  return false;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously reads the entire contents of a file.\x0d\n * @param {string | Buffer | URL | number} path\x0d\n * @param {{\x0d\n *   encoding?: string | null;\x0d\n *   flag?: string;\x0d\n *   signal?: AbortSignal;\x0d\n *   } | string} [options]\x0d\n * @param {(\x0d\n *   err?: Error\x2C\x0d\n *   data?: string | Buffer\x0d\n *   ) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction readFile(path\x2C options\x2C callback) {\x0d\n  callback = maybeCallback(callback || options);\x0d\n  options = getOptions(options\x2C { flag: 'r' });\x0d\n  const context = new ReadFileContext(callback\x2C options.encoding);\x0d\n  context.isUserFd = isFd(path); // File descriptor ownership\x0d\n\x0d\n  if (options.signal) {\x0d\n    context.signal = options.signal;\x0d\n  }\x0d\n  if (context.isUserFd) {\x0d\n    process.nextTick(function tick(context) {\x0d\n      ReflectApply(readFileAfterOpen\x2C { context }\x2C [null\x2C path]);\x0d\n    }\x2C context);\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  if (checkAborted(options.signal\x2C callback))\x0d\n    return;\x0d\n\x0d\n  const flagsNumber = stringToFlags(options.flag\x2C 'options.flag');\x0d\n  path = getValidatedPath(path);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.context = context;\x0d\n  req.oncomplete = readFileAfterOpen;\x0d\n  binding.open(pathModule.toNamespacedPath(path)\x2C\x0d\n               flagsNumber\x2C\x0d\n               0o666\x2C\x0d\n               req);\x0d\n}\x0d\n\x0d\nfunction tryStatSync(fd\x2C isUserFd) {\x0d\n  const ctx = {};\x0d\n  const stats = binding.fstat(fd\x2C false\x2C undefined\x2C ctx);\x0d\n  if (ctx.errno !== undefined && !isUserFd) {\x0d\n    fs.closeSync(fd);\x0d\n    throw uvException(ctx);\x0d\n  }\x0d\n  return stats;\x0d\n}\x0d\n\x0d\nfunction tryCreateBuffer(size\x2C fd\x2C isUserFd) {\x0d\n  let threw = true;\x0d\n  let buffer;\x0d\n  try {\x0d\n    if (size > kIoMaxLength) {\x0d\n      throw new ERR_FS_FILE_TOO_LARGE(size);\x0d\n    }\x0d\n    buffer = Buffer.allocUnsafe(size);\x0d\n    threw = false;\x0d\n  } finally {\x0d\n    if (threw && !isUserFd) fs.closeSync(fd);\x0d\n  }\x0d\n  return buffer;\x0d\n}\x0d\n\x0d\nfunction tryReadSync(fd\x2C isUserFd\x2C buffer\x2C pos\x2C len) {\x0d\n  let threw = true;\x0d\n  let bytesRead;\x0d\n  try {\x0d\n    bytesRead = fs.readSync(fd\x2C buffer\x2C pos\x2C len);\x0d\n    threw = false;\x0d\n  } finally {\x0d\n    if (threw && !isUserFd) fs.closeSync(fd);\x0d\n  }\x0d\n  return bytesRead;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously reads the entire contents of a file.\x0d\n * @param {string | Buffer | URL | number} path\x0d\n * @param {{\x0d\n *   encoding?: string | null;\x0d\n *   flag?: string;\x0d\n *   }} [options]\x0d\n * @returns {string | Buffer}\x0d\n */\x0d\nfunction readFileSync(path\x2C options) {\x0d\n  options = getOptions(options\x2C { flag: 'r' });\x0d\n  const isUserFd = isFd(path); // File descriptor ownership\x0d\n  const fd = isUserFd ? path : fs.openSync(path\x2C options.flag\x2C 0o666);\x0d\n\x0d\n  const stats = tryStatSync(fd\x2C isUserFd);\x0d\n  const size = isFileType(stats\x2C S_IFREG) ? stats[8] : 0;\x0d\n  let pos = 0;\x0d\n  let buffer; // Single buffer with file data\x0d\n  let buffers; // List for when size is unknown\x0d\n\x0d\n  if (size === 0) {\x0d\n    buffers = [];\x0d\n  } else {\x0d\n    buffer = tryCreateBuffer(size\x2C fd\x2C isUserFd);\x0d\n  }\x0d\n\x0d\n  let bytesRead;\x0d\n\x0d\n  if (size !== 0) {\x0d\n    do {\x0d\n      bytesRead = tryReadSync(fd\x2C isUserFd\x2C buffer\x2C pos\x2C size - pos);\x0d\n      pos += bytesRead;\x0d\n    } while (bytesRead !== 0 && pos < size);\x0d\n  } else {\x0d\n    do {\x0d\n      // The kernel lies about many files.\x0d\n      // Go ahead and try to read some bytes.\x0d\n      buffer = Buffer.allocUnsafe(8192);\x0d\n      bytesRead = tryReadSync(fd\x2C isUserFd\x2C buffer\x2C 0\x2C 8192);\x0d\n      if (bytesRead !== 0) {\x0d\n        ArrayPrototypePush(buffers\x2C buffer.slice(0\x2C bytesRead));\x0d\n      }\x0d\n      pos += bytesRead;\x0d\n    } while (bytesRead !== 0);\x0d\n  }\x0d\n\x0d\n  if (!isUserFd)\x0d\n    fs.closeSync(fd);\x0d\n\x0d\n  if (size === 0) {\x0d\n    // Data was collected into the buffers list.\x0d\n    buffer = Buffer.concat(buffers\x2C pos);\x0d\n  } else if (pos < size) {\x0d\n    buffer = buffer.slice(0\x2C pos);\x0d\n  }\x0d\n\x0d\n  if (options.encoding) buffer = buffer.toString(options.encoding);\x0d\n  return buffer;\x0d\n}\x0d\n\x0d\nfunction defaultCloseCallback(err) {\x0d\n  if (err != null) throw err;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Closes the file descriptor.\x0d\n * @param {number} fd\x0d\n * @param {(err?: Error) => any} [callback]\x0d\n * @returns {void}\x0d\n */\x0d\nfunction close(fd\x2C callback = defaultCloseCallback) {\x0d\n  fd = getValidatedFd(fd);\x0d\n  if (callback !== defaultCloseCallback)\x0d\n    callback = makeCallback(callback);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.close(fd\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously closes the file descriptor.\x0d\n * @param {number} fd\x0d\n * @returns {void}\x0d\n */\x0d\nfunction closeSync(fd) {\x0d\n  fd = getValidatedFd(fd);\x0d\n\x0d\n  const ctx = {};\x0d\n  binding.close(fd\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously opens a file.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {string | number} [flags]\x0d\n * @param {string | number} [mode]\x0d\n * @param {(\x0d\n *   err?: Error\x2C\x0d\n *   fd?: number\x0d\n *   ) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction open(path\x2C flags\x2C mode\x2C callback) {\x0d\n  path = getValidatedPath(path);\x0d\n  if (arguments.length < 3) {\x0d\n    callback = flags;\x0d\n    flags = 'r';\x0d\n    mode = 0o666;\x0d\n  } else if (typeof mode === 'function') {\x0d\n    callback = mode;\x0d\n    mode = 0o666;\x0d\n  } else {\x0d\n    mode = parseFileMode(mode\x2C 'mode'\x2C 0o666);\x0d\n  }\x0d\n  const flagsNumber = stringToFlags(flags);\x0d\n  callback = makeCallback(callback);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n\x0d\n  binding.open(pathModule.toNamespacedPath(path)\x2C\x0d\n               flagsNumber\x2C\x0d\n               mode\x2C\x0d\n               req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously opens a file.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {string | number} [flags]\x0d\n * @param {string | number} [mode]\x0d\n * @returns {number}\x0d\n */\x0d\nfunction openSync(path\x2C flags\x2C mode) {\x0d\n  path = getValidatedPath(path);\x0d\n  const flagsNumber = stringToFlags(flags);\x0d\n  mode = parseFileMode(mode\x2C 'mode'\x2C 0o666);\x0d\n\x0d\n  const ctx = { path };\x0d\n  const result = binding.open(pathModule.toNamespacedPath(path)\x2C\x0d\n                              flagsNumber\x2C mode\x2C\x0d\n                              undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n  return result;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Reads file from the specified `fd` (file descriptor).\x0d\n * @param {number} fd\x0d\n * @param {Buffer | TypedArray | DataView} buffer\x0d\n * @param {number} offsetOrOptions\x0d\n * @param {number} length\x0d\n * @param {number | bigint | null} position\x0d\n * @param {(\x0d\n *   err?: Error\x2C\x0d\n *   bytesRead?: number\x2C\x0d\n *   buffer?: Buffer\x0d\n *   ) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction read(fd\x2C buffer\x2C offsetOrOptions\x2C length\x2C position\x2C callback) {\x0d\n  fd = getValidatedFd(fd);\x0d\n\x0d\n  let offset = offsetOrOptions;\x0d\n  let params = null;\x0d\n  if (arguments.length <= 4) {\x0d\n    if (arguments.length === 4) {\x0d\n      // This is fs.read(fd\x2C buffer\x2C options\x2C callback)\x0d\n      validateObject(offsetOrOptions\x2C 'options'\x2C { nullable: true });\x0d\n      callback = length;\x0d\n      params = offsetOrOptions;\x0d\n    } else if (arguments.length === 3) {\x0d\n      // This is fs.read(fd\x2C bufferOrParams\x2C callback)\x0d\n      if (!isArrayBufferView(buffer)) {\x0d\n        // This is fs.read(fd\x2C params\x2C callback)\x0d\n        params = buffer;\x0d\n        ({ buffer = Buffer.alloc(16384) } = params ?? kEmptyObject);\x0d\n      }\x0d\n      callback = offsetOrOptions;\x0d\n    } else {\x0d\n      // This is fs.read(fd\x2C callback)\x0d\n      callback = buffer;\x0d\n      buffer = Buffer.alloc(16384);\x0d\n    }\x0d\n\x0d\n    ({\x0d\n      offset = 0\x2C\x0d\n      length = buffer.byteLength - offset\x2C\x0d\n      position = null\x2C\x0d\n    } = params ?? kEmptyObject);\x0d\n  }\x0d\n\x0d\n  validateBuffer(buffer);\x0d\n  callback = maybeCallback(callback);\x0d\n\x0d\n  if (offset == null) {\x0d\n    offset = 0;\x0d\n  } else {\x0d\n    validateInteger(offset\x2C 'offset'\x2C 0);\x0d\n  }\x0d\n\x0d\n  length |= 0;\x0d\n\x0d\n  if (length === 0) {\x0d\n    return process.nextTick(function tick() {\x0d\n      callback(null\x2C 0\x2C buffer);\x0d\n    });\x0d\n  }\x0d\n\x0d\n  if (buffer.byteLength === 0) {\x0d\n    throw new ERR_INVALID_ARG_VALUE('buffer'\x2C buffer\x2C\x0d\n                                    'is empty and cannot be written');\x0d\n  }\x0d\n\x0d\n  validateOffsetLengthRead(offset\x2C length\x2C buffer.byteLength);\x0d\n\x0d\n  if (position == null)\x0d\n    position = -1;\x0d\n\x0d\n  validatePosition(position\x2C 'position');\x0d\n\x0d\n  function wrapper(err\x2C bytesRead) {\x0d\n    // Retain a reference to buffer so that it can't be GC'ed too soon.\x0d\n    callback(err\x2C bytesRead || 0\x2C buffer);\x0d\n  }\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = wrapper;\x0d\n\x0d\n  binding.read(fd\x2C buffer\x2C offset\x2C length\x2C position\x2C req);\x0d\n}\x0d\n\x0d\nObjectDefineProperty(read\x2C kCustomPromisifyArgsSymbol\x2C\x0d\n                     { __proto__: null\x2C value: ['bytesRead'\x2C 'buffer']\x2C enumerable: false });\x0d\n\x0d\n/**\x0d\n * Synchronously reads the file from the\x0d\n * specified `fd` (file descriptor).\x0d\n * @param {number} fd\x0d\n * @param {Buffer | TypedArray | DataView} buffer\x0d\n * @param {{\x0d\n *   offset?: number;\x0d\n *   length?: number;\x0d\n *   position?: number | bigint | null;\x0d\n *   }} [offset]\x0d\n * @returns {number}\x0d\n */\x0d\nfunction readSync(fd\x2C buffer\x2C offset\x2C length\x2C position) {\x0d\n  fd = getValidatedFd(fd);\x0d\n\x0d\n  validateBuffer(buffer);\x0d\n\x0d\n  if (arguments.length <= 3) {\x0d\n    // Assume fs.readSync(fd\x2C buffer\x2C options)\x0d\n    const options = offset || kEmptyObject;\x0d\n\x0d\n    ({\x0d\n      offset = 0\x2C\x0d\n      length = buffer.byteLength - offset\x2C\x0d\n      position = null\x2C\x0d\n    } = options);\x0d\n  }\x0d\n\x0d\n  if (offset == null) {\x0d\n    offset = 0;\x0d\n  } else {\x0d\n    validateInteger(offset\x2C 'offset'\x2C 0);\x0d\n  }\x0d\n\x0d\n  length |= 0;\x0d\n\x0d\n  if (length === 0) {\x0d\n    return 0;\x0d\n  }\x0d\n\x0d\n  if (buffer.byteLength === 0) {\x0d\n    throw new ERR_INVALID_ARG_VALUE('buffer'\x2C buffer\x2C\x0d\n                                    'is empty and cannot be written');\x0d\n  }\x0d\n\x0d\n  validateOffsetLengthRead(offset\x2C length\x2C buffer.byteLength);\x0d\n\x0d\n  if (position == null)\x0d\n    position = -1;\x0d\n\x0d\n  validatePosition(position\x2C 'position');\x0d\n\x0d\n  const ctx = {};\x0d\n  const result = binding.read(fd\x2C buffer\x2C offset\x2C length\x2C position\x2C\x0d\n                              undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n  return result;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Reads file from the specified `fd` (file descriptor)\x0d\n * and writes to an array of `ArrayBufferView`s.\x0d\n * @param {number} fd\x0d\n * @param {ArrayBufferView[]} buffers\x0d\n * @param {number | null} [position]\x0d\n * @param {(\x0d\n *   err?: Error\x2C\x0d\n *   bytesRead?: number\x2C\x0d\n *   buffers?: ArrayBufferView[];\x0d\n *   ) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction readv(fd\x2C buffers\x2C position\x2C callback) {\x0d\n  function wrapper(err\x2C read) {\x0d\n    callback(err\x2C read || 0\x2C buffers);\x0d\n  }\x0d\n\x0d\n  fd = getValidatedFd(fd);\x0d\n  validateBufferArray(buffers);\x0d\n  callback = maybeCallback(callback || position);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = wrapper;\x0d\n\x0d\n  if (typeof position !== 'number')\x0d\n    position = null;\x0d\n\x0d\n  return binding.readBuffers(fd\x2C buffers\x2C position\x2C req);\x0d\n}\x0d\n\x0d\nObjectDefineProperty(readv\x2C kCustomPromisifyArgsSymbol\x2C\x0d\n                     { __proto__: null\x2C value: ['bytesRead'\x2C 'buffers']\x2C enumerable: false });\x0d\n\x0d\n/**\x0d\n * Synchronously reads file from the\x0d\n * specified `fd` (file descriptor) and writes to an array\x0d\n * of `ArrayBufferView`s.\x0d\n * @param {number} fd\x0d\n * @param {ArrayBufferView[]} buffers\x0d\n * @param {number | null} [position]\x0d\n * @returns {number}\x0d\n */\x0d\nfunction readvSync(fd\x2C buffers\x2C position) {\x0d\n  fd = getValidatedFd(fd);\x0d\n  validateBufferArray(buffers);\x0d\n\x0d\n  const ctx = {};\x0d\n\x0d\n  if (typeof position !== 'number')\x0d\n    position = null;\x0d\n\x0d\n  const result = binding.readBuffers(fd\x2C buffers\x2C position\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n  return result;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Writes `buffer` to the specified `fd` (file descriptor).\x0d\n * @param {number} fd\x0d\n * @param {Buffer | TypedArray | DataView | string | object} buffer\x0d\n * @param {number | object} [offsetOrOptions]\x0d\n * @param {number} [length]\x0d\n * @param {number | null} [position]\x0d\n * @param {(\x0d\n *   err?: Error\x2C\x0d\n *   bytesWritten?: number;\x0d\n *   buffer?: Buffer | TypedArray | DataView\x0d\n *   ) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction write(fd\x2C buffer\x2C offsetOrOptions\x2C length\x2C position\x2C callback) {\x0d\n  function wrapper(err\x2C written) {\x0d\n    // Retain a reference to buffer so that it can't be GC'ed too soon.\x0d\n    callback(err\x2C written || 0\x2C buffer);\x0d\n  }\x0d\n\x0d\n  fd = getValidatedFd(fd);\x0d\n\x0d\n  let offset = offsetOrOptions;\x0d\n  if (isArrayBufferView(buffer)) {\x0d\n    callback = maybeCallback(callback || position || length || offset);\x0d\n\x0d\n    if (typeof offset === 'object') {\x0d\n      ({\x0d\n        offset = 0\x2C\x0d\n        length = buffer.byteLength - offset\x2C\x0d\n        position = null\x2C\x0d\n      } = offsetOrOptions ?? kEmptyObject);\x0d\n    }\x0d\n\x0d\n    if (offset == null || typeof offset === 'function') {\x0d\n      offset = 0;\x0d\n    } else {\x0d\n      validateInteger(offset\x2C 'offset'\x2C 0);\x0d\n    }\x0d\n    if (typeof length !== 'number')\x0d\n      length = buffer.byteLength - offset;\x0d\n    if (typeof position !== 'number')\x0d\n      position = null;\x0d\n    validateOffsetLengthWrite(offset\x2C length\x2C buffer.byteLength);\x0d\n\x0d\n    const req = new FSReqCallback();\x0d\n    req.oncomplete = wrapper;\x0d\n    return binding.writeBuffer(fd\x2C buffer\x2C offset\x2C length\x2C position\x2C req);\x0d\n  }\x0d\n\x0d\n  validateStringAfterArrayBufferView(buffer\x2C 'buffer');\x0d\n  if (typeof buffer !== 'string') {\x0d\n    showStringCoercionDeprecation();\x0d\n  }\x0d\n\x0d\n  if (typeof position !== 'function') {\x0d\n    if (typeof offset === 'function') {\x0d\n      position = offset;\x0d\n      offset = null;\x0d\n    } else {\x0d\n      position = length;\x0d\n    }\x0d\n    length = 'utf8';\x0d\n  }\x0d\n\x0d\n  const str = String(buffer);\x0d\n  validateEncoding(str\x2C length);\x0d\n  callback = maybeCallback(position);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = wrapper;\x0d\n  return binding.writeString(fd\x2C str\x2C offset\x2C length\x2C req);\x0d\n}\x0d\n\x0d\nObjectDefineProperty(write\x2C kCustomPromisifyArgsSymbol\x2C\x0d\n                     { __proto__: null\x2C value: ['bytesWritten'\x2C 'buffer']\x2C enumerable: false });\x0d\n\x0d\n/**\x0d\n * Synchronously writes `buffer` to the\x0d\n * specified `fd` (file descriptor).\x0d\n * @param {number} fd\x0d\n * @param {Buffer | TypedArray | DataView | string} buffer\x0d\n * @param {{\x0d\n *   offset?: number;\x0d\n *   length?: number;\x0d\n *   position?: number | null;\x0d\n *   }} [offsetOrOptions]\x0d\n * @returns {number}\x0d\n */\x0d\nfunction writeSync(fd\x2C buffer\x2C offsetOrOptions\x2C length\x2C position) {\x0d\n  fd = getValidatedFd(fd);\x0d\n  const ctx = {};\x0d\n  let result;\x0d\n\x0d\n  let offset = offsetOrOptions;\x0d\n  if (isArrayBufferView(buffer)) {\x0d\n    if (typeof offset === 'object') {\x0d\n      ({\x0d\n        offset = 0\x2C\x0d\n        length = buffer.byteLength - offset\x2C\x0d\n        position = null\x2C\x0d\n      } = offsetOrOptions ?? kEmptyObject);\x0d\n    }\x0d\n    if (position === undefined)\x0d\n      position = null;\x0d\n    if (offset == null) {\x0d\n      offset = 0;\x0d\n    } else {\x0d\n      validateInteger(offset\x2C 'offset'\x2C 0);\x0d\n    }\x0d\n    if (typeof length !== 'number')\x0d\n      length = buffer.byteLength - offset;\x0d\n    validateOffsetLengthWrite(offset\x2C length\x2C buffer.byteLength);\x0d\n    result = binding.writeBuffer(fd\x2C buffer\x2C offset\x2C length\x2C position\x2C\x0d\n                                 undefined\x2C ctx);\x0d\n  } else {\x0d\n    validatePrimitiveStringAfterArrayBufferView(buffer\x2C 'buffer');\x0d\n    validateEncoding(buffer\x2C length);\x0d\n\x0d\n    if (offset === undefined)\x0d\n      offset = null;\x0d\n    result = binding.writeString(fd\x2C buffer\x2C offset\x2C length\x2C\x0d\n                                 undefined\x2C ctx);\x0d\n  }\x0d\n  handleErrorFromBinding(ctx);\x0d\n  return result;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Writes an array of `ArrayBufferView`s to the\x0d\n * specified `fd` (file descriptor).\x0d\n * @param {number} fd\x0d\n * @param {ArrayBufferView[]} buffers\x0d\n * @param {number | null} [position]\x0d\n * @param {(\x0d\n *   err?: Error\x2C\x0d\n *   bytesWritten?: number\x2C\x0d\n *   buffers?: ArrayBufferView[]\x0d\n *   ) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction writev(fd\x2C buffers\x2C position\x2C callback) {\x0d\n  function wrapper(err\x2C written) {\x0d\n    callback(err\x2C written || 0\x2C buffers);\x0d\n  }\x0d\n\x0d\n  fd = getValidatedFd(fd);\x0d\n  validateBufferArray(buffers);\x0d\n  callback = maybeCallback(callback || position);\x0d\n\x0d\n  if (buffers.length === 0) {\x0d\n    process.nextTick(callback\x2C null\x2C 0\x2C buffers);\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = wrapper;\x0d\n\x0d\n  if (typeof position !== 'number')\x0d\n    position = null;\x0d\n\x0d\n  return binding.writeBuffers(fd\x2C buffers\x2C position\x2C req);\x0d\n}\x0d\n\x0d\nObjectDefineProperty(writev\x2C kCustomPromisifyArgsSymbol\x2C {\x0d\n  __proto__: null\x2C\x0d\n  value: ['bytesWritten'\x2C 'buffer']\x2C\x0d\n  enumerable: false\x0d\n});\x0d\n\x0d\n/**\x0d\n * Synchronously writes an array of `ArrayBufferView`s\x0d\n * to the specified `fd` (file descriptor).\x0d\n * @param {number} fd\x0d\n * @param {ArrayBufferView[]} buffers\x0d\n * @param {number | null} [position]\x0d\n * @returns {number}\x0d\n */\x0d\nfunction writevSync(fd\x2C buffers\x2C position) {\x0d\n  fd = getValidatedFd(fd);\x0d\n  validateBufferArray(buffers);\x0d\n\x0d\n  if (buffers.length === 0) {\x0d\n    return 0;\x0d\n  }\x0d\n\x0d\n  const ctx = {};\x0d\n\x0d\n  if (typeof position !== 'number')\x0d\n    position = null;\x0d\n\x0d\n  const result = binding.writeBuffers(fd\x2C buffers\x2C position\x2C undefined\x2C ctx);\x0d\n\x0d\n  handleErrorFromBinding(ctx);\x0d\n  return result;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously renames file at `oldPath` to\x0d\n * the pathname provided as `newPath`.\x0d\n * @param {string | Buffer | URL} oldPath\x0d\n * @param {string | Buffer | URL} newPath\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction rename(oldPath\x2C newPath\x2C callback) {\x0d\n  callback = makeCallback(callback);\x0d\n  oldPath = getValidatedPath(oldPath\x2C 'oldPath');\x0d\n  newPath = getValidatedPath(newPath\x2C 'newPath');\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.rename(pathModule.toNamespacedPath(oldPath)\x2C\x0d\n                 pathModule.toNamespacedPath(newPath)\x2C\x0d\n                 req);\x0d\n}\x0d\n\x0d\n\x0d\n/**\x0d\n * Synchronously renames file at `oldPath` to\x0d\n * the pathname provided as `newPath`.\x0d\n * @param {string | Buffer | URL} oldPath\x0d\n * @param {string | Buffer | URL} newPath\x0d\n * @returns {void}\x0d\n */\x0d\nfunction renameSync(oldPath\x2C newPath) {\x0d\n  oldPath = getValidatedPath(oldPath\x2C 'oldPath');\x0d\n  newPath = getValidatedPath(newPath\x2C 'newPath');\x0d\n  const ctx = { path: oldPath\x2C dest: newPath };\x0d\n  binding.rename(pathModule.toNamespacedPath(oldPath)\x2C\x0d\n                 pathModule.toNamespacedPath(newPath)\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Truncates the file.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {number} [len]\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction truncate(path\x2C len\x2C callback) {\x0d\n  if (typeof path === 'number') {\x0d\n    showTruncateDeprecation();\x0d\n    return fs.ftruncate(path\x2C len\x2C callback);\x0d\n  }\x0d\n  if (typeof len === 'function') {\x0d\n    callback = len;\x0d\n    len = 0;\x0d\n  } else if (len === undefined) {\x0d\n    len = 0;\x0d\n  }\x0d\n\x0d\n  validateInteger(len\x2C 'len');\x0d\n  len = MathMax(0\x2C len);\x0d\n  callback = maybeCallback(callback);\x0d\n  fs.open(path\x2C 'r+'\x2C (er\x2C fd) => {\x0d\n    if (er) return callback(er);\x0d\n    const req = new FSReqCallback();\x0d\n    req.oncomplete = function oncomplete(er) {\x0d\n      fs.close(fd\x2C (er2) => {\x0d\n        callback(aggregateTwoErrors(er2\x2C er));\x0d\n      });\x0d\n    };\x0d\n    binding.ftruncate(fd\x2C len\x2C req);\x0d\n  });\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously truncates the file.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {number} [len]\x0d\n * @returns {void}\x0d\n */\x0d\nfunction truncateSync(path\x2C len) {\x0d\n  if (typeof path === 'number') {\x0d\n    // legacy\x0d\n    showTruncateDeprecation();\x0d\n    return fs.ftruncateSync(path\x2C len);\x0d\n  }\x0d\n  if (len === undefined) {\x0d\n    len = 0;\x0d\n  }\x0d\n  // Allow error to be thrown\x2C but still close fd.\x0d\n  const fd = fs.openSync(path\x2C 'r+');\x0d\n  let ret;\x0d\n\x0d\n  try {\x0d\n    ret = fs.ftruncateSync(fd\x2C len);\x0d\n  } finally {\x0d\n    fs.closeSync(fd);\x0d\n  }\x0d\n  return ret;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Truncates the file descriptor.\x0d\n * @param {number} fd\x0d\n * @param {number} [len]\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction ftruncate(fd\x2C len = 0\x2C callback) {\x0d\n  if (typeof len === 'function') {\x0d\n    callback = len;\x0d\n    len = 0;\x0d\n  }\x0d\n  fd = getValidatedFd(fd);\x0d\n  validateInteger(len\x2C 'len');\x0d\n  len = MathMax(0\x2C len);\x0d\n  callback = makeCallback(callback);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.ftruncate(fd\x2C len\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously truncates the file descriptor.\x0d\n * @param {number} fd\x0d\n * @param {number} [len]\x0d\n * @returns {void}\x0d\n */\x0d\nfunction ftruncateSync(fd\x2C len = 0) {\x0d\n  fd = getValidatedFd(fd);\x0d\n  validateInteger(len\x2C 'len');\x0d\n  len = MathMax(0\x2C len);\x0d\n  const ctx = {};\x0d\n  binding.ftruncate(fd\x2C len\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\nfunction lazyLoadCp() {\x0d\n  if (cpFn === undefined) {\x0d\n    ({ cpFn } = require('internal/fs/cp/cp'));\x0d\n    cpFn = require('util').callbackify(cpFn);\x0d\n    ({ cpSyncFn } = require('internal/fs/cp/cp-sync'));\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction lazyLoadRimraf() {\x0d\n  if (rimraf === undefined)\x0d\n    ({ rimraf\x2C rimrafSync } = require('internal/fs/rimraf'));\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously removes a directory.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {{\x0d\n *   maxRetries?: number;\x0d\n *   recursive?: boolean;\x0d\n *   retryDelay?: number;\x0d\n *   }} [options]\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction rmdir(path\x2C options\x2C callback) {\x0d\n  if (typeof options === 'function') {\x0d\n    callback = options;\x0d\n    options = undefined;\x0d\n  }\x0d\n\x0d\n  callback = makeCallback(callback);\x0d\n  path = pathModule.toNamespacedPath(getValidatedPath(path));\x0d\n\x0d\n  if (options?.recursive) {\x0d\n    emitRecursiveRmdirWarning();\x0d\n    validateRmOptions(\x0d\n      path\x2C\x0d\n      { ...options\x2C force: false }\x2C\x0d\n      true\x2C\x0d\n      (err\x2C options) => {\x0d\n        if (err === false) {\x0d\n          const req = new FSReqCallback();\x0d\n          req.oncomplete = callback;\x0d\n          return binding.rmdir(path\x2C req);\x0d\n        }\x0d\n        if (err) {\x0d\n          return callback(err);\x0d\n        }\x0d\n\x0d\n        lazyLoadRimraf();\x0d\n        rimraf(path\x2C options\x2C callback);\x0d\n      });\x0d\n  } else {\x0d\n    validateRmdirOptions(options);\x0d\n    const req = new FSReqCallback();\x0d\n    req.oncomplete = callback;\x0d\n    return binding.rmdir(path\x2C req);\x0d\n  }\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously removes a directory.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {{\x0d\n *   maxRetries?: number;\x0d\n *   recursive?: boolean;\x0d\n *   retryDelay?: number;\x0d\n *   }} [options]\x0d\n * @returns {void}\x0d\n */\x0d\nfunction rmdirSync(path\x2C options) {\x0d\n  path = getValidatedPath(path);\x0d\n\x0d\n  if (options?.recursive) {\x0d\n    emitRecursiveRmdirWarning();\x0d\n    options = validateRmOptionsSync(path\x2C { ...options\x2C force: false }\x2C true);\x0d\n    if (options !== false) {\x0d\n      lazyLoadRimraf();\x0d\n      return rimrafSync(pathModule.toNamespacedPath(path)\x2C options);\x0d\n    }\x0d\n  } else {\x0d\n    validateRmdirOptions(options);\x0d\n  }\x0d\n\x0d\n  const ctx = { path };\x0d\n  binding.rmdir(pathModule.toNamespacedPath(path)\x2C undefined\x2C ctx);\x0d\n  return handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously removes files and\x0d\n * directories (modeled on the standard POSIX `rm` utility).\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {{\x0d\n *   force?: boolean;\x0d\n *   maxRetries?: number;\x0d\n *   recursive?: boolean;\x0d\n *   retryDelay?: number;\x0d\n *   }} [options]\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction rm(path\x2C options\x2C callback) {\x0d\n  if (typeof options === 'function') {\x0d\n    callback = options;\x0d\n    options = undefined;\x0d\n  }\x0d\n  path = getValidatedPath(path);\x0d\n\x0d\n  validateRmOptions(path\x2C options\x2C false\x2C (err\x2C options) => {\x0d\n    if (err) {\x0d\n      return callback(err);\x0d\n    }\x0d\n    lazyLoadRimraf();\x0d\n    return rimraf(pathModule.toNamespacedPath(path)\x2C options\x2C callback);\x0d\n  });\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously removes files and\x0d\n * directories (modeled on the standard POSIX `rm` utility).\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {{\x0d\n *   force?: boolean;\x0d\n *   maxRetries?: number;\x0d\n *   recursive?: boolean;\x0d\n *   retryDelay?: number;\x0d\n *   }} [options]\x0d\n * @returns {void}\x0d\n */\x0d\nfunction rmSync(path\x2C options) {\x0d\n  path = getValidatedPath(path);\x0d\n  options = validateRmOptionsSync(path\x2C options\x2C false);\x0d\n\x0d\n  lazyLoadRimraf();\x0d\n  return rimrafSync(pathModule.toNamespacedPath(path)\x2C options);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Forces all currently queued I/O operations associated\x0d\n * with the file to the operating system's synchronized\x0d\n * I/O completion state.\x0d\n * @param {number} fd\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction fdatasync(fd\x2C callback) {\x0d\n  fd = getValidatedFd(fd);\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = makeCallback(callback);\x0d\n  binding.fdatasync(fd\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously forces all currently queued I/O operations\x0d\n * associated with the file to the operating\x0d\n * system's synchronized I/O completion state.\x0d\n * @param {number} fd\x0d\n * @returns {void}\x0d\n */\x0d\nfunction fdatasyncSync(fd) {\x0d\n  fd = getValidatedFd(fd);\x0d\n  const ctx = {};\x0d\n  binding.fdatasync(fd\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Requests for all data for the open file descriptor\x0d\n * to be flushed to the storage device.\x0d\n * @param {number} fd\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction fsync(fd\x2C callback) {\x0d\n  fd = getValidatedFd(fd);\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = makeCallback(callback);\x0d\n  binding.fsync(fd\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously requests for all data for the open\x0d\n * file descriptor to be flushed to the storage device.\x0d\n * @param {number} fd\x0d\n * @returns {void}\x0d\n */\x0d\nfunction fsyncSync(fd) {\x0d\n  fd = getValidatedFd(fd);\x0d\n  const ctx = {};\x0d\n  binding.fsync(fd\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously creates a directory.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {{\x0d\n *   recursive?: boolean;\x0d\n *   mode?: string | number;\x0d\n *   } | number} [options]\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction mkdir(path\x2C options\x2C callback) {\x0d\n  let mode = 0o777;\x0d\n  let recursive = false;\x0d\n  if (typeof options === 'function') {\x0d\n    callback = options;\x0d\n  } else if (typeof options === 'number' || typeof options === 'string') {\x0d\n    mode = options;\x0d\n  } else if (options) {\x0d\n    if (options.recursive !== undefined)\x0d\n      recursive = options.recursive;\x0d\n    if (options.mode !== undefined)\x0d\n      mode = options.mode;\x0d\n  }\x0d\n  callback = makeCallback(callback);\x0d\n  path = getValidatedPath(path);\x0d\n\x0d\n  validateBoolean(recursive\x2C 'options.recursive');\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.mkdir(pathModule.toNamespacedPath(path)\x2C\x0d\n                parseFileMode(mode\x2C 'mode')\x2C recursive\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously creates a directory.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {{\x0d\n *   recursive?: boolean;\x0d\n *   mode?: string | number;\x0d\n *   } | number} [options]\x0d\n * @returns {string | void}\x0d\n */\x0d\nfunction mkdirSync(path\x2C options) {\x0d\n  let mode = 0o777;\x0d\n  let recursive = false;\x0d\n  if (typeof options === 'number' || typeof options === 'string') {\x0d\n    mode = options;\x0d\n  } else if (options) {\x0d\n    if (options.recursive !== undefined)\x0d\n      recursive = options.recursive;\x0d\n    if (options.mode !== undefined)\x0d\n      mode = options.mode;\x0d\n  }\x0d\n  path = getValidatedPath(path);\x0d\n  validateBoolean(recursive\x2C 'options.recursive');\x0d\n\x0d\n  const ctx = { path };\x0d\n  const result = binding.mkdir(pathModule.toNamespacedPath(path)\x2C\x0d\n                               parseFileMode(mode\x2C 'mode')\x2C recursive\x2C\x0d\n                               undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n  if (recursive) {\x0d\n    return result;\x0d\n  }\x0d\n}\x0d\n\x0d\n/**\x0d\n * Reads the contents of a directory.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {string | {\x0d\n *   encoding?: string;\x0d\n *   withFileTypes?: boolean;\x0d\n *   }} [options]\x0d\n * @param {(\x0d\n *   err?: Error\x2C\x0d\n *   files?: string[] | Buffer[] | Direct[];\x0d\n *   ) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction readdir(path\x2C options\x2C callback) {\x0d\n  callback = makeCallback(typeof options === 'function' ? options : callback);\x0d\n  options = getOptions(options);\x0d\n  path = getValidatedPath(path);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  if (!options.withFileTypes) {\x0d\n    req.oncomplete = callback;\x0d\n  } else {\x0d\n    req.oncomplete = (err\x2C result) => {\x0d\n      if (err) {\x0d\n        callback(err);\x0d\n        return;\x0d\n      }\x0d\n      getDirents(path\x2C result\x2C callback);\x0d\n    };\x0d\n  }\x0d\n  binding.readdir(pathModule.toNamespacedPath(path)\x2C options.encoding\x2C\x0d\n                  !!options.withFileTypes\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously reads the contents of a directory.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {string | {\x0d\n *   encoding?: string;\x0d\n *   withFileTypes?: boolean;\x0d\n *   }} [options]\x0d\n * @returns {string | Buffer[] | Dirent[]}\x0d\n */\x0d\nfunction readdirSync(path\x2C options) {\x0d\n  options = getOptions(options);\x0d\n  path = getValidatedPath(path);\x0d\n  const ctx = { path };\x0d\n  const result = binding.readdir(pathModule.toNamespacedPath(path)\x2C\x0d\n                                 options.encoding\x2C !!options.withFileTypes\x2C\x0d\n                                 undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n  return options.withFileTypes ? getDirents(path\x2C result) : result;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Invokes the callback with the `fs.Stats`\x0d\n * for the file descriptor.\x0d\n * @param {number} fd\x0d\n * @param {{ bigint?: boolean; }} [options]\x0d\n * @param {(\x0d\n *   err?: Error\x2C\x0d\n *   stats?: Stats\x0d\n *   ) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction fstat(fd\x2C options = { bigint: false }\x2C callback) {\x0d\n  if (typeof options === 'function') {\x0d\n    callback = options;\x0d\n    options = kEmptyObject;\x0d\n  }\x0d\n  fd = getValidatedFd(fd);\x0d\n  callback = makeStatsCallback(callback);\x0d\n\x0d\n  const req = new FSReqCallback(options.bigint);\x0d\n  req.oncomplete = callback;\x0d\n  binding.fstat(fd\x2C options.bigint\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Retrieves the `fs.Stats` for the symbolic link\x0d\n * referred to by the `path`.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {{ bigint?: boolean; }} [options]\x0d\n * @param {(\x0d\n *   err?: Error\x2C\x0d\n *   stats?: Stats\x0d\n *   ) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction lstat(path\x2C options = { bigint: false }\x2C callback) {\x0d\n  if (typeof options === 'function') {\x0d\n    callback = options;\x0d\n    options = kEmptyObject;\x0d\n  }\x0d\n  callback = makeStatsCallback(callback);\x0d\n  path = getValidatedPath(path);\x0d\n\x0d\n  const req = new FSReqCallback(options.bigint);\x0d\n  req.oncomplete = callback;\x0d\n  binding.lstat(pathModule.toNamespacedPath(path)\x2C options.bigint\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously gets the stats of a file.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {{ bigint?: boolean; }} [options]\x0d\n * @param {(\x0d\n *   err?: Error\x2C\x0d\n *   stats?: Stats\x0d\n *   ) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction stat(path\x2C options = { bigint: false }\x2C callback) {\x0d\n  if (typeof options === 'function') {\x0d\n    callback = options;\x0d\n    options = kEmptyObject;\x0d\n  }\x0d\n  callback = makeStatsCallback(callback);\x0d\n  path = getValidatedPath(path);\x0d\n\x0d\n  const req = new FSReqCallback(options.bigint);\x0d\n  req.oncomplete = callback;\x0d\n  binding.stat(pathModule.toNamespacedPath(path)\x2C options.bigint\x2C req);\x0d\n}\x0d\n\x0d\nfunction hasNoEntryError(ctx) {\x0d\n  if (ctx.errno) {\x0d\n    const uvErr = uvErrmapGet(ctx.errno);\x0d\n    return uvErr?.[0] === 'ENOENT';\x0d\n  }\x0d\n\x0d\n  if (ctx.error) {\x0d\n    return ctx.error.code === 'ENOENT';\x0d\n  }\x0d\n\x0d\n  return false;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously retrieves the `fs.Stats` for\x0d\n * the file descriptor.\x0d\n * @param {number} fd\x0d\n * @param {{\x0d\n *   bigint?: boolean;\x0d\n *   }} [options]\x0d\n * @returns {Stats}\x0d\n */\x0d\nfunction fstatSync(fd\x2C options = { bigint: false }) {\x0d\n  fd = getValidatedFd(fd);\x0d\n  const ctx = { fd };\x0d\n  const stats = binding.fstat(fd\x2C options.bigint\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n  return getStatsFromBinding(stats);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously retrieves the `fs.Stats` for\x0d\n * the symbolic link referred to by the `path`.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {{\x0d\n *   bigint?: boolean;\x0d\n *   throwIfNoEntry?: boolean;\x0d\n *   }} [options]\x0d\n * @returns {Stats}\x0d\n */\x0d\nfunction lstatSync(path\x2C options = { bigint: false\x2C throwIfNoEntry: true }) {\x0d\n  path = getValidatedPath(path);\x0d\n  const ctx = { path };\x0d\n  const stats = binding.lstat(pathModule.toNamespacedPath(path)\x2C\x0d\n                              options.bigint\x2C undefined\x2C ctx);\x0d\n  if (options.throwIfNoEntry === false && hasNoEntryError(ctx)) {\x0d\n    return undefined;\x0d\n  }\x0d\n  handleErrorFromBinding(ctx);\x0d\n  return getStatsFromBinding(stats);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously retrieves the `fs.Stats`\x0d\n * for the `path`.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {{\x0d\n *   bigint?: boolean;\x0d\n *   throwIfNoEntry?: boolean;\x0d\n *   }} [options]\x0d\n * @returns {Stats}\x0d\n */\x0d\nfunction statSync(path\x2C options = { bigint: false\x2C throwIfNoEntry: true }) {\x0d\n  path = getValidatedPath(path);\x0d\n  const ctx = { path };\x0d\n  const stats = binding.stat(pathModule.toNamespacedPath(path)\x2C\x0d\n                             options.bigint\x2C undefined\x2C ctx);\x0d\n  if (options.throwIfNoEntry === false && hasNoEntryError(ctx)) {\x0d\n    return undefined;\x0d\n  }\x0d\n  handleErrorFromBinding(ctx);\x0d\n  return getStatsFromBinding(stats);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Reads the contents of a symbolic link\x0d\n * referred to by `path`.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {{ encoding?: string; } | string} [options]\x0d\n * @param {(\x0d\n *   err?: Error\x2C\x0d\n *   linkString?: string | Buffer\x0d\n *   ) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction readlink(path\x2C options\x2C callback) {\x0d\n  callback = makeCallback(typeof options === 'function' ? options : callback);\x0d\n  options = getOptions(options);\x0d\n  path = getValidatedPath(path\x2C 'oldPath');\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.readlink(pathModule.toNamespacedPath(path)\x2C options.encoding\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously reads the contents of a symbolic link\x0d\n * referred to by `path`.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {{ encoding?: string; } | string} [options]\x0d\n * @returns {string | Buffer}\x0d\n */\x0d\nfunction readlinkSync(path\x2C options) {\x0d\n  options = getOptions(options);\x0d\n  path = getValidatedPath(path\x2C 'oldPath');\x0d\n  const ctx = { path };\x0d\n  const result = binding.readlink(pathModule.toNamespacedPath(path)\x2C\x0d\n                                  options.encoding\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n  return result;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Creates the link called `path` pointing to `target`.\x0d\n * @param {string | Buffer | URL} target\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {string | null} [type_]\x0d\n * @param {(err?: Error) => any} callback_\x0d\n * @returns {void}\x0d\n */\x0d\nfunction symlink(target\x2C path\x2C type_\x2C callback_) {\x0d\n  const type = (typeof type_ === 'string' ? type_ : null);\x0d\n  const callback = makeCallback(arguments[arguments.length - 1]);\x0d\n\x0d\n  target = getValidatedPath(target\x2C 'target');\x0d\n  path = getValidatedPath(path);\x0d\n\x0d\n  if (isWindows && type === null) {\x0d\n    let absoluteTarget;\x0d\n    try {\x0d\n      // Symlinks targets can be relative to the newly created path.\x0d\n      // Calculate absolute file name of the symlink target\x2C and check\x0d\n      // if it is a directory. Ignore resolve error to keep symlink\x0d\n      // errors consistent between platforms if invalid path is\x0d\n      // provided.\x0d\n      absoluteTarget = pathModule.resolve(path\x2C '..'\x2C target);\x0d\n    } catch {\x0d\n      // Continue regardless of error.\x0d\n    }\x0d\n    if (absoluteTarget !== undefined) {\x0d\n      stat(absoluteTarget\x2C (err\x2C stat) => {\x0d\n        const resolvedType = !err && stat.isDirectory() ? 'dir' : 'file';\x0d\n        const resolvedFlags = stringToSymlinkType(resolvedType);\x0d\n        const destination = preprocessSymlinkDestination(target\x2C\x0d\n                                                         resolvedType\x2C\x0d\n                                                         path);\x0d\n\x0d\n        const req = new FSReqCallback();\x0d\n        req.oncomplete = callback;\x0d\n        binding.symlink(destination\x2C\x0d\n                        pathModule.toNamespacedPath(path)\x2C resolvedFlags\x2C req);\x0d\n      });\x0d\n      return;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  const destination = preprocessSymlinkDestination(target\x2C type\x2C path);\x0d\n\x0d\n  const flags = stringToSymlinkType(type);\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.symlink(destination\x2C pathModule.toNamespacedPath(path)\x2C flags\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously creates the link called `path`\x0d\n * pointing to `target`.\x0d\n * @param {string | Buffer | URL} target\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {string | null} [type]\x0d\n * @returns {void}\x0d\n */\x0d\nfunction symlinkSync(target\x2C path\x2C type) {\x0d\n  type = (typeof type === 'string' ? type : null);\x0d\n  if (isWindows && type === null) {\x0d\n    const absoluteTarget = pathModule.resolve(`${path}`\x2C '..'\x2C `${target}`);\x0d\n    if (statSync(absoluteTarget\x2C { throwIfNoEntry: false })?.isDirectory()) {\x0d\n      type = 'dir';\x0d\n    }\x0d\n  }\x0d\n  target = getValidatedPath(target\x2C 'target');\x0d\n  path = getValidatedPath(path);\x0d\n  const flags = stringToSymlinkType(type);\x0d\n\x0d\n  const ctx = { path: target\x2C dest: path };\x0d\n  binding.symlink(preprocessSymlinkDestination(target\x2C type\x2C path)\x2C\x0d\n                  pathModule.toNamespacedPath(path)\x2C flags\x2C undefined\x2C ctx);\x0d\n\x0d\n  handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Creates a new link from the `existingPath`\x0d\n * to the `newPath`.\x0d\n * @param {string | Buffer | URL} existingPath\x0d\n * @param {string | Buffer | URL} newPath\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction link(existingPath\x2C newPath\x2C callback) {\x0d\n  callback = makeCallback(callback);\x0d\n\x0d\n  existingPath = getValidatedPath(existingPath\x2C 'existingPath');\x0d\n  newPath = getValidatedPath(newPath\x2C 'newPath');\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n\x0d\n  binding.link(pathModule.toNamespacedPath(existingPath)\x2C\x0d\n               pathModule.toNamespacedPath(newPath)\x2C\x0d\n               req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously creates a new link from the `existingPath`\x0d\n * to the `newPath`.\x0d\n * @param {string | Buffer | URL} existingPath\x0d\n * @param {string | Buffer | URL} newPath\x0d\n * @returns {void}\x0d\n */\x0d\nfunction linkSync(existingPath\x2C newPath) {\x0d\n  existingPath = getValidatedPath(existingPath\x2C 'existingPath');\x0d\n  newPath = getValidatedPath(newPath\x2C 'newPath');\x0d\n\x0d\n  const ctx = { path: existingPath\x2C dest: newPath };\x0d\n  const result = binding.link(pathModule.toNamespacedPath(existingPath)\x2C\x0d\n                              pathModule.toNamespacedPath(newPath)\x2C\x0d\n                              undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n  return result;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously removes a file or symbolic link.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction unlink(path\x2C callback) {\x0d\n  callback = makeCallback(callback);\x0d\n  path = getValidatedPath(path);\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.unlink(pathModule.toNamespacedPath(path)\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously removes a file or symbolic link.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @returns {void}\x0d\n */\x0d\nfunction unlinkSync(path) {\x0d\n  path = getValidatedPath(path);\x0d\n  const ctx = { path };\x0d\n  binding.unlink(pathModule.toNamespacedPath(path)\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Sets the permissions on the file.\x0d\n * @param {number} fd\x0d\n * @param {string | number} mode\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction fchmod(fd\x2C mode\x2C callback) {\x0d\n  fd = getValidatedFd(fd);\x0d\n  mode = parseFileMode(mode\x2C 'mode');\x0d\n  callback = makeCallback(callback);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.fchmod(fd\x2C mode\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously sets the permissions on the file.\x0d\n * @param {number} fd\x0d\n * @param {string | number} mode\x0d\n * @returns {void}\x0d\n */\x0d\nfunction fchmodSync(fd\x2C mode) {\x0d\n  fd = getValidatedFd(fd);\x0d\n  mode = parseFileMode(mode\x2C 'mode');\x0d\n  const ctx = {};\x0d\n  binding.fchmod(fd\x2C mode\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Changes the permissions on a symbolic link.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {number} mode\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction lchmod(path\x2C mode\x2C callback) {\x0d\n  callback = maybeCallback(callback);\x0d\n  mode = parseFileMode(mode\x2C 'mode');\x0d\n  fs.open(path\x2C O_WRONLY | O_SYMLINK\x2C (err\x2C fd) => {\x0d\n    if (err) {\x0d\n      callback(err);\x0d\n      return;\x0d\n    }\x0d\n    // Prefer to return the chmod error\x2C if one occurs\x2C\x0d\n    // but still try to close\x2C and report closing errors if they occur.\x0d\n    fs.fchmod(fd\x2C mode\x2C (err) => {\x0d\n      fs.close(fd\x2C (err2) => {\x0d\n        callback(aggregateTwoErrors(err2\x2C err));\x0d\n      });\x0d\n    });\x0d\n  });\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously changes the permissions on a symbolic link.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {number} mode\x0d\n * @returns {void}\x0d\n */\x0d\nfunction lchmodSync(path\x2C mode) {\x0d\n  const fd = fs.openSync(path\x2C O_WRONLY | O_SYMLINK);\x0d\n\x0d\n  // Prefer to return the chmod error\x2C if one occurs\x2C\x0d\n  // but still try to close\x2C and report closing errors if they occur.\x0d\n  let ret;\x0d\n  try {\x0d\n    ret = fs.fchmodSync(fd\x2C mode);\x0d\n  } finally {\x0d\n    fs.closeSync(fd);\x0d\n  }\x0d\n  return ret;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously changes the permissions of a file.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {string | number} mode\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction chmod(path\x2C mode\x2C callback) {\x0d\n  path = getValidatedPath(path);\x0d\n  mode = parseFileMode(mode\x2C 'mode');\x0d\n  callback = makeCallback(callback);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.chmod(pathModule.toNamespacedPath(path)\x2C mode\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously changes the permissions of a file.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {string | number} mode\x0d\n * @returns {void}\x0d\n */\x0d\nfunction chmodSync(path\x2C mode) {\x0d\n  path = getValidatedPath(path);\x0d\n  mode = parseFileMode(mode\x2C 'mode');\x0d\n\x0d\n  const ctx = { path };\x0d\n  binding.chmod(pathModule.toNamespacedPath(path)\x2C mode\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Sets the owner of the symbolic link.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {number} uid\x0d\n * @param {number} gid\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction lchown(path\x2C uid\x2C gid\x2C callback) {\x0d\n  callback = makeCallback(callback);\x0d\n  path = getValidatedPath(path);\x0d\n  validateInteger(uid\x2C 'uid'\x2C -1\x2C kMaxUserId);\x0d\n  validateInteger(gid\x2C 'gid'\x2C -1\x2C kMaxUserId);\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.lchown(pathModule.toNamespacedPath(path)\x2C uid\x2C gid\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously sets the owner of the symbolic link.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {number} uid\x0d\n * @param {number} gid\x0d\n * @returns {void}\x0d\n */\x0d\nfunction lchownSync(path\x2C uid\x2C gid) {\x0d\n  path = getValidatedPath(path);\x0d\n  validateInteger(uid\x2C 'uid'\x2C -1\x2C kMaxUserId);\x0d\n  validateInteger(gid\x2C 'gid'\x2C -1\x2C kMaxUserId);\x0d\n  const ctx = { path };\x0d\n  binding.lchown(pathModule.toNamespacedPath(path)\x2C uid\x2C gid\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Sets the owner of the file.\x0d\n * @param {number} fd\x0d\n * @param {number} uid\x0d\n * @param {number} gid\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction fchown(fd\x2C uid\x2C gid\x2C callback) {\x0d\n  fd = getValidatedFd(fd);\x0d\n  validateInteger(uid\x2C 'uid'\x2C -1\x2C kMaxUserId);\x0d\n  validateInteger(gid\x2C 'gid'\x2C -1\x2C kMaxUserId);\x0d\n  callback = makeCallback(callback);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.fchown(fd\x2C uid\x2C gid\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously sets the owner of the file.\x0d\n * @param {number} fd\x0d\n * @param {number} uid\x0d\n * @param {number} gid\x0d\n * @returns {void}\x0d\n */\x0d\nfunction fchownSync(fd\x2C uid\x2C gid) {\x0d\n  fd = getValidatedFd(fd);\x0d\n  validateInteger(uid\x2C 'uid'\x2C -1\x2C kMaxUserId);\x0d\n  validateInteger(gid\x2C 'gid'\x2C -1\x2C kMaxUserId);\x0d\n\x0d\n  const ctx = {};\x0d\n  binding.fchown(fd\x2C uid\x2C gid\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously changes the owner and group\x0d\n * of a file.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {number} uid\x0d\n * @param {number} gid\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction chown(path\x2C uid\x2C gid\x2C callback) {\x0d\n  callback = makeCallback(callback);\x0d\n  path = getValidatedPath(path);\x0d\n  validateInteger(uid\x2C 'uid'\x2C -1\x2C kMaxUserId);\x0d\n  validateInteger(gid\x2C 'gid'\x2C -1\x2C kMaxUserId);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.chown(pathModule.toNamespacedPath(path)\x2C uid\x2C gid\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously changes the owner and group\x0d\n * of a file.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {number} uid\x0d\n * @param {number} gid\x0d\n * @returns {void}\x0d\n */\x0d\nfunction chownSync(path\x2C uid\x2C gid) {\x0d\n  path = getValidatedPath(path);\x0d\n  validateInteger(uid\x2C 'uid'\x2C -1\x2C kMaxUserId);\x0d\n  validateInteger(gid\x2C 'gid'\x2C -1\x2C kMaxUserId);\x0d\n  const ctx = { path };\x0d\n  binding.chown(pathModule.toNamespacedPath(path)\x2C uid\x2C gid\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Changes the file system timestamps of the object\x0d\n * referenced by `path`.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {number | string | Date} atime\x0d\n * @param {number | string | Date} mtime\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction utimes(path\x2C atime\x2C mtime\x2C callback) {\x0d\n  callback = makeCallback(callback);\x0d\n  path = getValidatedPath(path);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.utimes(pathModule.toNamespacedPath(path)\x2C\x0d\n                 toUnixTimestamp(atime)\x2C\x0d\n                 toUnixTimestamp(mtime)\x2C\x0d\n                 req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously changes the file system timestamps\x0d\n * of the object referenced by `path`.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {number | string | Date} atime\x0d\n * @param {number | string | Date} mtime\x0d\n * @returns {void}\x0d\n */\x0d\nfunction utimesSync(path\x2C atime\x2C mtime) {\x0d\n  path = getValidatedPath(path);\x0d\n  const ctx = { path };\x0d\n  binding.utimes(pathModule.toNamespacedPath(path)\x2C\x0d\n                 toUnixTimestamp(atime)\x2C toUnixTimestamp(mtime)\x2C\x0d\n                 undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Changes the file system timestamps of the object\x0d\n * referenced by the supplied `fd` (file descriptor).\x0d\n * @param {number} fd\x0d\n * @param {number | string | Date} atime\x0d\n * @param {number | string | Date} mtime\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction futimes(fd\x2C atime\x2C mtime\x2C callback) {\x0d\n  fd = getValidatedFd(fd);\x0d\n  atime = toUnixTimestamp(atime\x2C 'atime');\x0d\n  mtime = toUnixTimestamp(mtime\x2C 'mtime');\x0d\n  callback = makeCallback(callback);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.futimes(fd\x2C atime\x2C mtime\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously changes the file system timestamps\x0d\n * of the object referenced by the\x0d\n * supplied `fd` (file descriptor).\x0d\n * @param {number} fd\x0d\n * @param {number | string | Date} atime\x0d\n * @param {number | string | Date} mtime\x0d\n * @returns {void}\x0d\n */\x0d\nfunction futimesSync(fd\x2C atime\x2C mtime) {\x0d\n  fd = getValidatedFd(fd);\x0d\n  atime = toUnixTimestamp(atime\x2C 'atime');\x0d\n  mtime = toUnixTimestamp(mtime\x2C 'mtime');\x0d\n  const ctx = {};\x0d\n  binding.futimes(fd\x2C atime\x2C mtime\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Changes the access and modification times of\x0d\n * a file in the same way as `fs.utimes()`.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {number | string | Date} atime\x0d\n * @param {number | string | Date} mtime\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction lutimes(path\x2C atime\x2C mtime\x2C callback) {\x0d\n  callback = makeCallback(callback);\x0d\n  path = getValidatedPath(path);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.lutimes(pathModule.toNamespacedPath(path)\x2C\x0d\n                  toUnixTimestamp(atime)\x2C\x0d\n                  toUnixTimestamp(mtime)\x2C\x0d\n                  req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously changes the access and modification\x0d\n * times of a file in the same way as `fs.utimesSync()`.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {number | string | Date} atime\x0d\n * @param {number | string | Date} mtime\x0d\n * @returns {void}\x0d\n */\x0d\nfunction lutimesSync(path\x2C atime\x2C mtime) {\x0d\n  path = getValidatedPath(path);\x0d\n  const ctx = { path };\x0d\n  binding.lutimes(pathModule.toNamespacedPath(path)\x2C\x0d\n                  toUnixTimestamp(atime)\x2C\x0d\n                  toUnixTimestamp(mtime)\x2C\x0d\n                  undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\nfunction writeAll(fd\x2C isUserFd\x2C buffer\x2C offset\x2C length\x2C signal\x2C callback) {\x0d\n  if (signal?.aborted) {\x0d\n    const abortError = new AbortError(undefined\x2C { cause: signal?.reason });\x0d\n    if (isUserFd) {\x0d\n      callback(abortError);\x0d\n    } else {\x0d\n      fs.close(fd\x2C (err) => {\x0d\n        callback(aggregateTwoErrors(err\x2C abortError));\x0d\n      });\x0d\n    }\x0d\n    return;\x0d\n  }\x0d\n  // write(fd\x2C buffer\x2C offset\x2C length\x2C position\x2C callback)\x0d\n  fs.write(fd\x2C buffer\x2C offset\x2C length\x2C null\x2C (writeErr\x2C written) => {\x0d\n    if (writeErr) {\x0d\n      if (isUserFd) {\x0d\n        callback(writeErr);\x0d\n      } else {\x0d\n        fs.close(fd\x2C (err) => {\x0d\n          callback(aggregateTwoErrors(err\x2C writeErr));\x0d\n        });\x0d\n      }\x0d\n    } else if (written === length) {\x0d\n      if (isUserFd) {\x0d\n        callback(null);\x0d\n      } else {\x0d\n        fs.close(fd\x2C callback);\x0d\n      }\x0d\n    } else {\x0d\n      offset += written;\x0d\n      length -= written;\x0d\n      writeAll(fd\x2C isUserFd\x2C buffer\x2C offset\x2C length\x2C signal\x2C callback);\x0d\n    }\x0d\n  });\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously writes data to the file.\x0d\n * @param {string | Buffer | URL | number} path\x0d\n * @param {string | Buffer | TypedArray | DataView | object} data\x0d\n * @param {{\x0d\n *   encoding?: string | null;\x0d\n *   mode?: number;\x0d\n *   flag?: string;\x0d\n *   signal?: AbortSignal;\x0d\n *   } | string} [options]\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction writeFile(path\x2C data\x2C options\x2C callback) {\x0d\n  callback = maybeCallback(callback || options);\x0d\n  options = getOptions(options\x2C { encoding: 'utf8'\x2C mode: 0o666\x2C flag: 'w' });\x0d\n  const flag = options.flag || 'w';\x0d\n\x0d\n  if (!isArrayBufferView(data)) {\x0d\n    validateStringAfterArrayBufferView(data\x2C 'data');\x0d\n    if (typeof data !== 'string') {\x0d\n      showStringCoercionDeprecation();\x0d\n    }\x0d\n    data = Buffer.from(String(data)\x2C options.encoding || 'utf8');\x0d\n  }\x0d\n\x0d\n  if (isFd(path)) {\x0d\n    const isUserFd = true;\x0d\n    const signal = options.signal;\x0d\n    writeAll(path\x2C isUserFd\x2C data\x2C 0\x2C data.byteLength\x2C signal\x2C callback);\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  if (checkAborted(options.signal\x2C callback))\x0d\n    return;\x0d\n\x0d\n  fs.open(path\x2C flag\x2C options.mode\x2C (openErr\x2C fd) => {\x0d\n    if (openErr) {\x0d\n      callback(openErr);\x0d\n    } else {\x0d\n      const isUserFd = false;\x0d\n      const signal = options.signal;\x0d\n      writeAll(fd\x2C isUserFd\x2C data\x2C 0\x2C data.byteLength\x2C signal\x2C callback);\x0d\n    }\x0d\n  });\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously writes data to the file.\x0d\n * @param {string | Buffer | URL | number} path\x0d\n * @param {string | Buffer | TypedArray | DataView | object} data\x0d\n * @param {{\x0d\n *   encoding?: string | null;\x0d\n *   mode?: number;\x0d\n *   flag?: string;\x0d\n *   } | string} [options]\x0d\n * @returns {void}\x0d\n */\x0d\nfunction writeFileSync(path\x2C data\x2C options) {\x0d\n  options = getOptions(options\x2C { encoding: 'utf8'\x2C mode: 0o666\x2C flag: 'w' });\x0d\n\x0d\n  if (!isArrayBufferView(data)) {\x0d\n    validateStringAfterArrayBufferView(data\x2C 'data');\x0d\n    if (typeof data !== 'string') {\x0d\n      showStringCoercionDeprecation();\x0d\n    }\x0d\n    data = Buffer.from(String(data)\x2C options.encoding || 'utf8');\x0d\n  }\x0d\n\x0d\n  const flag = options.flag || 'w';\x0d\n\x0d\n  const isUserFd = isFd(path); // File descriptor ownership\x0d\n  const fd = isUserFd ? path : fs.openSync(path\x2C flag\x2C options.mode);\x0d\n\x0d\n  let offset = 0;\x0d\n  let length = data.byteLength;\x0d\n  try {\x0d\n    while (length > 0) {\x0d\n      const written = fs.writeSync(fd\x2C data\x2C offset\x2C length);\x0d\n      offset += written;\x0d\n      length -= written;\x0d\n    }\x0d\n  } finally {\x0d\n    if (!isUserFd) fs.closeSync(fd);\x0d\n  }\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously appends data to a file.\x0d\n * @param {string | Buffer | URL | number} path\x0d\n * @param {string | Buffer} data\x0d\n * @param {{\x0d\n *   encoding?: string | null;\x0d\n *   mode?: number;\x0d\n *   flag?: string;\x0d\n *   } | string} [options]\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction appendFile(path\x2C data\x2C options\x2C callback) {\x0d\n  callback = maybeCallback(callback || options);\x0d\n  options = getOptions(options\x2C { encoding: 'utf8'\x2C mode: 0o666\x2C flag: 'a' });\x0d\n\x0d\n  // Don't make changes directly on options object\x0d\n  options = copyObject(options);\x0d\n\x0d\n  // Force append behavior when using a supplied file descriptor\x0d\n  if (!options.flag || isFd(path))\x0d\n    options.flag = 'a';\x0d\n\x0d\n  fs.writeFile(path\x2C data\x2C options\x2C callback);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously appends data to a file.\x0d\n * @param {string | Buffer | URL | number} path\x0d\n * @param {string | Buffer} data\x0d\n * @param {{\x0d\n *   encoding?: string | null;\x0d\n *   mode?: number;\x0d\n *   flag?: string;\x0d\n *   } | string} [options]\x0d\n * @returns {void}\x0d\n */\x0d\nfunction appendFileSync(path\x2C data\x2C options) {\x0d\n  options = getOptions(options\x2C { encoding: 'utf8'\x2C mode: 0o666\x2C flag: 'a' });\x0d\n\x0d\n  // Don't make changes directly on options object\x0d\n  options = copyObject(options);\x0d\n\x0d\n  // Force append behavior when using a supplied file descriptor\x0d\n  if (!options.flag || isFd(path))\x0d\n    options.flag = 'a';\x0d\n\x0d\n  fs.writeFileSync(path\x2C data\x2C options);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Watches for the changes on `filename`.\x0d\n * @param {string | Buffer | URL} filename\x0d\n * @param {string | {\x0d\n *   persistent?: boolean;\x0d\n *   recursive?: boolean;\x0d\n *   encoding?: string;\x0d\n *   signal?: AbortSignal;\x0d\n *   }} [options]\x0d\n * @param {(\x0d\n *   eventType?: string\x2C\x0d\n *   filename?: string | Buffer\x0d\n *   ) => any} [listener]\x0d\n * @returns {watchers.FSWatcher}\x0d\n */\x0d\nfunction watch(filename\x2C options\x2C listener) {\x0d\n  if (typeof options === 'function') {\x0d\n    listener = options;\x0d\n  }\x0d\n  options = getOptions(options);\x0d\n\x0d\n  // Don't make changes directly on options object\x0d\n  options = copyObject(options);\x0d\n\x0d\n  if (options.persistent === undefined) options.persistent = true;\x0d\n  if (options.recursive === undefined) options.recursive = false;\x0d\n  if (options.recursive && !(isOSX || isWindows))\x0d\n    throw new ERR_FEATURE_UNAVAILABLE_ON_PLATFORM('watch recursively');\x0d\n  const watcher = new watchers.FSWatcher();\x0d\n  watcher[watchers.kFSWatchStart](filename\x2C\x0d\n                                  options.persistent\x2C\x0d\n                                  options.recursive\x2C\x0d\n                                  options.encoding);\x0d\n\x0d\n  if (listener) {\x0d\n    watcher.addListener('change'\x2C listener);\x0d\n  }\x0d\n  if (options.signal) {\x0d\n    if (options.signal.aborted) {\x0d\n      process.nextTick(() => watcher.close());\x0d\n    } else {\x0d\n      const listener = () => watcher.close();\x0d\n      options.signal.addEventListener('abort'\x2C listener);\x0d\n      watcher.once('close'\x2C () => {\x0d\n        options.signal.removeEventListener('abort'\x2C listener);\x0d\n      });\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return watcher;\x0d\n}\x0d\n\x0d\n\x0d\nconst statWatchers = new SafeMap();\x0d\n\x0d\n/**\x0d\n * Watches for changes on `filename`.\x0d\n * @param {string | Buffer | URL} filename\x0d\n * @param {{\x0d\n *   bigint?: boolean;\x0d\n *   persistent?: boolean;\x0d\n *   interval?: number;\x0d\n *   }} [options]\x0d\n * @param {(\x0d\n *   current?: Stats\x2C\x0d\n *   previous?: Stats\x0d\n *   ) => any} listener\x0d\n * @returns {watchers.StatWatcher}\x0d\n */\x0d\nfunction watchFile(filename\x2C options\x2C listener) {\x0d\n  filename = getValidatedPath(filename);\x0d\n  filename = pathModule.resolve(filename);\x0d\n  let stat;\x0d\n\x0d\n  if (options === null || typeof options !== 'object') {\x0d\n    listener = options;\x0d\n    options = null;\x0d\n  }\x0d\n\x0d\n  options = {\x0d\n    // Poll interval in milliseconds. 5007 is what libev used to use. It's\x0d\n    // a little on the slow side but let's stick with it for now to keep\x0d\n    // behavioral changes to a minimum.\x0d\n    interval: 5007\x2C\x0d\n    persistent: true\x2C\x0d\n    ...options\x0d\n  };\x0d\n\x0d\n  validateFunction(listener\x2C 'listener');\x0d\n\x0d\n  stat = statWatchers.get(filename);\x0d\n\x0d\n  if (stat === undefined) {\x0d\n    stat = new watchers.StatWatcher(options.bigint);\x0d\n    stat[watchers.kFSStatWatcherStart](filename\x2C\x0d\n                                       options.persistent\x2C options.interval);\x0d\n    statWatchers.set(filename\x2C stat);\x0d\n  } else {\x0d\n    stat[watchers.kFSStatWatcherAddOrCleanRef]('add');\x0d\n  }\x0d\n\x0d\n  stat.addListener('change'\x2C listener);\x0d\n  return stat;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Stops watching for changes on `filename`.\x0d\n * @param {string | Buffer | URL} filename\x0d\n * @param {() => any} [listener]\x0d\n * @returns {void}\x0d\n */\x0d\nfunction unwatchFile(filename\x2C listener) {\x0d\n  filename = getValidatedPath(filename);\x0d\n  filename = pathModule.resolve(filename);\x0d\n  const stat = statWatchers.get(filename);\x0d\n\x0d\n  if (stat === undefined) return;\x0d\n\x0d\n  if (typeof listener === 'function') {\x0d\n    const beforeListenerCount = stat.listenerCount('change');\x0d\n    stat.removeListener('change'\x2C listener);\x0d\n    if (stat.listenerCount('change') < beforeListenerCount)\x0d\n      stat[watchers.kFSStatWatcherAddOrCleanRef]('clean');\x0d\n  } else {\x0d\n    stat.removeAllListeners('change');\x0d\n    stat[watchers.kFSStatWatcherAddOrCleanRef]('cleanAll');\x0d\n  }\x0d\n\x0d\n  if (stat.listenerCount('change') === 0) {\x0d\n    stat.stop();\x0d\n    statWatchers.delete(filename);\x0d\n  }\x0d\n}\x0d\n\x0d\n\x0d\nlet splitRoot;\x0d\nif (isWindows) {\x0d\n  // Regex to find the device root on Windows (e.g. 'c:\\\\')\x2C including trailing\x0d\n  // slash.\x0d\n  const splitRootRe = /^(?:[a-zA-Z]:|[\\\\/]{2}[^\\\\/]+[\\\\/][^\\\\/]+)?[\\\\/]*/;\x0d\n  splitRoot = function splitRoot(str) {\x0d\n    return SideEffectFreeRegExpPrototypeExec(splitRootRe\x2C str)[0];\x0d\n  };\x0d\n} else {\x0d\n  splitRoot = function splitRoot(str) {\x0d\n    for (let i = 0; i < str.length; ++i) {\x0d\n      if (StringPrototypeCharCodeAt(str\x2C i) !== CHAR_FORWARD_SLASH)\x0d\n        return StringPrototypeSlice(str\x2C 0\x2C i);\x0d\n    }\x0d\n    return str;\x0d\n  };\x0d\n}\x0d\n\x0d\nfunction encodeRealpathResult(result\x2C options) {\x0d\n  if (!options || !options.encoding || options.encoding === 'utf8')\x0d\n    return result;\x0d\n  const asBuffer = Buffer.from(result);\x0d\n  if (options.encoding === 'buffer') {\x0d\n    return asBuffer;\x0d\n  }\x0d\n  return asBuffer.toString(options.encoding);\x0d\n}\x0d\n\x0d\n// Finds the next portion of a (partial) path\x2C up to the next path delimiter\x0d\nlet nextPart;\x0d\nif (isWindows) {\x0d\n  nextPart = function nextPart(p\x2C i) {\x0d\n    for (; i < p.length; ++i) {\x0d\n      const ch = StringPrototypeCharCodeAt(p\x2C i);\x0d\n\x0d\n      // Check for a separator character\x0d\n      if (ch === CHAR_BACKWARD_SLASH || ch === CHAR_FORWARD_SLASH)\x0d\n        return i;\x0d\n    }\x0d\n    return -1;\x0d\n  };\x0d\n} else {\x0d\n  nextPart = function nextPart(p\x2C i) {\x0d\n    return StringPrototypeIndexOf(p\x2C '/'\x2C i);\x0d\n  };\x0d\n}\x0d\n\x0d\n/**\x0d\n * Returns the resolved pathname.\x0d\n * @param {string | Buffer | URL} p\x0d\n * @param {string | { encoding?: string | null; }} [options]\x0d\n * @returns {string | Buffer}\x0d\n */\x0d\nfunction realpathSync(p\x2C options) {\x0d\n  options = getOptions(options);\x0d\n  p = toPathIfFileURL(p);\x0d\n  if (typeof p !== 'string') {\x0d\n    p += '';\x0d\n  }\x0d\n  validatePath(p);\x0d\n  p = pathModule.resolve(p);\x0d\n\x0d\n  const cache = options[realpathCacheKey];\x0d\n  const maybeCachedResult = cache?.get(p);\x0d\n  if (maybeCachedResult) {\x0d\n    return maybeCachedResult;\x0d\n  }\x0d\n\x0d\n  const seenLinks = new SafeMap();\x0d\n  const knownHard = new SafeSet();\x0d\n  const original = p;\x0d\n\x0d\n  // Current character position in p\x0d\n  let pos;\x0d\n  // The partial path so far\x2C including a trailing slash if any\x0d\n  let current;\x0d\n  // The partial path without a trailing slash (except when pointing at a root)\x0d\n  let base;\x0d\n  // The partial path scanned in the previous round\x2C with slash\x0d\n  let previous;\x0d\n\x0d\n  // Skip over roots\x0d\n  current = base = splitRoot(p);\x0d\n  pos = current.length;\x0d\n\x0d\n  // On windows\x2C check that the root exists. On unix there is no need.\x0d\n  if (isWindows) {\x0d\n    const ctx = { path: base };\x0d\n    binding.lstat(pathModule.toNamespacedPath(base)\x2C false\x2C undefined\x2C ctx);\x0d\n    handleErrorFromBinding(ctx);\x0d\n    knownHard.add(base);\x0d\n  }\x0d\n\x0d\n  // Walk down the path\x2C swapping out linked path parts for their real\x0d\n  // values\x0d\n  // NB: p.length changes.\x0d\n  while (pos < p.length) {\x0d\n    // find the next part\x0d\n    const result = nextPart(p\x2C pos);\x0d\n    previous = current;\x0d\n    if (result === -1) {\x0d\n      const last = StringPrototypeSlice(p\x2C pos);\x0d\n      current += last;\x0d\n      base = previous + last;\x0d\n      pos = p.length;\x0d\n    } else {\x0d\n      current += StringPrototypeSlice(p\x2C pos\x2C result + 1);\x0d\n      base = previous + StringPrototypeSlice(p\x2C pos\x2C result);\x0d\n      pos = result + 1;\x0d\n    }\x0d\n\x0d\n    // Continue if not a symlink\x2C break if a pipe/socket\x0d\n    if (knownHard.has(base) || cache?.get(base) === base) {\x0d\n      if (isFileType(binding.statValues\x2C S_IFIFO) ||\x0d\n          isFileType(binding.statValues\x2C S_IFSOCK)) {\x0d\n        break;\x0d\n      }\x0d\n      continue;\x0d\n    }\x0d\n\x0d\n    let resolvedLink;\x0d\n    const maybeCachedResolved = cache?.get(base);\x0d\n    if (maybeCachedResolved) {\x0d\n      resolvedLink = maybeCachedResolved;\x0d\n    } else {\x0d\n      // Use stats array directly to avoid creating an fs.Stats instance just\x0d\n      // for our internal use.\x0d\n\x0d\n      const baseLong = pathModule.toNamespacedPath(base);\x0d\n      const ctx = { path: base };\x0d\n      const stats = binding.lstat(baseLong\x2C true\x2C undefined\x2C ctx);\x0d\n      handleErrorFromBinding(ctx);\x0d\n\x0d\n      if (!isFileType(stats\x2C S_IFLNK)) {\x0d\n        knownHard.add(base);\x0d\n        cache?.set(base\x2C base);\x0d\n        continue;\x0d\n      }\x0d\n\x0d\n      // Read the link if it wasn't read before\x0d\n      // dev/ino always return 0 on windows\x2C so skip the check.\x0d\n      let linkTarget = null;\x0d\n      let id;\x0d\n      if (!isWindows) {\x0d\n        const dev = BigIntPrototypeToString(stats[0]\x2C 32);\x0d\n        const ino = BigIntPrototypeToString(stats[7]\x2C 32);\x0d\n        id = `${dev}:${ino}`;\x0d\n        if (seenLinks.has(id)) {\x0d\n          linkTarget = seenLinks.get(id);\x0d\n        }\x0d\n      }\x0d\n      if (linkTarget === null) {\x0d\n        const ctx = { path: base };\x0d\n        binding.stat(baseLong\x2C false\x2C undefined\x2C ctx);\x0d\n        handleErrorFromBinding(ctx);\x0d\n        linkTarget = binding.readlink(baseLong\x2C undefined\x2C undefined\x2C ctx);\x0d\n        handleErrorFromBinding(ctx);\x0d\n      }\x0d\n      resolvedLink = pathModule.resolve(previous\x2C linkTarget);\x0d\n\x0d\n      cache?.set(base\x2C resolvedLink);\x0d\n      if (!isWindows) seenLinks.set(id\x2C linkTarget);\x0d\n    }\x0d\n\x0d\n    // Resolve the link\x2C then start over\x0d\n    p = pathModule.resolve(resolvedLink\x2C StringPrototypeSlice(p\x2C pos));\x0d\n\x0d\n    // Skip over roots\x0d\n    current = base = splitRoot(p);\x0d\n    pos = current.length;\x0d\n\x0d\n    // On windows\x2C check that the root exists. On unix there is no need.\x0d\n    if (isWindows && !knownHard.has(base)) {\x0d\n      const ctx = { path: base };\x0d\n      binding.lstat(pathModule.toNamespacedPath(base)\x2C false\x2C undefined\x2C ctx);\x0d\n      handleErrorFromBinding(ctx);\x0d\n      knownHard.add(base);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  cache?.set(original\x2C p);\x0d\n  return encodeRealpathResult(p\x2C options);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Returns the resolved pathname.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {string | { encoding?: string; }} [options]\x0d\n * @returns {string | Buffer}\x0d\n */\x0d\nrealpathSync.native = (path\x2C options) => {\x0d\n  options = getOptions(options);\x0d\n  path = getValidatedPath(path);\x0d\n  const ctx = { path };\x0d\n  const result = binding.realpath(pathModule.toNamespacedPath(path)\x2C options.encoding\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n  return result;\x0d\n};\x0d\n\x0d\n/**\x0d\n * Asynchronously computes the canonical pathname by\x0d\n * resolving `.`\x2C `..` and symbolic links.\x0d\n * @param {string | Buffer | URL} p\x0d\n * @param {string | { encoding?: string; }} [options]\x0d\n * @param {(\x0d\n *   err?: Error\x2C\x0d\n *   resolvedPath?: string | Buffer\x0d\n *   ) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction realpath(p\x2C options\x2C callback) {\x0d\n  callback = typeof options === 'function' ? options : maybeCallback(callback);\x0d\n  options = getOptions(options);\x0d\n  p = toPathIfFileURL(p);\x0d\n\x0d\n  if (typeof p !== 'string') {\x0d\n    p += '';\x0d\n  }\x0d\n  validatePath(p);\x0d\n  p = pathModule.resolve(p);\x0d\n\x0d\n  const seenLinks = new SafeMap();\x0d\n  const knownHard = new SafeSet();\x0d\n\x0d\n  // Current character position in p\x0d\n  let pos;\x0d\n  // The partial path so far\x2C including a trailing slash if any\x0d\n  let current;\x0d\n  // The partial path without a trailing slash (except when pointing at a root)\x0d\n  let base;\x0d\n  // The partial path scanned in the previous round\x2C with slash\x0d\n  let previous;\x0d\n\x0d\n  current = base = splitRoot(p);\x0d\n  pos = current.length;\x0d\n\x0d\n  // On windows\x2C check that the root exists. On unix there is no need.\x0d\n  if (isWindows && !knownHard.has(base)) {\x0d\n    fs.lstat(base\x2C (err\x2C stats) => {\x0d\n      if (err) return callback(err);\x0d\n      knownHard.add(base);\x0d\n      LOOP();\x0d\n    });\x0d\n  } else {\x0d\n    process.nextTick(LOOP);\x0d\n  }\x0d\n\x0d\n  // Walk down the path\x2C swapping out linked path parts for their real\x0d\n  // values\x0d\n  function LOOP() {\x0d\n    // Stop if scanned past end of path\x0d\n    if (pos >= p.length) {\x0d\n      return callback(null\x2C encodeRealpathResult(p\x2C options));\x0d\n    }\x0d\n\x0d\n    // find the next part\x0d\n    const result = nextPart(p\x2C pos);\x0d\n    previous = current;\x0d\n    if (result === -1) {\x0d\n      const last = StringPrototypeSlice(p\x2C pos);\x0d\n      current += last;\x0d\n      base = previous + last;\x0d\n      pos = p.length;\x0d\n    } else {\x0d\n      current += StringPrototypeSlice(p\x2C pos\x2C result + 1);\x0d\n      base = previous + StringPrototypeSlice(p\x2C pos\x2C result);\x0d\n      pos = result + 1;\x0d\n    }\x0d\n\x0d\n    // Continue if not a symlink\x2C break if a pipe/socket\x0d\n    if (knownHard.has(base)) {\x0d\n      if (isFileType(binding.statValues\x2C S_IFIFO) ||\x0d\n          isFileType(binding.statValues\x2C S_IFSOCK)) {\x0d\n        return callback(null\x2C encodeRealpathResult(p\x2C options));\x0d\n      }\x0d\n      return process.nextTick(LOOP);\x0d\n    }\x0d\n\x0d\n    return fs.lstat(base\x2C { bigint: true }\x2C gotStat);\x0d\n  }\x0d\n\x0d\n  function gotStat(err\x2C stats) {\x0d\n    if (err) return callback(err);\x0d\n\x0d\n    // If not a symlink\x2C skip to the next path part\x0d\n    if (!stats.isSymbolicLink()) {\x0d\n      knownHard.add(base);\x0d\n      return process.nextTick(LOOP);\x0d\n    }\x0d\n\x0d\n    // Stat & read the link if not read before.\x0d\n    // Call `gotTarget()` as soon as the link target is known.\x0d\n    // `dev`/`ino` always return 0 on windows\x2C so skip the check.\x0d\n    let id;\x0d\n    if (!isWindows) {\x0d\n      const dev = BigIntPrototypeToString(stats.dev\x2C 32);\x0d\n      const ino = BigIntPrototypeToString(stats.ino\x2C 32);\x0d\n      id = `${dev}:${ino}`;\x0d\n      if (seenLinks.has(id)) {\x0d\n        return gotTarget(null\x2C seenLinks.get(id));\x0d\n      }\x0d\n    }\x0d\n    fs.stat(base\x2C (err) => {\x0d\n      if (err) return callback(err);\x0d\n\x0d\n      fs.readlink(base\x2C (err\x2C target) => {\x0d\n        if (!isWindows) seenLinks.set(id\x2C target);\x0d\n        gotTarget(err\x2C target);\x0d\n      });\x0d\n    });\x0d\n  }\x0d\n\x0d\n  function gotTarget(err\x2C target) {\x0d\n    if (err) return callback(err);\x0d\n\x0d\n    gotResolvedLink(pathModule.resolve(previous\x2C target));\x0d\n  }\x0d\n\x0d\n  function gotResolvedLink(resolvedLink) {\x0d\n    // Resolve the link\x2C then start over\x0d\n    p = pathModule.resolve(resolvedLink\x2C StringPrototypeSlice(p\x2C pos));\x0d\n    current = base = splitRoot(p);\x0d\n    pos = current.length;\x0d\n\x0d\n    // On windows\x2C check that the root exists. On unix there is no need.\x0d\n    if (isWindows && !knownHard.has(base)) {\x0d\n      fs.lstat(base\x2C (err) => {\x0d\n        if (err) return callback(err);\x0d\n        knownHard.add(base);\x0d\n        LOOP();\x0d\n      });\x0d\n    } else {\x0d\n      process.nextTick(LOOP);\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously computes the canonical pathname by\x0d\n * resolving `.`\x2C `..` and symbolic links.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {string | { encoding?: string; }} [options]\x0d\n * @param {(\x0d\n *   err?: Error\x2C\x0d\n *   resolvedPath?: string | Buffer\x0d\n *   ) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nrealpath.native = (path\x2C options\x2C callback) => {\x0d\n  callback = makeCallback(callback || options);\x0d\n  options = getOptions(options);\x0d\n  path = getValidatedPath(path);\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  return binding.realpath(pathModule.toNamespacedPath(path)\x2C options.encoding\x2C req);\x0d\n};\x0d\n\x0d\n/**\x0d\n * Creates a unique temporary directory.\x0d\n * @param {string} prefix\x0d\n * @param {string | { encoding?: string; }} [options]\x0d\n * @param {(\x0d\n *   err?: Error\x2C\x0d\n *   directory?: string\x0d\n *   ) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction mkdtemp(prefix\x2C options\x2C callback) {\x0d\n  callback = makeCallback(typeof options === 'function' ? options : callback);\x0d\n  options = getOptions(options);\x0d\n\x0d\n  validateString(prefix\x2C 'prefix');\x0d\n  nullCheck(prefix\x2C 'prefix');\x0d\n  warnOnNonPortableTemplate(prefix);\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.mkdtemp(`${prefix}XXXXXX`\x2C options.encoding\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously creates a unique temporary directory.\x0d\n * @param {string} prefix\x0d\n * @param {string | { encoding?: string; }} [options]\x0d\n * @returns {string}\x0d\n */\x0d\nfunction mkdtempSync(prefix\x2C options) {\x0d\n  options = getOptions(options);\x0d\n\x0d\n  validateString(prefix\x2C 'prefix');\x0d\n  nullCheck(prefix\x2C 'prefix');\x0d\n  warnOnNonPortableTemplate(prefix);\x0d\n  const path = `${prefix}XXXXXX`;\x0d\n  const ctx = { path };\x0d\n  const result = binding.mkdtemp(path\x2C options.encoding\x2C\x0d\n                                 undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n  return result;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously copies `src` to `dest`. By\x0d\n * default\x2C `dest` is overwritten if it already exists.\x0d\n * @param {string | Buffer | URL} src\x0d\n * @param {string | Buffer | URL} dest\x0d\n * @param {number} [mode]\x0d\n * @param {() => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction copyFile(src\x2C dest\x2C mode\x2C callback) {\x0d\n  if (typeof mode === 'function') {\x0d\n    callback = mode;\x0d\n    mode = 0;\x0d\n  }\x0d\n\x0d\n  src = getValidatedPath(src\x2C 'src');\x0d\n  dest = getValidatedPath(dest\x2C 'dest');\x0d\n\x0d\n  src = pathModule._makeLong(src);\x0d\n  dest = pathModule._makeLong(dest);\x0d\n  mode = getValidMode(mode\x2C 'copyFile');\x0d\n  callback = makeCallback(callback);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.copyFile(src\x2C dest\x2C mode\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously copies `src` to `dest`. By\x0d\n * default\x2C `dest` is overwritten if it already exists.\x0d\n * @param {string | Buffer | URL} src\x0d\n * @param {string | Buffer | URL} dest\x0d\n * @param {number} [mode]\x0d\n * @returns {void}\x0d\n */\x0d\nfunction copyFileSync(src\x2C dest\x2C mode) {\x0d\n  src = getValidatedPath(src\x2C 'src');\x0d\n  dest = getValidatedPath(dest\x2C 'dest');\x0d\n\x0d\n  const ctx = { path: src\x2C dest };  // non-prefixed\x0d\n\x0d\n  src = pathModule._makeLong(src);\x0d\n  dest = pathModule._makeLong(dest);\x0d\n  mode = getValidMode(mode\x2C 'copyFile');\x0d\n  binding.copyFile(src\x2C dest\x2C mode\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously copies `src` to `dest`. `src` can be a file\x2C directory\x2C or\x0d\n * symlink. The contents of directories will be copied recursively.\x0d\n * @param {string | URL} src\x0d\n * @param {string | URL} dest\x0d\n * @param {object} [options]\x0d\n * @param {() => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction cp(src\x2C dest\x2C options\x2C callback) {\x0d\n  if (typeof options === 'function') {\x0d\n    callback = options;\x0d\n    options = undefined;\x0d\n  }\x0d\n  callback = makeCallback(callback);\x0d\n  options = validateCpOptions(options);\x0d\n  src = pathModule.toNamespacedPath(getValidatedPath(src\x2C 'src'));\x0d\n  dest = pathModule.toNamespacedPath(getValidatedPath(dest\x2C 'dest'));\x0d\n  lazyLoadCp();\x0d\n  cpFn(src\x2C dest\x2C options\x2C callback);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously copies `src` to `dest`. `src` can be a file\x2C directory\x2C or\x0d\n * symlink. The contents of directories will be copied recursively.\x0d\n * @param {string | URL} src\x0d\n * @param {string | URL} dest\x0d\n * @param {object} [options]\x0d\n * @returns {void}\x0d\n */\x0d\nfunction cpSync(src\x2C dest\x2C options) {\x0d\n  options = validateCpOptions(options);\x0d\n  src = pathModule.toNamespacedPath(getValidatedPath(src\x2C 'src'));\x0d\n  dest = pathModule.toNamespacedPath(getValidatedPath(dest\x2C 'dest'));\x0d\n  lazyLoadCp();\x0d\n  cpSyncFn(src\x2C dest\x2C options);\x0d\n}\x0d\n\x0d\nfunction lazyLoadStreams() {\x0d\n  if (!ReadStream) {\x0d\n    ({ ReadStream\x2C WriteStream } = require('internal/fs/streams'));\x0d\n    FileReadStream = ReadStream;\x0d\n    FileWriteStream = WriteStream;\x0d\n  }\x0d\n}\x0d\n\x0d\n/**\x0d\n * Creates a readable stream with a default `highWaterMark`\x0d\n * of 64 KiB.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {string | {\x0d\n *   flags?: string;\x0d\n *   encoding?: string;\x0d\n *   fd?: number | FileHandle;\x0d\n *   mode?: number;\x0d\n *   autoClose?: boolean;\x0d\n *   emitClose?: boolean;\x0d\n *   start: number;\x0d\n *   end?: number;\x0d\n *   highWaterMark?: number;\x0d\n *   fs?: object | null;\x0d\n *   }} [options]\x0d\n * @returns {ReadStream}\x0d\n */\x0d\nfunction createReadStream(path\x2C options) {\x0d\n  lazyLoadStreams();\x0d\n  return new ReadStream(path\x2C options);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Creates a write stream.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {string | {\x0d\n *   flags?: string;\x0d\n *   encoding?: string;\x0d\n *   fd?: number | FileHandle;\x0d\n *   mode?: number;\x0d\n *   autoClose?: boolean;\x0d\n *   emitClose?: boolean;\x0d\n *   start: number;\x0d\n *   fs?: object | null;\x0d\n *   }} [options]\x0d\n * @returns {WriteStream}\x0d\n */\x0d\nfunction createWriteStream(path\x2C options) {\x0d\n  lazyLoadStreams();\x0d\n  return new WriteStream(path\x2C options);\x0d\n}\x0d\n\x0d\nmodule.exports = fs = {\x0d\n  appendFile\x2C\x0d\n  appendFileSync\x2C\x0d\n  access\x2C\x0d\n  accessSync\x2C\x0d\n  chown\x2C\x0d\n  chownSync\x2C\x0d\n  chmod\x2C\x0d\n  chmodSync\x2C\x0d\n  close\x2C\x0d\n  closeSync\x2C\x0d\n  copyFile\x2C\x0d\n  copyFileSync\x2C\x0d\n  cp\x2C\x0d\n  cpSync\x2C\x0d\n  createReadStream\x2C\x0d\n  createWriteStream\x2C\x0d\n  exists\x2C\x0d\n  existsSync\x2C\x0d\n  fchown\x2C\x0d\n  fchownSync\x2C\x0d\n  fchmod\x2C\x0d\n  fchmodSync\x2C\x0d\n  fdatasync\x2C\x0d\n  fdatasyncSync\x2C\x0d\n  fstat\x2C\x0d\n  fstatSync\x2C\x0d\n  fsync\x2C\x0d\n  fsyncSync\x2C\x0d\n  ftruncate\x2C\x0d\n  ftruncateSync\x2C\x0d\n  futimes\x2C\x0d\n  futimesSync\x2C\x0d\n  lchown\x2C\x0d\n  lchownSync\x2C\x0d\n  lchmod: constants.O_SYMLINK !== undefined ? lchmod : undefined\x2C\x0d\n  lchmodSync: constants.O_SYMLINK !== undefined ? lchmodSync : undefined\x2C\x0d\n  link\x2C\x0d\n  linkSync\x2C\x0d\n  lstat\x2C\x0d\n  lstatSync\x2C\x0d\n  lutimes\x2C\x0d\n  lutimesSync\x2C\x0d\n  mkdir\x2C\x0d\n  mkdirSync\x2C\x0d\n  mkdtemp\x2C\x0d\n  mkdtempSync\x2C\x0d\n  open\x2C\x0d\n  openSync\x2C\x0d\n  opendir\x2C\x0d\n  opendirSync\x2C\x0d\n  readdir\x2C\x0d\n  readdirSync\x2C\x0d\n  read\x2C\x0d\n  readSync\x2C\x0d\n  readv\x2C\x0d\n  readvSync\x2C\x0d\n  readFile\x2C\x0d\n  readFileSync\x2C\x0d\n  readlink\x2C\x0d\n  readlinkSync\x2C\x0d\n  realpath\x2C\x0d\n  realpathSync\x2C\x0d\n  rename\x2C\x0d\n  renameSync\x2C\x0d\n  rm\x2C\x0d\n  rmSync\x2C\x0d\n  rmdir\x2C\x0d\n  rmdirSync\x2C\x0d\n  stat\x2C\x0d\n  statSync\x2C\x0d\n  symlink\x2C\x0d\n  symlinkSync\x2C\x0d\n  truncate\x2C\x0d\n  truncateSync\x2C\x0d\n  unwatchFile\x2C\x0d\n  unlink\x2C\x0d\n  unlinkSync\x2C\x0d\n  utimes\x2C\x0d\n  utimesSync\x2C\x0d\n  watch\x2C\x0d\n  watchFile\x2C\x0d\n  writeFile\x2C\x0d\n  writeFileSync\x2C\x0d\n  write\x2C\x0d\n  writeSync\x2C\x0d\n  writev\x2C\x0d\n  writevSync\x2C\x0d\n  Dir\x2C\x0d\n  Dirent\x2C\x0d\n  Stats\x2C\x0d\n\x0d\n  get ReadStream() {\x0d\n    lazyLoadStreams();\x0d\n    return ReadStream;\x0d\n  }\x2C\x0d\n\x0d\n  set ReadStream(val) {\x0d\n    ReadStream = val;\x0d\n  }\x2C\x0d\n\x0d\n  get WriteStream() {\x0d\n    lazyLoadStreams();\x0d\n    return WriteStream;\x0d\n  }\x2C\x0d\n\x0d\n  set WriteStream(val) {\x0d\n    WriteStream = val;\x0d\n  }\x2C\x0d\n\x0d\n  // Legacy names... these have to be separate because of how graceful-fs\x0d\n  // (and possibly other) modules monkey patch the values.\x0d\n  get FileReadStream() {\x0d\n    lazyLoadStreams();\x0d\n    return FileReadStream;\x0d\n  }\x2C\x0d\n\x0d\n  set FileReadStream(val) {\x0d\n    FileReadStream = val;\x0d\n  }\x2C\x0d\n\x0d\n  get FileWriteStream() {\x0d\n    lazyLoadStreams();\x0d\n    return FileWriteStream;\x0d\n  }\x2C\x0d\n\x0d\n  set FileWriteStream(val) {\x0d\n    FileWriteStream = val;\x0d\n  }\x2C\x0d\n\x0d\n  // For tests\x0d\n  _toUnixTimestamp: toUnixTimestamp\x0d\n};\x0d\n\x0d\nObjectDefineProperties(fs\x2C {\x0d\n  F_OK: { __proto__: null\x2C enumerable: true\x2C value: F_OK || 0 }\x2C\x0d\n  R_OK: { __proto__: null\x2C enumerable: true\x2C value: R_OK || 0 }\x2C\x0d\n  W_OK: { __proto__: null\x2C enumerable: true\x2C value: W_OK || 0 }\x2C\x0d\n  X_OK: { __proto__: null\x2C enumerable: true\x2C value: X_OK || 0 }\x2C\x0d\n  constants: {\x0d\n    __proto__: null\x2C\x0d\n    configurable: false\x2C\x0d\n    enumerable: true\x2C\x0d\n    value: constants\x0d\n  }\x2C\x0d\n  promises: {\x0d\n    __proto__: null\x2C\x0d\n    configurable: true\x2C\x0d\n    enumerable: true\x2C\x0d\n    get() {\x0d\n      promises ??= require('internal/fs/promises').exports;\x0d\n      return promises;\x0d\n    }\x0d\n  }\x0d\n});\x0d\n
code-source-info,0x8572807fb
tick,0x7ffaeaa0d0e4,367390,0,0x0,3,0x7ff726074500,0x85728077bb,0x8572806da3,0x8572806876,0x8572806421,0xb505335712
code-creation,LazyCompile,10,367598,0x857280e8a8,135,getOptions node:internal/fs/utils:319:20,0x914791d488,~
script-source,79,node:internal/fs/utils,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayIsArray\x2C\x0d\n  BigInt\x2C\x0d\n  Date\x2C\x0d\n  DateNow\x2C\x0d\n  DatePrototypeGetTime\x2C\x0d\n  ErrorCaptureStackTrace\x2C\x0d\n  FunctionPrototypeCall\x2C\x0d\n  Number\x2C\x0d\n  NumberIsFinite\x2C\x0d\n  NumberIsInteger\x2C\x0d\n  MathMin\x2C\x0d\n  MathRound\x2C\x0d\n  ObjectIs\x2C\x0d\n  ObjectPrototypeHasOwnProperty\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  ReflectApply\x2C\x0d\n  ReflectOwnKeys\x2C\x0d\n  RegExpPrototypeSymbolReplace\x2C\x0d\n  StringPrototypeEndsWith\x2C\x0d\n  StringPrototypeIncludes\x2C\x0d\n  Symbol\x2C\x0d\n  TypedArrayPrototypeIncludes\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst { Buffer } = require('buffer');\x0d\nconst {\x0d\n  codes: {\x0d\n    ERR_FS_EISDIR\x2C\x0d\n    ERR_FS_INVALID_SYMLINK_TYPE\x2C\x0d\n    ERR_INCOMPATIBLE_OPTION_PAIR\x2C\x0d\n    ERR_INVALID_ARG_TYPE\x2C\x0d\n    ERR_INVALID_ARG_VALUE\x2C\x0d\n    ERR_OUT_OF_RANGE\x0d\n  }\x2C\x0d\n  hideStackFrames\x2C\x0d\n  uvException\x0d\n} = require('internal/errors');\x0d\nconst {\x0d\n  isArrayBufferView\x2C\x0d\n  isBigInt64Array\x2C\x0d\n  isDate\x2C\x0d\n  isUint8Array\x2C\x0d\n} = require('internal/util/types');\x0d\nconst {\x0d\n  kEmptyObject\x2C\x0d\n  once\x2C\x0d\n} = require('internal/util');\x0d\nconst { toPathIfFileURL } = require('internal/url');\x0d\nconst {\x0d\n  validateAbortSignal\x2C\x0d\n  validateBoolean\x2C\x0d\n  validateFunction\x2C\x0d\n  validateInt32\x2C\x0d\n  validateInteger\x2C\x0d\n  validateObject\x2C\x0d\n  validateUint32\x2C\x0d\n} = require('internal/validators');\x0d\nconst pathModule = require('path');\x0d\nconst kType = Symbol('type');\x0d\nconst kStats = Symbol('stats');\x0d\nconst assert = require('internal/assert');\x0d\n\x0d\nconst {\x0d\n  fs: {\x0d\n    F_OK = 0\x2C\x0d\n    W_OK = 0\x2C\x0d\n    R_OK = 0\x2C\x0d\n    X_OK = 0\x2C\x0d\n    COPYFILE_EXCL\x2C\x0d\n    COPYFILE_FICLONE\x2C\x0d\n    COPYFILE_FICLONE_FORCE\x2C\x0d\n    O_APPEND\x2C\x0d\n    O_CREAT\x2C\x0d\n    O_EXCL\x2C\x0d\n    O_RDONLY\x2C\x0d\n    O_RDWR\x2C\x0d\n    O_SYNC\x2C\x0d\n    O_TRUNC\x2C\x0d\n    O_WRONLY\x2C\x0d\n    S_IFBLK\x2C\x0d\n    S_IFCHR\x2C\x0d\n    S_IFDIR\x2C\x0d\n    S_IFIFO\x2C\x0d\n    S_IFLNK\x2C\x0d\n    S_IFMT\x2C\x0d\n    S_IFREG\x2C\x0d\n    S_IFSOCK\x2C\x0d\n    UV_FS_SYMLINK_DIR\x2C\x0d\n    UV_FS_SYMLINK_JUNCTION\x2C\x0d\n    UV_DIRENT_UNKNOWN\x2C\x0d\n    UV_DIRENT_FILE\x2C\x0d\n    UV_DIRENT_DIR\x2C\x0d\n    UV_DIRENT_LINK\x2C\x0d\n    UV_DIRENT_FIFO\x2C\x0d\n    UV_DIRENT_SOCKET\x2C\x0d\n    UV_DIRENT_CHAR\x2C\x0d\n    UV_DIRENT_BLOCK\x0d\n  }\x2C\x0d\n  os: {\x0d\n    errno: {\x0d\n      EISDIR\x0d\n    }\x0d\n  }\x0d\n} = internalBinding('constants');\x0d\n\x0d\n// The access modes can be any of F_OK\x2C R_OK\x2C W_OK or X_OK. Some might not be\x0d\n// available on specific systems. They can be used in combination as well\x0d\n// (F_OK | R_OK | W_OK | X_OK).\x0d\nconst kMinimumAccessMode = MathMin(F_OK\x2C W_OK\x2C R_OK\x2C X_OK);\x0d\nconst kMaximumAccessMode = F_OK | W_OK | R_OK | X_OK;\x0d\n\x0d\nconst kDefaultCopyMode = 0;\x0d\n// The copy modes can be any of COPYFILE_EXCL\x2C COPYFILE_FICLONE or\x0d\n// COPYFILE_FICLONE_FORCE. They can be used in combination as well\x0d\n// (COPYFILE_EXCL | COPYFILE_FICLONE | COPYFILE_FICLONE_FORCE).\x0d\nconst kMinimumCopyMode = MathMin(\x0d\n  kDefaultCopyMode\x2C\x0d\n  COPYFILE_EXCL\x2C\x0d\n  COPYFILE_FICLONE\x2C\x0d\n  COPYFILE_FICLONE_FORCE\x0d\n);\x0d\nconst kMaximumCopyMode = COPYFILE_EXCL |\x0d\n                         COPYFILE_FICLONE |\x0d\n                         COPYFILE_FICLONE_FORCE;\x0d\n\x0d\n// Most platforms don't allow reads or writes >= 2 GiB.\x0d\n// See https://github.com/libuv/libuv/pull/1501.\x0d\nconst kIoMaxLength = 2 ** 31 - 1;\x0d\n\x0d\n// Use 64kb in case the file type is not a regular file and thus do not know the\x0d\n// actual file size. Increasing the value further results in more frequent over\x0d\n// allocation for small files and consumes CPU time and memory that should be\x0d\n// used else wise.\x0d\n// Use up to 512kb per read otherwise to partition reading big files to prevent\x0d\n// blocking other threads in case the available threads are all in use.\x0d\nconst kReadFileUnknownBufferLength = 64 * 1024;\x0d\nconst kReadFileBufferLength = 512 * 1024;\x0d\n\x0d\nconst kWriteFileMaxChunkSize = 512 * 1024;\x0d\n\x0d\nconst kMaxUserId = 2 ** 32 - 1;\x0d\n\x0d\nconst isWindows = process.platform === 'win32';\x0d\n\x0d\nlet fs;\x0d\nfunction lazyLoadFs() {\x0d\n  if (!fs) {\x0d\n    fs = require('fs');\x0d\n  }\x0d\n  return fs;\x0d\n}\x0d\n\x0d\nfunction assertEncoding(encoding) {\x0d\n  if (encoding && !Buffer.isEncoding(encoding)) {\x0d\n    const reason = 'is invalid encoding';\x0d\n    throw new ERR_INVALID_ARG_VALUE(encoding\x2C 'encoding'\x2C reason);\x0d\n  }\x0d\n}\x0d\n\x0d\nclass Dirent {\x0d\n  constructor(name\x2C type) {\x0d\n    this.name = name;\x0d\n    this[kType] = type;\x0d\n  }\x0d\n\x0d\n  isDirectory() {\x0d\n    return this[kType] === UV_DIRENT_DIR;\x0d\n  }\x0d\n\x0d\n  isFile() {\x0d\n    return this[kType] === UV_DIRENT_FILE;\x0d\n  }\x0d\n\x0d\n  isBlockDevice() {\x0d\n    return this[kType] === UV_DIRENT_BLOCK;\x0d\n  }\x0d\n\x0d\n  isCharacterDevice() {\x0d\n    return this[kType] === UV_DIRENT_CHAR;\x0d\n  }\x0d\n\x0d\n  isSymbolicLink() {\x0d\n    return this[kType] === UV_DIRENT_LINK;\x0d\n  }\x0d\n\x0d\n  isFIFO() {\x0d\n    return this[kType] === UV_DIRENT_FIFO;\x0d\n  }\x0d\n\x0d\n  isSocket() {\x0d\n    return this[kType] === UV_DIRENT_SOCKET;\x0d\n  }\x0d\n}\x0d\n\x0d\nclass DirentFromStats extends Dirent {\x0d\n  constructor(name\x2C stats) {\x0d\n    super(name\x2C null);\x0d\n    this[kStats] = stats;\x0d\n  }\x0d\n}\x0d\n\x0d\nfor (const name of ReflectOwnKeys(Dirent.prototype)) {\x0d\n  if (name === 'constructor') {\x0d\n    continue;\x0d\n  }\x0d\n  DirentFromStats.prototype[name] = function() {\x0d\n    return this[kStats][name]();\x0d\n  };\x0d\n}\x0d\n\x0d\nfunction copyObject(source) {\x0d\n  const target = {};\x0d\n  for (const key in source)\x0d\n    target[key] = source[key];\x0d\n  return target;\x0d\n}\x0d\n\x0d\nconst bufferSep = Buffer.from(pathModule.sep);\x0d\n\x0d\nfunction join(path\x2C name) {\x0d\n  if ((typeof path === 'string' || isUint8Array(path)) &&\x0d\n      name === undefined) {\x0d\n    return path;\x0d\n  }\x0d\n\x0d\n  if (typeof path === 'string' && isUint8Array(name)) {\x0d\n    const pathBuffer = Buffer.from(pathModule.join(path\x2C pathModule.sep));\x0d\n    return Buffer.concat([pathBuffer\x2C name]);\x0d\n  }\x0d\n\x0d\n  if (typeof path === 'string' && typeof name === 'string') {\x0d\n    return pathModule.join(path\x2C name);\x0d\n  }\x0d\n\x0d\n  if (isUint8Array(path) && isUint8Array(name)) {\x0d\n    return Buffer.concat([path\x2C bufferSep\x2C name]);\x0d\n  }\x0d\n\x0d\n  throw new ERR_INVALID_ARG_TYPE(\x0d\n    'path'\x2C ['string'\x2C 'Buffer']\x2C path);\x0d\n}\x0d\n\x0d\nfunction getDirents(path\x2C { 0: names\x2C 1: types }\x2C callback) {\x0d\n  let i;\x0d\n  if (typeof callback === 'function') {\x0d\n    const len = names.length;\x0d\n    let toFinish = 0;\x0d\n    callback = once(callback);\x0d\n    for (i = 0; i < len; i++) {\x0d\n      const type = types[i];\x0d\n      if (type === UV_DIRENT_UNKNOWN) {\x0d\n        const name = names[i];\x0d\n        const idx = i;\x0d\n        toFinish++;\x0d\n        let filepath;\x0d\n        try {\x0d\n          filepath = join(path\x2C name);\x0d\n        } catch (err) {\x0d\n          callback(err);\x0d\n          return;\x0d\n        }\x0d\n        lazyLoadFs().lstat(filepath\x2C (err\x2C stats) => {\x0d\n          if (err) {\x0d\n            callback(err);\x0d\n            return;\x0d\n          }\x0d\n          names[idx] = new DirentFromStats(name\x2C stats);\x0d\n          if (--toFinish === 0) {\x0d\n            callback(null\x2C names);\x0d\n          }\x0d\n        });\x0d\n      } else {\x0d\n        names[i] = new Dirent(names[i]\x2C types[i]);\x0d\n      }\x0d\n    }\x0d\n    if (toFinish === 0) {\x0d\n      callback(null\x2C names);\x0d\n    }\x0d\n  } else {\x0d\n    const len = names.length;\x0d\n    for (i = 0; i < len; i++) {\x0d\n      names[i] = getDirent(path\x2C names[i]\x2C types[i]);\x0d\n    }\x0d\n    return names;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction getDirent(path\x2C name\x2C type\x2C callback) {\x0d\n  if (typeof callback === 'function') {\x0d\n    if (type === UV_DIRENT_UNKNOWN) {\x0d\n      let filepath;\x0d\n      try {\x0d\n        filepath = join(path\x2C name);\x0d\n      } catch (err) {\x0d\n        callback(err);\x0d\n        return;\x0d\n      }\x0d\n      lazyLoadFs().lstat(filepath\x2C (err\x2C stats) => {\x0d\n        if (err) {\x0d\n          callback(err);\x0d\n          return;\x0d\n        }\x0d\n        callback(null\x2C new DirentFromStats(name\x2C stats));\x0d\n      });\x0d\n    } else {\x0d\n      callback(null\x2C new Dirent(name\x2C type));\x0d\n    }\x0d\n  } else if (type === UV_DIRENT_UNKNOWN) {\x0d\n    const stats = lazyLoadFs().lstatSync(join(path\x2C name));\x0d\n    return new DirentFromStats(name\x2C stats);\x0d\n  } else {\x0d\n    return new Dirent(name\x2C type);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction getOptions(options\x2C defaultOptions = kEmptyObject) {\x0d\n  if (options == null || typeof options === 'function') {\x0d\n    return defaultOptions;\x0d\n  }\x0d\n\x0d\n  if (typeof options === 'string') {\x0d\n    defaultOptions = { ...defaultOptions };\x0d\n    defaultOptions.encoding = options;\x0d\n    options = defaultOptions;\x0d\n  } else if (typeof options !== 'object') {\x0d\n    throw new ERR_INVALID_ARG_TYPE('options'\x2C ['string'\x2C 'Object']\x2C options);\x0d\n  }\x0d\n\x0d\n  if (options.encoding !== 'buffer')\x0d\n    assertEncoding(options.encoding);\x0d\n\x0d\n  if (options.signal !== undefined) {\x0d\n    validateAbortSignal(options.signal\x2C 'options.signal');\x0d\n  }\x0d\n  return options;\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {InternalFSBinding.FSSyncContext} ctx\x0d\n */\x0d\nfunction handleErrorFromBinding(ctx) {\x0d\n  if (ctx.errno !== undefined) {  // libuv error numbers\x0d\n    const err = uvException(ctx);\x0d\n    ErrorCaptureStackTrace(err\x2C handleErrorFromBinding);\x0d\n    throw err;\x0d\n  }\x0d\n  if (ctx.error !== undefined) {  // Errors created in C++ land.\x0d\n    // TODO(joyeecheung): currently\x2C ctx.error are encoding errors\x0d\n    // usually caused by memory problems. We need to figure out proper error\x0d\n    // code(s) for this.\x0d\n    ErrorCaptureStackTrace(ctx.error\x2C handleErrorFromBinding);\x0d\n    throw ctx.error;\x0d\n  }\x0d\n}\x0d\n\x0d\n// Check if the path contains null types if it is a string nor Uint8Array\x2C\x0d\n// otherwise return silently.\x0d\nconst nullCheck = hideStackFrames((path\x2C propName\x2C throwError = true) => {\x0d\n  const pathIsString = typeof path === 'string';\x0d\n  const pathIsUint8Array = isUint8Array(path);\x0d\n\x0d\n  // We can only perform meaningful checks on strings and Uint8Arrays.\x0d\n  if ((!pathIsString && !pathIsUint8Array) ||\x0d\n      (pathIsString && !StringPrototypeIncludes(path\x2C '\\u0000')) ||\x0d\n      (pathIsUint8Array && !TypedArrayPrototypeIncludes(path\x2C 0))) {\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  const err = new ERR_INVALID_ARG_VALUE(\x0d\n    propName\x2C\x0d\n    path\x2C\x0d\n    'must be a string or Uint8Array without null bytes'\x0d\n  );\x0d\n  if (throwError) {\x0d\n    throw err;\x0d\n  }\x0d\n  return err;\x0d\n});\x0d\n\x0d\nfunction preprocessSymlinkDestination(path\x2C type\x2C linkPath) {\x0d\n  if (!isWindows) {\x0d\n    // No preprocessing is needed on Unix.\x0d\n    return path;\x0d\n  }\x0d\n  path = '' + path;\x0d\n  if (type === 'junction') {\x0d\n    // Junctions paths need to be absolute and \\\\?\\-prefixed.\x0d\n    // A relative target is relative to the link's parent directory.\x0d\n    path = pathModule.resolve(linkPath\x2C '..'\x2C path);\x0d\n    return pathModule.toNamespacedPath(path);\x0d\n  }\x0d\n  if (pathModule.isAbsolute(path)) {\x0d\n    // If the path is absolute\x2C use the \\\\?\\-prefix to enable long filenames\x0d\n    return pathModule.toNamespacedPath(path);\x0d\n  }\x0d\n  // Windows symlinks don't tolerate forward slashes.\x0d\n  return RegExpPrototypeSymbolReplace(/\\//g\x2C path\x2C '\\\\');\x0d\n}\x0d\n\x0d\n// Constructor for file stats.\x0d\nfunction StatsBase(dev\x2C mode\x2C nlink\x2C uid\x2C gid\x2C rdev\x2C blksize\x2C\x0d\n                   ino\x2C size\x2C blocks) {\x0d\n  this.dev = dev;\x0d\n  this.mode = mode;\x0d\n  this.nlink = nlink;\x0d\n  this.uid = uid;\x0d\n  this.gid = gid;\x0d\n  this.rdev = rdev;\x0d\n  this.blksize = blksize;\x0d\n  this.ino = ino;\x0d\n  this.size = size;\x0d\n  this.blocks = blocks;\x0d\n}\x0d\n\x0d\nStatsBase.prototype.isDirectory = function() {\x0d\n  return this._checkModeProperty(S_IFDIR);\x0d\n};\x0d\n\x0d\nStatsBase.prototype.isFile = function() {\x0d\n  return this._checkModeProperty(S_IFREG);\x0d\n};\x0d\n\x0d\nStatsBase.prototype.isBlockDevice = function() {\x0d\n  return this._checkModeProperty(S_IFBLK);\x0d\n};\x0d\n\x0d\nStatsBase.prototype.isCharacterDevice = function() {\x0d\n  return this._checkModeProperty(S_IFCHR);\x0d\n};\x0d\n\x0d\nStatsBase.prototype.isSymbolicLink = function() {\x0d\n  return this._checkModeProperty(S_IFLNK);\x0d\n};\x0d\n\x0d\nStatsBase.prototype.isFIFO = function() {\x0d\n  return this._checkModeProperty(S_IFIFO);\x0d\n};\x0d\n\x0d\nStatsBase.prototype.isSocket = function() {\x0d\n  return this._checkModeProperty(S_IFSOCK);\x0d\n};\x0d\n\x0d\nconst kNsPerMsBigInt = 10n ** 6n;\x0d\nconst kNsPerSecBigInt = 10n ** 9n;\x0d\nconst kMsPerSec = 10 ** 3;\x0d\nconst kNsPerMs = 10 ** 6;\x0d\nfunction msFromTimeSpec(sec\x2C nsec) {\x0d\n  return sec * kMsPerSec + nsec / kNsPerMs;\x0d\n}\x0d\n\x0d\nfunction nsFromTimeSpecBigInt(sec\x2C nsec) {\x0d\n  return sec * kNsPerSecBigInt + nsec;\x0d\n}\x0d\n\x0d\n// The Date constructor performs Math.floor() on the absolute value\x0d\n// of the timestamp: https://tc39.es/ecma262/#sec-timeclip\x0d\n// Since there may be a precision loss when the timestamp is\x0d\n// converted to a floating point number\x2C we manually round\x0d\n// the timestamp here before passing it to Date().\x0d\n// Refs: https://github.com/nodejs/node/pull/12607\x0d\n// Refs: https://github.com/nodejs/node/pull/43714\x0d\nfunction dateFromMs(ms) {\x0d\n  // Coercing to number\x2C ms can be bigint\x0d\n  return new Date(MathRound(Number(ms)));\x0d\n}\x0d\n\x0d\nfunction BigIntStats(dev\x2C mode\x2C nlink\x2C uid\x2C gid\x2C rdev\x2C blksize\x2C\x0d\n                     ino\x2C size\x2C blocks\x2C\x0d\n                     atimeNs\x2C mtimeNs\x2C ctimeNs\x2C birthtimeNs) {\x0d\n  ReflectApply(StatsBase\x2C this\x2C [dev\x2C mode\x2C nlink\x2C uid\x2C gid\x2C rdev\x2C blksize\x2C\x0d\n                                 ino\x2C size\x2C blocks]);\x0d\n\x0d\n  this.atimeMs = atimeNs / kNsPerMsBigInt;\x0d\n  this.mtimeMs = mtimeNs / kNsPerMsBigInt;\x0d\n  this.ctimeMs = ctimeNs / kNsPerMsBigInt;\x0d\n  this.birthtimeMs = birthtimeNs / kNsPerMsBigInt;\x0d\n  this.atimeNs = atimeNs;\x0d\n  this.mtimeNs = mtimeNs;\x0d\n  this.ctimeNs = ctimeNs;\x0d\n  this.birthtimeNs = birthtimeNs;\x0d\n  this.atime = dateFromMs(this.atimeMs);\x0d\n  this.mtime = dateFromMs(this.mtimeMs);\x0d\n  this.ctime = dateFromMs(this.ctimeMs);\x0d\n  this.birthtime = dateFromMs(this.birthtimeMs);\x0d\n}\x0d\n\x0d\nObjectSetPrototypeOf(BigIntStats.prototype\x2C StatsBase.prototype);\x0d\nObjectSetPrototypeOf(BigIntStats\x2C StatsBase);\x0d\n\x0d\nBigIntStats.prototype._checkModeProperty = function(property) {\x0d\n  if (isWindows && (property === S_IFIFO || property === S_IFBLK ||\x0d\n    property === S_IFSOCK)) {\x0d\n    return false;  // Some types are not available on Windows\x0d\n  }\x0d\n  return (this.mode & BigInt(S_IFMT)) === BigInt(property);\x0d\n};\x0d\n\x0d\nfunction Stats(dev\x2C mode\x2C nlink\x2C uid\x2C gid\x2C rdev\x2C blksize\x2C\x0d\n               ino\x2C size\x2C blocks\x2C\x0d\n               atimeMs\x2C mtimeMs\x2C ctimeMs\x2C birthtimeMs) {\x0d\n  FunctionPrototypeCall(StatsBase\x2C this\x2C dev\x2C mode\x2C nlink\x2C uid\x2C gid\x2C rdev\x2C\x0d\n                        blksize\x2C ino\x2C size\x2C blocks);\x0d\n  this.atimeMs = atimeMs;\x0d\n  this.mtimeMs = mtimeMs;\x0d\n  this.ctimeMs = ctimeMs;\x0d\n  this.birthtimeMs = birthtimeMs;\x0d\n  this.atime = dateFromMs(atimeMs);\x0d\n  this.mtime = dateFromMs(mtimeMs);\x0d\n  this.ctime = dateFromMs(ctimeMs);\x0d\n  this.birthtime = dateFromMs(birthtimeMs);\x0d\n}\x0d\n\x0d\nObjectSetPrototypeOf(Stats.prototype\x2C StatsBase.prototype);\x0d\nObjectSetPrototypeOf(Stats\x2C StatsBase);\x0d\n\x0d\n// HACK: Workaround for https://github.com/standard-things/esm/issues/821.\x0d\n// TODO(ronag): Remove this as soon as `esm` publishes a fixed version.\x0d\nStats.prototype.isFile = StatsBase.prototype.isFile;\x0d\n\x0d\nStats.prototype._checkModeProperty = function(property) {\x0d\n  if (isWindows && (property === S_IFIFO || property === S_IFBLK ||\x0d\n    property === S_IFSOCK)) {\x0d\n    return false;  // Some types are not available on Windows\x0d\n  }\x0d\n  return (this.mode & S_IFMT) === property;\x0d\n};\x0d\n\x0d\n/**\x0d\n * @param {Float64Array | BigInt64Array} stats\x0d\n * @param {number} offset\x0d\n * @returns {BigIntStats | Stats}\x0d\n */\x0d\nfunction getStatsFromBinding(stats\x2C offset = 0) {\x0d\n  if (isBigInt64Array(stats)) {\x0d\n    return new BigIntStats(\x0d\n      stats[0 + offset]\x2C stats[1 + offset]\x2C stats[2 + offset]\x2C\x0d\n      stats[3 + offset]\x2C stats[4 + offset]\x2C stats[5 + offset]\x2C\x0d\n      stats[6 + offset]\x2C stats[7 + offset]\x2C stats[8 + offset]\x2C\x0d\n      stats[9 + offset]\x2C\x0d\n      nsFromTimeSpecBigInt(stats[10 + offset]\x2C stats[11 + offset])\x2C\x0d\n      nsFromTimeSpecBigInt(stats[12 + offset]\x2C stats[13 + offset])\x2C\x0d\n      nsFromTimeSpecBigInt(stats[14 + offset]\x2C stats[15 + offset])\x2C\x0d\n      nsFromTimeSpecBigInt(stats[16 + offset]\x2C stats[17 + offset])\x0d\n    );\x0d\n  }\x0d\n  return new Stats(\x0d\n    stats[0 + offset]\x2C stats[1 + offset]\x2C stats[2 + offset]\x2C\x0d\n    stats[3 + offset]\x2C stats[4 + offset]\x2C stats[5 + offset]\x2C\x0d\n    stats[6 + offset]\x2C stats[7 + offset]\x2C stats[8 + offset]\x2C\x0d\n    stats[9 + offset]\x2C\x0d\n    msFromTimeSpec(stats[10 + offset]\x2C stats[11 + offset])\x2C\x0d\n    msFromTimeSpec(stats[12 + offset]\x2C stats[13 + offset])\x2C\x0d\n    msFromTimeSpec(stats[14 + offset]\x2C stats[15 + offset])\x2C\x0d\n    msFromTimeSpec(stats[16 + offset]\x2C stats[17 + offset])\x0d\n  );\x0d\n}\x0d\n\x0d\nfunction stringToFlags(flags\x2C name = 'flags') {\x0d\n  if (typeof flags === 'number') {\x0d\n    validateInt32(flags\x2C name);\x0d\n    return flags;\x0d\n  }\x0d\n\x0d\n  if (flags == null) {\x0d\n    return O_RDONLY;\x0d\n  }\x0d\n\x0d\n  switch (flags) {\x0d\n    case 'r' : return O_RDONLY;\x0d\n    case 'rs' : // Fall through.\x0d\n    case 'sr' : return O_RDONLY | O_SYNC;\x0d\n    case 'r+' : return O_RDWR;\x0d\n    case 'rs+' : // Fall through.\x0d\n    case 'sr+' : return O_RDWR | O_SYNC;\x0d\n\x0d\n    case 'w' : return O_TRUNC | O_CREAT | O_WRONLY;\x0d\n    case 'wx' : // Fall through.\x0d\n    case 'xw' : return O_TRUNC | O_CREAT | O_WRONLY | O_EXCL;\x0d\n\x0d\n    case 'w+' : return O_TRUNC | O_CREAT | O_RDWR;\x0d\n    case 'wx+': // Fall through.\x0d\n    case 'xw+': return O_TRUNC | O_CREAT | O_RDWR | O_EXCL;\x0d\n\x0d\n    case 'a' : return O_APPEND | O_CREAT | O_WRONLY;\x0d\n    case 'ax' : // Fall through.\x0d\n    case 'xa' : return O_APPEND | O_CREAT | O_WRONLY | O_EXCL;\x0d\n    case 'as' : // Fall through.\x0d\n    case 'sa' : return O_APPEND | O_CREAT | O_WRONLY | O_SYNC;\x0d\n\x0d\n    case 'a+' : return O_APPEND | O_CREAT | O_RDWR;\x0d\n    case 'ax+': // Fall through.\x0d\n    case 'xa+': return O_APPEND | O_CREAT | O_RDWR | O_EXCL;\x0d\n    case 'as+': // Fall through.\x0d\n    case 'sa+': return O_APPEND | O_CREAT | O_RDWR | O_SYNC;\x0d\n  }\x0d\n\x0d\n  throw new ERR_INVALID_ARG_VALUE('flags'\x2C flags);\x0d\n}\x0d\n\x0d\nconst stringToSymlinkType = hideStackFrames((type) => {\x0d\n  let flags = 0;\x0d\n  if (typeof type === 'string') {\x0d\n    switch (type) {\x0d\n      case 'dir':\x0d\n        flags |= UV_FS_SYMLINK_DIR;\x0d\n        break;\x0d\n      case 'junction':\x0d\n        flags |= UV_FS_SYMLINK_JUNCTION;\x0d\n        break;\x0d\n      case 'file':\x0d\n        break;\x0d\n      default:\x0d\n        throw new ERR_FS_INVALID_SYMLINK_TYPE(type);\x0d\n    }\x0d\n  }\x0d\n  return flags;\x0d\n});\x0d\n\x0d\n// converts Date or number to a fractional UNIX timestamp\x0d\nfunction toUnixTimestamp(time\x2C name = 'time') {\x0d\n  // eslint-disable-next-line eqeqeq\x0d\n  if (typeof time === 'string' && +time == time) {\x0d\n    return +time;\x0d\n  }\x0d\n  if (NumberIsFinite(time)) {\x0d\n    if (time < 0) {\x0d\n      return DateNow() / 1000;\x0d\n    }\x0d\n    return time;\x0d\n  }\x0d\n  if (isDate(time)) {\x0d\n    // Convert to 123.456 UNIX timestamp\x0d\n    return DatePrototypeGetTime(time) / 1000;\x0d\n  }\x0d\n  throw new ERR_INVALID_ARG_TYPE(name\x2C ['Date'\x2C 'Time in seconds']\x2C time);\x0d\n}\x0d\n\x0d\nconst validateOffsetLengthRead = hideStackFrames(\x0d\n  (offset\x2C length\x2C bufferLength) => {\x0d\n    if (offset < 0) {\x0d\n      throw new ERR_OUT_OF_RANGE('offset'\x2C '>= 0'\x2C offset);\x0d\n    }\x0d\n    if (length < 0) {\x0d\n      throw new ERR_OUT_OF_RANGE('length'\x2C '>= 0'\x2C length);\x0d\n    }\x0d\n    if (offset + length > bufferLength) {\x0d\n      throw new ERR_OUT_OF_RANGE('length'\x2C\x0d\n                                 `<= ${bufferLength - offset}`\x2C length);\x0d\n    }\x0d\n  }\x0d\n);\x0d\n\x0d\nconst validateOffsetLengthWrite = hideStackFrames(\x0d\n  (offset\x2C length\x2C byteLength) => {\x0d\n    if (offset > byteLength) {\x0d\n      throw new ERR_OUT_OF_RANGE('offset'\x2C `<= ${byteLength}`\x2C offset);\x0d\n    }\x0d\n\x0d\n    if (length > byteLength - offset) {\x0d\n      throw new ERR_OUT_OF_RANGE('length'\x2C `<= ${byteLength - offset}`\x2C length);\x0d\n    }\x0d\n\x0d\n    if (length < 0) {\x0d\n      throw new ERR_OUT_OF_RANGE('length'\x2C '>= 0'\x2C length);\x0d\n    }\x0d\n\x0d\n    validateInt32(length\x2C 'length'\x2C 0);\x0d\n  }\x0d\n);\x0d\n\x0d\nconst validatePath = hideStackFrames((path\x2C propName = 'path') => {\x0d\n  if (typeof path !== 'string' && !isUint8Array(path)) {\x0d\n    throw new ERR_INVALID_ARG_TYPE(propName\x2C ['string'\x2C 'Buffer'\x2C 'URL']\x2C path);\x0d\n  }\x0d\n\x0d\n  const err = nullCheck(path\x2C propName\x2C false);\x0d\n\x0d\n  if (err !== undefined) {\x0d\n    throw err;\x0d\n  }\x0d\n});\x0d\n\x0d\nconst getValidatedPath = hideStackFrames((fileURLOrPath\x2C propName = 'path') => {\x0d\n  const path = toPathIfFileURL(fileURLOrPath);\x0d\n  validatePath(path\x2C propName);\x0d\n  return path;\x0d\n});\x0d\n\x0d\nconst getValidatedFd = hideStackFrames((fd\x2C propName = 'fd') => {\x0d\n  if (ObjectIs(fd\x2C -0)) {\x0d\n    return 0;\x0d\n  }\x0d\n\x0d\n  validateInt32(fd\x2C propName\x2C 0);\x0d\n\x0d\n  return fd;\x0d\n});\x0d\n\x0d\nconst validateBufferArray = hideStackFrames((buffers\x2C propName = 'buffers') => {\x0d\n  if (!ArrayIsArray(buffers))\x0d\n    throw new ERR_INVALID_ARG_TYPE(propName\x2C 'ArrayBufferView[]'\x2C buffers);\x0d\n\x0d\n  for (let i = 0; i < buffers.length; i++) {\x0d\n    if (!isArrayBufferView(buffers[i]))\x0d\n      throw new ERR_INVALID_ARG_TYPE(propName\x2C 'ArrayBufferView[]'\x2C buffers);\x0d\n  }\x0d\n\x0d\n  return buffers;\x0d\n});\x0d\n\x0d\nlet nonPortableTemplateWarn = true;\x0d\n\x0d\nfunction warnOnNonPortableTemplate(template) {\x0d\n  // Template strings passed to the mkdtemp() family of functions should not\x0d\n  // end with 'X' because they are handled inconsistently across platforms.\x0d\n  if (nonPortableTemplateWarn && StringPrototypeEndsWith(template\x2C 'X')) {\x0d\n    process.emitWarning('mkdtemp() templates ending with X are not portable. ' +\x0d\n                        'For details see: https://nodejs.org/api/fs.html');\x0d\n    nonPortableTemplateWarn = false;\x0d\n  }\x0d\n}\x0d\n\x0d\nconst defaultCpOptions = {\x0d\n  dereference: false\x2C\x0d\n  errorOnExist: false\x2C\x0d\n  filter: undefined\x2C\x0d\n  force: true\x2C\x0d\n  preserveTimestamps: false\x2C\x0d\n  recursive: false\x2C\x0d\n  verbatimSymlinks: false\x2C\x0d\n};\x0d\n\x0d\nconst defaultRmOptions = {\x0d\n  recursive: false\x2C\x0d\n  force: false\x2C\x0d\n  retryDelay: 100\x2C\x0d\n  maxRetries: 0\x0d\n};\x0d\n\x0d\nconst defaultRmdirOptions = {\x0d\n  retryDelay: 100\x2C\x0d\n  maxRetries: 0\x2C\x0d\n  recursive: false\x2C\x0d\n};\x0d\n\x0d\nconst validateCpOptions = hideStackFrames((options) => {\x0d\n  if (options === undefined)\x0d\n    return { ...defaultCpOptions };\x0d\n  validateObject(options\x2C 'options');\x0d\n  options = { ...defaultCpOptions\x2C ...options };\x0d\n  validateBoolean(options.dereference\x2C 'options.dereference');\x0d\n  validateBoolean(options.errorOnExist\x2C 'options.errorOnExist');\x0d\n  validateBoolean(options.force\x2C 'options.force');\x0d\n  validateBoolean(options.preserveTimestamps\x2C 'options.preserveTimestamps');\x0d\n  validateBoolean(options.recursive\x2C 'options.recursive');\x0d\n  validateBoolean(options.verbatimSymlinks\x2C 'options.verbatimSymlinks');\x0d\n  if (options.dereference === true && options.verbatimSymlinks === true) {\x0d\n    throw new ERR_INCOMPATIBLE_OPTION_PAIR('dereference'\x2C 'verbatimSymlinks');\x0d\n  }\x0d\n  if (options.filter !== undefined) {\x0d\n    validateFunction(options.filter\x2C 'options.filter');\x0d\n  }\x0d\n  return options;\x0d\n});\x0d\n\x0d\nconst validateRmOptions = hideStackFrames((path\x2C options\x2C expectDir\x2C cb) => {\x0d\n  options = validateRmdirOptions(options\x2C defaultRmOptions);\x0d\n  validateBoolean(options.force\x2C 'options.force');\x0d\n\x0d\n  lazyLoadFs().lstat(path\x2C (err\x2C stats) => {\x0d\n    if (err) {\x0d\n      if (options.force && err.code === 'ENOENT') {\x0d\n        return cb(null\x2C options);\x0d\n      }\x0d\n      return cb(err\x2C options);\x0d\n    }\x0d\n\x0d\n    if (expectDir && !stats.isDirectory()) {\x0d\n      return cb(false);\x0d\n    }\x0d\n\x0d\n    if (stats.isDirectory() && !options.recursive) {\x0d\n      return cb(new ERR_FS_EISDIR({\x0d\n        code: 'EISDIR'\x2C\x0d\n        message: 'is a directory'\x2C\x0d\n        path\x2C\x0d\n        syscall: 'rm'\x2C\x0d\n        errno: EISDIR\x0d\n      }));\x0d\n    }\x0d\n    return cb(null\x2C options);\x0d\n  });\x0d\n});\x0d\n\x0d\nconst validateRmOptionsSync = hideStackFrames((path\x2C options\x2C expectDir) => {\x0d\n  options = validateRmdirOptions(options\x2C defaultRmOptions);\x0d\n  validateBoolean(options.force\x2C 'options.force');\x0d\n\x0d\n  if (!options.force || expectDir || !options.recursive) {\x0d\n    const isDirectory = lazyLoadFs()\x0d\n      .lstatSync(path\x2C { throwIfNoEntry: !options.force })?.isDirectory();\x0d\n\x0d\n    if (expectDir && !isDirectory) {\x0d\n      return false;\x0d\n    }\x0d\n\x0d\n    if (isDirectory && !options.recursive) {\x0d\n      throw new ERR_FS_EISDIR({\x0d\n        code: 'EISDIR'\x2C\x0d\n        message: 'is a directory'\x2C\x0d\n        path\x2C\x0d\n        syscall: 'rm'\x2C\x0d\n        errno: EISDIR\x0d\n      });\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return options;\x0d\n});\x0d\n\x0d\nlet recursiveRmdirWarned = process.noDeprecation;\x0d\nfunction emitRecursiveRmdirWarning() {\x0d\n  if (!recursiveRmdirWarned) {\x0d\n    process.emitWarning(\x0d\n      'In future versions of Node.js\x2C fs.rmdir(path\x2C { recursive: true }) ' +\x0d\n      'will be removed. Use fs.rm(path\x2C { recursive: true }) instead'\x2C\x0d\n      'DeprecationWarning'\x2C\x0d\n      'DEP0147'\x0d\n    );\x0d\n    recursiveRmdirWarned = true;\x0d\n  }\x0d\n}\x0d\n\x0d\nconst validateRmdirOptions = hideStackFrames(\x0d\n  (options\x2C defaults = defaultRmdirOptions) => {\x0d\n    if (options === undefined)\x0d\n      return defaults;\x0d\n    validateObject(options\x2C 'options');\x0d\n\x0d\n    options = { ...defaults\x2C ...options };\x0d\n\x0d\n    validateBoolean(options.recursive\x2C 'options.recursive');\x0d\n    validateInt32(options.retryDelay\x2C 'options.retryDelay'\x2C 0);\x0d\n    validateUint32(options.maxRetries\x2C 'options.maxRetries');\x0d\n\x0d\n    return options;\x0d\n  });\x0d\n\x0d\nconst getValidMode = hideStackFrames((mode\x2C type) => {\x0d\n  let min = kMinimumAccessMode;\x0d\n  let max = kMaximumAccessMode;\x0d\n  let def = F_OK;\x0d\n  if (type === 'copyFile') {\x0d\n    min = kMinimumCopyMode;\x0d\n    max = kMaximumCopyMode;\x0d\n    def = mode || kDefaultCopyMode;\x0d\n  } else {\x0d\n    assert(type === 'access');\x0d\n  }\x0d\n  if (mode == null) {\x0d\n    return def;\x0d\n  }\x0d\n  if (NumberIsInteger(mode) && mode >= min && mode <= max) {\x0d\n    return mode;\x0d\n  }\x0d\n  if (typeof mode !== 'number') {\x0d\n    throw new ERR_INVALID_ARG_TYPE('mode'\x2C 'integer'\x2C mode);\x0d\n  }\x0d\n  throw new ERR_OUT_OF_RANGE(\x0d\n    'mode'\x2C `an integer >= ${min} && <= ${max}`\x2C mode);\x0d\n});\x0d\n\x0d\nconst validateStringAfterArrayBufferView = hideStackFrames((buffer\x2C name) => {\x0d\n  if (typeof buffer === 'string') {\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  if (\x0d\n    typeof buffer === 'object' &&\x0d\n    buffer !== null &&\x0d\n    typeof buffer.toString === 'function' &&\x0d\n    ObjectPrototypeHasOwnProperty(buffer\x2C 'toString')\x0d\n  ) {\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  throw new ERR_INVALID_ARG_TYPE(\x0d\n    name\x2C\x0d\n    ['string'\x2C 'Buffer'\x2C 'TypedArray'\x2C 'DataView']\x2C\x0d\n    buffer\x0d\n  );\x0d\n});\x0d\n\x0d\nconst validatePrimitiveStringAfterArrayBufferView = hideStackFrames((buffer\x2C name) => {\x0d\n  if (typeof buffer !== 'string') {\x0d\n    throw new ERR_INVALID_ARG_TYPE(\x0d\n      name\x2C\x0d\n      ['string'\x2C 'Buffer'\x2C 'TypedArray'\x2C 'DataView']\x2C\x0d\n      buffer\x0d\n    );\x0d\n  }\x0d\n});\x0d\n\x0d\nconst validatePosition = hideStackFrames((position\x2C name) => {\x0d\n  if (typeof position === 'number') {\x0d\n    validateInteger(position\x2C name);\x0d\n  } else if (typeof position === 'bigint') {\x0d\n    if (!(position >= -(2n ** 63n) && position <= 2n ** 63n - 1n)) {\x0d\n      throw new ERR_OUT_OF_RANGE(name\x2C\x0d\n                                 `>= ${-(2n ** 63n)} && <= ${2n ** 63n - 1n}`\x2C\x0d\n                                 position);\x0d\n    }\x0d\n  } else {\x0d\n    throw new ERR_INVALID_ARG_TYPE(name\x2C ['integer'\x2C 'bigint']\x2C position);\x0d\n  }\x0d\n});\x0d\n\x0d\nmodule.exports = {\x0d\n  constants: {\x0d\n    kIoMaxLength\x2C\x0d\n    kMaxUserId\x2C\x0d\n    kReadFileBufferLength\x2C\x0d\n    kReadFileUnknownBufferLength\x2C\x0d\n    kWriteFileMaxChunkSize\x2C\x0d\n  }\x2C\x0d\n  assertEncoding\x2C\x0d\n  BigIntStats\x2C  // for testing\x0d\n  copyObject\x2C\x0d\n  Dirent\x2C\x0d\n  emitRecursiveRmdirWarning\x2C\x0d\n  getDirent\x2C\x0d\n  getDirents\x2C\x0d\n  getOptions\x2C\x0d\n  getValidatedFd\x2C\x0d\n  getValidatedPath\x2C\x0d\n  getValidMode\x2C\x0d\n  handleErrorFromBinding\x2C\x0d\n  nullCheck\x2C\x0d\n  preprocessSymlinkDestination\x2C\x0d\n  realpathCacheKey: Symbol('realpathCacheKey')\x2C\x0d\n  getStatsFromBinding\x2C\x0d\n  stringToFlags\x2C\x0d\n  stringToSymlinkType\x2C\x0d\n  Stats\x2C\x0d\n  toUnixTimestamp\x2C\x0d\n  validateBufferArray\x2C\x0d\n  validateCpOptions\x2C\x0d\n  validateOffsetLengthRead\x2C\x0d\n  validateOffsetLengthWrite\x2C\x0d\n  validatePath\x2C\x0d\n  validatePosition\x2C\x0d\n  validateRmOptions\x2C\x0d\n  validateRmOptionsSync\x2C\x0d\n  validateRmdirOptions\x2C\x0d\n  validateStringAfterArrayBufferView\x2C\x0d\n  validatePrimitiveStringAfterArrayBufferView\x2C\x0d\n  warnOnNonPortableTemplate\x0d\n};\x0d\n
code-source-info,0x857280e8a8,79,7609,8235,C9O7636C16O7655C27O7716C29O7738C30O7749C36O7789C41O7834C43O7858C47O7874C54O7910C60O7950C78O7956C83O7950C84O8046C91O8055C96O8074C99O8097C104O8074C108O8125C114O8154C119O8182C127O8154C132O8217C134O8232,,
code-creation,LazyCompile,10,369634,0x85728108a8,48,assertEncoding node:internal/fs/utils:156:24,0x914791cf60,~
code-source-info,0x85728108a8,79,3755,3937,C0O3771C6O3788C9O3795C14O3795C21O3839C24O3867C40O3873C45O3867C47O3936,,
code-creation,LazyCompile,10,369811,0x85728109c0,20,toPathIfFileURL node:internal/url:1569:25,0x914790fb30,~
script-source,76,node:internal/url,'use strict';\x0d\n\x0d\nconst {\x0d\n  Array\x2C\x0d\n  ArrayPrototypeJoin\x2C\x0d\n  ArrayPrototypeMap\x2C\x0d\n  ArrayPrototypePush\x2C\x0d\n  ArrayPrototypeReduce\x2C\x0d\n  ArrayPrototypeSlice\x2C\x0d\n  FunctionPrototypeBind\x2C\x0d\n  Int8Array\x2C\x0d\n  Number\x2C\x0d\n  ObjectCreate\x2C\x0d\n  ObjectDefineProperties\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectGetOwnPropertySymbols\x2C\x0d\n  ObjectGetPrototypeOf\x2C\x0d\n  ObjectKeys\x2C\x0d\n  ReflectApply\x2C\x0d\n  ReflectGetOwnPropertyDescriptor\x2C\x0d\n  ReflectOwnKeys\x2C\x0d\n  String\x2C\x0d\n  StringPrototypeCharCodeAt\x2C\x0d\n  StringPrototypeIncludes\x2C\x0d\n  StringPrototypeReplace\x2C\x0d\n  StringPrototypeReplaceAll\x2C\x0d\n  StringPrototypeSlice\x2C\x0d\n  StringPrototypeSplit\x2C\x0d\n  StringPrototypeStartsWith\x2C\x0d\n  Symbol\x2C\x0d\n  SymbolIterator\x2C\x0d\n  SymbolToStringTag\x2C\x0d\n  decodeURIComponent\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst { inspect } = require('internal/util/inspect');\x0d\nconst {\x0d\n  encodeStr\x2C\x0d\n  hexTable\x2C\x0d\n  isHexTable\x0d\n} = require('internal/querystring');\x0d\n\x0d\nconst {\x0d\n  getConstructorOf\x2C\x0d\n  removeColors\x2C\x0d\n  toUSVString\x2C\x0d\n  kEnumerableProperty\x2C\x0d\n} = require('internal/util');\x0d\n\x0d\nconst {\x0d\n  codes: {\x0d\n    ERR_ARG_NOT_ITERABLE\x2C\x0d\n    ERR_INVALID_ARG_TYPE\x2C\x0d\n    ERR_INVALID_ARG_VALUE\x2C\x0d\n    ERR_INVALID_FILE_URL_HOST\x2C\x0d\n    ERR_INVALID_FILE_URL_PATH\x2C\x0d\n    ERR_INVALID_THIS\x2C\x0d\n    ERR_INVALID_TUPLE\x2C\x0d\n    ERR_INVALID_URL\x2C\x0d\n    ERR_INVALID_URL_SCHEME\x2C\x0d\n    ERR_MISSING_ARGS\x2C\x0d\n    ERR_NO_CRYPTO\x2C\x0d\n  }\x2C\x0d\n} = require('internal/errors');\x0d\nconst {\x0d\n  CHAR_AMPERSAND\x2C\x0d\n  CHAR_BACKWARD_SLASH\x2C\x0d\n  CHAR_EQUAL\x2C\x0d\n  CHAR_FORWARD_SLASH\x2C\x0d\n  CHAR_LOWERCASE_A\x2C\x0d\n  CHAR_LOWERCASE_Z\x2C\x0d\n  CHAR_PERCENT\x2C\x0d\n  CHAR_PLUS\x0d\n} = require('internal/constants');\x0d\nconst path = require('path');\x0d\n\x0d\nconst {\x0d\n  validateFunction\x2C\x0d\n  validateObject\x2C\x0d\n} = require('internal/validators');\x0d\n\x0d\nconst querystring = require('querystring');\x0d\n\x0d\nconst { platform } = process;\x0d\nconst isWindows = platform === 'win32';\x0d\n\x0d\nconst {\x0d\n  domainToASCII: _domainToASCII\x2C\x0d\n  domainToUnicode: _domainToUnicode\x2C\x0d\n  encodeAuth\x2C\x0d\n  parse\x2C\x0d\n  setURLConstructor\x2C\x0d\n  URL_FLAGS_CANNOT_BE_BASE\x2C\x0d\n  URL_FLAGS_HAS_FRAGMENT\x2C\x0d\n  URL_FLAGS_HAS_HOST\x2C\x0d\n  URL_FLAGS_HAS_PASSWORD\x2C\x0d\n  URL_FLAGS_HAS_PATH\x2C\x0d\n  URL_FLAGS_HAS_QUERY\x2C\x0d\n  URL_FLAGS_HAS_USERNAME\x2C\x0d\n  URL_FLAGS_IS_DEFAULT_SCHEME_PORT\x2C\x0d\n  URL_FLAGS_SPECIAL\x2C\x0d\n  kFragment\x2C\x0d\n  kHost\x2C\x0d\n  kHostname\x2C\x0d\n  kPathStart\x2C\x0d\n  kPort\x2C\x0d\n  kQuery\x2C\x0d\n  kSchemeStart\x0d\n} = internalBinding('url');\x0d\n\x0d\nconst {\x0d\n  storeDataObject\x2C\x0d\n  revokeDataObject\x2C\x0d\n} = internalBinding('blob');\x0d\n\x0d\nconst context = Symbol('context');\x0d\nconst cannotBeBase = Symbol('cannot-be-base');\x0d\nconst cannotHaveUsernamePasswordPort =\x0d\n    Symbol('cannot-have-username-password-port');\x0d\nconst special = Symbol('special');\x0d\nconst searchParams = Symbol('query');\x0d\nconst kFormat = Symbol('format');\x0d\n\x0d\nlet blob;\x0d\nlet cryptoRandom;\x0d\n\x0d\nfunction lazyBlob() {\x0d\n  blob ??= require('internal/blob');\x0d\n  return blob;\x0d\n}\x0d\n\x0d\nfunction lazyCryptoRandom() {\x0d\n  try {\x0d\n    cryptoRandom ??= require('internal/crypto/random');\x0d\n  } catch {\x0d\n    // If Node.js built without crypto support\x2C we'll fall\x0d\n    // through here and handle it later.\x0d\n  }\x0d\n  return cryptoRandom;\x0d\n}\x0d\n\x0d\n// https://tc39.github.io/ecma262/#sec-%iteratorprototype%-object\x0d\nconst IteratorPrototype = ObjectGetPrototypeOf(\x0d\n  ObjectGetPrototypeOf([][SymbolIterator]())\x0d\n);\x0d\n\x0d\n// Refs: https://html.spec.whatwg.org/multipage/browsers.html#concept-origin-opaque\x0d\nconst kOpaqueOrigin = 'null';\x0d\n\x0d\n// Refs: https://html.spec.whatwg.org/multipage/browsers.html#ascii-serialisation-of-an-origin\x0d\nfunction serializeTupleOrigin(scheme\x2C host\x2C port) {\x0d\n  return `${scheme}//${host}${port === null ? '' : `:${port}`}`;\x0d\n}\x0d\n\x0d\n// This class provides the internal state of a URL object. An instance of this\x0d\n// class is stored in every URL object and is accessed internally by setters\x0d\n// and getters. It roughly corresponds to the concept of a URL record in the\x0d\n// URL Standard\x2C with a few differences. It is also the object transported to\x0d\n// the C++ binding.\x0d\n// Refs: https://url.spec.whatwg.org/#concept-url\x0d\nclass URLContext {\x0d\n  constructor() {\x0d\n    this.flags = 0;\x0d\n    this.scheme = ':';\x0d\n    this.username = '';\x0d\n    this.password = '';\x0d\n    this.host = null;\x0d\n    this.port = null;\x0d\n    this.path = [];\x0d\n    this.query = null;\x0d\n    this.fragment = null;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction isURLSearchParams(self) {\x0d\n  return self && self[searchParams] && !self[searchParams][searchParams];\x0d\n}\x0d\n\x0d\nclass URLSearchParams {\x0d\n  // URL Standard says the default value is ''\x2C but as undefined and '' have\x0d\n  // the same result\x2C undefined is used to prevent unnecessary parsing.\x0d\n  // Default parameter is necessary to keep URLSearchParams.length === 0 in\x0d\n  // accordance with Web IDL spec.\x0d\n  constructor(init = undefined) {\x0d\n    if (init === null || init === undefined) {\x0d\n      this[searchParams] = [];\x0d\n    } else if (typeof init === 'object' || typeof init === 'function') {\x0d\n      const method = init[SymbolIterator];\x0d\n      if (method === this[SymbolIterator]) {\x0d\n        // While the spec does not have this branch\x2C we can use it as a\x0d\n        // shortcut to avoid having to go through the costly generic iterator.\x0d\n        const childParams = init[searchParams];\x0d\n        this[searchParams] = childParams.slice();\x0d\n      } else if (method !== null && method !== undefined) {\x0d\n        if (typeof method !== 'function') {\x0d\n          throw new ERR_ARG_NOT_ITERABLE('Query pairs');\x0d\n        }\x0d\n\x0d\n        // Sequence<sequence<USVString>>\x0d\n        // Note: per spec we have to first exhaust the lists then process them\x0d\n        const pairs = [];\x0d\n        for (const pair of init) {\x0d\n          if ((typeof pair !== 'object' && typeof pair !== 'function') ||\x0d\n              pair === null ||\x0d\n              typeof pair[SymbolIterator] !== 'function') {\x0d\n            throw new ERR_INVALID_TUPLE('Each query pair'\x2C '[name\x2C value]');\x0d\n          }\x0d\n          const convertedPair = [];\x0d\n          for (const element of pair)\x0d\n            ArrayPrototypePush(convertedPair\x2C toUSVString(element));\x0d\n          ArrayPrototypePush(pairs\x2C convertedPair);\x0d\n        }\x0d\n\x0d\n        this[searchParams] = [];\x0d\n        for (const pair of pairs) {\x0d\n          if (pair.length !== 2) {\x0d\n            throw new ERR_INVALID_TUPLE('Each query pair'\x2C '[name\x2C value]');\x0d\n          }\x0d\n          ArrayPrototypePush(this[searchParams]\x2C pair[0]\x2C pair[1]);\x0d\n        }\x0d\n      } else {\x0d\n        // Record<USVString\x2C USVString>\x0d\n        // Need to use reflection APIs for full spec compliance.\x0d\n        const visited = {};\x0d\n        this[searchParams] = [];\x0d\n        const keys = ReflectOwnKeys(init);\x0d\n        for (let i = 0; i < keys.length; i++) {\x0d\n          const key = keys[i];\x0d\n          const desc = ReflectGetOwnPropertyDescriptor(init\x2C key);\x0d\n          if (desc !== undefined && desc.enumerable) {\x0d\n            const typedKey = toUSVString(key);\x0d\n            const typedValue = toUSVString(init[key]);\x0d\n\x0d\n            // Two different key may result same after `toUSVString()`\x2C we only\x0d\n            // leave the later one. Refers to WPT.\x0d\n            if (visited[typedKey] !== undefined) {\x0d\n              this[searchParams][visited[typedKey]] = typedValue;\x0d\n            } else {\x0d\n              visited[typedKey] = ArrayPrototypePush(this[searchParams]\x2C\x0d\n                                                     typedKey\x2C\x0d\n                                                     typedValue) - 1;\x0d\n            }\x0d\n          }\x0d\n        }\x0d\n      }\x0d\n    } else {\x0d\n      // USVString\x0d\n      init = toUSVString(init);\x0d\n      if (init[0] === '?') init = init.slice(1);\x0d\n      initSearchParams(this\x2C init);\x0d\n    }\x0d\n\x0d\n    // "associated url object"\x0d\n    this[context] = null;\x0d\n  }\x0d\n\x0d\n  [inspect.custom](recurseTimes\x2C ctx) {\x0d\n    if (!isURLSearchParams(this))\x0d\n      throw new ERR_INVALID_THIS('URLSearchParams');\x0d\n\x0d\n    if (typeof recurseTimes === 'number' && recurseTimes < 0)\x0d\n      return ctx.stylize('[Object]'\x2C 'special');\x0d\n\x0d\n    const separator = '\x2C ';\x0d\n    const innerOpts = { ...ctx };\x0d\n    if (recurseTimes !== null) {\x0d\n      innerOpts.depth = recurseTimes - 1;\x0d\n    }\x0d\n    const innerInspect = (v) => inspect(v\x2C innerOpts);\x0d\n\x0d\n    const list = this[searchParams];\x0d\n    const output = [];\x0d\n    for (let i = 0; i < list.length; i += 2)\x0d\n      ArrayPrototypePush(\x0d\n        output\x2C\x0d\n        `${innerInspect(list[i])} => ${innerInspect(list[i + 1])}`);\x0d\n\x0d\n    const length = ArrayPrototypeReduce(\x0d\n      output\x2C\x0d\n      (prev\x2C cur) => prev + removeColors(cur).length + separator.length\x2C\x0d\n      -separator.length\x0d\n    );\x0d\n    if (length > ctx.breakLength) {\x0d\n      return `${this.constructor.name} {\\n` +\x0d\n      `  ${ArrayPrototypeJoin(output\x2C '\x2C\\n  ')} }`;\x0d\n    } else if (output.length) {\x0d\n      return `${this.constructor.name} { ` +\x0d\n      `${ArrayPrototypeJoin(output\x2C separator)} }`;\x0d\n    }\x0d\n    return `${this.constructor.name} {}`;\x0d\n  }\x0d\n\x0d\n  append(name\x2C value) {\x0d\n    if (!isURLSearchParams(this))\x0d\n      throw new ERR_INVALID_THIS('URLSearchParams');\x0d\n\x0d\n    if (arguments.length < 2) {\x0d\n      throw new ERR_MISSING_ARGS('name'\x2C 'value');\x0d\n    }\x0d\n\x0d\n    name = toUSVString(name);\x0d\n    value = toUSVString(value);\x0d\n    ArrayPrototypePush(this[searchParams]\x2C name\x2C value);\x0d\n    update(this[context]\x2C this);\x0d\n  }\x0d\n\x0d\n  delete(name) {\x0d\n    if (!isURLSearchParams(this))\x0d\n      throw new ERR_INVALID_THIS('URLSearchParams');\x0d\n\x0d\n    if (arguments.length < 1) {\x0d\n      throw new ERR_MISSING_ARGS('name');\x0d\n    }\x0d\n\x0d\n    const list = this[searchParams];\x0d\n    name = toUSVString(name);\x0d\n    for (let i = 0; i < list.length;) {\x0d\n      const cur = list[i];\x0d\n      if (cur === name) {\x0d\n        list.splice(i\x2C 2);\x0d\n      } else {\x0d\n        i += 2;\x0d\n      }\x0d\n    }\x0d\n    update(this[context]\x2C this);\x0d\n  }\x0d\n\x0d\n  get(name) {\x0d\n    if (!isURLSearchParams(this))\x0d\n      throw new ERR_INVALID_THIS('URLSearchParams');\x0d\n\x0d\n    if (arguments.length < 1) {\x0d\n      throw new ERR_MISSING_ARGS('name');\x0d\n    }\x0d\n\x0d\n    const list = this[searchParams];\x0d\n    name = toUSVString(name);\x0d\n    for (let i = 0; i < list.length; i += 2) {\x0d\n      if (list[i] === name) {\x0d\n        return list[i + 1];\x0d\n      }\x0d\n    }\x0d\n    return null;\x0d\n  }\x0d\n\x0d\n  getAll(name) {\x0d\n    if (!isURLSearchParams(this))\x0d\n      throw new ERR_INVALID_THIS('URLSearchParams');\x0d\n\x0d\n    if (arguments.length < 1) {\x0d\n      throw new ERR_MISSING_ARGS('name');\x0d\n    }\x0d\n\x0d\n    const list = this[searchParams];\x0d\n    const values = [];\x0d\n    name = toUSVString(name);\x0d\n    for (let i = 0; i < list.length; i += 2) {\x0d\n      if (list[i] === name) {\x0d\n        values.push(list[i + 1]);\x0d\n      }\x0d\n    }\x0d\n    return values;\x0d\n  }\x0d\n\x0d\n  has(name) {\x0d\n    if (!isURLSearchParams(this))\x0d\n      throw new ERR_INVALID_THIS('URLSearchParams');\x0d\n\x0d\n    if (arguments.length < 1) {\x0d\n      throw new ERR_MISSING_ARGS('name');\x0d\n    }\x0d\n\x0d\n    const list = this[searchParams];\x0d\n    name = toUSVString(name);\x0d\n    for (let i = 0; i < list.length; i += 2) {\x0d\n      if (list[i] === name) {\x0d\n        return true;\x0d\n      }\x0d\n    }\x0d\n    return false;\x0d\n  }\x0d\n\x0d\n  set(name\x2C value) {\x0d\n    if (!isURLSearchParams(this))\x0d\n      throw new ERR_INVALID_THIS('URLSearchParams');\x0d\n\x0d\n    if (arguments.length < 2) {\x0d\n      throw new ERR_MISSING_ARGS('name'\x2C 'value');\x0d\n    }\x0d\n\x0d\n    const list = this[searchParams];\x0d\n    name = toUSVString(name);\x0d\n    value = toUSVString(value);\x0d\n\x0d\n    // If there are any name-value pairs whose name is `name`\x2C in `list`\x2C set\x0d\n    // the value of the first such name-value pair to `value` and remove the\x0d\n    // others.\x0d\n    let found = false;\x0d\n    for (let i = 0; i < list.length;) {\x0d\n      const cur = list[i];\x0d\n      if (cur === name) {\x0d\n        if (!found) {\x0d\n          list[i + 1] = value;\x0d\n          found = true;\x0d\n          i += 2;\x0d\n        } else {\x0d\n          list.splice(i\x2C 2);\x0d\n        }\x0d\n      } else {\x0d\n        i += 2;\x0d\n      }\x0d\n    }\x0d\n\x0d\n    // Otherwise\x2C append a new name-value pair whose name is `name` and value\x0d\n    // is `value`\x2C to `list`.\x0d\n    if (!found) {\x0d\n      ArrayPrototypePush(list\x2C name\x2C value);\x0d\n    }\x0d\n\x0d\n    update(this[context]\x2C this);\x0d\n  }\x0d\n\x0d\n  sort() {\x0d\n    const a = this[searchParams];\x0d\n    const len = a.length;\x0d\n\x0d\n    if (len <= 2) {\x0d\n      // Nothing needs to be done.\x0d\n    } else if (len < 100) {\x0d\n      // 100 is found through testing.\x0d\n      // Simple stable in-place insertion sort\x0d\n      // Derived from v8/src/js/array.js\x0d\n      for (let i = 2; i < len; i += 2) {\x0d\n        const curKey = a[i];\x0d\n        const curVal = a[i + 1];\x0d\n        let j;\x0d\n        for (j = i - 2; j >= 0; j -= 2) {\x0d\n          if (a[j] > curKey) {\x0d\n            a[j + 2] = a[j];\x0d\n            a[j + 3] = a[j + 1];\x0d\n          } else {\x0d\n            break;\x0d\n          }\x0d\n        }\x0d\n        a[j + 2] = curKey;\x0d\n        a[j + 3] = curVal;\x0d\n      }\x0d\n    } else {\x0d\n      // Bottom-up iterative stable merge sort\x0d\n      const lBuffer = new Array(len);\x0d\n      const rBuffer = new Array(len);\x0d\n      for (let step = 2; step < len; step *= 2) {\x0d\n        for (let start = 0; start < len - 2; start += 2 * step) {\x0d\n          const mid = start + step;\x0d\n          let end = mid + step;\x0d\n          end = end < len ? end : len;\x0d\n          if (mid > end)\x0d\n            continue;\x0d\n          merge(a\x2C start\x2C mid\x2C end\x2C lBuffer\x2C rBuffer);\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n\x0d\n    update(this[context]\x2C this);\x0d\n  }\x0d\n\x0d\n  // https://heycam.github.io/webidl/#es-iterators\x0d\n  // Define entries here rather than [Symbol.iterator] as the function name\x0d\n  // must be set to `entries`.\x0d\n  entries() {\x0d\n    if (!isURLSearchParams(this))\x0d\n      throw new ERR_INVALID_THIS('URLSearchParams');\x0d\n\x0d\n    return createSearchParamsIterator(this\x2C 'key+value');\x0d\n  }\x0d\n\x0d\n  forEach(callback\x2C thisArg = undefined) {\x0d\n    if (!isURLSearchParams(this))\x0d\n      throw new ERR_INVALID_THIS('URLSearchParams');\x0d\n\x0d\n    validateFunction(callback\x2C 'callback');\x0d\n\x0d\n    let list = this[searchParams];\x0d\n\x0d\n    let i = 0;\x0d\n    while (i < list.length) {\x0d\n      const key = list[i];\x0d\n      const value = list[i + 1];\x0d\n      callback.call(thisArg\x2C value\x2C key\x2C this);\x0d\n      // In case the URL object's `search` is updated\x0d\n      list = this[searchParams];\x0d\n      i += 2;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  // https://heycam.github.io/webidl/#es-iterable\x0d\n  keys() {\x0d\n    if (!isURLSearchParams(this))\x0d\n      throw new ERR_INVALID_THIS('URLSearchParams');\x0d\n\x0d\n    return createSearchParamsIterator(this\x2C 'key');\x0d\n  }\x0d\n\x0d\n  values() {\x0d\n    if (!isURLSearchParams(this))\x0d\n      throw new ERR_INVALID_THIS('URLSearchParams');\x0d\n\x0d\n    return createSearchParamsIterator(this\x2C 'value');\x0d\n  }\x0d\n\x0d\n  // https://heycam.github.io/webidl/#es-stringifier\x0d\n  // https://url.spec.whatwg.org/#urlsearchparams-stringification-behavior\x0d\n  toString() {\x0d\n    if (!isURLSearchParams(this))\x0d\n      throw new ERR_INVALID_THIS('URLSearchParams');\x0d\n\x0d\n    return serializeParams(this[searchParams]);\x0d\n  }\x0d\n}\x0d\n\x0d\nObjectDefineProperties(URLSearchParams.prototype\x2C {\x0d\n  append: kEnumerableProperty\x2C\x0d\n  delete: kEnumerableProperty\x2C\x0d\n  get: kEnumerableProperty\x2C\x0d\n  getAll: kEnumerableProperty\x2C\x0d\n  has: kEnumerableProperty\x2C\x0d\n  set: kEnumerableProperty\x2C\x0d\n  sort: kEnumerableProperty\x2C\x0d\n  entries: kEnumerableProperty\x2C\x0d\n  forEach: kEnumerableProperty\x2C\x0d\n  keys: kEnumerableProperty\x2C\x0d\n  values: kEnumerableProperty\x2C\x0d\n  toString: kEnumerableProperty\x2C\x0d\n  [SymbolToStringTag]: { __proto__: null\x2C configurable: true\x2C value: 'URLSearchParams' }\x2C\x0d\n\x0d\n  // https://heycam.github.io/webidl/#es-iterable-entries\x0d\n  [SymbolIterator]: {\x0d\n    __proto__: null\x2C\x0d\n    configurable: true\x2C\x0d\n    writable: true\x2C\x0d\n    value: URLSearchParams.prototype.entries\x2C\x0d\n  }\x2C\x0d\n});\x0d\n\x0d\nfunction onParseComplete(flags\x2C protocol\x2C username\x2C password\x2C\x0d\n                         host\x2C port\x2C path\x2C query\x2C fragment) {\x0d\n  const ctx = this[context];\x0d\n  ctx.flags = flags;\x0d\n  ctx.scheme = protocol;\x0d\n  ctx.username = (flags & URL_FLAGS_HAS_USERNAME) !== 0 ? username : '';\x0d\n  ctx.password = (flags & URL_FLAGS_HAS_PASSWORD) !== 0 ? password : '';\x0d\n  ctx.port = port;\x0d\n  ctx.path = (flags & URL_FLAGS_HAS_PATH) !== 0 ? path : [];\x0d\n  ctx.query = query;\x0d\n  ctx.fragment = fragment;\x0d\n  ctx.host = host;\x0d\n  if (!this[searchParams]) { // Invoked from URL constructor\x0d\n    this[searchParams] = new URLSearchParams();\x0d\n    this[searchParams][context] = this;\x0d\n  }\x0d\n  initSearchParams(this[searchParams]\x2C query);\x0d\n}\x0d\n\x0d\nfunction onParseError(input\x2C flags) {\x0d\n  throw new ERR_INVALID_URL(input);\x0d\n}\x0d\n\x0d\nfunction onParseProtocolComplete(flags\x2C protocol\x2C username\x2C password\x2C\x0d\n                                 host\x2C port\x2C path\x2C query\x2C fragment) {\x0d\n  const ctx = this[context];\x0d\n  if ((flags & URL_FLAGS_SPECIAL) !== 0) {\x0d\n    ctx.flags |= URL_FLAGS_SPECIAL;\x0d\n  } else {\x0d\n    ctx.flags &= ~URL_FLAGS_SPECIAL;\x0d\n  }\x0d\n  ctx.scheme = protocol;\x0d\n  ctx.port = port;\x0d\n}\x0d\n\x0d\nfunction onParseHostnameComplete(flags\x2C protocol\x2C username\x2C password\x2C\x0d\n                                 host\x2C port\x2C path\x2C query\x2C fragment) {\x0d\n  const ctx = this[context];\x0d\n  if ((flags & URL_FLAGS_HAS_HOST) !== 0) {\x0d\n    ctx.host = host;\x0d\n    ctx.flags |= URL_FLAGS_HAS_HOST;\x0d\n  } else {\x0d\n    ctx.host = null;\x0d\n    ctx.flags &= ~URL_FLAGS_HAS_HOST;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction onParsePortComplete(flags\x2C protocol\x2C username\x2C password\x2C\x0d\n                             host\x2C port\x2C path\x2C query\x2C fragment) {\x0d\n  this[context].port = port;\x0d\n}\x0d\n\x0d\nfunction onParseHostComplete(flags\x2C protocol\x2C username\x2C password\x2C\x0d\n                             host\x2C port\x2C path\x2C query\x2C fragment) {\x0d\n  ReflectApply(onParseHostnameComplete\x2C this\x2C arguments);\x0d\n  if (port !== null || ((flags & URL_FLAGS_IS_DEFAULT_SCHEME_PORT) !== 0))\x0d\n    ReflectApply(onParsePortComplete\x2C this\x2C arguments);\x0d\n}\x0d\n\x0d\nfunction onParsePathComplete(flags\x2C protocol\x2C username\x2C password\x2C\x0d\n                             host\x2C port\x2C path\x2C query\x2C fragment) {\x0d\n  const ctx = this[context];\x0d\n  if ((flags & URL_FLAGS_HAS_PATH) !== 0) {\x0d\n    ctx.path = path;\x0d\n    ctx.flags |= URL_FLAGS_HAS_PATH;\x0d\n  } else {\x0d\n    ctx.path = [];\x0d\n    ctx.flags &= ~URL_FLAGS_HAS_PATH;\x0d\n  }\x0d\n\x0d\n  // The C++ binding may set host to empty string.\x0d\n  if ((flags & URL_FLAGS_HAS_HOST) !== 0) {\x0d\n    ctx.host = host;\x0d\n    ctx.flags |= URL_FLAGS_HAS_HOST;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction onParseSearchComplete(flags\x2C protocol\x2C username\x2C password\x2C\x0d\n                               host\x2C port\x2C path\x2C query\x2C fragment) {\x0d\n  this[context].query = query;\x0d\n}\x0d\n\x0d\nfunction onParseHashComplete(flags\x2C protocol\x2C username\x2C password\x2C\x0d\n                             host\x2C port\x2C path\x2C query\x2C fragment) {\x0d\n  this[context].fragment = fragment;\x0d\n}\x0d\n\x0d\nfunction isURLThis(self) {\x0d\n  return (self !== undefined && self !== null && self[context] !== undefined);\x0d\n}\x0d\n\x0d\nclass URL {\x0d\n  constructor(input\x2C base = undefined) {\x0d\n    // toUSVString is not needed.\x0d\n    input = `${input}`;\x0d\n    let base_context;\x0d\n    if (base !== undefined) {\x0d\n      base_context = new URL(base)[context];\x0d\n    }\x0d\n    this[context] = new URLContext();\x0d\n    parse(input\x2C -1\x2C base_context\x2C undefined\x2C\x0d\n          FunctionPrototypeBind(onParseComplete\x2C this)\x2C\x0d\n          FunctionPrototypeBind(onParseError\x2C this\x2C input));\x0d\n  }\x0d\n\x0d\n  get [special]() {\x0d\n    return (this[context].flags & URL_FLAGS_SPECIAL) !== 0;\x0d\n  }\x0d\n\x0d\n  get [cannotBeBase]() {\x0d\n    return (this[context].flags & URL_FLAGS_CANNOT_BE_BASE) !== 0;\x0d\n  }\x0d\n\x0d\n  // https://url.spec.whatwg.org/#cannot-have-a-username-password-port\x0d\n  get [cannotHaveUsernamePasswordPort]() {\x0d\n    const { host\x2C scheme } = this[context];\x0d\n    return ((host == null || host === '') ||\x0d\n            this[cannotBeBase] ||\x0d\n            scheme === 'file:');\x0d\n  }\x0d\n\x0d\n  [inspect.custom](depth\x2C opts) {\x0d\n    if (this == null ||\x0d\n        ObjectGetPrototypeOf(this[context]) !== URLContext.prototype) {\x0d\n      throw new ERR_INVALID_THIS('URL');\x0d\n    }\x0d\n\x0d\n    if (typeof depth === 'number' && depth < 0)\x0d\n      return this;\x0d\n\x0d\n    const constructor = getConstructorOf(this) || URL;\x0d\n    const obj = ObjectCreate({ constructor });\x0d\n\x0d\n    obj.href = this.href;\x0d\n    obj.origin = this.origin;\x0d\n    obj.protocol = this.protocol;\x0d\n    obj.username = this.username;\x0d\n    obj.password = this.password;\x0d\n    obj.host = this.host;\x0d\n    obj.hostname = this.hostname;\x0d\n    obj.port = this.port;\x0d\n    obj.pathname = this.pathname;\x0d\n    obj.search = this.search;\x0d\n    obj.searchParams = this.searchParams;\x0d\n    obj.hash = this.hash;\x0d\n\x0d\n    if (opts.showHidden) {\x0d\n      obj.cannotBeBase = this[cannotBeBase];\x0d\n      obj.special = this[special];\x0d\n      obj[context] = this[context];\x0d\n    }\x0d\n\x0d\n    return `${constructor.name} ${inspect(obj\x2C opts)}`;\x0d\n  }\x0d\n\x0d\n  [kFormat](options) {\x0d\n    if (options)\x0d\n      validateObject(options\x2C 'options');\x0d\n\x0d\n    options = {\x0d\n      fragment: true\x2C\x0d\n      unicode: false\x2C\x0d\n      search: true\x2C\x0d\n      auth: true\x2C\x0d\n      ...options\x0d\n    };\x0d\n    const ctx = this[context];\x0d\n    // https://url.spec.whatwg.org/#url-serializing\x0d\n    let ret = ctx.scheme;\x0d\n    if (ctx.host !== null) {\x0d\n      ret += '//';\x0d\n      const has_username = ctx.username !== '';\x0d\n      const has_password = ctx.password !== '';\x0d\n      if (options.auth && (has_username || has_password)) {\x0d\n        if (has_username)\x0d\n          ret += ctx.username;\x0d\n        if (has_password)\x0d\n          ret += `:${ctx.password}`;\x0d\n        ret += '@';\x0d\n      }\x0d\n      ret += options.unicode ?\x0d\n        domainToUnicode(ctx.host) : ctx.host;\x0d\n      if (ctx.port !== null)\x0d\n        ret += `:${ctx.port}`;\x0d\n    }\x0d\n    if (this[cannotBeBase]) {\x0d\n      ret += ctx.path[0];\x0d\n    } else {\x0d\n      if (ctx.host === null && ctx.path.length > 1 && ctx.path[0] === '') {\x0d\n        ret += '/.';\x0d\n      }\x0d\n      if (ctx.path.length) {\x0d\n        ret += '/' + ArrayPrototypeJoin(ctx.path\x2C '/');\x0d\n      }\x0d\n    }\x0d\n    if (options.search && ctx.query !== null)\x0d\n      ret += `?${ctx.query}`;\x0d\n    if (options.fragment && ctx.fragment !== null)\x0d\n      ret += `#${ctx.fragment}`;\x0d\n    return ret;\x0d\n  }\x0d\n\x0d\n  // https://heycam.github.io/webidl/#es-stringifier\x0d\n  toString() {\x0d\n    if (!isURLThis(this))\x0d\n      throw new ERR_INVALID_THIS('URL');\x0d\n    return this[kFormat]();\x0d\n  }\x0d\n\x0d\n  get href() {\x0d\n    if (!isURLThis(this))\x0d\n      throw new ERR_INVALID_THIS('URL');\x0d\n    return this[kFormat]();\x0d\n  }\x0d\n\x0d\n  set href(input) {\x0d\n    if (!isURLThis(this))\x0d\n      throw new ERR_INVALID_THIS('URL');\x0d\n    // toUSVString is not needed.\x0d\n    input = `${input}`;\x0d\n    parse(input\x2C -1\x2C undefined\x2C undefined\x2C\x0d\n          FunctionPrototypeBind(onParseComplete\x2C this)\x2C\x0d\n          FunctionPrototypeBind(onParseError\x2C this\x2C input));\x0d\n  }\x0d\n\x0d\n  // readonly\x0d\n  get origin() {\x0d\n    if (!isURLThis(this))\x0d\n      throw new ERR_INVALID_THIS('URL');\x0d\n    // Refs: https://url.spec.whatwg.org/#concept-url-origin\x0d\n    const ctx = this[context];\x0d\n    switch (ctx.scheme) {\x0d\n      case 'blob:':\x0d\n        if (ctx.path.length > 0) {\x0d\n          try {\x0d\n            return (new URL(ctx.path[0])).origin;\x0d\n          } catch {\x0d\n            // Fall through... do nothing\x0d\n          }\x0d\n        }\x0d\n        return kOpaqueOrigin;\x0d\n      case 'ftp:':\x0d\n      case 'http:':\x0d\n      case 'https:':\x0d\n      case 'ws:':\x0d\n      case 'wss:':\x0d\n        return serializeTupleOrigin(ctx.scheme\x2C ctx.host\x2C ctx.port);\x0d\n    }\x0d\n    return kOpaqueOrigin;\x0d\n  }\x0d\n\x0d\n  get protocol() {\x0d\n    if (!isURLThis(this))\x0d\n      throw new ERR_INVALID_THIS('URL');\x0d\n    return this[context].scheme;\x0d\n  }\x0d\n\x0d\n  set protocol(scheme) {\x0d\n    if (!isURLThis(this))\x0d\n      throw new ERR_INVALID_THIS('URL');\x0d\n    // toUSVString is not needed.\x0d\n    scheme = `${scheme}`;\x0d\n    if (scheme.length === 0)\x0d\n      return;\x0d\n    const ctx = this[context];\x0d\n    parse(scheme\x2C kSchemeStart\x2C null\x2C ctx\x2C\x0d\n          FunctionPrototypeBind(onParseProtocolComplete\x2C this));\x0d\n  }\x0d\n\x0d\n  get username() {\x0d\n    if (!isURLThis(this))\x0d\n      throw new ERR_INVALID_THIS('URL');\x0d\n    return this[context].username;\x0d\n  }\x0d\n\x0d\n  set username(username) {\x0d\n    if (!isURLThis(this))\x0d\n      throw new ERR_INVALID_THIS('URL');\x0d\n    // toUSVString is not needed.\x0d\n    username = `${username}`;\x0d\n    if (this[cannotHaveUsernamePasswordPort])\x0d\n      return;\x0d\n    const ctx = this[context];\x0d\n    if (username === '') {\x0d\n      ctx.username = '';\x0d\n      ctx.flags &= ~URL_FLAGS_HAS_USERNAME;\x0d\n      return;\x0d\n    }\x0d\n    ctx.username = encodeAuth(username);\x0d\n    ctx.flags |= URL_FLAGS_HAS_USERNAME;\x0d\n  }\x0d\n\x0d\n  get password() {\x0d\n    if (!isURLThis(this))\x0d\n      throw new ERR_INVALID_THIS('URL');\x0d\n    return this[context].password;\x0d\n  }\x0d\n\x0d\n  set password(password) {\x0d\n    if (!isURLThis(this))\x0d\n      throw new ERR_INVALID_THIS('URL');\x0d\n    // toUSVString is not needed.\x0d\n    password = `${password}`;\x0d\n    if (this[cannotHaveUsernamePasswordPort])\x0d\n      return;\x0d\n    const ctx = this[context];\x0d\n    if (password === '') {\x0d\n      ctx.password = '';\x0d\n      ctx.flags &= ~URL_FLAGS_HAS_PASSWORD;\x0d\n      return;\x0d\n    }\x0d\n    ctx.password = encodeAuth(password);\x0d\n    ctx.flags |= URL_FLAGS_HAS_PASSWORD;\x0d\n  }\x0d\n\x0d\n  get host() {\x0d\n    if (!isURLThis(this))\x0d\n      throw new ERR_INVALID_THIS('URL');\x0d\n    const ctx = this[context];\x0d\n    let ret = ctx.host || '';\x0d\n    if (ctx.port !== null)\x0d\n      ret += `:${ctx.port}`;\x0d\n    return ret;\x0d\n  }\x0d\n\x0d\n  set host(host) {\x0d\n    if (!isURLThis(this))\x0d\n      throw new ERR_INVALID_THIS('URL');\x0d\n    const ctx = this[context];\x0d\n    // toUSVString is not needed.\x0d\n    host = `${host}`;\x0d\n    if (this[cannotBeBase]) {\x0d\n      // Cannot set the host if cannot-be-base is set\x0d\n      return;\x0d\n    }\x0d\n    parse(host\x2C kHost\x2C null\x2C ctx\x2C\x0d\n          FunctionPrototypeBind(onParseHostComplete\x2C this));\x0d\n  }\x0d\n\x0d\n  get hostname() {\x0d\n    if (!isURLThis(this))\x0d\n      throw new ERR_INVALID_THIS('URL');\x0d\n    return this[context].host || '';\x0d\n  }\x0d\n\x0d\n  set hostname(host) {\x0d\n    if (!isURLThis(this))\x0d\n      throw new ERR_INVALID_THIS('URL');\x0d\n    const ctx = this[context];\x0d\n    // toUSVString is not needed.\x0d\n    host = `${host}`;\x0d\n    if (this[cannotBeBase]) {\x0d\n      // Cannot set the host if cannot-be-base is set\x0d\n      return;\x0d\n    }\x0d\n    parse(host\x2C kHostname\x2C null\x2C ctx\x2C onParseHostnameComplete.bind(this));\x0d\n  }\x0d\n\x0d\n  get port() {\x0d\n    if (!isURLThis(this))\x0d\n      throw new ERR_INVALID_THIS('URL');\x0d\n    const port = this[context].port;\x0d\n    return port === null ? '' : String(port);\x0d\n  }\x0d\n\x0d\n  set port(port) {\x0d\n    if (!isURLThis(this))\x0d\n      throw new ERR_INVALID_THIS('URL');\x0d\n    // toUSVString is not needed.\x0d\n    port = `${port}`;\x0d\n    if (this[cannotHaveUsernamePasswordPort])\x0d\n      return;\x0d\n    const ctx = this[context];\x0d\n    if (port === '') {\x0d\n      ctx.port = null;\x0d\n      return;\x0d\n    }\x0d\n    parse(port\x2C kPort\x2C null\x2C ctx\x2C\x0d\n          FunctionPrototypeBind(onParsePortComplete\x2C this));\x0d\n  }\x0d\n\x0d\n  get pathname() {\x0d\n    if (!isURLThis(this))\x0d\n      throw new ERR_INVALID_THIS('URL');\x0d\n    const ctx = this[context];\x0d\n    if (this[cannotBeBase])\x0d\n      return ctx.path[0];\x0d\n    if (ctx.path.length === 0)\x0d\n      return '';\x0d\n    return `/${ArrayPrototypeJoin(ctx.path\x2C '/')}`;\x0d\n  }\x0d\n\x0d\n  set pathname(path) {\x0d\n    if (!isURLThis(this))\x0d\n      throw new ERR_INVALID_THIS('URL');\x0d\n    // toUSVString is not needed.\x0d\n    path = `${path}`;\x0d\n    if (this[cannotBeBase])\x0d\n      return;\x0d\n    parse(path\x2C kPathStart\x2C null\x2C this[context]\x2C\x0d\n          onParsePathComplete.bind(this));\x0d\n  }\x0d\n\x0d\n  get search() {\x0d\n    if (!isURLThis(this))\x0d\n      throw new ERR_INVALID_THIS('URL');\x0d\n    const { query } = this[context];\x0d\n    if (query === null || query === '')\x0d\n      return '';\x0d\n    return `?${query}`;\x0d\n  }\x0d\n\x0d\n  set search(search) {\x0d\n    if (!isURLThis(this))\x0d\n      throw new ERR_INVALID_THIS('URL');\x0d\n    const ctx = this[context];\x0d\n    search = toUSVString(search);\x0d\n    if (search === '') {\x0d\n      ctx.query = null;\x0d\n      ctx.flags &= ~URL_FLAGS_HAS_QUERY;\x0d\n    } else {\x0d\n      if (search[0] === '?') search = StringPrototypeSlice(search\x2C 1);\x0d\n      ctx.query = '';\x0d\n      ctx.flags |= URL_FLAGS_HAS_QUERY;\x0d\n      if (search) {\x0d\n        parse(search\x2C kQuery\x2C null\x2C ctx\x2C\x0d\n              FunctionPrototypeBind(onParseSearchComplete\x2C this));\x0d\n      }\x0d\n    }\x0d\n    initSearchParams(this[searchParams]\x2C search);\x0d\n  }\x0d\n\x0d\n  // readonly\x0d\n  get searchParams() {\x0d\n    if (!isURLThis(this))\x0d\n      throw new ERR_INVALID_THIS('URL');\x0d\n    return this[searchParams];\x0d\n  }\x0d\n\x0d\n  get hash() {\x0d\n    if (!isURLThis(this))\x0d\n      throw new ERR_INVALID_THIS('URL');\x0d\n    const { fragment } = this[context];\x0d\n    if (fragment === null || fragment === '')\x0d\n      return '';\x0d\n    return `#${fragment}`;\x0d\n  }\x0d\n\x0d\n  set hash(hash) {\x0d\n    if (!isURLThis(this))\x0d\n      throw new ERR_INVALID_THIS('URL');\x0d\n    const ctx = this[context];\x0d\n    // toUSVString is not needed.\x0d\n    hash = `${hash}`;\x0d\n    if (!hash) {\x0d\n      ctx.fragment = null;\x0d\n      ctx.flags &= ~URL_FLAGS_HAS_FRAGMENT;\x0d\n      return;\x0d\n    }\x0d\n    if (hash[0] === '#') hash = StringPrototypeSlice(hash\x2C 1);\x0d\n    ctx.fragment = '';\x0d\n    ctx.flags |= URL_FLAGS_HAS_FRAGMENT;\x0d\n    parse(hash\x2C kFragment\x2C null\x2C ctx\x2C\x0d\n          FunctionPrototypeBind(onParseHashComplete\x2C this));\x0d\n  }\x0d\n\x0d\n  toJSON() {\x0d\n    if (!isURLThis(this))\x0d\n      throw new ERR_INVALID_THIS('URL');\x0d\n    return this[kFormat]();\x0d\n  }\x0d\n\x0d\n  static createObjectURL(obj) {\x0d\n    const cryptoRandom = lazyCryptoRandom();\x0d\n    if (cryptoRandom === undefined)\x0d\n      throw new ERR_NO_CRYPTO();\x0d\n\x0d\n    // Yes\x2C lazy loading is annoying but because of circular\x0d\n    // references between the url\x2C internal/blob\x2C and buffer\x0d\n    // modules\x2C lazy loading here makes sure that things work.\x0d\n    const blob = lazyBlob();\x0d\n    if (!blob.isBlob(obj))\x0d\n      throw new ERR_INVALID_ARG_TYPE('obj'\x2C 'Blob'\x2C obj);\x0d\n\x0d\n    const id = cryptoRandom.randomUUID();\x0d\n\x0d\n    storeDataObject(id\x2C obj[blob.kHandle]\x2C obj.size\x2C obj.type);\x0d\n\x0d\n    return `blob:nodedata:${id}`;\x0d\n  }\x0d\n\x0d\n  static revokeObjectURL(url) {\x0d\n    url = `${url}`;\x0d\n    try {\x0d\n      const parsed = new URL(url);\x0d\n      const split = StringPrototypeSplit(parsed.pathname\x2C ':');\x0d\n      if (split.length === 2)\x0d\n        revokeDataObject(split[1]);\x0d\n    } catch {\x0d\n      // If there's an error\x2C it's ignored.\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\nObjectDefineProperties(URL.prototype\x2C {\x0d\n  [kFormat]: { __proto__: null\x2C configurable: false\x2C writable: false }\x2C\x0d\n  [SymbolToStringTag]: { __proto__: null\x2C configurable: true\x2C value: 'URL' }\x2C\x0d\n  toString: kEnumerableProperty\x2C\x0d\n  href: kEnumerableProperty\x2C\x0d\n  origin: kEnumerableProperty\x2C\x0d\n  protocol: kEnumerableProperty\x2C\x0d\n  username: kEnumerableProperty\x2C\x0d\n  password: kEnumerableProperty\x2C\x0d\n  host: kEnumerableProperty\x2C\x0d\n  hostname: kEnumerableProperty\x2C\x0d\n  port: kEnumerableProperty\x2C\x0d\n  pathname: kEnumerableProperty\x2C\x0d\n  search: kEnumerableProperty\x2C\x0d\n  searchParams: kEnumerableProperty\x2C\x0d\n  hash: kEnumerableProperty\x2C\x0d\n  toJSON: kEnumerableProperty\x2C\x0d\n});\x0d\n\x0d\nObjectDefineProperties(URL\x2C {\x0d\n  createObjectURL: kEnumerableProperty\x2C\x0d\n  revokeObjectURL: kEnumerableProperty\x2C\x0d\n});\x0d\n\x0d\nfunction update(url\x2C params) {\x0d\n  if (!url)\x0d\n    return;\x0d\n\x0d\n  const ctx = url[context];\x0d\n  const serializedParams = params.toString();\x0d\n  if (serializedParams) {\x0d\n    ctx.query = serializedParams;\x0d\n    ctx.flags |= URL_FLAGS_HAS_QUERY;\x0d\n  } else {\x0d\n    ctx.query = null;\x0d\n    ctx.flags &= ~URL_FLAGS_HAS_QUERY;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction initSearchParams(url\x2C init) {\x0d\n  if (!init) {\x0d\n    url[searchParams] = [];\x0d\n    return;\x0d\n  }\x0d\n  url[searchParams] = parseParams(init);\x0d\n}\x0d\n\x0d\n// application/x-www-form-urlencoded parser\x0d\n// Ref: https://url.spec.whatwg.org/#concept-urlencoded-parser\x0d\nfunction parseParams(qs) {\x0d\n  const out = [];\x0d\n  let pairStart = 0;\x0d\n  let lastPos = 0;\x0d\n  let seenSep = false;\x0d\n  let buf = '';\x0d\n  let encoded = false;\x0d\n  let encodeCheck = 0;\x0d\n  let i;\x0d\n  for (i = 0; i < qs.length; ++i) {\x0d\n    const code = StringPrototypeCharCodeAt(qs\x2C i);\x0d\n\x0d\n    // Try matching key/value pair separator\x0d\n    if (code === CHAR_AMPERSAND) {\x0d\n      if (pairStart === i) {\x0d\n        // We saw an empty substring between pair separators\x0d\n        lastPos = pairStart = i + 1;\x0d\n        continue;\x0d\n      }\x0d\n\x0d\n      if (lastPos < i)\x0d\n        buf += qs.slice(lastPos\x2C i);\x0d\n      if (encoded)\x0d\n        buf = querystring.unescape(buf);\x0d\n      out.push(buf);\x0d\n\x0d\n      // If `buf` is the key\x2C add an empty value.\x0d\n      if (!seenSep)\x0d\n        out.push('');\x0d\n\x0d\n      seenSep = false;\x0d\n      buf = '';\x0d\n      encoded = false;\x0d\n      encodeCheck = 0;\x0d\n      lastPos = pairStart = i + 1;\x0d\n      continue;\x0d\n    }\x0d\n\x0d\n    // Try matching key/value separator (e.g. '=') if we haven't already\x0d\n    if (!seenSep && code === CHAR_EQUAL) {\x0d\n      // Key/value separator match!\x0d\n      if (lastPos < i)\x0d\n        buf += qs.slice(lastPos\x2C i);\x0d\n      if (encoded)\x0d\n        buf = querystring.unescape(buf);\x0d\n      out.push(buf);\x0d\n\x0d\n      seenSep = true;\x0d\n      buf = '';\x0d\n      encoded = false;\x0d\n      encodeCheck = 0;\x0d\n      lastPos = i + 1;\x0d\n      continue;\x0d\n    }\x0d\n\x0d\n    // Handle + and percent decoding.\x0d\n    if (code === CHAR_PLUS) {\x0d\n      if (lastPos < i)\x0d\n        buf += StringPrototypeSlice(qs\x2C lastPos\x2C i);\x0d\n      buf += ' ';\x0d\n      lastPos = i + 1;\x0d\n    } else if (!encoded) {\x0d\n      // Try to match an (valid) encoded byte (once) to minimize unnecessary\x0d\n      // calls to string decoding functions\x0d\n      if (code === CHAR_PERCENT) {\x0d\n        encodeCheck = 1;\x0d\n      } else if (encodeCheck > 0) {\x0d\n        if (isHexTable[code] === 1) {\x0d\n          if (++encodeCheck === 3) {\x0d\n            encoded = true;\x0d\n          }\x0d\n        } else {\x0d\n          encodeCheck = 0;\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  // Deal with any leftover key or value data\x0d\n\x0d\n  // There is a trailing &. No more processing is needed.\x0d\n  if (pairStart === i)\x0d\n    return out;\x0d\n\x0d\n  if (lastPos < i)\x0d\n    buf += StringPrototypeSlice(qs\x2C lastPos\x2C i);\x0d\n  if (encoded)\x0d\n    buf = querystring.unescape(buf);\x0d\n  ArrayPrototypePush(out\x2C buf);\x0d\n\x0d\n  // If `buf` is the key\x2C add an empty value.\x0d\n  if (!seenSep)\x0d\n    ArrayPrototypePush(out\x2C '');\x0d\n\x0d\n  return out;\x0d\n}\x0d\n\x0d\n// Adapted from querystring's implementation.\x0d\n// Ref: https://url.spec.whatwg.org/#concept-urlencoded-byte-serializer\x0d\nconst noEscape = new Int8Array([\x0d\n/*\x0d\n  0\x2C 1\x2C 2\x2C 3\x2C 4\x2C 5\x2C 6\x2C 7\x2C 8\x2C 9\x2C A\x2C B\x2C C\x2C D\x2C E\x2C F\x0d\n*/\x0d\n  0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C // 0x00 - 0x0F\x0d\n  0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C // 0x10 - 0x1F\x0d\n  0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 1\x2C 0\x2C 0\x2C 1\x2C 1\x2C 0\x2C // 0x20 - 0x2F\x0d\n  1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C // 0x30 - 0x3F\x0d\n  0\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C // 0x40 - 0x4F\x0d\n  1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 0\x2C 0\x2C 0\x2C 0\x2C 1\x2C // 0x50 - 0x5F\x0d\n  0\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C // 0x60 - 0x6F\x0d\n  1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C  // 0x70 - 0x7F\x0d\n]);\x0d\n\x0d\n// Special version of hexTable that uses `+` for U+0020 SPACE.\x0d\nconst paramHexTable = hexTable.slice();\x0d\nparamHexTable[0x20] = '+';\x0d\n\x0d\n// application/x-www-form-urlencoded serializer\x0d\n// Ref: https://url.spec.whatwg.org/#concept-urlencoded-serializer\x0d\nfunction serializeParams(array) {\x0d\n  const len = array.length;\x0d\n  if (len === 0)\x0d\n    return '';\x0d\n\x0d\n  const firstEncodedParam = encodeStr(array[0]\x2C noEscape\x2C paramHexTable);\x0d\n  const firstEncodedValue = encodeStr(array[1]\x2C noEscape\x2C paramHexTable);\x0d\n  let output = `${firstEncodedParam}=${firstEncodedValue}`;\x0d\n\x0d\n  for (let i = 2; i < len; i += 2) {\x0d\n    const encodedParam = encodeStr(array[i]\x2C noEscape\x2C paramHexTable);\x0d\n    const encodedValue = encodeStr(array[i + 1]\x2C noEscape\x2C paramHexTable);\x0d\n    output += `&${encodedParam}=${encodedValue}`;\x0d\n  }\x0d\n\x0d\n  return output;\x0d\n}\x0d\n\x0d\n// Mainly to mitigate func-name-matching ESLint rule\x0d\nfunction defineIDLClass(proto\x2C classStr\x2C obj) {\x0d\n  // https://heycam.github.io/webidl/#dfn-class-string\x0d\n  ObjectDefineProperty(proto\x2C SymbolToStringTag\x2C {\x0d\n    __proto__: null\x2C\x0d\n    writable: false\x2C\x0d\n    enumerable: false\x2C\x0d\n    configurable: true\x2C\x0d\n    value: classStr\x0d\n  });\x0d\n\x0d\n  // https://heycam.github.io/webidl/#es-operations\x0d\n  for (const key of ObjectKeys(obj)) {\x0d\n    ObjectDefineProperty(proto\x2C key\x2C {\x0d\n      __proto__: null\x2C\x0d\n      writable: true\x2C\x0d\n      enumerable: true\x2C\x0d\n      configurable: true\x2C\x0d\n      value: obj[key]\x0d\n    });\x0d\n  }\x0d\n  for (const key of ObjectGetOwnPropertySymbols(obj)) {\x0d\n    ObjectDefineProperty(proto\x2C key\x2C {\x0d\n      __proto__: null\x2C\x0d\n      writable: true\x2C\x0d\n      enumerable: false\x2C\x0d\n      configurable: true\x2C\x0d\n      value: obj[key]\x0d\n    });\x0d\n  }\x0d\n}\x0d\n\x0d\n// for merge sort\x0d\nfunction merge(out\x2C start\x2C mid\x2C end\x2C lBuffer\x2C rBuffer) {\x0d\n  const sizeLeft = mid - start;\x0d\n  const sizeRight = end - mid;\x0d\n  let l\x2C r\x2C o;\x0d\n\x0d\n  for (l = 0; l < sizeLeft; l++)\x0d\n    lBuffer[l] = out[start + l];\x0d\n  for (r = 0; r < sizeRight; r++)\x0d\n    rBuffer[r] = out[mid + r];\x0d\n\x0d\n  l = 0;\x0d\n  r = 0;\x0d\n  o = start;\x0d\n  while (l < sizeLeft && r < sizeRight) {\x0d\n    if (lBuffer[l] <= rBuffer[r]) {\x0d\n      out[o++] = lBuffer[l++];\x0d\n      out[o++] = lBuffer[l++];\x0d\n    } else {\x0d\n      out[o++] = rBuffer[r++];\x0d\n      out[o++] = rBuffer[r++];\x0d\n    }\x0d\n  }\x0d\n  while (l < sizeLeft)\x0d\n    out[o++] = lBuffer[l++];\x0d\n  while (r < sizeRight)\x0d\n    out[o++] = rBuffer[r++];\x0d\n}\x0d\n\x0d\n// https://heycam.github.io/webidl/#dfn-default-iterator-object\x0d\nfunction createSearchParamsIterator(target\x2C kind) {\x0d\n  const iterator = ObjectCreate(URLSearchParamsIteratorPrototype);\x0d\n  iterator[context] = {\x0d\n    target\x2C\x0d\n    kind\x2C\x0d\n    index: 0\x0d\n  };\x0d\n  return iterator;\x0d\n}\x0d\n\x0d\n// https://heycam.github.io/webidl/#dfn-iterator-prototype-object\x0d\nconst URLSearchParamsIteratorPrototype = ObjectCreate(IteratorPrototype);\x0d\n\x0d\ndefineIDLClass(URLSearchParamsIteratorPrototype\x2C 'URLSearchParams Iterator'\x2C {\x0d\n  next() {\x0d\n    if (!this ||\x0d\n        ObjectGetPrototypeOf(this) !== URLSearchParamsIteratorPrototype) {\x0d\n      throw new ERR_INVALID_THIS('URLSearchParamsIterator');\x0d\n    }\x0d\n\x0d\n    const {\x0d\n      target\x2C\x0d\n      kind\x2C\x0d\n      index\x0d\n    } = this[context];\x0d\n    const values = target[searchParams];\x0d\n    const len = values.length;\x0d\n    if (index >= len) {\x0d\n      return {\x0d\n        value: undefined\x2C\x0d\n        done: true\x0d\n      };\x0d\n    }\x0d\n\x0d\n    const name = values[index];\x0d\n    const value = values[index + 1];\x0d\n    this[context].index = index + 2;\x0d\n\x0d\n    let result;\x0d\n    if (kind === 'key') {\x0d\n      result = name;\x0d\n    } else if (kind === 'value') {\x0d\n      result = value;\x0d\n    } else {\x0d\n      result = [name\x2C value];\x0d\n    }\x0d\n\x0d\n    return {\x0d\n      value: result\x2C\x0d\n      done: false\x0d\n    };\x0d\n  }\x2C\x0d\n  [inspect.custom](recurseTimes\x2C ctx) {\x0d\n    if (this == null || this[context] == null || this[context].target == null)\x0d\n      throw new ERR_INVALID_THIS('URLSearchParamsIterator');\x0d\n\x0d\n    if (typeof recurseTimes === 'number' && recurseTimes < 0)\x0d\n      return ctx.stylize('[Object]'\x2C 'special');\x0d\n\x0d\n    const innerOpts = { ...ctx };\x0d\n    if (recurseTimes !== null) {\x0d\n      innerOpts.depth = recurseTimes - 1;\x0d\n    }\x0d\n    const {\x0d\n      target\x2C\x0d\n      kind\x2C\x0d\n      index\x0d\n    } = this[context];\x0d\n    const output = ArrayPrototypeReduce(\x0d\n      ArrayPrototypeSlice(target[searchParams]\x2C index)\x2C\x0d\n      (prev\x2C cur\x2C i) => {\x0d\n        const key = i % 2 === 0;\x0d\n        if (kind === 'key' && key) {\x0d\n          ArrayPrototypePush(prev\x2C cur);\x0d\n        } else if (kind === 'value' && !key) {\x0d\n          ArrayPrototypePush(prev\x2C cur);\x0d\n        } else if (kind === 'key+value' && !key) {\x0d\n          ArrayPrototypePush(prev\x2C [target[searchParams][index + i - 1]\x2C cur]);\x0d\n        }\x0d\n        return prev;\x0d\n      }\x2C\x0d\n      []\x0d\n    );\x0d\n    const breakLn = inspect(output\x2C innerOpts).includes('\\n');\x0d\n    const outputStrs = ArrayPrototypeMap(output\x2C (p) => inspect(p\x2C innerOpts));\x0d\n    let outputStr;\x0d\n    if (breakLn) {\x0d\n      outputStr = `\\n  ${ArrayPrototypeJoin(outputStrs\x2C '\x2C\\n  ')}`;\x0d\n    } else {\x0d\n      outputStr = ` ${ArrayPrototypeJoin(outputStrs\x2C '\x2C ')}`;\x0d\n    }\x0d\n    return `${this[SymbolToStringTag]} {${outputStr} }`;\x0d\n  }\x0d\n});\x0d\n\x0d\nfunction domainToASCII(domain) {\x0d\n  if (arguments.length < 1)\x0d\n    throw new ERR_MISSING_ARGS('domain');\x0d\n\x0d\n  // toUSVString is not needed.\x0d\n  return _domainToASCII(`${domain}`);\x0d\n}\x0d\n\x0d\nfunction domainToUnicode(domain) {\x0d\n  if (arguments.length < 1)\x0d\n    throw new ERR_MISSING_ARGS('domain');\x0d\n\x0d\n  // toUSVString is not needed.\x0d\n  return _domainToUnicode(`${domain}`);\x0d\n}\x0d\n\x0d\n// Utility function that converts a URL object into an ordinary\x0d\n// options object as expected by the http.request and https.request\x0d\n// APIs.\x0d\nfunction urlToHttpOptions(url) {\x0d\n  const options = {\x0d\n    protocol: url.protocol\x2C\x0d\n    hostname: typeof url.hostname === 'string' &&\x0d\n              StringPrototypeStartsWith(url.hostname\x2C '[') ?\x0d\n      StringPrototypeSlice(url.hostname\x2C 1\x2C -1) :\x0d\n      url.hostname\x2C\x0d\n    hash: url.hash\x2C\x0d\n    search: url.search\x2C\x0d\n    pathname: url.pathname\x2C\x0d\n    path: `${url.pathname || ''}${url.search || ''}`\x2C\x0d\n    href: url.href\x0d\n  };\x0d\n  if (url.port !== '') {\x0d\n    options.port = Number(url.port);\x0d\n  }\x0d\n  if (url.username || url.password) {\x0d\n    options.auth = `${decodeURIComponent(url.username)}:${decodeURIComponent(url.password)}`;\x0d\n  }\x0d\n  return options;\x0d\n}\x0d\n\x0d\nfunction getPathFromURLWin32(url) {\x0d\n  const hostname = url.hostname;\x0d\n  let pathname = url.pathname;\x0d\n  for (let n = 0; n < pathname.length; n++) {\x0d\n    if (pathname[n] === '%') {\x0d\n      const third = pathname.codePointAt(n + 2) | 0x20;\x0d\n      if ((pathname[n + 1] === '2' && third === 102) || // 2f 2F /\x0d\n          (pathname[n + 1] === '5' && third === 99)) {  // 5c 5C \\\x0d\n        throw new ERR_INVALID_FILE_URL_PATH(\x0d\n          'must not include encoded \\\\ or / characters'\x0d\n        );\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n  pathname = StringPrototypeReplaceAll(pathname\x2C '/'\x2C '\\\\');\x0d\n  pathname = decodeURIComponent(pathname);\x0d\n  if (hostname !== '') {\x0d\n    // If hostname is set\x2C then we have a UNC path\x0d\n    // Pass the hostname through domainToUnicode just in case\x0d\n    // it is an IDN using punycode encoding. We do not need to worry\x0d\n    // about percent encoding because the URL parser will have\x0d\n    // already taken care of that for us. Note that this only\x0d\n    // causes IDNs with an appropriate `xn--` prefix to be decoded.\x0d\n    return `\\\\\\\\${domainToUnicode(hostname)}${pathname}`;\x0d\n  }\x0d\n  // Otherwise\x2C it's a local path that requires a drive letter\x0d\n  const letter = pathname.codePointAt(1) | 0x20;\x0d\n  const sep = pathname[2];\x0d\n  if (letter < CHAR_LOWERCASE_A || letter > CHAR_LOWERCASE_Z ||   // a..z A..Z\x0d\n      (sep !== ':')) {\x0d\n    throw new ERR_INVALID_FILE_URL_PATH('must be absolute');\x0d\n  }\x0d\n  return pathname.slice(1);\x0d\n}\x0d\n\x0d\nfunction getPathFromURLPosix(url) {\x0d\n  if (url.hostname !== '') {\x0d\n    throw new ERR_INVALID_FILE_URL_HOST(platform);\x0d\n  }\x0d\n  const pathname = url.pathname;\x0d\n  for (let n = 0; n < pathname.length; n++) {\x0d\n    if (pathname[n] === '%') {\x0d\n      const third = pathname.codePointAt(n + 2) | 0x20;\x0d\n      if (pathname[n + 1] === '2' && third === 102) {\x0d\n        throw new ERR_INVALID_FILE_URL_PATH(\x0d\n          'must not include encoded / characters'\x0d\n        );\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n  return decodeURIComponent(pathname);\x0d\n}\x0d\n\x0d\nfunction fileURLToPath(path) {\x0d\n  if (typeof path === 'string')\x0d\n    path = new URL(path);\x0d\n  else if (!isURLInstance(path))\x0d\n    throw new ERR_INVALID_ARG_TYPE('path'\x2C ['string'\x2C 'URL']\x2C path);\x0d\n  if (path.protocol !== 'file:')\x0d\n    throw new ERR_INVALID_URL_SCHEME('file');\x0d\n  return isWindows ? getPathFromURLWin32(path) : getPathFromURLPosix(path);\x0d\n}\x0d\n\x0d\n// The following characters are percent-encoded when converting from file path\x0d\n// to URL:\x0d\n// - %: The percent character is the only character not encoded by the\x0d\n//        `pathname` setter.\x0d\n// - \\: Backslash is encoded on non-windows platforms since it's a valid\x0d\n//      character but the `pathname` setters replaces it by a forward slash.\x0d\n// - LF: The newline character is stripped out by the `pathname` setter.\x0d\n//       (See whatwg/url#419)\x0d\n// - CR: The carriage return character is also stripped out by the `pathname`\x0d\n//       setter.\x0d\n// - TAB: The tab character is also stripped out by the `pathname` setter.\x0d\nconst percentRegEx = /%/g;\x0d\nconst backslashRegEx = /\\\\/g;\x0d\nconst newlineRegEx = /\\n/g;\x0d\nconst carriageReturnRegEx = /\\r/g;\x0d\nconst tabRegEx = /\\t/g;\x0d\n\x0d\nfunction encodePathChars(filepath) {\x0d\n  if (StringPrototypeIncludes(filepath\x2C '%'))\x0d\n    filepath = StringPrototypeReplace(filepath\x2C percentRegEx\x2C '%25');\x0d\n  // In posix\x2C backslash is a valid character in paths:\x0d\n  if (!isWindows && StringPrototypeIncludes(filepath\x2C '\\\\'))\x0d\n    filepath = StringPrototypeReplace(filepath\x2C backslashRegEx\x2C '%5C');\x0d\n  if (StringPrototypeIncludes(filepath\x2C '\\n'))\x0d\n    filepath = StringPrototypeReplace(filepath\x2C newlineRegEx\x2C '%0A');\x0d\n  if (StringPrototypeIncludes(filepath\x2C '\\r'))\x0d\n    filepath = StringPrototypeReplace(filepath\x2C carriageReturnRegEx\x2C '%0D');\x0d\n  if (StringPrototypeIncludes(filepath\x2C '\\t'))\x0d\n    filepath = StringPrototypeReplace(filepath\x2C tabRegEx\x2C '%09');\x0d\n  return filepath;\x0d\n}\x0d\n\x0d\nfunction pathToFileURL(filepath) {\x0d\n  const outURL = new URL('file://');\x0d\n  if (isWindows && StringPrototypeStartsWith(filepath\x2C '\\\\\\\\')) {\x0d\n    // UNC path format: \\\\server\\share\\resource\x0d\n    const paths = StringPrototypeSplit(filepath\x2C '\\\\');\x0d\n    if (paths.length <= 3) {\x0d\n      throw new ERR_INVALID_ARG_VALUE(\x0d\n        'filepath'\x2C\x0d\n        filepath\x2C\x0d\n        'Missing UNC resource path'\x0d\n      );\x0d\n    }\x0d\n    const hostname = paths[2];\x0d\n    if (hostname.length === 0) {\x0d\n      throw new ERR_INVALID_ARG_VALUE(\x0d\n        'filepath'\x2C\x0d\n        filepath\x2C\x0d\n        'Empty UNC servername'\x0d\n      );\x0d\n    }\x0d\n    outURL.hostname = domainToASCII(hostname);\x0d\n    outURL.pathname = encodePathChars(\x0d\n      ArrayPrototypeJoin(ArrayPrototypeSlice(paths\x2C 3)\x2C '/'));\x0d\n  } else {\x0d\n    let resolved = path.resolve(filepath);\x0d\n    // path.resolve strips trailing slashes so we must add them back\x0d\n    const filePathLast = StringPrototypeCharCodeAt(filepath\x2C\x0d\n                                                   filepath.length - 1);\x0d\n    if ((filePathLast === CHAR_FORWARD_SLASH ||\x0d\n         (isWindows && filePathLast === CHAR_BACKWARD_SLASH)) &&\x0d\n        resolved[resolved.length - 1] !== path.sep)\x0d\n      resolved += '/';\x0d\n    outURL.pathname = encodePathChars(resolved);\x0d\n  }\x0d\n  return outURL;\x0d\n}\x0d\n\x0d\nfunction isURLInstance(fileURLOrPath) {\x0d\n  return fileURLOrPath != null && fileURLOrPath.href && fileURLOrPath.origin;\x0d\n}\x0d\n\x0d\nfunction toPathIfFileURL(fileURLOrPath) {\x0d\n  if (!isURLInstance(fileURLOrPath))\x0d\n    return fileURLOrPath;\x0d\n  return fileURLToPath(fileURLOrPath);\x0d\n}\x0d\n\x0d\nfunction constructUrl(flags\x2C protocol\x2C username\x2C password\x2C\x0d\n                      host\x2C port\x2C path\x2C query\x2C fragment) {\x0d\n  const ctx = new URLContext();\x0d\n  ctx.flags = flags;\x0d\n  ctx.scheme = protocol;\x0d\n  ctx.username = (flags & URL_FLAGS_HAS_USERNAME) !== 0 ? username : '';\x0d\n  ctx.password = (flags & URL_FLAGS_HAS_PASSWORD) !== 0 ? password : '';\x0d\n  ctx.port = port;\x0d\n  ctx.path = (flags & URL_FLAGS_HAS_PATH) !== 0 ? path : [];\x0d\n  ctx.query = query;\x0d\n  ctx.fragment = fragment;\x0d\n  ctx.host = host;\x0d\n\x0d\n  const url = ObjectCreate(URL.prototype);\x0d\n  url[context] = ctx;\x0d\n  const params = new URLSearchParams();\x0d\n  url[searchParams] = params;\x0d\n  params[context] = url;\x0d\n  initSearchParams(params\x2C query);\x0d\n  return url;\x0d\n}\x0d\nsetURLConstructor(constructUrl);\x0d\n\x0d\nmodule.exports = {\x0d\n  toUSVString\x2C\x0d\n  fileURLToPath\x2C\x0d\n  pathToFileURL\x2C\x0d\n  toPathIfFileURL\x2C\x0d\n  isURLInstance\x2C\x0d\n  URL\x2C\x0d\n  URLSearchParams\x2C\x0d\n  domainToASCII\x2C\x0d\n  domainToUnicode\x2C\x0d\n  urlToHttpOptions\x2C\x0d\n  formatSymbol: kFormat\x2C\x0d\n  searchParamsSymbol: searchParams\x2C\x0d\n  encodeStr\x0d\n};\x0d\n
code-source-info,0x85728109c0,76,45554,45679,C0O45575C3O45580C9O45615C11O45636C12O45640C15O45647C19O45676,,
code-creation,LazyCompile,10,373123,0x8572813d38,17,isURLInstance node:internal/url:1565:23,0x914790fae0,~
code-source-info,0x8572813d38,76,45427,45526,C0O45448C3O45469C6O45494C12O45516C16O45523,,
code-creation,LazyCompile,10,373212,0x8572813ea0,81, node:internal/fs/utils:674:38,0x914791de88,~
code-source-info,0x8572813ea0,79,18996,19276,C14O19030C22O19063C25O19063C31O19090C36O19121C49O19096C54O19090C55O19189C68O19189C74O19228C76O19258C78O19258C80O19275,,
code-creation,LazyCompile,10,373312,0x85728140b8,110, node:internal/fs/utils:361:35,0x914791d528,~
code-source-info,0x85728140b8,79,8985,9594,C16O9050C21O9104C26O9104C31O9201C37O9224C41O9253C45O9270C51O9270C60O9322C64O9343C69O9343C76O9389C77O9396C78O9419C94O9419C100O9538C104O9561C106O9561C107O9580C109O9591,,
code-creation,LazyCompile,10,373396,0x8572814230,16,isUint8Array node:internal/util/types:13:22,0x3a8997940e8,~
script-source,23,node:internal/util/types,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayBufferIsView\x2C\x0d\n  ObjectDefineProperties\x2C\x0d\n  TypedArrayPrototypeGetSymbolToStringTag\x2C\x0d\n} = primordials;\x0d\n\x0d\nfunction isTypedArray(value) {\x0d\n  return TypedArrayPrototypeGetSymbolToStringTag(value) !== undefined;\x0d\n}\x0d\n\x0d\nfunction isUint8Array(value) {\x0d\n  return TypedArrayPrototypeGetSymbolToStringTag(value) === 'Uint8Array';\x0d\n}\x0d\n\x0d\nfunction isUint8ClampedArray(value) {\x0d\n  return TypedArrayPrototypeGetSymbolToStringTag(value) === 'Uint8ClampedArray';\x0d\n}\x0d\n\x0d\nfunction isUint16Array(value) {\x0d\n  return TypedArrayPrototypeGetSymbolToStringTag(value) === 'Uint16Array';\x0d\n}\x0d\n\x0d\nfunction isUint32Array(value) {\x0d\n  return TypedArrayPrototypeGetSymbolToStringTag(value) === 'Uint32Array';\x0d\n}\x0d\n\x0d\nfunction isInt8Array(value) {\x0d\n  return TypedArrayPrototypeGetSymbolToStringTag(value) === 'Int8Array';\x0d\n}\x0d\n\x0d\nfunction isInt16Array(value) {\x0d\n  return TypedArrayPrototypeGetSymbolToStringTag(value) === 'Int16Array';\x0d\n}\x0d\n\x0d\nfunction isInt32Array(value) {\x0d\n  return TypedArrayPrototypeGetSymbolToStringTag(value) === 'Int32Array';\x0d\n}\x0d\n\x0d\nfunction isFloat32Array(value) {\x0d\n  return TypedArrayPrototypeGetSymbolToStringTag(value) === 'Float32Array';\x0d\n}\x0d\n\x0d\nfunction isFloat64Array(value) {\x0d\n  return TypedArrayPrototypeGetSymbolToStringTag(value) === 'Float64Array';\x0d\n}\x0d\n\x0d\nfunction isBigInt64Array(value) {\x0d\n  return TypedArrayPrototypeGetSymbolToStringTag(value) === 'BigInt64Array';\x0d\n}\x0d\n\x0d\nfunction isBigUint64Array(value) {\x0d\n  return TypedArrayPrototypeGetSymbolToStringTag(value) === 'BigUint64Array';\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  ...internalBinding('types')\x2C\x0d\n  isArrayBufferView: ArrayBufferIsView\x2C\x0d\n  isTypedArray\x2C\x0d\n  isUint8Array\x2C\x0d\n  isUint8ClampedArray\x2C\x0d\n  isUint16Array\x2C\x0d\n  isUint32Array\x2C\x0d\n  isInt8Array\x2C\x0d\n  isInt16Array\x2C\x0d\n  isInt32Array\x2C\x0d\n  isFloat32Array\x2C\x0d\n  isFloat64Array\x2C\x0d\n  isBigInt64Array\x2C\x0d\n  isBigUint64Array\x2C\x0d\n};\x0d\n\x0d\nlet isCryptoKey;\x0d\nlet isKeyObject;\x0d\n\x0d\nObjectDefineProperties(module.exports\x2C {\x0d\n  isKeyObject: {\x0d\n    __proto__: null\x2C\x0d\n    configurable: false\x2C\x0d\n    enumerable: true\x2C\x0d\n    value(obj) {\x0d\n      if (!process.versions.openssl) {\x0d\n        return false;\x0d\n      }\x0d\n\x0d\n      if (!isKeyObject) {\x0d\n        ({ isKeyObject } = require('internal/crypto/keys'));\x0d\n      }\x0d\n\x0d\n      return isKeyObject(obj);\x0d\n    }\x0d\n  }\x2C\x0d\n  isCryptoKey: {\x0d\n    __proto__: null\x2C\x0d\n    configurable: false\x2C\x0d\n    enumerable: true\x2C\x0d\n    value(obj) {\x0d\n      if (!process.versions.openssl) {\x0d\n        return false;\x0d\n      }\x0d\n\x0d\n      if (!isCryptoKey) {\x0d\n        ({ isCryptoKey } = require('internal/crypto/keys'));\x0d\n      }\x0d\n\x0d\n      return isCryptoKey(obj);\x0d\n    }\x0d\n  }\x0d\n});\x0d\n
code-source-info,0x8572814230,23,269,356,C0O282C5O289C12O336C15O353,,
code-creation,LazyCompile,10,373697,0x85728146a8,23,splitRoot node:fs:2426:33,0x2dbe93f5788,~
code-source-info,0x85728146a8,75,67210,67290,C0O67223C9O67264C12O67230C19O67281C22O67285,,
code-creation,LazyCompile,10,373813,0x85728147f8,39,SideEffectFreeRegExpPrototypeExec node:internal/util:557:43,0x3a89978eac0,~
script-source,21,node:internal/util,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayBufferPrototypeGetByteLength\x2C\x0d\n  ArrayFrom\x2C\x0d\n  ArrayIsArray\x2C\x0d\n  ArrayPrototypePush\x2C\x0d\n  ArrayPrototypeSlice\x2C\x0d\n  ArrayPrototypeSort\x2C\x0d\n  Error\x2C\x0d\n  FunctionPrototypeCall\x2C\x0d\n  ObjectCreate\x2C\x0d\n  ObjectDefineProperties\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectGetOwnPropertyDescriptor\x2C\x0d\n  ObjectGetOwnPropertyDescriptors\x2C\x0d\n  ObjectGetPrototypeOf\x2C\x0d\n  ObjectFreeze\x2C\x0d\n  ObjectPrototypeHasOwnProperty\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  ObjectValues\x2C\x0d\n  Promise\x2C\x0d\n  ReflectApply\x2C\x0d\n  ReflectConstruct\x2C\x0d\n  RegExpPrototypeExec\x2C\x0d\n  SafeMap\x2C\x0d\n  SafeSet\x2C\x0d\n  StringPrototypeReplace\x2C\x0d\n  StringPrototypeToLowerCase\x2C\x0d\n  StringPrototypeToUpperCase\x2C\x0d\n  Symbol\x2C\x0d\n  SymbolFor\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  hideStackFrames\x2C\x0d\n  codes: {\x0d\n    ERR_NO_CRYPTO\x2C\x0d\n    ERR_UNKNOWN_SIGNAL\x0d\n  }\x2C\x0d\n  uvErrmapGet\x2C\x0d\n  overrideStackTrace\x2C\x0d\n} = require('internal/errors');\x0d\nconst { signals } = internalBinding('constants').os;\x0d\nconst {\x0d\n  isArrayBufferDetached: _isArrayBufferDetached\x2C\x0d\n  privateSymbols: {\x0d\n    arrow_message_private_symbol\x2C\x0d\n    decorated_private_symbol\x2C\x0d\n  }\x2C\x0d\n  sleep: _sleep\x2C\x0d\n  toUSVString: _toUSVString\x2C\x0d\n} = internalBinding('util');\x0d\nconst { isNativeError } = internalBinding('types');\x0d\n\x0d\nconst noCrypto = !process.versions.openssl;\x0d\n\x0d\nconst experimentalWarnings = new SafeSet();\x0d\n\x0d\nconst colorRegExp = /\\u001b\\[\\d\\d?m/g; // eslint-disable-line no-control-regex\x0d\n\x0d\nconst unpairedSurrogateRe =\x0d\n  /(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])/;\x0d\nfunction toUSVString(val) {\x0d\n  const str = `${val}`;\x0d\n  // As of V8 5.5\x2C `str.search()` (and `unpairedSurrogateRe[@@search]()`) are\x0d\n  // slower than `unpairedSurrogateRe.exec()`.\x0d\n  const match = RegExpPrototypeExec(unpairedSurrogateRe\x2C str);\x0d\n  if (!match)\x0d\n    return str;\x0d\n  return _toUSVString(str\x2C match.index);\x0d\n}\x0d\n\x0d\nlet uvBinding;\x0d\n\x0d\nfunction lazyUv() {\x0d\n  uvBinding ??= internalBinding('uv');\x0d\n  return uvBinding;\x0d\n}\x0d\n\x0d\nfunction removeColors(str) {\x0d\n  return StringPrototypeReplace(str\x2C colorRegExp\x2C '');\x0d\n}\x0d\n\x0d\nfunction isError(e) {\x0d\n  // An error could be an instance of Error while not being a native error\x0d\n  // or could be from a different realm and not be instance of Error but still\x0d\n  // be a native error.\x0d\n  return isNativeError(e) || e instanceof Error;\x0d\n}\x0d\n\x0d\n// Keep a list of deprecation codes that have been warned on so we only warn on\x0d\n// each one once.\x0d\nconst codesWarned = new SafeSet();\x0d\n\x0d\nlet validateString;\x0d\n\x0d\n// Mark that a method should not be used.\x0d\n// Returns a modified function which warns once by default.\x0d\n// If --no-deprecation is set\x2C then it is a no-op.\x0d\nfunction deprecate(fn\x2C msg\x2C code) {\x0d\n  if (process.noDeprecation === true) {\x0d\n    return fn;\x0d\n  }\x0d\n\x0d\n  // Lazy-load to avoid a circular dependency.\x0d\n  if (validateString === undefined)\x0d\n    ({ validateString } = require('internal/validators'));\x0d\n\x0d\n  if (code !== undefined)\x0d\n    validateString(code\x2C 'code');\x0d\n\x0d\n  let warned = false;\x0d\n  function deprecated(...args) {\x0d\n    if (!warned) {\x0d\n      warned = true;\x0d\n      if (code !== undefined) {\x0d\n        if (!codesWarned.has(code)) {\x0d\n          process.emitWarning(msg\x2C 'DeprecationWarning'\x2C code\x2C deprecated);\x0d\n          codesWarned.add(code);\x0d\n        }\x0d\n      } else {\x0d\n        process.emitWarning(msg\x2C 'DeprecationWarning'\x2C deprecated);\x0d\n      }\x0d\n    }\x0d\n    if (new.target) {\x0d\n      return ReflectConstruct(fn\x2C args\x2C new.target);\x0d\n    }\x0d\n    return ReflectApply(fn\x2C this\x2C args);\x0d\n  }\x0d\n\x0d\n  // The wrapper will keep the same prototype as fn to maintain prototype chain\x0d\n  ObjectSetPrototypeOf(deprecated\x2C fn);\x0d\n  if (fn.prototype) {\x0d\n    // Setting this (rather than using Object.setPrototype\x2C as above) ensures\x0d\n    // that calling the unwrapped constructor gives an instanceof the wrapped\x0d\n    // constructor.\x0d\n    deprecated.prototype = fn.prototype;\x0d\n  }\x0d\n\x0d\n  return deprecated;\x0d\n}\x0d\n\x0d\nfunction decorateErrorStack(err) {\x0d\n  if (!(isError(err) && err.stack) || err[decorated_private_symbol])\x0d\n    return;\x0d\n\x0d\n  const arrow = err[arrow_message_private_symbol];\x0d\n\x0d\n  if (arrow) {\x0d\n    err.stack = arrow + err.stack;\x0d\n    err[decorated_private_symbol] = true;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction assertCrypto() {\x0d\n  if (noCrypto)\x0d\n    throw new ERR_NO_CRYPTO();\x0d\n}\x0d\n\x0d\n// Return undefined if there is no match.\x0d\n// Move the "slow cases" to a separate function to make sure this function gets\x0d\n// inlined properly. That prioritizes the common case.\x0d\nfunction normalizeEncoding(enc) {\x0d\n  if (enc == null || enc === 'utf8' || enc === 'utf-8') return 'utf8';\x0d\n  return slowCases(enc);\x0d\n}\x0d\n\x0d\nfunction slowCases(enc) {\x0d\n  switch (enc.length) {\x0d\n    case 4:\x0d\n      if (enc === 'UTF8') return 'utf8';\x0d\n      if (enc === 'ucs2' || enc === 'UCS2') return 'utf16le';\x0d\n      enc = `${enc}`.toLowerCase();\x0d\n      if (enc === 'utf8') return 'utf8';\x0d\n      if (enc === 'ucs2') return 'utf16le';\x0d\n      break;\x0d\n    case 3:\x0d\n      if (enc === 'hex' || enc === 'HEX' ||\x0d\n          `${enc}`.toLowerCase() === 'hex')\x0d\n        return 'hex';\x0d\n      break;\x0d\n    case 5:\x0d\n      if (enc === 'ascii') return 'ascii';\x0d\n      if (enc === 'ucs-2') return 'utf16le';\x0d\n      if (enc === 'UTF-8') return 'utf8';\x0d\n      if (enc === 'ASCII') return 'ascii';\x0d\n      if (enc === 'UCS-2') return 'utf16le';\x0d\n      enc = `${enc}`.toLowerCase();\x0d\n      if (enc === 'utf-8') return 'utf8';\x0d\n      if (enc === 'ascii') return 'ascii';\x0d\n      if (enc === 'ucs-2') return 'utf16le';\x0d\n      break;\x0d\n    case 6:\x0d\n      if (enc === 'base64') return 'base64';\x0d\n      if (enc === 'latin1' || enc === 'binary') return 'latin1';\x0d\n      if (enc === 'BASE64') return 'base64';\x0d\n      if (enc === 'LATIN1' || enc === 'BINARY') return 'latin1';\x0d\n      enc = `${enc}`.toLowerCase();\x0d\n      if (enc === 'base64') return 'base64';\x0d\n      if (enc === 'latin1' || enc === 'binary') return 'latin1';\x0d\n      break;\x0d\n    case 7:\x0d\n      if (enc === 'utf16le' || enc === 'UTF16LE' ||\x0d\n          `${enc}`.toLowerCase() === 'utf16le')\x0d\n        return 'utf16le';\x0d\n      break;\x0d\n    case 8:\x0d\n      if (enc === 'utf-16le' || enc === 'UTF-16LE' ||\x0d\n        `${enc}`.toLowerCase() === 'utf-16le')\x0d\n        return 'utf16le';\x0d\n      break;\x0d\n    case 9:\x0d\n      if (enc === 'base64url' || enc === 'BASE64URL' ||\x0d\n          `${enc}`.toLowerCase() === 'base64url')\x0d\n        return 'base64url';\x0d\n      break;\x0d\n    default:\x0d\n      if (enc === '') return 'utf8';\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction emitExperimentalWarning(feature) {\x0d\n  if (experimentalWarnings.has(feature)) return;\x0d\n  const msg = `${feature} is an experimental feature and might change at any time`;\x0d\n  experimentalWarnings.add(feature);\x0d\n  process.emitWarning(msg\x2C 'ExperimentalWarning');\x0d\n}\x0d\n\x0d\nfunction filterDuplicateStrings(items\x2C low) {\x0d\n  const map = new SafeMap();\x0d\n  for (let i = 0; i < items.length; i++) {\x0d\n    const item = items[i];\x0d\n    const key = StringPrototypeToLowerCase(item);\x0d\n    if (low) {\x0d\n      map.set(key\x2C key);\x0d\n    } else {\x0d\n      map.set(key\x2C item);\x0d\n    }\x0d\n  }\x0d\n  return ArrayPrototypeSort(ArrayFrom(map.values()));\x0d\n}\x0d\n\x0d\nfunction cachedResult(fn) {\x0d\n  let result;\x0d\n  return () => {\x0d\n    if (result === undefined)\x0d\n      result = fn();\x0d\n    return ArrayPrototypeSlice(result);\x0d\n  };\x0d\n}\x0d\n\x0d\n// Useful for Wrapping an ES6 Class with a constructor Function that\x0d\n// does not require the new keyword. For instance:\x0d\n//   class A { constructor(x) {this.x = x;}}\x0d\n//   const B = createClassWrapper(A);\x0d\n//   B() instanceof A // true\x0d\n//   B() instanceof B // true\x0d\nfunction createClassWrapper(type) {\x0d\n  function fn(...args) {\x0d\n    return ReflectConstruct(type\x2C args\x2C new.target || type);\x0d\n  }\x0d\n  // Mask the wrapper function name and length values\x0d\n  ObjectDefineProperties(fn\x2C {\x0d\n    name: { __proto__: null\x2C value: type.name }\x2C\x0d\n    length: { __proto__: null\x2C value: type.length }\x2C\x0d\n  });\x0d\n  ObjectSetPrototypeOf(fn\x2C type);\x0d\n  fn.prototype = type.prototype;\x0d\n  return fn;\x0d\n}\x0d\n\x0d\nlet signalsToNamesMapping;\x0d\nfunction getSignalsToNamesMapping() {\x0d\n  if (signalsToNamesMapping !== undefined)\x0d\n    return signalsToNamesMapping;\x0d\n\x0d\n  signalsToNamesMapping = ObjectCreate(null);\x0d\n  for (const key in signals) {\x0d\n    signalsToNamesMapping[signals[key]] = key;\x0d\n  }\x0d\n\x0d\n  return signalsToNamesMapping;\x0d\n}\x0d\n\x0d\nfunction convertToValidSignal(signal) {\x0d\n  if (typeof signal === 'number' && getSignalsToNamesMapping()[signal])\x0d\n    return signal;\x0d\n\x0d\n  if (typeof signal === 'string') {\x0d\n    const signalName = signals[StringPrototypeToUpperCase(signal)];\x0d\n    if (signalName) return signalName;\x0d\n  }\x0d\n\x0d\n  throw new ERR_UNKNOWN_SIGNAL(signal);\x0d\n}\x0d\n\x0d\nfunction getConstructorOf(obj) {\x0d\n  while (obj) {\x0d\n    const descriptor = ObjectGetOwnPropertyDescriptor(obj\x2C 'constructor');\x0d\n    if (descriptor !== undefined &&\x0d\n        typeof descriptor.value === 'function' &&\x0d\n        descriptor.value.name !== '') {\x0d\n      return descriptor.value;\x0d\n    }\x0d\n\x0d\n    obj = ObjectGetPrototypeOf(obj);\x0d\n  }\x0d\n\x0d\n  return null;\x0d\n}\x0d\n\x0d\nfunction getSystemErrorName(err) {\x0d\n  const entry = uvErrmapGet(err);\x0d\n  return entry ? entry[0] : `Unknown system error ${err}`;\x0d\n}\x0d\n\x0d\nfunction getSystemErrorMap() {\x0d\n  return lazyUv().getErrorMap();\x0d\n}\x0d\n\x0d\nconst kCustomPromisifiedSymbol = SymbolFor('nodejs.util.promisify.custom');\x0d\nconst kCustomPromisifyArgsSymbol = Symbol('customPromisifyArgs');\x0d\n\x0d\nlet validateFunction;\x0d\n\x0d\nfunction promisify(original) {\x0d\n  // Lazy-load to avoid a circular dependency.\x0d\n  if (validateFunction === undefined)\x0d\n    ({ validateFunction } = require('internal/validators'));\x0d\n\x0d\n  validateFunction(original\x2C 'original');\x0d\n\x0d\n  if (original[kCustomPromisifiedSymbol]) {\x0d\n    const fn = original[kCustomPromisifiedSymbol];\x0d\n\x0d\n    validateFunction(fn\x2C 'util.promisify.custom');\x0d\n\x0d\n    return ObjectDefineProperty(fn\x2C kCustomPromisifiedSymbol\x2C {\x0d\n      __proto__: null\x2C\x0d\n      value: fn\x2C enumerable: false\x2C writable: false\x2C configurable: true\x0d\n    });\x0d\n  }\x0d\n\x0d\n  // Names to create an object from in case the callback receives multiple\x0d\n  // arguments\x2C e.g. ['bytesRead'\x2C 'buffer'] for fs.read.\x0d\n  const argumentNames = original[kCustomPromisifyArgsSymbol];\x0d\n\x0d\n  function fn(...args) {\x0d\n    return new Promise((resolve\x2C reject) => {\x0d\n      ArrayPrototypePush(args\x2C (err\x2C ...values) => {\x0d\n        if (err) {\x0d\n          return reject(err);\x0d\n        }\x0d\n        if (argumentNames !== undefined && values.length > 1) {\x0d\n          const obj = {};\x0d\n          for (let i = 0; i < argumentNames.length; i++)\x0d\n            obj[argumentNames[i]] = values[i];\x0d\n          resolve(obj);\x0d\n        } else {\x0d\n          resolve(values[0]);\x0d\n        }\x0d\n      });\x0d\n      ReflectApply(original\x2C this\x2C args);\x0d\n    });\x0d\n  }\x0d\n\x0d\n  ObjectSetPrototypeOf(fn\x2C ObjectGetPrototypeOf(original));\x0d\n\x0d\n  ObjectDefineProperty(fn\x2C kCustomPromisifiedSymbol\x2C {\x0d\n    __proto__: null\x2C\x0d\n    value: fn\x2C enumerable: false\x2C writable: false\x2C configurable: true\x0d\n  });\x0d\n\x0d\n  const descriptors = ObjectGetOwnPropertyDescriptors(original);\x0d\n  const propertiesValues = ObjectValues(descriptors);\x0d\n  for (let i = 0; i < propertiesValues.length; i++) {\x0d\n    // We want to use null-prototype objects to not rely on globally mutable\x0d\n    // %Object.prototype%.\x0d\n    ObjectSetPrototypeOf(propertiesValues[i]\x2C null);\x0d\n  }\x0d\n  return ObjectDefineProperties(fn\x2C descriptors);\x0d\n}\x0d\n\x0d\npromisify.custom = kCustomPromisifiedSymbol;\x0d\n\x0d\n// The built-in Array#join is slower in v8 6.0\x0d\nfunction join(output\x2C separator) {\x0d\n  let str = '';\x0d\n  if (output.length !== 0) {\x0d\n    const lastIndex = output.length - 1;\x0d\n    for (let i = 0; i < lastIndex; i++) {\x0d\n      // It is faster not to use a template string here\x0d\n      str += output[i];\x0d\n      str += separator;\x0d\n    }\x0d\n    str += output[lastIndex];\x0d\n  }\x0d\n  return str;\x0d\n}\x0d\n\x0d\n// As of V8 6.6\x2C depending on the size of the array\x2C this is anywhere\x0d\n// between 1.5-10x faster than the two-arg version of Array#splice()\x0d\nfunction spliceOne(list\x2C index) {\x0d\n  for (; index + 1 < list.length; index++)\x0d\n    list[index] = list[index + 1];\x0d\n  list.pop();\x0d\n}\x0d\n\x0d\nconst kNodeModulesRE = /^(.*)[\\\\/]node_modules[\\\\/]/;\x0d\n\x0d\nlet getStructuredStack;\x0d\n\x0d\nfunction isInsideNodeModules() {\x0d\n  if (getStructuredStack === undefined) {\x0d\n    // Lazy-load to avoid a circular dependency.\x0d\n    const { runInNewContext } = require('vm');\x0d\n    // Use `runInNewContext()` to get something tamper-proof and\x0d\n    // side-effect-free. Since this is currently only used for a deprecated API\x2C\x0d\n    // the perf implications should be okay.\x0d\n    getStructuredStack = runInNewContext(`(function() {\x0d\n      try { Error.stackTraceLimit = Infinity; } catch {}\x0d\n      return function structuredStack() {\x0d\n        const e = new Error();\x0d\n        overrideStackTrace.set(e\x2C (err\x2C trace) => trace);\x0d\n        return e.stack;\x0d\n      };\x0d\n    })()`\x2C { overrideStackTrace }\x2C { filename: 'structured-stack' });\x0d\n  }\x0d\n\x0d\n  const stack = getStructuredStack();\x0d\n\x0d\n  // Iterate over all stack frames and look for the first one not coming\x0d\n  // from inside Node.js itself:\x0d\n  if (ArrayIsArray(stack)) {\x0d\n    for (const frame of stack) {\x0d\n      const filename = frame.getFileName();\x0d\n      // If a filename does not start with / or contain \\\x2C\x0d\n      // it's likely from Node.js core.\x0d\n      if (RegExpPrototypeExec(/^\\/|\\\\/\x2C filename) === null)\x0d\n        continue;\x0d\n      return RegExpPrototypeExec(kNodeModulesRE\x2C filename) !== null;\x0d\n    }\x0d\n  }\x0d\n  return false;\x0d\n}\x0d\n\x0d\nfunction once(callback) {\x0d\n  let called = false;\x0d\n  return function(...args) {\x0d\n    if (called) return;\x0d\n    called = true;\x0d\n    return ReflectApply(callback\x2C this\x2C args);\x0d\n  };\x0d\n}\x0d\n\x0d\nlet validateUint32;\x0d\n\x0d\nfunction sleep(msec) {\x0d\n  // Lazy-load to avoid a circular dependency.\x0d\n  if (validateUint32 === undefined)\x0d\n    ({ validateUint32 } = require('internal/validators'));\x0d\n\x0d\n  validateUint32(msec\x2C 'msec');\x0d\n  _sleep(msec);\x0d\n}\x0d\n\x0d\nfunction createDeferredPromise() {\x0d\n  let resolve;\x0d\n  let reject;\x0d\n  const promise = new Promise((res\x2C rej) => {\x0d\n    resolve = res;\x0d\n    reject = rej;\x0d\n  });\x0d\n\x0d\n  return { promise\x2C resolve\x2C reject };\x0d\n}\x0d\n\x0d\n// https://heycam.github.io/webidl/#define-the-operations\x0d\nfunction defineOperation(target\x2C name\x2C method) {\x0d\n  ObjectDefineProperty(target\x2C name\x2C {\x0d\n    __proto__: null\x2C\x0d\n    writable: true\x2C\x0d\n    enumerable: true\x2C\x0d\n    configurable: true\x2C\x0d\n    value: method\x0d\n  });\x0d\n}\x0d\n\x0d\n// https://heycam.github.io/webidl/#es-interfaces\x0d\nfunction exposeInterface(target\x2C name\x2C interfaceObject) {\x0d\n  ObjectDefineProperty(target\x2C name\x2C {\x0d\n    __proto__: null\x2C\x0d\n    writable: true\x2C\x0d\n    enumerable: false\x2C\x0d\n    configurable: true\x2C\x0d\n    value: interfaceObject\x0d\n  });\x0d\n}\x0d\n\x0d\nlet _DOMException;\x0d\nconst lazyDOMExceptionClass = () => {\x0d\n  _DOMException ??= internalBinding('messaging').DOMException;\x0d\n  return _DOMException;\x0d\n};\x0d\n\x0d\nconst lazyDOMException = hideStackFrames((message\x2C name) => {\x0d\n  _DOMException ??= internalBinding('messaging').DOMException;\x0d\n  return new _DOMException(message\x2C name);\x0d\n});\x0d\n\x0d\nconst kEnumerableProperty = ObjectCreate(null);\x0d\nkEnumerableProperty.enumerable = true;\x0d\nObjectFreeze(kEnumerableProperty);\x0d\n\x0d\nconst kEmptyObject = ObjectFreeze(ObjectCreate(null));\x0d\n\x0d\nfunction filterOwnProperties(source\x2C keys) {\x0d\n  const filtered = ObjectCreate(null);\x0d\n  for (let i = 0; i < keys.length; i++) {\x0d\n    const key = keys[i];\x0d\n    if (ObjectPrototypeHasOwnProperty(source\x2C key)) {\x0d\n      filtered[key] = source[key];\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return filtered;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Mimics `obj[key] = value` but ignoring potential prototype inheritance.\x0d\n * @param {any} obj\x0d\n * @param {string} key\x0d\n * @param {any} value\x0d\n * @returns {any}\x0d\n */\x0d\nfunction setOwnProperty(obj\x2C key\x2C value) {\x0d\n  return ObjectDefineProperty(obj\x2C key\x2C {\x0d\n    __proto__: null\x2C\x0d\n    configurable: true\x2C\x0d\n    enumerable: true\x2C\x0d\n    value\x2C\x0d\n    writable: true\x2C\x0d\n  });\x0d\n}\x0d\n\x0d\nlet internalGlobal;\x0d\nfunction getInternalGlobal() {\x0d\n  if (internalGlobal == null) {\x0d\n    // Lazy-load to avoid a circular dependency.\x0d\n    const { runInNewContext } = require('vm');\x0d\n    internalGlobal = runInNewContext('this'\x2C undefined\x2C { contextName: 'internal' });\x0d\n  }\x0d\n  return internalGlobal;\x0d\n}\x0d\n\x0d\nfunction SideEffectFreeRegExpPrototypeExec(regex\x2C string) {\x0d\n  const { RegExp: RegExpFromAnotherRealm } = getInternalGlobal();\x0d\n  return FunctionPrototypeCall(RegExpFromAnotherRealm.prototype.exec\x2C regex\x2C string);\x0d\n}\x0d\n\x0d\nfunction isArrayBufferDetached(value) {\x0d\n  if (ArrayBufferPrototypeGetByteLength(value) === 0) {\x0d\n    return _isArrayBufferDetached(value);\x0d\n  }\x0d\n\x0d\n  return false;\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  assertCrypto\x2C\x0d\n  cachedResult\x2C\x0d\n  convertToValidSignal\x2C\x0d\n  createClassWrapper\x2C\x0d\n  createDeferredPromise\x2C\x0d\n  decorateErrorStack\x2C\x0d\n  defineOperation\x2C\x0d\n  deprecate\x2C\x0d\n  emitExperimentalWarning\x2C\x0d\n  exposeInterface\x2C\x0d\n  filterDuplicateStrings\x2C\x0d\n  filterOwnProperties\x2C\x0d\n  getConstructorOf\x2C\x0d\n  getInternalGlobal\x2C\x0d\n  getSystemErrorMap\x2C\x0d\n  getSystemErrorName\x2C\x0d\n  isArrayBufferDetached\x2C\x0d\n  isError\x2C\x0d\n  isInsideNodeModules\x2C\x0d\n  join\x2C\x0d\n  lazyDOMException\x2C\x0d\n  lazyDOMExceptionClass\x2C\x0d\n  normalizeEncoding\x2C\x0d\n  once\x2C\x0d\n  promisify\x2C\x0d\n  SideEffectFreeRegExpPrototypeExec\x2C\x0d\n  sleep\x2C\x0d\n  spliceOne\x2C\x0d\n  toUSVString\x2C\x0d\n  removeColors\x2C\x0d\n\x0d\n  // Symbol used to customize promisify conversion\x0d\n  customPromisifyArgs: kCustomPromisifyArgsSymbol\x2C\x0d\n\x0d\n  // Symbol used to provide a custom inspect function for an object as an\x0d\n  // alternative to using 'inspect'\x0d\n  customInspectSymbol: SymbolFor('nodejs.util.inspect.custom')\x2C\x0d\n\x0d\n  // Used by the buffer module to capture an internal reference to the\x0d\n  // default isEncoding implementation\x2C just in case userland overrides it.\x0d\n  kIsEncodingSymbol: Symbol('kIsEncodingSymbol')\x2C\x0d\n  kVmBreakFirstLineSymbol: Symbol('kVmBreakFirstLineSymbol')\x2C\x0d\n\x0d\n  kEmptyObject\x2C\x0d\n  kEnumerableProperty\x2C\x0d\n  setOwnProperty\x2C\x0d\n};\x0d\n
code-source-info,0x85728147f8,21,15882,16056,C0O15946C3O15946C7O15919C12O15970C17O16022C22O16032C33O15977C38O16053,,
code-creation,LazyCompile,10,375068,0x8572815cd0,52,getInternalGlobal node:internal/util:548:27,0x3a89978ea70,~
code-source-info,0x8572815cd0,21,15580,15836,C0O15588C7O15701C13O15701C18O15681C23O15721C28O15762C33O15738C41O15736C47O15811C51O15833,,
code-creation,LazyCompile,10,375200,0x8572815fc0,82,runInNewContext node:vm:294:25,0x9147930d40,~
script-source,88,node:vm,// Copyright Joyent\x2C Inc. and other Node contributors.\x0d\n//\x0d\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\x0d\n// copy of this software and associated documentation files (the\x0d\n// "Software")\x2C to deal in the Software without restriction\x2C including\x0d\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\x0d\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\x0d\n// persons to whom the Software is furnished to do so\x2C subject to the\x0d\n// following conditions:\x0d\n//\x0d\n// The above copyright notice and this permission notice shall be included\x0d\n// in all copies or substantial portions of the Software.\x0d\n//\x0d\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\x0d\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\x0d\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\x0d\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\x0d\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\x0d\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\x0d\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\x0d\n\x0d\n'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeForEach\x2C\x0d\n  Symbol\x2C\x0d\n  PromiseReject\x2C\x0d\n  ReflectApply\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  ContextifyScript\x2C\x0d\n  MicrotaskQueue\x2C\x0d\n  makeContext\x2C\x0d\n  constants\x2C\x0d\n  measureMemory: _measureMemory\x2C\x0d\n} = internalBinding('contextify');\x0d\nconst {\x0d\n  ERR_CONTEXT_NOT_INITIALIZED\x2C\x0d\n  ERR_INVALID_ARG_TYPE\x2C\x0d\n} = require('internal/errors').codes;\x0d\nconst {\x0d\n  isArrayBufferView\x2C\x0d\n} = require('internal/util/types');\x0d\nconst {\x0d\n  validateBoolean\x2C\x0d\n  validateFunction\x2C\x0d\n  validateInt32\x2C\x0d\n  validateObject\x2C\x0d\n  validateOneOf\x2C\x0d\n  validateString\x2C\x0d\n  validateUint32\x2C\x0d\n} = require('internal/validators');\x0d\nconst {\x0d\n  emitExperimentalWarning\x2C\x0d\n  kEmptyObject\x2C\x0d\n  kVmBreakFirstLineSymbol\x2C\x0d\n} = require('internal/util');\x0d\nconst {\x0d\n  internalCompileFunction\x2C\x0d\n  isContext\x2C\x0d\n} = require('internal/vm');\x0d\nconst kParsingContext = Symbol('script parsing context');\x0d\n\x0d\nclass Script extends ContextifyScript {\x0d\n  constructor(code\x2C options = kEmptyObject) {\x0d\n    code = `${code}`;\x0d\n    if (typeof options === 'string') {\x0d\n      options = { filename: options };\x0d\n    } else {\x0d\n      validateObject(options\x2C 'options');\x0d\n    }\x0d\n\x0d\n    const {\x0d\n      filename = 'evalmachine.<anonymous>'\x2C\x0d\n      lineOffset = 0\x2C\x0d\n      columnOffset = 0\x2C\x0d\n      cachedData\x2C\x0d\n      produceCachedData = false\x2C\x0d\n      importModuleDynamically\x2C\x0d\n      [kParsingContext]: parsingContext\x2C\x0d\n    } = options;\x0d\n\x0d\n    validateString(filename\x2C 'options.filename');\x0d\n    validateInt32(lineOffset\x2C 'options.lineOffset');\x0d\n    validateInt32(columnOffset\x2C 'options.columnOffset');\x0d\n    if (cachedData !== undefined && !isArrayBufferView(cachedData)) {\x0d\n      throw new ERR_INVALID_ARG_TYPE(\x0d\n        'options.cachedData'\x2C\x0d\n        ['Buffer'\x2C 'TypedArray'\x2C 'DataView']\x2C\x0d\n        cachedData\x0d\n      );\x0d\n    }\x0d\n    validateBoolean(produceCachedData\x2C 'options.produceCachedData');\x0d\n\x0d\n    // Calling `ReThrow()` on a native TryCatch does not generate a new\x0d\n    // abort-on-uncaught-exception check. A dummy try/catch in JS land\x0d\n    // protects against that.\x0d\n    try { // eslint-disable-line no-useless-catch\x0d\n      super(code\x2C\x0d\n            filename\x2C\x0d\n            lineOffset\x2C\x0d\n            columnOffset\x2C\x0d\n            cachedData\x2C\x0d\n            produceCachedData\x2C\x0d\n            parsingContext);\x0d\n    } catch (e) {\x0d\n      throw e; /* node-do-not-add-exception-line */\x0d\n    }\x0d\n\x0d\n    if (importModuleDynamically !== undefined) {\x0d\n      validateFunction(importModuleDynamically\x2C\x0d\n                       'options.importModuleDynamically');\x0d\n      const { importModuleDynamicallyWrap } =\x0d\n        require('internal/vm/module');\x0d\n      const { callbackMap } = internalBinding('module_wrap');\x0d\n      callbackMap.set(this\x2C {\x0d\n        importModuleDynamically:\x0d\n          importModuleDynamicallyWrap(importModuleDynamically)\x2C\x0d\n      });\x0d\n    }\x0d\n  }\x0d\n\x0d\n  runInThisContext(options) {\x0d\n    const { breakOnSigint\x2C args } = getRunInContextArgs(null\x2C options);\x0d\n    if (breakOnSigint && process.listenerCount('SIGINT') > 0) {\x0d\n      return sigintHandlersWrap(super.runInContext\x2C this\x2C args);\x0d\n    }\x0d\n    return ReflectApply(super.runInContext\x2C this\x2C args);\x0d\n  }\x0d\n\x0d\n  runInContext(contextifiedObject\x2C options) {\x0d\n    validateContext(contextifiedObject);\x0d\n    const { breakOnSigint\x2C args } = getRunInContextArgs(\x0d\n      contextifiedObject\x2C\x0d\n      options\x2C\x0d\n    );\x0d\n    if (breakOnSigint && process.listenerCount('SIGINT') > 0) {\x0d\n      return sigintHandlersWrap(super.runInContext\x2C this\x2C args);\x0d\n    }\x0d\n    return ReflectApply(super.runInContext\x2C this\x2C args);\x0d\n  }\x0d\n\x0d\n  runInNewContext(contextObject\x2C options) {\x0d\n    const context = createContext(contextObject\x2C getContextOptions(options));\x0d\n    return this.runInContext(context\x2C options);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction validateContext(contextifiedObject) {\x0d\n  if (!isContext(contextifiedObject)) {\x0d\n    throw new ERR_INVALID_ARG_TYPE('contextifiedObject'\x2C 'vm.Context'\x2C\x0d\n                                   contextifiedObject);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction getRunInContextArgs(contextifiedObject\x2C options = kEmptyObject) {\x0d\n  validateObject(options\x2C 'options');\x0d\n\x0d\n  let timeout = options.timeout;\x0d\n  if (timeout === undefined) {\x0d\n    timeout = -1;\x0d\n  } else {\x0d\n    validateUint32(timeout\x2C 'options.timeout'\x2C true);\x0d\n  }\x0d\n\x0d\n  const {\x0d\n    displayErrors = true\x2C\x0d\n    breakOnSigint = false\x2C\x0d\n    [kVmBreakFirstLineSymbol]: breakFirstLine = false\x2C\x0d\n  } = options;\x0d\n\x0d\n  validateBoolean(displayErrors\x2C 'options.displayErrors');\x0d\n  validateBoolean(breakOnSigint\x2C 'options.breakOnSigint');\x0d\n\x0d\n  return {\x0d\n    breakOnSigint\x2C\x0d\n    args: [\x0d\n      contextifiedObject\x2C\x0d\n      timeout\x2C\x0d\n      displayErrors\x2C\x0d\n      breakOnSigint\x2C\x0d\n      breakFirstLine\x2C\x0d\n    ]\x2C\x0d\n  };\x0d\n}\x0d\n\x0d\nfunction getContextOptions(options) {\x0d\n  if (!options)\x0d\n    return {};\x0d\n  const contextOptions = {\x0d\n    name: options.contextName\x2C\x0d\n    origin: options.contextOrigin\x2C\x0d\n    codeGeneration: undefined\x2C\x0d\n    microtaskMode: options.microtaskMode\x2C\x0d\n  };\x0d\n  if (contextOptions.name !== undefined)\x0d\n    validateString(contextOptions.name\x2C 'options.contextName');\x0d\n  if (contextOptions.origin !== undefined)\x0d\n    validateString(contextOptions.origin\x2C 'options.contextOrigin');\x0d\n  if (options.contextCodeGeneration !== undefined) {\x0d\n    validateObject(options.contextCodeGeneration\x2C\x0d\n                   'options.contextCodeGeneration');\x0d\n    const { strings\x2C wasm } = options.contextCodeGeneration;\x0d\n    if (strings !== undefined)\x0d\n      validateBoolean(strings\x2C 'options.contextCodeGeneration.strings');\x0d\n    if (wasm !== undefined)\x0d\n      validateBoolean(wasm\x2C 'options.contextCodeGeneration.wasm');\x0d\n    contextOptions.codeGeneration = { strings\x2C wasm };\x0d\n  }\x0d\n  if (options.microtaskMode !== undefined)\x0d\n    validateString(options.microtaskMode\x2C 'options.microtaskMode');\x0d\n  return contextOptions;\x0d\n}\x0d\n\x0d\nlet defaultContextNameIndex = 1;\x0d\nfunction createContext(contextObject = {}\x2C options = kEmptyObject) {\x0d\n  if (isContext(contextObject)) {\x0d\n    return contextObject;\x0d\n  }\x0d\n\x0d\n  validateObject(options\x2C 'options');\x0d\n\x0d\n  const {\x0d\n    name = `VM Context ${defaultContextNameIndex++}`\x2C\x0d\n    origin\x2C\x0d\n    codeGeneration\x2C\x0d\n    microtaskMode\x0d\n  } = options;\x0d\n\x0d\n  validateString(name\x2C 'options.name');\x0d\n  if (origin !== undefined)\x0d\n    validateString(origin\x2C 'options.origin');\x0d\n  if (codeGeneration !== undefined)\x0d\n    validateObject(codeGeneration\x2C 'options.codeGeneration');\x0d\n\x0d\n  let strings = true;\x0d\n  let wasm = true;\x0d\n  if (codeGeneration !== undefined) {\x0d\n    ({ strings = true\x2C wasm = true } = codeGeneration);\x0d\n    validateBoolean(strings\x2C 'options.codeGeneration.strings');\x0d\n    validateBoolean(wasm\x2C 'options.codeGeneration.wasm');\x0d\n  }\x0d\n\x0d\n  let microtaskQueue = null;\x0d\n  if (microtaskMode !== undefined) {\x0d\n    validateOneOf(microtaskMode\x2C 'options.microtaskMode'\x2C\x0d\n                  ['afterEvaluate'\x2C undefined]);\x0d\n\x0d\n    if (microtaskMode === 'afterEvaluate')\x0d\n      microtaskQueue = new MicrotaskQueue();\x0d\n  }\x0d\n\x0d\n  makeContext(contextObject\x2C name\x2C origin\x2C strings\x2C wasm\x2C microtaskQueue);\x0d\n  return contextObject;\x0d\n}\x0d\n\x0d\nfunction createScript(code\x2C options) {\x0d\n  return new Script(code\x2C options);\x0d\n}\x0d\n\x0d\n// Remove all SIGINT listeners and re-attach them after the wrapped function\x0d\n// has executed\x2C so that caught SIGINT are handled by the listeners again.\x0d\nfunction sigintHandlersWrap(fn\x2C thisArg\x2C argsArray) {\x0d\n  const sigintListeners = process.rawListeners('SIGINT');\x0d\n\x0d\n  process.removeAllListeners('SIGINT');\x0d\n\x0d\n  try {\x0d\n    return ReflectApply(fn\x2C thisArg\x2C argsArray);\x0d\n  } finally {\x0d\n    // Add using the public methods so that the `newListener` handler of\x0d\n    // process can re-attach the listeners.\x0d\n    ArrayPrototypeForEach(sigintListeners\x2C (listener) => {\x0d\n      process.addListener('SIGINT'\x2C listener);\x0d\n    });\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction runInContext(code\x2C contextifiedObject\x2C options) {\x0d\n  validateContext(contextifiedObject);\x0d\n  if (typeof options === 'string') {\x0d\n    options = {\x0d\n      filename: options\x2C\x0d\n      [kParsingContext]: contextifiedObject\x0d\n    };\x0d\n  } else {\x0d\n    options = { ...options\x2C [kParsingContext]: contextifiedObject };\x0d\n  }\x0d\n  return createScript(code\x2C options)\x0d\n    .runInContext(contextifiedObject\x2C options);\x0d\n}\x0d\n\x0d\nfunction runInNewContext(code\x2C contextObject\x2C options) {\x0d\n  if (typeof options === 'string') {\x0d\n    options = { filename: options };\x0d\n  }\x0d\n  contextObject = createContext(contextObject\x2C getContextOptions(options));\x0d\n  options = { ...options\x2C [kParsingContext]: contextObject };\x0d\n  return createScript(code\x2C options).runInNewContext(contextObject\x2C options);\x0d\n}\x0d\n\x0d\nfunction runInThisContext(code\x2C options) {\x0d\n  if (typeof options === 'string') {\x0d\n    options = { filename: options };\x0d\n  }\x0d\n  return createScript(code\x2C options).runInThisContext(options);\x0d\n}\x0d\n\x0d\nfunction compileFunction(code\x2C params\x2C options = kEmptyObject) {\x0d\n  return internalCompileFunction(code\x2C params\x2C options).function;\x0d\n}\x0d\n\x0d\nconst measureMemoryModes = {\x0d\n  summary: constants.measureMemory.mode.SUMMARY\x2C\x0d\n  detailed: constants.measureMemory.mode.DETAILED\x2C\x0d\n};\x0d\n\x0d\nconst measureMemoryExecutions = {\x0d\n  default: constants.measureMemory.execution.DEFAULT\x2C\x0d\n  eager: constants.measureMemory.execution.EAGER\x2C\x0d\n};\x0d\n\x0d\nfunction measureMemory(options = kEmptyObject) {\x0d\n  emitExperimentalWarning('vm.measureMemory');\x0d\n  validateObject(options\x2C 'options');\x0d\n  const { mode = 'summary'\x2C execution = 'default' } = options;\x0d\n  validateOneOf(mode\x2C 'options.mode'\x2C ['summary'\x2C 'detailed']);\x0d\n  validateOneOf(execution\x2C 'options.execution'\x2C ['default'\x2C 'eager']);\x0d\n  const result = _measureMemory(measureMemoryModes[mode]\x2C\x0d\n                                measureMemoryExecutions[execution]);\x0d\n  if (result === undefined) {\x0d\n    return PromiseReject(new ERR_CONTEXT_NOT_INITIALIZED());\x0d\n  }\x0d\n  return result;\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  Script\x2C\x0d\n  createContext\x2C\x0d\n  createScript\x2C\x0d\n  runInContext\x2C\x0d\n  runInNewContext\x2C\x0d\n  runInThisContext\x2C\x0d\n  isContext\x2C\x0d\n  compileFunction\x2C\x0d\n  measureMemory\x2C\x0d\n};\x0d\n\x0d\n// The vm module is patched to include vm.Module\x2C vm.SourceTextModule\x0d\n// and vm.SyntheticModule in the pre-execution phase when\x0d\n// --experimental-vm-modules is on.\x0d\n
code-source-info,0x8572815fc0,88,9255,9590,C0O9291C6O9331C13O9353C22O9372C28O9417C33O9388C40O9449C47O9474C53O9492C61O9512C64O9519C70O9546C75O9547C81O9587,,
code-creation,LazyCompile,10,376073,0x8572816f10,214,getContextOptions node:vm:188:27,0x9147930bb0,~
code-source-info,0x8572816f10,88,5809,6877,C0O5824C4O5843C5O5853C6O5880C11O5901C19O5935C28O5971C32O6010C43O6053C49O6078C54O6108C62O6078C67O6160C73O6187C78O6217C86O6187C91O6266C97O6310C102O6333C110O6310C115O6449C120O6423C125O6432C130O6477C134O6511C142O6511C147O6583C151O6614C159O6614C164O6680C171O6714C177O6723C183O6710C187O6751C193O6785C198O6808C206O6785C211O6852C213O6874,,
code-creation,LazyCompile,10,376262,0x8572817350,289,createContext node:vm:217:23,0x9147930c00,~
code-source-info,0x8572817350,88,6937,8099,C4O6937C16O6968C23O6987C28O6991C34O7024C36O7045C37O7056C45O7056C50O7110C64O7117C74O7154C87O7165C92O7178C97O7199C102O7234C110O7234C115O7275C119O7306C127O7306C132O7351C136O7390C144O7390C149O7467C151O7487C153O7496C157O7540C168O7556C176O7594C184O7594C189O7659C197O7659C202O7744C204O7753C208O7793C216O7807C225O7884C235O7793C240O7904C242O7922C247O7950C252O7967C258O7999C281O7999C286O8075C288O8096,,
code-creation,LazyCompile,10,376385,0x8572817608,31,isContext node:internal/vm:24:19,0x9147931c18,~
script-source,89,node:internal/vm,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeForEach\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  compileFunction\x2C\x0d\n  isContext: _isContext\x2C\x0d\n} = internalBinding('contextify');\x0d\nconst {\x0d\n  validateArray\x2C\x0d\n  validateBoolean\x2C\x0d\n  validateBuffer\x2C\x0d\n  validateFunction\x2C\x0d\n  validateObject\x2C\x0d\n  validateString\x2C\x0d\n  validateUint32\x2C\x0d\n} = require('internal/validators');\x0d\nconst {\x0d\n  ERR_INVALID_ARG_TYPE\x2C\x0d\n} = require('internal/errors').codes;\x0d\n\x0d\nfunction isContext(object) {\x0d\n  validateObject(object\x2C 'object'\x2C { __proto__: null\x2C allowArray: true });\x0d\n\x0d\n  return _isContext(object);\x0d\n}\x0d\n\x0d\nfunction internalCompileFunction(code\x2C params\x2C options) {\x0d\n  validateString(code\x2C 'code');\x0d\n  if (params !== undefined) {\x0d\n    validateArray(params\x2C 'params');\x0d\n    ArrayPrototypeForEach(params\x2C\x0d\n                          (param\x2C i) => validateString(param\x2C `params[${i}]`));\x0d\n  }\x0d\n\x0d\n  const {\x0d\n    filename = ''\x2C\x0d\n    columnOffset = 0\x2C\x0d\n    lineOffset = 0\x2C\x0d\n    cachedData = undefined\x2C\x0d\n    produceCachedData = false\x2C\x0d\n    parsingContext = undefined\x2C\x0d\n    contextExtensions = []\x2C\x0d\n    importModuleDynamically\x2C\x0d\n  } = options;\x0d\n\x0d\n  validateString(filename\x2C 'options.filename');\x0d\n  validateUint32(columnOffset\x2C 'options.columnOffset');\x0d\n  validateUint32(lineOffset\x2C 'options.lineOffset');\x0d\n  if (cachedData !== undefined)\x0d\n    validateBuffer(cachedData\x2C 'options.cachedData');\x0d\n  validateBoolean(produceCachedData\x2C 'options.produceCachedData');\x0d\n  if (parsingContext !== undefined) {\x0d\n    if (\x0d\n      typeof parsingContext !== 'object' ||\x0d\n      parsingContext === null ||\x0d\n      !isContext(parsingContext)\x0d\n    ) {\x0d\n      throw new ERR_INVALID_ARG_TYPE(\x0d\n        'options.parsingContext'\x2C\x0d\n        'Context'\x2C\x0d\n        parsingContext\x0d\n      );\x0d\n    }\x0d\n  }\x0d\n  validateArray(contextExtensions\x2C 'options.contextExtensions');\x0d\n  ArrayPrototypeForEach(contextExtensions\x2C (extension\x2C i) => {\x0d\n    const name = `options.contextExtensions[${i}]`;\x0d\n    validateObject(extension\x2C name\x2C { __proto__: null\x2C nullable: true });\x0d\n  });\x0d\n\x0d\n  const result = compileFunction(\x0d\n    code\x2C\x0d\n    filename\x2C\x0d\n    lineOffset\x2C\x0d\n    columnOffset\x2C\x0d\n    cachedData\x2C\x0d\n    produceCachedData\x2C\x0d\n    parsingContext\x2C\x0d\n    contextExtensions\x2C\x0d\n    params\x0d\n  );\x0d\n\x0d\n  if (produceCachedData) {\x0d\n    result.function.cachedDataProduced = result.cachedDataProduced;\x0d\n  }\x0d\n\x0d\n  if (result.cachedData) {\x0d\n    result.function.cachedData = result.cachedData;\x0d\n  }\x0d\n\x0d\n  if (importModuleDynamically !== undefined) {\x0d\n    validateFunction(importModuleDynamically\x2C\x0d\n                     'options.importModuleDynamically');\x0d\n    const { importModuleDynamicallyWrap } =\x0d\n      require('internal/vm/module');\x0d\n    const { callbackMap } = internalBinding('module_wrap');\x0d\n    const wrapped = importModuleDynamicallyWrap(importModuleDynamically);\x0d\n    const func = result.function;\x0d\n    callbackMap.set(result.cacheKey\x2C {\x0d\n      importModuleDynamically: (s\x2C _k\x2C i) => wrapped(s\x2C func\x2C i)\x2C\x0d\n    });\x0d\n  }\x0d\n\x0d\n  return result;\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  internalCompileFunction\x2C\x0d\n  isContext\x2C\x0d\n};\x0d\n
code-source-info,0x8572817608,89,437,558,C0O451C8O466C16O451C21O529C26O536C30O555,,
code-creation,LazyCompile,10,377342,0x8572834630,19,createScript node:vm:258:22,0x9147930c50,~
code-source-info,0x8572834630,88,8124,8181,C0O8145C13O8152C18O8178,,
code-creation,LazyCompile,10,377500,0x8572834a68,377,Script node:vm:66:14,0x9147930700,~
code-source-info,0x8572834a68,88,2083,3948,C14O2100C21O2121C25O2144C31O2186C38O2208C49O2240C59O2240C64O2305C76O2350C84O2373C92O2398C97O2417C105O2451C110O2502C124O2543C134O2543C139O2594C149O2594C154O2648C164O2648C169O2706C177O2739C180O2739C186O2779C206O2785C211O2779C212O2931C222O2931C230O3232C234O3389C259O3232C287O3432C289O3432C290O3492C294O3544C304O3544C309O3702C317O3702C322O3661C327O3764C335O3764C340O3748C345O3815C359O3872C367O3815C376O3947,,
code-creation,LazyCompile,10,377649,0x8572834dd0,155, node:internal/validators:115:3,0x3a899792ac0,~
code-source-info,0x8572834dd0,22,2925,3399,C36O3068C42O3108C58O3114C63O3108C64O3175C69O3180C75O3213C91O3219C96O3213C97O3280C99O3290C106O3305C111O3321C121O3360C134O3373C147O3327C152O3321C154O3398,,
code-creation,Script,10,377757,0x8572835030,5, evalmachine.<anonymous>:1:1,0x8572834f68,~
script-source,475,evalmachine.<anonymous>,this
code-source-info,0x8572835030,475,0,4,C0O0C4O4,,
code-creation,LazyCompile,10,377844,0x85728351a0,33,runInNewContext node:vm:144:18,0x9147930ac0,~
code-source-info,0x85728351a0,88,4677,4836,C0O4725C10O4754C15O4725C21O4800C26O4800C32O4831,,
code-creation,LazyCompile,10,377942,0x85728352f8,109,runInContext node:vm:132:15,0x9147930a70,~
code-source-info,0x85728352f8,88,4273,4656,C0O4310C5O4310C9O4384C14O4384C20O4360C25O4375C30O4461C39O4490C47O4490C54O4514C59O4528C66O4560C77O4535C82O4586C83O4599C92O4625C103O4606C108O4651,,
code-creation,LazyCompile,10,378027,0x85728354a0,35,validateContext node:vm:150:25,0x9147930b10,~
code-source-info,0x85728354a0,88,4867,5067,C0O4893C5O4898C11O4936C27O4942C32O4936C34O5066,,
code-creation,LazyCompile,10,378132,0x8572835750,188,getRunInContextArgs node:vm:157:29,0x9147930b60,~
code-source-info,0x8572835750,88,5099,5779,C9O5130C16O5149C24O5149C29O5212C34O5224C36O5258C41O5289C54O5289C59O5362C70O5389C78O5444C93O5489C101O5489C106O5549C114O5549C119O5611C126O5625C130O5651C139O5660C148O5687C157O5703C166O5725C175O5747C187O5776,,
code-creation,LazyCompile,10,378476,0x8572835a00,63,handleErrorFromBinding node:internal/fs/utils:344:32,0x914791d4d8,~
code-source-info,0x8572835a00,79,8329,8840,C0O8348C6O8412C11O8412C16O8435C24O8435C29O8493C31O8493C32O8520C38O8752C43O8779C51O8752C56O8826C60O8816C62O8839,,
code-creation,LazyCompile,10,378571,0x8572835b48,53,nextPart node:fs:2452:31,0x2dbe93f5860,~
code-source-info,0x8572835b48,75,67981,68232,C0O68008C4O68004C9O68041C14O68041C20O68125C22O68136C24O68132C31O68166C33O68162C38O68195C40O68204C41O68018C47O67995C50O68217C52O68227,,
code-creation,LazyCompile,10,378758,0x8572835d40,34,isFileType node:fs:214:20,0x2dbe93f3b88,~
code-source-info,0x8572835d40,75,5628,5876,C0O5765C2O5770C6O5778C10O5813C15O5820C20O5837C22O5852C24O5850C30O5860C33O5873,,
code-creation,LazyCompile,10,379371,0x8572835e90,72,encodeRealpathResult node:fs:2439:30,0x2dbe93f5810,~
code-source-info,0x8572835e90,75,67570,67836,C0O67593C4O67618C10O67638C17O67647C22O67664C24O67678C25O67699C30O67706C35O67706C41O67735C48O67744C53O67765C55O67781C56O67806C61O67823C66O67806C71O67833,,
code-creation,Function,11,379597,0x7ff6a66cc240,6232,resolve node:path:158:10,0x2dbe93dae18,^
code-source-info,0x7ff6a66cc240,73,4875,9786,,,
code-creation,Function,11,379643,0x7ff6a66cdb40,184, node:internal/modules/cjs/loader:226:41,0x14dbcba4930,^
code-source-info,0x7ff6a66cdb40,448,6936,6962,,,
code-creation,Function,11,379680,0x7ff6a66cdc80,392,isWindowsDeviceRoot node:path:60:29,0x2dbe93dad28,^
code-source-info,0x7ff6a66cdc80,73,1991,2136,,,
code-creation,Function,11,379714,0x7ff6a66cdec0,260,getOwnPropertyValueOrDefault node:internal/validators:228:38,0x3a899792d88,^
code-source-info,0x7ff6a66cdec0,22,6087,6235,,,
code-creation,Function,11,379755,0x7ff6a66ce080,552,nextPart node:fs:2452:31,0x2dbe93f5860,^
code-source-info,0x7ff6a66ce080,75,67981,68232,,,
code-creation,Function,11,379790,0x7ff6a66ce340,272,validateString node:internal/validators:161:24,0x3a899792b60,^
code-source-info,0x7ff6a66ce340,22,4279,4391,,,
code-creation,LazyCompile,10,379892,0x8572836680,118,shouldUseESMLoader node:internal/modules/run_main:30:28,0x8572805470,~
code-source-info,0x8572836680,474,870,1612,C0O1060C8O1060C13O1120C19O1127C24O1137C25O1149C26O1194C34O1194C39O1252C41O1284C46O1301C47O1313C48O1363C54O1379C60O1379C67O1427C68O1439C69O1443C75O1460C81O1460C88O1508C89O1521C90O1537C95O1537C100O1568C102O1586C107O1591C114O1596C117O1609,,
tick,0x7ff726acd53c,380195,0,0x0,3,0x7ff726074500,0x8572806429,0xb505335712
code-creation,LazyCompile,10,380276,0x85728368b0,131,readPackageScope node:internal/modules/cjs/loader:377:26,0x14dbcba42e0,~
code-source-info,0x85728368b0,448,10756,11290,C0O10800C7O10834C10O10800C16O10847C18O10876C25O10931C28O10893C34O10942C47O10954C54O11011C61O11050C66O11054C70O11015C77O11080C78O11093C79O11113C86O11138C88O11136C92O11113C97O11149C99O11160C106O11182C112O11202C118O11220C119O11248C121O11248C126O10866C129O11274C130O11287,,
code-creation,LazyCompile,10,380462,0x8572836be0,202,readPackage node:internal/modules/cjs/loader:335:21,0x14dbcba4290,~
code-source-info,0x8572836be0,448,9669,10429,C0O9705C5O9710C13O9710C20O9770C25O9787C30O9787C36O9805C38O9833C40O9849C41O9870C46O9888C51O9888C57O9927C63O9940C72O9966C77O9977C79O10008C84O10025C91O10025C97O10052C98O10065C102O10104C109O10124C112O10124C122O10104C128O10238C133O10255C138O10255C144O10285C146O10301C158O10324C163O10331C167O10348C175O10377C181O10388C188O10399C192O10395C195O10358C199O10413C201O10413,,
code-creation,LazyCompile,10,380669,0x8572836ec0,199,read node:internal/modules/package_json_reader:16:14,0x14dbcbaa8d0,~
code-source-info,0x8572836ec0,449,307,992,C0O323C5O333C10O333C17O355C22O368C27O368C32O382C33O432C40O461C43O461C48O432C53O404C59O415C66O512C73O514C79O522C86O568C92O568C97O549C102O600C106O633C112O670C115O681C127O732C132O766C142O679C148O805C154O853C159O853C164O885C169O894C174O894C180O943C185O949C190O949C196O975C198O989,,
code-creation,LazyCompile,10,381251,0x8572837368,61,filterOwnProperties node:internal/util:518:29,0x3a89978e9d0,~
code-source-info,0x8572837368,21,14901,15154,C0O14938C7O14938C12O14974C14O14986C18O14979C23O15018C25O15022C29O15032C34O15036C41O15089C43O15111C46O15103C50O14995C55O14961C58O15135C60O15151,,
code-creation,LazyCompile,10,381375,0x8572837540,70,runMainESM node:internal/modules/run_main:51:20,0x85728054c0,~
code-source-info,0x8572837540,474,1635,1984,C0O1635C12O1671C20O1671C25O1659C30O1740C38O1740C43O1722C49O1770C54O1788C59O1788C64O1770C69O1983,,
code-creation,LazyCompile,10,381488,0x8572837780,216,loadESM node:internal/process/esm_loader:88:41,0x14dbcbab318,~
code-source-info,0x8572837780,450,2757,3084,C10O2757C21O2784C24O2790C35O2784C58O2815C60O2830C63O2821C75O2815C113O2866C120O2870C125O2918C130O2926C138O2926C143O2955C152O2962C153O2975C161O2975C166O3000C176O3001C193O3083,,
code-creation,LazyCompile,10,381626,0x8572837da8,286,initializeLoader node:internal/process/esm_loader:54:32,0x14dbcbab1e8,~
code-source-info,0x8572837da8,450,1734,2713,C10O1734C18O1742C24O1766C33O1773C34O1808C40O1808C45O1789C50O1862C53O1862C58O1926C64O1933C69O1940C78O1947C79O1957C84O1976C87O1990C92O1990C99O1996C106O1980C107O2021C110O2286C115O2286C121O2437C128O2470C131O2470C136O2488C143O2500C148O2500C159O2443C172O2413C198O2629C203O2645C208O2645C221O2629C244O2686C248O2703C263O2712,,
code-creation,LazyCompile,10,381759,0x8572838098,169,handleMainPromise node:internal/modules/run_main:62:33,0x8572805510,~
code-source-info,0x8572838098,474,2020,2177,C10O2020C18O2035C21O2043C31O2054C34O2043C43O2088C53O2095C90O2130C93O2138C103O2150C106O2138C146O2176,,
code-creation,LazyCompile,10,381861,0x8572838258,77, node:internal/modules/run_main:55:29,0x8572837478,~
code-source-info,0x8572838258,474,1796,1978,C0O1831C7O1836C15O1836C24O1866C30O1866C35O1889C44O1929C55O1953C60O1953C71O1935C76O1973,,
code-creation,LazyCompile,10,381999,0x85728384d8,283,pathToFileURL node:internal/url:1528:23,0x914790fa90,~
code-source-info,0x85728384d
code-creation,LazyCompile,10,382151,0x85728387a0,136,URL node:internal/url:637:14,0x914790e918,~
code-source-info,0x85728387a0,76,18283,18687,C13O18351C17O18380C19O18399C23O18432C30O18447C40O18461C42O18460C46O18483C50O18488C57O18503C60O18499C65O18497C69O18522C85O18575C93O18575C103O18632C117O18632C129O18522C135O18686,,
code-creation,LazyCompile,10,382237,0x8572838978,51,URLContext node:internal/url:162:14,0x914790e0f8,~
code-source-info,0x8572838978,76,3913,4135,C0O3923C1O3934C5O3944C7O3956C11O3968C13O3982C17O3993C19O4007C23O4018C24O4028C28O4041C29O4051C33O4064C35O4074C39O4085C40O4096C44O4109C45O4123C50O4134,,
code-creation,LazyCompile,10,382396,0x8572838bb8,190,onParseComplete node:internal/url:545:25,0x914790e5f8,~
code-source-info,0x8572838bb8,76,15288,15974,C0O15404C2O15409C4O15408C8O15422C10O15432C14O15444C16O15455C20O15470C22O15494C24O15492C29O15518C43O15483C47O15544C49O15568C51O15566C56O15592C70O15557C74O15618C76O15627C80O15638C82O15658C84O15656C89O15678C101O15686C103O15647C107O15700C109O15710C113O15722C115O15735C119O15750C121O15759C125O15770C127O15780C129O15779C134O15834C136O15839C141O15859C144O15855C149O15853C153O15883C155O15888C157O15887C163O15902C168O15911C172O15927C177O15949C179O15948C183O15927C189O15973,,
code-creation,LazyCompile,10,382697,0x8572839030,934,URLSearchParams node:internal/url:184:14,0x914790e198,~
code-source-info,0x
code-creation,LazyCompile,10,382932,0x8572839658,35,initSearchParams node:internal/url:1088:26,0x914790f630,~
code-source-info,0x8572839658,76,30623,30744,C0O30640C4O30658C6O30662C11O30676C15O30687C16O30694C17O30703C19O30707C25O30723C29O30721C34O30743,,
code-creation,LazyCompile,10,383078,0x8572839808,199,encodePathChars node:internal/url:1513:25,0x914790fa40,~
code-source-info,0x8572839808,76,43406,44111,C0O43422C8O43426C15O43471C22O43515C31O43482C38O43597C46O43615C52O43615C59O43661C66O43705C75O43672C82O43732C90O43736C97O43782C104O43826C113O43793C120O43851C128O43855C135O43901C142O43945C151O43912C158O43977C166O43981C173O44027C180O44071C189O44038C196O44092C198O44108,,
code-creation,LazyCompile,10,383201,0x8572839a40,99,set pathname node:internal/url:937:15,0x914790f260,~
code-source-info,0x8572839a40,76,26446,26724,C0O26460C5O26465C11O26489C23O26495C28O26489C29O26564C34O26587C38O26596C40O26595C45O26618C46O26625C47O26631C58O26643C67O26666C69O26665C78O26707C83O26707C92O26631C98O26723,,
code-creation,LazyCompile,10,383280,0x8572839ba8,22,isURLThis node:internal/url:632:19,0x914790e8c8,~
code-source-info,0x8572839ba8,76,18162,18253,C0O18174C3O18187C9O18209C14O18226C16O18225C20O18235C21O18250,,
code-creation,LazyCompile,10,383339,0x8572839cb0,31, node:internal/url:654:21,0x914790ea00,~
code-source-info,0x8572839cb0,76,18800,18877,C0O18810C4O18823C6O18822C10O18832C19O18840C21O18838C26O18866C30O18872,,
code-creation,LazyCompile,10,383440,0x8572839dd8,108,onParsePathComplete node:internal/url:604:29,0x914790e7d8,~
code-source-info,0x8572839dd8,76,17306,17788,C0O17426C2O17431C4O17430C8O17444C10O17457C12O17455C17O17477C22O17491C24O17500C28O17513C35O17526C40O17523C46O17563C48O17572C52O17583C59O17597C61O17596C66O17593C70O17679C72O17692C74O17690C79O17712C84O17726C86O17735C90O17748C97O17761C102O17758C107O17787,,
code-creation,LazyCompile,10,383535,0x8572839f80,44,get href node:internal/url:754:11,0x914790eb90,~
code-source-info,0x8572839f80,76,21630,21737,C0O21640C5O21645C11O21669C23O21675C28O21669C29O21709C33O21721C35O21720C39O21729C43O21732,,
code-creation,LazyCompile,10,383684,0x857283a278,393, node:internal/url:700:12,0x914790eaf0,~
code-source-info,0x857283a
code-creation,LazyCompile,10,383924,0x857283a750,345,import node:internal/modules/esm/loader:509:15,0x14dbcbacca0,~
code-source-info,0x857283a750,451,15380,16734,C10O15380C18O16017C25O16017C30O16048C32O16063C41O16077C50O16124C55O16150C64O16150C70O16188C81O16383C90O16203C98O16193C100O16193C116O16231C124O16254C138O16231C145O16297C156O16298C162O16332C173O16333C178O16224C189O16175C204O16411C211O16417C223O16411C249O16461C253O16476C254O16493C265O16497C266O16553C268O16558C270O16558C275O16592C282O16649C291O16682C300O16595C304O16568C309O16540C312O16711C322O16729,,
code-creation,LazyCompile,10,384097,0x857283aaf8,245,getModuleJob node:internal/modules/esm/loader:410:21,0x14dbcbacc50,~
code-source-info,0x857283aaf8,451,12019,12962,C10O12019C18O12071C20O12186C22O12195C26O12202C31O12207C38O12214C43O12381C54O12450C63O12534C80O12534C93O12523C116O12500C121O12508C126O12615C131O12625C136O12651C141O12625C148O12726C152O12771C157O12781C164O12807C174O12781C179O12829C183O12861C185O12872C206O12888C212O12946C222O12957,,
code-creation,LazyCompile,10,384319,0x857283b1f8,566,resolve node:internal/modules/esm/loader:789:16,0x14dbcbacde0,~
code-source-info,0x857283b1f
code-creation,LazyCompile,10,384574,0x857283bae0,278,nextHookFactory node:internal/modules/esm/loader:114:25,0x14dbcbaca40,~
code-source-info,0x857283bae0,451,3596,5713,C0O3596C25O3612C31O3626C59O3703C64O3690C70O3766C80O3777C84O3771C88O3729C94O3745C100O3838C107O3851C114O3886C118O3851C127O3898C136O3898C141O3891C148O3838C150O4127C155O4132C159O4127C161O4150C162O4150C164O4167C169O4176C175O4186C180O4329C191O4343C195O4354C210O4392C219O4400C227O4414C231O4369C236O4367C240O4502C244O4515C246O4700C268O5689C272O4707C277O5710,,
code-creation,LazyCompile,10,384769,0x857283bef0,399,ObjectDefineProperty.__proto__ node:internal/modules/esm/loader:148:5,0x857283b918,~
code-source-info,0x857283bef0,451,4734,5643,C10O4734C36O4748C60O4861C69O4889C81O4906C93O4884C97O4928C108O4944C111O4949C125O4977C144O4928C149O5048C158O5057C160O5056C164O5077C178O5085C193O5105C206O5206C212O5229C217O5238C225O5257C229O5276C233O5367C244O5380C247O5385C252O5367C257O5437C266O5454C269O5459C276O5468C282O5443C295O5437C321O5492C328O5492C333O5546C340O5556C349O5571C354O5583C362O5603C366O5620C376O5634,,
code-creation,LazyCompile,10,384891,0x857283c1d0,50,validateArgs node:internal/modules/esm/loader:822:26,0x857283ae48,~
code-source-info,0x857283c1d0,451,24916,25192,C0O24972C9O25028C17O24972C22O25124C26O25133C35O25156C43O25133C49O25191,,
code-creation,LazyCompile,10,385238,0x857283c690,912,defaultResolve node:internal/modules/esm/resolve:1063:30,0x14dbcbb6928,~
code-source-info,0x857283c
code-creation,LazyCompile,10,385522,0x857283f2c8,31,shouldBeTreatedAsRelativeOrAbsolutePath node:internal/modules/esm/resolve:910:49,0x14dbcbb6748,~
code-source-info,0x857283f2c8,455,31129,31268,C0O31146C2O31160C7O31168C8O31181C9O31185C10O31198C16O31202C21O31211C22O31223C23O31227C26O31234C30O31265,,
code-creation,LazyCompile,10,385605,0x857283f3e0,81,isRelativeSpecifier node:internal/modules/esm/resolve:900:29,0x14dbcbb66f8,~
code-source-info,0x857283f3e0,455,30826,31077,C0O30843C1O30856C7O30860C12O30890C19O30897C26O30915C32O30919C37O30928C38O30940C39O30946C41O30959C47O30963C52O30995C59O31002C66O31020C72O31024C77O31033C78O31045C79O31061C80O31074,,
code-creation,LazyCompile,10,385712,0x857283f580,44,get protocol node:internal/url:796:15,0x914790ecd0,~
code-source-info,0x857283f580,76,22755,22867,C0O22765C5O22770C11O22794C23O22800C28O22794C29O22834C33O22846C35O22845C39O22855C43O22862,,
code-creation,LazyCompile,10,385814,0x857283f7a8,183,checkIfDisallowedImport node:internal/modules/esm/resolve:995:33,0x14dbcbb6838,~
code-source-info,0x857283f7a8,455,34030,35228,C0O34072C4O34128C11O34137C16O34175C23O34184C28O34213C31O34217C37O34376C41O34408C48O34417C53O34451C60O34460C65O34496C81O34502C86O34496C87O34694C92O34715C102O34722C103O34739C108O34757C113O34757C122O34803C125O34817C130O34817C137O34867C153O34873C158O34867C159O35053C175O35059C180O35053C182O35227,,
code-creation,LazyCompile,10,385925,0x857283fa08,104,throwIfUnsupportedURLScheme node:internal/modules/esm/resolve:1042:37,0x14dbcbb68d8,~
code-source-info,0x857283fa08,455,35475,35946,C0O35517C4O35549C11O35558C16O35585C23O35594C30O35624C32O35679C39O35688C44O35720C51O35729C56O35769C63O35818C77O35877C88O35818C96O35775C101O35769C103O35945,,
code-creation,LazyCompile,10,386072,0x857283fbc0,64,getConditionsSet node:internal/modules/esm/resolve:158:26,0x14dbcbb6018,~
code-source-info,0x857283fbc0,455,5399,5735,C0O5417C6O5464C8O5460C13O5491C18O5496C24O5531C40O5537C45O5531C46O5662C53O5669C58O5693C59O5702C63O5732,,
code-creation,LazyCompile,10,386180,0x857283fd38,166,moduleResolve node:internal/modules/esm/resolve:923:23,0x14dbcbb6798,~
code-source-info,0x857283fd38,455,31492,32284,C0O31567C7O31576C12O31601C19O31610C23O31733C25O31746C28O31750C34O31809C47O31820C55O31856C60O31882C66O31886C71O31902C83O31913C94O31995C101O32006C110O32004C111O32048C115O32074C127O32085C133O32167C140O32176C145O32196C147O32212C148O32221C160O32228C165O32281,,
code-creation,LazyCompile,10,386401,0x2a6f0bbdcb0,520,finalizeResolution node:internal/modules/esm/resolve:290:28,0x14dbcbb61f8,~
code-source-info,0x2a6f0bbdcb
code-creation,LazyCompile,10,386604,0x2a6f0bbe108,107,get pathname node:internal/url:926:15,0x914790f1f0,~
code-source-info,0x2a6f0bbe108,76,26159,26428,C0O26169C5O26174C11O26198C23O26204C28O26198C29O26250C33O26255C35O26254C39O26270C43O26279C45O26278C50O26312C56O26316C59O26320C60O26334C65O26339C71O26346C76O26360C78O26370C79O26376C86O26387C89O26410C97O26387C106O26423,,
code-creation,LazyCompile,10,386793,0x2a6f0bbe3c8,106,fileURLToPath node:internal/url:1486:23,0x914790f9f0,~
code-source-info,0x2a6f0bbe3c8,76,42270,42603,C0O42282C6O42317C13O42324C22O42347C25O42352C31O42378C49O42384C54O42378C55O42455C62O42464C67O42482C77O42488C82O42482C83O42527C92O42546C101O42574C105O42600,,
code-creation,LazyCompile,10,386918,0x2a6f0bbe608,179,get origin node:internal/url:771:13,0x914790ec60,~
code-source-info,0x2a6f0bbe608,76,22088,22737,C0O22098C5O22103C11O22127C23O22133C28O22127C29O22241C33O22246C35O22245C39O22273C88O22321C93O22326C99O22333C107O22370C112O22390C118O22394C124O22378C130O22400C134O22407C139O22505C145O22526C146O22638C151O22670C156O22682C161O22692C166O22645C171O22698C172O22711C178O22732,,
code-creation,LazyCompile,10,387072,0x2a6f0bbe920,261,getPathFromURLWin32 node:internal/url:1433:29,0x914790f950,~
code-source-info,0x2a6f0bbe
code-creation,LazyCompile,10,387196,0x2a6f0bbebd0,48,get hostname node:internal/url:884:15,0x914790f040,~
code-source-info,0x2a6f0bbebd0,76,25059,25175,C0O25069C5O25074C11O25098C23O25104C28O25098C29O25138C33O25150C35O25149C39O25159C47O25170,,
code-creation,LazyCompile,10,387337,0x2a6f0bbef60,30,tryStatSync node:internal/modules/esm/resolve:176:3,0x14dbcbb6978,~
code-source-info,0x2a6f0bbef60,455,5877,5943,C0O5932C5O5896C10O5887C21O5936C24O5932C29O5943,,
code-creation,LazyCompile,10,387442,0x2a6f0bbf118,123,statSync node:fs:1588:18,0x2dbe93f4d38,~
code-source-info,0x2a6f0bbf118,75,42315,42729,C7O42315C16O42378C21O42385C26O42424C33O42426C40O42451C45O42459C52O42464C55O42475C60O42475C66O42537C76O42459C82O42577C88O42592C96O42605C102O42634C103O42651C104O42660C109O42660C113O42692C118O42699C122O42726,,
code-creation,LazyCompile,10,387529,0x2a6f0bbf2b8,37, node:internal/fs/utils:686:42,0x914791ded8,~
code-source-info,0x2a6f0bbf2b8,79,19323,19462,C14O19379C19O19379C24O19414C29O19414C34O19447C36O19459,,
code-creation,LazyCompile,10,387747,0x2a6f0bbf3f8,64,hasNoEntryError node:fs:1526:25,0x2dbe93f4c48,~
code-source-info,0x2a6f0bbf3f8,75,40743,40945,C0O40762C6O40790C11O40806C16O40790C21O40819C27O40833C36O40837C39O40850C40O40869C46O40894C51O40900C58O40905C61O40918C62O40929C63O40942,,
code-creation,LazyCompile,10,387883,0x2a6f0bbf530,576,getStatsFromBinding node:internal/fs/utils:536:29,0x914791dca8,~
code-source-info,0x2a6f0bbf
code-creation,LazyCompile,10,388051,0x2a6f0bbf960,16,isBigInt64Array node:internal/util/types:49:25,0x3a8997943b8,~
code-source-info,0x2a6f0bbf960,23,1304,1394,C0O1317C5O1324C12O1371C15O1391,,
code-creation,LazyCompile,10,388111,0x2a6f0bbfa80,19,msFromTimeSpec node:internal/fs/utils:450:24,0x914791d9f8,~
code-source-info,0x2a6f0bbfa80,79,11517,11578,C0O11534C2O11547C4O11545C10O11566C12O11564C15O11557C18O11575,,
code-creation,LazyCompile,10,388200,0x2a6f0bbfcb8,116,Stats node:internal/fs/utils:501:15,0x914791dbc8,~
code-source-info,0x2a6f0bbfcb8,79,13411,13952,C0O13551C41O13551C46O13681C48O13694C52O13708C54O13721C58O13735C60O13748C64O13762C66O13779C70O13797C73O13810C77O13808C81O13834C84O13847C88O13845C92O13871C95O13884C99O13882C103O13908C106O13925C110O13923C115O13951,,
code-creation,LazyCompile,10,388287,0x2a6f0bbfe88,62,StatsBase node:internal/fs/utils:404:19,0x914791d5c8,~
code-source-info,0x2a6f0bbfe88,79,10378,10679,C0O10466C2O10475C6O10485C8O10495C12O10506C14O10517C18O10529C20O10538C24O10548C26O10557C30O10567C32O10577C36O10588C38O10601C42O10615C44O10624C48O10634C50O10644C54O10655C56O10667C61O10678,,
new,MemoryChunk,0x1c9a3000000,262144
code-creation,LazyCompile,10,388447,0x1c9a3001168,33,dateFromMs node:internal/fs/utils:465:20,0x914791da98,~
code-source-info,0x1c9a3001168,79,12097,12192,C0O12150C7O12166C12O12176C15O12176C20O12166C27O12157C32O12189,,
code-creation,LazyCompile,10,388528,0x1c9a3001278,16,StatsBase.isDirectory node:internal/fs/utils:418:43,0x914791d618,~
code-source-info,0x1c9a3001278,79,10725,10776,C0O10745C7O10764C10O10745C15O10773,,
code-creation,LazyCompile,10,388596,0x1c9a3001388,54,Stats._checkModeProperty node:internal/fs/utils:523:46,0x914791dc18,~
code-source-info,0x1c9a3001388,79,14310,14538,C0O14326C8O14357C10O14353C17O14381C19O14377C26O14410C28O14406C33O14428C34O14441C35O14507C42O14514C44O14512C50O14522C53O14535,,
code-creation,LazyCompile,10,388661,0x1c9a30014b8,16,StatsBase.isFile node:internal/fs/utils:422:38,0x914791d6a8,~
code-source-info,0x1c9a30014b8,79,10818,10869,C0O10838C7O10857C10O10838C15O10866,,
code-creation,RegExp,3,388850,0x7ff6a66ce500,1676,^(?:[a-zA-Z]:|[\\\\/]{2}[^\\\\/]+[\\\\/][^\\\\/]+)?[\\\\/]*
code-creation,LazyCompile,10,389579,0x1c9a30016c0,66,get search node:internal/url:948:13,0x914790f2d0,~
code-source-info,0x1c9a30016c0,76,26740,26940,C0O26750C5O26755C11O26779C23O26785C28O26779C29O26837C33O26842C35O26841C39O26827C44O26857C48O26885C53O26900C55O26910C56O26916C61O26927C65O26935,,
code-creation,LazyCompile,10,389676,0x1c9a3001838,66,get hash node:internal/url:984:11,0x914790f420,~
code-source-info,0x1c9a3001838,76,27709,27921,C0O27719C5O27724C11O27748C23O27754C28O27748C29O27809C33O27814C35O27813C39O27796C44O27829C48O27863C53O27878C55O27888C56O27894C61O27905C65O27916,,
code-creation,LazyCompile,10,389841,0x1c9a30019f8,210,set search node:internal/url:957:13,0x914790f340,~
code-source-info,0x1c9a30019f8,76,26956,27548,C0O26972C5O26977C11O27001C23O27007C28O27001C29O27053C33O27058C35O27057C39O27073C46O27082C52O27108C54O27119C59O27136C60O27146C64O27161C73O27175C75O27174C80O27171C86O27217C87O27227C93O27231C98O27240C108O27249C115O27289C117O27299C121O27312C130O27325C135O27322C139O27353C143O27376C154O27390C163O27424C171O27424C183O27376C188O27498C197O27520C199O27519C203O27498C209O27547,,
code-creation,LazyCompile,10,389956,0x1c9a3001c20,41,toUSVString node:internal/util:64:21,0x3a89978d118,~
code-source-info,0x1c9a3001c20,21,1497,1797,C0O1520C4O1674C11O1694C14O1674C20O1724C22O1741C24O1752C25O1756C30O1787C35O1763C40O1794,,
code-creation,LazyCompile,10,390083,0x1c9a3001da8,173,set hash node:internal/url:993:11,0x914790f488,~
code-source-info,0x1c9a3001da8,76,27935,28451,C0O27949C5O27954C11O27978C23O27984C28O27978C29O28030C33O28035C35O28034C39O28085C44O28108C46O28128C47O28141C51O28156C60O28170C62O28169C67O28166C71O28201C72O28208C73O28221C74O28229C80O28233C85O28242C95O28249C102O28285C104O28298C108O28309C117O28322C122O28319C126O28351C137O28363C146O28396C154O28396C166O28351C172O28450,,
code-creation,LazyCompile,10,390194,0x1c9a3001fa0,51,throwIfUnsupportedURLProtocol node:internal/modules/esm/resolve:1035:39,0x14dbcbb6888,~
code-source-info,0x1c9a3001fa0,455,35270,35435,C0O35289C7O35298C12O35317C19O35326C24O35352C31O35361C36O35381C43O35387C48O35381C50O35434,,
code-creation,Function,11,390303,0x7ff6a66cec40,268, node:internal/url:654:21,0x914790ea00,^
code-source-info,0x7ff6a66cec40,76,18800,18877,,,
code-creation,Function,11,390372,0x7ff6a66cee00,1900,toNamespacedPath node:path:618:19,0x2dbe93dafa8,^
code-source-info,0x7ff6a66cee00,73,20086,21201,,,
code-creation,Function,11,390408,0x7ff6a66cf600,320,isURLThis node:internal/url:632:19,0x914790e8c8,^
code-source-info,0x7ff6a66cf600,76,18162,18253,,,
code-creation,Function,11,390462,0x7ff6a66cf7c0,1844,getPathFromURLWin32 node:internal/url:1433:29,0x914790f950,^
code-source-info,0x7ff6a66cf7c0,76,40317,41720,,,
code-creation,Function,11,390502,0x7ff6a66cff80,240,SafeSet node:internal/per_context/primordials:407:16,0x1f81b712fa8,^
code-source-info,0x7ff6a66cff80,12,11955,11972,,,
code-creation,Function,11,390538,0x7ff6a66d0100,308,isFileType node:fs:214:20,0x2dbe93f3b88,^
code-source-info,0x7ff6a66d0100,75,5628,5876,,,
code-creation,LazyCompile,10,390637,0x1c9a3002370,64,defaultGetFormatWithoutErrors node:internal/modules/esm/get_format:106:39,0x14dbcbbb420,~
code-source-info,0x1c9a3002370,457,3565,3776,C0O3600C7O3600C13O3617C20O3652C23O3677C28O3622C35O3693C36O3705C37O3709C42O3740C46O3732C58O3749C63O3773,,
code-creation,LazyCompile,10,390714,0x1c9a30028d0,44,toString node:internal/url:748:11,0x914790eb40,~
code-source-info,0x1c9a30028d0,76,21509,21616,C0O21519C5O21524C11O21548C23O21554C28O21548C29O21588C33O21600C35O21599C39O21608C43O21611,,
code-creation,LazyCompile,10,390886,0x1c9a3002ca8,280,getFileProtocolModuleFormat node:internal/modules/esm/get_format:54:37,0x14dbcbbb380,~
code-source-info,0x1c9a3002ca8,457,1605,2939,C0O1656C5O1656C10O1691C15O1691C20O1713C22O1721C27O1739C32O1746C39O1766C50O1803C51O1829C58O1847C62O1857C64O1869C66O1883C67O1889C74O1925C79O2024C83O2042C84O2059C85O2082C88O2091C93O2095C100O2115C107O2135C112O2167C117O2167C122O2223C127O2223C132O2271C139O2292C142O2308C147O2292C156O2271C162O2341C167O2412C171O2508C182O2487C191O2585C201O2562C207O2638C216O2764C229O2782C239O2725C243O2816C259O2822C264O2816C265O2891C270O2898C279O2936,,
code-creation,LazyCompile,10,391192,0x1c9a3003010,275,extname node:path:836:10,0x2dbe93db098,~
code-source-info,0x1c9a
code-creation,LazyCompile,10,391341,0x1c9a30032a8,15,getPackageType node:internal/modules/esm/resolve:784:24,0x14dbcbb65b8,~
code-source-info,0x1c9a30032a8,455,26952,27045,C0O26985C5O26985C10O27037C14O27042,,
code-creation,LazyCompile,10,391453,0x1c9a3003500,173,getPackageScopeConfig node:internal/modules/esm/package_config:105:31,0x14dbcbba4e8,~
code-source-info,0x1c9a3003500,456,2598,3694,C0O2635C13O2635C19O2734C24O2749C32O2753C39O2833C41O2874C46O2891C49O2891C54O2874C60O2956C66O2973C68O2994C69O3036C72O3057C85O3074C91O3283C96O3315C100O3292C105O3334C107O2675C110O3380C115O3380C120O3436C127O3454C132O3502C137O3524C142O3568C147O3593C154O3613C159O3630C164O3630C170O3670C172O3691,,
code-creation,LazyCompile,10,391721,0x1c9a3003e18,365,getPackageConfig node:internal/modules/esm/package_config:40:26,0x14dbcbba498,~
code-source-info,0x1c9a3003e
code-creation,LazyCompile,10,392172,0x1c9a30047a8,33,primordials.SafePromiseAllReturnArrayLike node:internal/per_context/primordials:494:45,0x1f81b713500,~
code-source-info,0x1c9a30047a8,12,15009,15581,C0O15009C13O15033C27O15033C32O15581,,
code-creation,LazyCompile,10,392304,0x1c9a30049c8,237, node:internal/per_context/primordials:495:15,0x1c9a30046f8,~
code-source-info,0x1c9a30049c8,12,15045,15580,C0O15045C15O15092C20O15081C25O15127C32O15127C36O15127C38O15158C50O15158C55O15202C56O15213C61O15220C67O15220C71O15269C73O15269C75O15295C81O15574C103O15311C107O15311C112O15300C117O15300C135O15340C154O15370C161O15356C175O15388C179O15400C190O15421C193O15421C206O15400C216O15282C236O15579,,
code-creation,LazyCompile,10,392421,0x1c9a3004c38,36,validateOutput node:internal/modules/esm/loader:830:28,0x857283ae98,~
code-source-info,0x1c9a3004c38,451,25222,25467,C0O25262C10O25331C28O25337C33O25331C35O25466,,
code-creation,LazyCompile,10,392499,0x1c9a3004d60,80,has node:internal/modules/esm/module_map:37:6,0x14dbcbafcc8,~
code-source-info,0x1c9a3004d60,452,1295,1453,C11O1308C18O1336C28O1336C33O1369C43O1369C48O1404C50O1417C61O1417C71O1427C78O1434C79O1448,,
code-creation,LazyCompile,10,392601,0x1c9a3004eb8,78,get node:internal/modules/esm/module_map:18:6,0x14dbcbafc28,~
code-source-info,0x1c9a3004eb8,452,604,748,C11O617C18O645C28O645C33O678C43O678C48O713C50O726C61O726C71O736C77O743,,
code-creation,LazyCompile,10,392730,0x1c9a3005150,177,#createModuleJob node:internal/modules/esm/loader:451:19,0x14dbcbacac0,~
code-source-info,0x1c9a3005150,451,13629,14641,C0O13629C17O13702C22O14187C31O14230C37O14230C42O14277C47O14289C52O14293C63O14330C69O14345C74O14353C84O14376C93O14377C103O14353C108O14412C136O14412C142O14565C145O14570C150O14580C158O14606C169O14580C174O14625C176O14636,,
code-creation,LazyCompile,10,392908,0x1c9a30054e0,198,ModuleJob node:internal/modules/esm/module_job:54:14,0x14dbcbb0b38,~
code-source-info,0x1c9a30054e0,453,1351,3195,C0O1351C27O1384C32O1384C50O1462C55O1474C59O1489C64O1511C68O1536C73O1548C77O1563C82O1579C86O1600C90O1612C94O1750C101O1771C104O1800C113O1809C122O1814C135O1771C140O1769C144O1921C149O2861C152O2875C155O2873C159O2985C169O3011C180O3030C183O2985C188O3160C192O3178C197O3194,,
code-creation,LazyCompile,10,393073,0x1c9a3005f40,194,moduleProvider node:internal/modules/esm/loader:452:28,0x1c9a3004ff0,~
code-source-info,0x1c9a3005f40,451,13702,14159,C10O13702C18O13822C21O13833C26O13838C33O13854C39O13871C43O13833C57O13822C80O13759C85O13781C90O13803C95O13928C102O13940C107O13940C113O13967C115O13995C130O14001C135O13995C136O14076C158O14083C171O14152,,
code-creation,LazyCompile,10,393321,0x1c9a3006828,598,load node:internal/modules/esm/loader:556:13,0x14dbcbaccf0,~
code-source-info,0x1c9a
code-creation,LazyCompile,10,393527,0x1c9a3006cd8,137,validateArgs node:internal/modules/esm/loader:567:26,0x1c9a30064f8,~
code-source-info,0x1c9a3006cd8,451,17527,18305,C0O17573C6O17730C15O17776C31O17736C36O17730C37O17949C40O17959C45O17969C50O17969C60O18011C69O18011C78O18059C87O18108C103O18065C108O18059C109O18237C113O18246C122O18269C130O18246C136O18304,,
code-creation,LazyCompile,10,393696,0x1c9a3006fd0,234,defaultLoad node:internal/modules/esm/load:72:27,0x2a6f0b993c8,~
code-source-info,0x1c9a3006fd0,465,2287,2844,C10O2287C18O2325C21O2341C26O2385C31O2398C36O2427C41O2454C46O2469C59O2463C87O2511C101O2511C106O2567C108O2584C115O2613C120O2640C124O2665C129O2692C132O2725C145O2719C168O2695C173O2708C178O2761C185O2797C191O2810C197O2828C211O2841,,
code-creation,LazyCompile,10,393823,0x1c9a3007560,149,validateAssertions node:internal/modules/esm/assert:55:28,0x14dbcbb2be0,~
code-source-info,0x1c9a3007560,454,1835,3000,C12O1897C17O1897C26O1940C33O1953C37O1968C38O1999C48O2155C55O2505C66O2130C67O2142C68O2320C76O2325C83O2393C84O2405C85O2422C88O2469C93O2429C98O2475C99O2581C100O2593C101O2745C109O2750C116O2862C129O2868C134O2862C135O2939C138O2986C143O2946C148O2992,,
code-creation,LazyCompile,10,393994,0x1c9a3007910,446,getSource node:internal/modules/esm/load:32:25,0x2a6f0b99378,~
code-source-info,0x1c9a3007910,465,1031,2140,C10O1031C18O1066C25O1066C31O1101C34O1113C36O1135C43O1144C48O1164C53O1179C65O1173C95O1223C102O1232C107O1266C114O1286C117O1311C122O1266C128O1327C130O1348C137O1354C142O1348C143O1403C150O1414C157O1435C164O1455C167O1455C174O1481C183O1444C191O1520C197O1568C204O1577C209O1605C216O1614C221O1651C226O1657C239O1651C265O1711C277O1701C303O1740C310O1796C315O1819C321O1860C335O1860C340O1927C353O1933C358O1927C359O2003C366O2013C375O2032C380O2039C385O2048C390O2048C396O2089C403O2115C409O2128C423O2137,,
code-creation,LazyCompile,10,394243,0x1c9a3007d98,188,readFile node:internal/fs/promises:892:24,0x2a6f0b9c8c8,~
code-source-info,0x1c9a3007d98,466,25395,25727,C10O25395C18O25416C23O25437C28O25426C35O25486C44O25504C46O25524C48O25513C53O25541C56O25548C69O25578C70O25584C73O25605C78O25584C82O25630C96O25636C109O25630C135O25664C141O25685C147O25717C152O25671C165O25724,,
code-creation,LazyCompile,10,394346,0x1c9a3009d30,56,checkAborted node:internal/fs/promises:386:22,0x2a6f0b9bbf8,~
code-source-info,0x1c9a3009d30,466,9210,9312,C0O9224C7O9234C16O9250C23O9271C35O9297C48O9256C53O9250C55O9311,,
code-creation,LazyCompile,10,394436,0x1c9a3009ef8,178,open node:internal/fs/promises:536:20,0x2a6f0b9bdd8,~
code-source-info,0x1c9a3009ef8,466,13887,14200,C10O13887C18O13912C23O13919C29O13966C34O13966C39O13991C55O13998C62O14037C69O14071C72O14079C79O14094C82O14105C87O14105C95O14182C104O14079C117O14065C142O14044C155O14197,,
code-creation,Function,11,394574,0x7ff6a66d02c0,2448, node:internal/url:700:12,0x914790eaf0,^
code-source-info,0x7ff6a66d02c0,76,20146,21441,,,
code-creation,Function,11,394615,0x7ff6a66d0d00,332,URLContext node:internal/url:162:14,0x914790e0f8,^
code-source-info,0x7ff6a66d0d00,76,3913,4135,,,
code-creation,Function,11,394664,0x7ff6a66d0f00,1400,onParseComplete node:internal/url:545:25,0x914790e5f8,^
code-source-info,0x7ff6a66d0f00,76,15288,15974,,,
code-creation,Function,11,394707,0x7ff6a66d1500,952,URL node:internal/url:637:14,0x914790e918,^
code-source-info,0x7ff6a66d1500,76,18283,18687,,,
code-creation,Function,11,394747,0x7ff6a66d1940,800,get pathname node:internal/url:926:15,0x914790f1f0,^
code-source-info,0x7ff6a66d1940,76,26159,26428,,,
code-creation,Function,11,394780,0x7ff6a66d1d00,196,isURLInstance node:internal/url:1565:23,0x914790fae0,^
code-source-info,0x7ff6a66d1d00,76,45427,45526,,,
code-creation,Function,11,394814,0x7ff6a66d1e80,320,initSearchParams node:internal/url:1088:26,0x914790f630,^
code-source-info,0x7ff6a66d1e80,76,30623,30744,,,
code-creation,Function,11,394851,0x7ff6a66d2040,360,get protocol node:internal/url:796:15,0x914790ecd0,^
code-source-info,0x7ff6a66d2040,76,22755,22867,,,
code-creation,LazyCompile,10,395014,0x1c9a300a908,515,stringToFlags node:internal/fs/utils:561:23,0x914791dcf8,~
code-source-info,0x1c9a300a908,79,15789,17063,C14O15818C20O15856C25O15856C30O15889C32O15902C33O15913C38O15939C42O15955C43O15966C202O15999C206O16015C207O16067C214O16085C216O16083C219O16092C220O16110C224O16124C225O16178C232O16194C234O16192C237O16201C238O16220C245O16237C247O16235C253O16247C255O16245C258O16256C259O16308C266O16325C268O16323C274O16335C276O16333C282O16346C284O16344C287O16353C288O16373C295O16390C297O16388C303O16400C305O16398C308O16407C309O16459C316O16476C318O16474C324O16486C326O16484C332O16495C334O16493C337O16502C338O16521C345O16539C347O16537C353O16549C355O16547C358O16558C359O16610C366O16628C368O16626C374O16638C376O16636C382O16649C384O16647C387O16656C388O16708C395O16726C397O16724C403O16736C405O16734C411O16747C413O16745C416O16754C417O16774C424O16792C426O16790C432O16802C434O16800C437O16809C438O16861C445O16879C447O16877C453O16889C455O16887C461O16898C463O16896C466O16905C467O16957C474O16975C476O16973C482O16985C484O16983C490O16994C492O16992C495O17001C496O17012C509O17018C514O17012,,
code-creation,LazyCompile,10,395215,0x1c9a300ace0,86,parseFileMode node:internal/validators:70:23,0x3a899792a20,~
code-source-info,0x1c9a300ace0,22,1721,2021,C0O1745C11O1763C17O1801C24O1825C27O1805C34O1861C41O1906C52O1867C57O1861C58O1929C66O1937C73O1973C78O1973C83O2005C85O2018,,
tick,0x7ffaeaa0da24,395670,1,0x7ff725a44d10,6,0x7ff7264a2ab0,0x1c9a3009f60,0x1c9a3007df8,0x1c9a3007945,0x1c9a3007054,0x857283c00a,0x1c9a30068c8,0x1c9a3005f6b,0x1c9a3005567,0x1c9a30051d8,0x857283abc6,0x7ff72653f3f3
code-creation,LazyCompile,10,395975,0x1c9a300b030,229,link node:internal/modules/esm/module_job:67:18,0x1c9a3005360,~
code-source-info,0x1c9a300b030,453,1921,2802,C4O1921C26O1942C36O1967C48O1956C73O1954C77O1989C89O2001C98O2019C100O2008C104O1989C108O2341C110O2341C112O2369C117O2374C122O2381C132O2381C138O2654C140O2691C147O2697C159O2691C184O2742C194O2749C206O2795,,
code-creation,LazyCompile,10,396145,0x1c9a300b330,216,set node:internal/modules/esm/module_map:23:6,0x14dbcbafc78,~
code-source-info,0x1c9a300b330,452,755,1288,C11O768C21O801C31O801C36O834C46O834C51O869C55O888C57O877C62O898C73O955C91O961C96O955C97O1024C109O1041C124O1066C126O1062C137O1106C148O1024C152O1165C154O1171C165O1171C178O1183C183O1183C188O1208C190O1231C194O1243C196O1256C210O1256C215O1283,,
code-creation,LazyCompile,10,396256,0x1c9a300b530,89,logger node:internal/util/debuglog:95:18,0x3a8997b0290,~
code-source-info,0x1c9a300b530,28,2963,3164,C0O2963C3O2996C24O3021C30O3038C34O3028C38O3043C39O3059C45O3076C51O3085C55O3066C60O3090C61O3107C65O3114C72O3127C77O3123C83O3114C88O3152,,
code-creation,LazyCompile,10,396349,0x1c9a300b6a0,140,debug node:internal/util/debuglog:76:15,0x3a8997b01f0,~
code-source-info,0x1c9a300b6a0,28,2432,2838,C0O2432C3O2452C6O2452C9O2563C16O2584C22O2571C30O2569C36O2604C42O2641C47O2644C50O2641C54O2670C75O2695C81O2712C85O2702C89O2717C90O2733C96O2750C102O2759C106O2740C111O2764C112O2781C116O2788C123O2801C128O2797C134O2788C139O2826,,
code-creation,LazyCompile,10,396432,0x1c9a300b850,41,init node:internal/util/debuglog:72:16,0x3a8997b01a0,~
code-source-info,0x1c9a300b850,28,2330,2416,C0O2340C10O2346C14O2344C16O2384C26O2394C33O2392C40O2415,,
code-creation,LazyCompile,10,396483,0x1c9a300b948,2,testEnabled node:internal/util/debuglog:32:19,0x14dbcb8ed88,~
code-source-info,0x1c9a300b948,28,1004,1015,C0O1010C1O1015,,
code-creation,LazyCompile,10,396553,0x1c9a300bac8,116,debuglogImpl node:internal/util/debuglog:49:22,0x3a8997aff50,~
code-source-info,0x1c9a300bac8,28,1499,2059,C0O1499C9O1519C18O1533C23O1561C34O1595C39O1603C43O1595C45O1615C55O1615C59O1648C71O1659C75O1664C83O1994C97O2012C99O2010C103O2033C112O2050C115O2056,,
code-creation,LazyCompile,10,396628,0x1c9a300bc80,10, node:internal/modules/esm/module_map:9:63,0x14dbcbafb88,~
code-source-info,0x1c9a300bc80,452,271,298,C0O284C2O290C9O297,,
code-creation,LazyCompile,10,396695,0x1c9a300bd38,2,noop node:internal/util/debuglog:47:14,0x3a8997aff00,~
code-source-info,0x1c9a300bd38,28,1465,1473,C1O1472,,
code-creation,LazyCompile,10,396745,0x1c9a300bdf8,10, node:internal/modules/esm/loader:526:15,0x857283a570,~
code-source-info,0x1c9a300bdf8,451,16303,16321,C0O16316C5O16316C9O16321,,
code-creation,LazyCompile,10,396885,0x1c9a300c228,431,run node:internal/modules/esm/module_job:189:12,0x14dbcbb0c28,~
code-source-info,0x1c9a300c228,453,7072,8302,C10O7072C18O7093C23O7093C35O7082C58O7129C61O7160C66O7196C71O7203C76O7203C90O7185C128O7263C133O7268C143O7275C152O7310C158O7348C163O7310C169O7369C182O7379C186O7416C196O7448C204O7420C211O7483C224O7493C228O7583C235O7614C240O7621C248O7583C259O7653C267O7703C272O7710C277O7653C283O7715C294O7740C299O7795C304O7823C309O7830C314O7796C320O7863C327O7868C332O7895C346O8044C360O7986C366O8067C372O8147C378O7905C382O8228C384O8228C385O8249C390O8288C408O8297,,
code-creation,LazyCompile,10,397009,0x1c9a300c558,24,instantiate node:internal/modules/esm/module_job:99:14,0x14dbcbb0b88,~
code-source-info,0x1c9a300c558,453,3212,3351,C0O3231C6O3293C11O3293C15O3286C19O3333C23O3346,,
code-creation,LazyCompile,10,397231,0x1c9a300cbb0,929,_instantiate node:internal/modules/esm/module_job:106:21,0x14dbcbb0bd8,~
code-source-info,0x1c9a300cbb
code-creation,LazyCompile,10,397419,0x1c9a300d210,146,addJobsToDependencyGraph node:internal/modules/esm/module_job:108:38,0x1c9a300c8f0,~
code-source-info,0x1c9a300d210,453,3458,3725,C10O3458C18O3488C23O3504C28O3504C35O3531C44O3538C45O3555C50O3567C55O3567C60O3629C72O3613C98O3644C107O3692C110O3651C123O3718,,
code-creation,LazyCompile,10,397562,0x1c9a300d3c0,112,FileHandle node:internal/fs/promises:136:14,0x2a6f0b9c918,~
code-source-info,0x1c9a300d3c0,466,3432,3605,C3O3452C11O3452C40O3466C45O3471C50O3480C54O3499C59O3504C67O3511C69O3535C77O3509C81O3551C86O3556C91O3563C95O3573C100O3578C104O3593C111O3604,,
code-creation,LazyCompile,10,397645,0x1c9a300d538,63,MixedEventEmitter node:internal/event_target:1063:16,0x2a6f0bb01d8,~
code-source-info,0x1c9a300d538,47,28570,28704,C0O28570C8O28589C15O28596C21O28632C25O28641C29O28632C41O28655C48O28677C54O28655C62O28703,,
code-creation,LazyCompile,10,397932,0x1c9a300d840,707,readFileHandle node:internal/fs/promises:426:30,0x2a6f0b9bc98,~
code-source-info,0x1c9a300d
code-creation,LazyCompile,10,398147,0x1c9a300dd20,8,get fd node:internal/fs/promises:149:9,0x2a6f0b9c9d0,~
code-source-info,0x1c9a300dd20,466,3682,3714,C0O3692C2O3704C4O3703C7O3709,,
code-creation,LazyCompile,10,398259,0x1c9a300df28,79,handleFdClose node:internal/fs/promises:353:29,0x2a6f0b9bb58,~
code-source-info,0x1c9a300df28,466,8351,8703,C0O8351C23O8383C30O8417C43O8390C56O8700,,
code-creation,LazyCompile,10,398462,0x1c9a300e0b0,19,allocUnsafeSlow node:buffer:392:50,0x1adeb58d170,~
script-source,30,node:buffer,// Copyright Joyent\x2C Inc. and other Node contributors.\x0d\n//\x0d\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\x0d\n// copy of this software and associated documentation files (the\x0d\n// "Software")\x2C to deal in the Software without restriction\x2C including\x0d\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\x0d\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\x0d\n// persons to whom the Software is furnished to do so\x2C subject to the\x0d\n// following conditions:\x0d\n//\x0d\n// The above copyright notice and this permission notice shall be included\x0d\n// in all copies or substantial portions of the Software.\x0d\n//\x0d\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\x0d\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\x0d\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\x0d\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\x0d\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\x0d\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\x0d\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\x0d\n\x0d\n'use strict';\x0d\n\x0d\nconst {\x0d\n  Array\x2C\x0d\n  ArrayFrom\x2C\x0d\n  ArrayIsArray\x2C\x0d\n  ArrayPrototypeForEach\x2C\x0d\n  ArrayPrototypeIndexOf\x2C\x0d\n  MathFloor\x2C\x0d\n  MathMin\x2C\x0d\n  MathTrunc\x2C\x0d\n  NumberIsNaN\x2C\x0d\n  NumberMAX_SAFE_INTEGER\x2C\x0d\n  NumberMIN_SAFE_INTEGER\x2C\x0d\n  ObjectCreate\x2C\x0d\n  ObjectDefineProperties\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  RegExpPrototypeSymbolReplace\x2C\x0d\n  StringPrototypeCharCodeAt\x2C\x0d\n  StringPrototypeSlice\x2C\x0d\n  StringPrototypeToLowerCase\x2C\x0d\n  StringPrototypeTrim\x2C\x0d\n  SymbolSpecies\x2C\x0d\n  SymbolToPrimitive\x2C\x0d\n  TypedArrayPrototypeGetByteLength\x2C\x0d\n  TypedArrayPrototypeFill\x2C\x0d\n  TypedArrayPrototypeSet\x2C\x0d\n  Uint8Array\x2C\x0d\n  Uint8ArrayPrototype\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  byteLengthUtf8\x2C\x0d\n  compare: _compare\x2C\x0d\n  compareOffset\x2C\x0d\n  createFromString\x2C\x0d\n  fill: bindingFill\x2C\x0d\n  indexOfBuffer\x2C\x0d\n  indexOfNumber\x2C\x0d\n  indexOfString\x2C\x0d\n  swap16: _swap16\x2C\x0d\n  swap32: _swap32\x2C\x0d\n  swap64: _swap64\x2C\x0d\n  kMaxLength\x2C\x0d\n  kStringMaxLength\x0d\n} = internalBinding('buffer');\x0d\nconst {\x0d\n  constants: {\x0d\n    ALL_PROPERTIES\x2C\x0d\n    ONLY_ENUMERABLE\x2C\x0d\n  }\x2C\x0d\n  getOwnNonIndexProperties\x2C\x0d\n} = internalBinding('util');\x0d\nconst {\x0d\n  customInspectSymbol\x2C\x0d\n  isInsideNodeModules\x2C\x0d\n  lazyDOMException\x2C\x0d\n  normalizeEncoding\x2C\x0d\n  kIsEncodingSymbol\x0d\n} = require('internal/util');\x0d\nconst {\x0d\n  isAnyArrayBuffer\x2C\x0d\n  isArrayBufferView\x2C\x0d\n  isUint8Array\x0d\n} = require('internal/util/types');\x0d\nconst {\x0d\n  inspect: utilInspect\x0d\n} = require('internal/util/inspect');\x0d\nconst { encodings } = internalBinding('string_decoder');\x0d\n\x0d\nconst {\x0d\n  codes: {\x0d\n    ERR_BUFFER_OUT_OF_BOUNDS\x2C\x0d\n    ERR_INVALID_ARG_TYPE\x2C\x0d\n    ERR_INVALID_ARG_VALUE\x2C\x0d\n    ERR_INVALID_BUFFER_SIZE\x2C\x0d\n    ERR_OUT_OF_RANGE\x2C\x0d\n    ERR_MISSING_ARGS\x2C\x0d\n    ERR_UNKNOWN_ENCODING\x0d\n  }\x2C\x0d\n  genericNodeError\x2C\x0d\n  hideStackFrames\x2C\x0d\n} = require('internal/errors');\x0d\nconst {\x0d\n  validateArray\x2C\x0d\n  validateBuffer\x2C\x0d\n  validateNumber\x2C\x0d\n  validateInteger\x2C\x0d\n  validateString\x0d\n} = require('internal/validators');\x0d\n// Provide validateInteger() but with kMaxLength as the default maximum value.\x0d\nconst validateOffset = (value\x2C name\x2C min = 0\x2C max = kMaxLength) =>\x0d\n  validateInteger(value\x2C name\x2C min\x2C max);\x0d\n\x0d\nconst {\x0d\n  FastBuffer\x2C\x0d\n  markAsUntransferable\x2C\x0d\n  addBufferPrototypeMethods\x2C\x0d\n  createUnsafeBuffer\x0d\n} = require('internal/buffer');\x0d\n\x0d\nconst {\x0d\n  Blob\x2C\x0d\n  resolveObjectURL\x2C\x0d\n} = require('internal/blob');\x0d\n\x0d\nconst {\x0d\n  File\x2C\x0d\n} = require('internal/file');\x0d\n\x0d\nFastBuffer.prototype.constructor = Buffer;\x0d\nBuffer.prototype = FastBuffer.prototype;\x0d\naddBufferPrototypeMethods(Buffer.prototype);\x0d\n\x0d\nconst constants = ObjectDefineProperties({}\x2C {\x0d\n  MAX_LENGTH: {\x0d\n    __proto__: null\x2C\x0d\n    value: kMaxLength\x2C\x0d\n    writable: false\x2C\x0d\n    enumerable: true\x0d\n  }\x2C\x0d\n  MAX_STRING_LENGTH: {\x0d\n    __proto__: null\x2C\x0d\n    value: kStringMaxLength\x2C\x0d\n    writable: false\x2C\x0d\n    enumerable: true\x0d\n  }\x0d\n});\x0d\n\x0d\nBuffer.poolSize = 8 * 1024;\x0d\nlet poolSize\x2C poolOffset\x2C allocPool;\x0d\n\x0d\nconst encodingsMap = ObjectCreate(null);\x0d\nfor (let i = 0; i < encodings.length; ++i)\x0d\n  encodingsMap[encodings[i]] = i;\x0d\n\x0d\nfunction createPool() {\x0d\n  poolSize = Buffer.poolSize;\x0d\n  allocPool = createUnsafeBuffer(poolSize).buffer;\x0d\n  markAsUntransferable(allocPool);\x0d\n  poolOffset = 0;\x0d\n}\x0d\ncreatePool();\x0d\n\x0d\nfunction alignPool() {\x0d\n  // Ensure aligned slices\x0d\n  if (poolOffset & 0x7) {\x0d\n    poolOffset |= 0x7;\x0d\n    poolOffset++;\x0d\n  }\x0d\n}\x0d\n\x0d\nlet bufferWarningAlreadyEmitted = false;\x0d\nlet nodeModulesCheckCounter = 0;\x0d\nconst bufferWarning = 'Buffer() is deprecated due to security and usability ' +\x0d\n                      'issues. Please use the Buffer.alloc()\x2C ' +\x0d\n                      'Buffer.allocUnsafe()\x2C or Buffer.from() methods instead.';\x0d\n\x0d\nfunction showFlaggedDeprecation() {\x0d\n  if (bufferWarningAlreadyEmitted ||\x0d\n      ++nodeModulesCheckCounter > 10000 ||\x0d\n      (!require('internal/options').getOptionValue('--pending-deprecation') &&\x0d\n       isInsideNodeModules())) {\x0d\n    // We don't emit a warning\x2C because we either:\x0d\n    // - Already did so\x2C or\x0d\n    // - Already checked too many times whether a call is coming\x0d\n    //   from node_modules and want to stop slowing down things\x2C or\x0d\n    // - We aren't running with `--pending-deprecation` enabled\x2C\x0d\n    //   and the code is inside `node_modules`.\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  process.emitWarning(bufferWarning\x2C 'DeprecationWarning'\x2C 'DEP0005');\x0d\n  bufferWarningAlreadyEmitted = true;\x0d\n}\x0d\n\x0d\nfunction toInteger(n\x2C defaultVal) {\x0d\n  n = +n;\x0d\n  if (!NumberIsNaN(n) &&\x0d\n      n >= NumberMIN_SAFE_INTEGER &&\x0d\n      n <= NumberMAX_SAFE_INTEGER) {\x0d\n    return ((n % 1) === 0 ? n : MathFloor(n));\x0d\n  }\x0d\n  return defaultVal;\x0d\n}\x0d\n\x0d\nfunction _copy(source\x2C target\x2C targetStart\x2C sourceStart\x2C sourceEnd) {\x0d\n  if (!isUint8Array(source))\x0d\n    throw new ERR_INVALID_ARG_TYPE('source'\x2C ['Buffer'\x2C 'Uint8Array']\x2C source);\x0d\n  if (!isUint8Array(target))\x0d\n    throw new ERR_INVALID_ARG_TYPE('target'\x2C ['Buffer'\x2C 'Uint8Array']\x2C target);\x0d\n\x0d\n  if (targetStart === undefined) {\x0d\n    targetStart = 0;\x0d\n  } else {\x0d\n    targetStart = toInteger(targetStart\x2C 0);\x0d\n    if (targetStart < 0)\x0d\n      throw new ERR_OUT_OF_RANGE('targetStart'\x2C '>= 0'\x2C targetStart);\x0d\n  }\x0d\n\x0d\n  if (sourceStart === undefined) {\x0d\n    sourceStart = 0;\x0d\n  } else {\x0d\n    sourceStart = toInteger(sourceStart\x2C 0);\x0d\n    if (sourceStart < 0)\x0d\n      throw new ERR_OUT_OF_RANGE('sourceStart'\x2C '>= 0'\x2C sourceStart);\x0d\n  }\x0d\n\x0d\n  if (sourceEnd === undefined) {\x0d\n    sourceEnd = source.length;\x0d\n  } else {\x0d\n    sourceEnd = toInteger(sourceEnd\x2C 0);\x0d\n    if (sourceEnd < 0)\x0d\n      throw new ERR_OUT_OF_RANGE('sourceEnd'\x2C '>= 0'\x2C sourceEnd);\x0d\n  }\x0d\n\x0d\n  if (targetStart >= target.length || sourceStart >= sourceEnd)\x0d\n    return 0;\x0d\n\x0d\n  if (sourceStart > source.length) {\x0d\n    throw new ERR_OUT_OF_RANGE('sourceStart'\x2C\x0d\n                               `<= ${source.length}`\x2C\x0d\n                               sourceStart);\x0d\n  }\x0d\n\x0d\n  return _copyActual(source\x2C target\x2C targetStart\x2C sourceStart\x2C sourceEnd);\x0d\n}\x0d\n\x0d\nfunction _copyActual(source\x2C target\x2C targetStart\x2C sourceStart\x2C sourceEnd) {\x0d\n  if (sourceEnd - sourceStart > target.length - targetStart)\x0d\n    sourceEnd = sourceStart + target.length - targetStart;\x0d\n\x0d\n  let nb = sourceEnd - sourceStart;\x0d\n  const sourceLen = source.length - sourceStart;\x0d\n  if (nb > sourceLen)\x0d\n    nb = sourceLen;\x0d\n\x0d\n  if (sourceStart !== 0 || sourceEnd < source.length)\x0d\n    source = new Uint8Array(source.buffer\x2C source.byteOffset + sourceStart\x2C nb);\x0d\n\x0d\n  TypedArrayPrototypeSet(target\x2C source\x2C targetStart);\x0d\n\x0d\n  return nb;\x0d\n}\x0d\n\x0d\n/**\x0d\n * The Buffer() constructor is deprecated in documentation and should not be\x0d\n * used moving forward. Rather\x2C developers should use one of the three new\x0d\n * factory APIs: Buffer.from()\x2C Buffer.allocUnsafe() or Buffer.alloc() based on\x0d\n * their specific needs. There is no runtime deprecation because of the extent\x0d\n * to which the Buffer constructor is used in the ecosystem currently -- a\x0d\n * runtime deprecation would introduce too much breakage at this time. It's not\x0d\n * likely that the Buffer constructors would ever actually be removed.\x0d\n * Deprecation Code: DEP0005\x0d\n */\x0d\nfunction Buffer(arg\x2C encodingOrOffset\x2C length) {\x0d\n  showFlaggedDeprecation();\x0d\n  // Common case.\x0d\n  if (typeof arg === 'number') {\x0d\n    if (typeof encodingOrOffset === 'string') {\x0d\n      throw new ERR_INVALID_ARG_TYPE('string'\x2C 'string'\x2C arg);\x0d\n    }\x0d\n    return Buffer.alloc(arg);\x0d\n  }\x0d\n  return Buffer.from(arg\x2C encodingOrOffset\x2C length);\x0d\n}\x0d\n\x0d\nObjectDefineProperty(Buffer\x2C SymbolSpecies\x2C {\x0d\n  __proto__: null\x2C\x0d\n  enumerable: false\x2C\x0d\n  configurable: true\x2C\x0d\n  get() { return FastBuffer; }\x0d\n});\x0d\n\x0d\n/**\x0d\n * Functionally equivalent to Buffer(arg\x2C encoding) but throws a TypeError\x0d\n * if value is a number.\x0d\n * Buffer.from(str[\x2C encoding])\x0d\n * Buffer.from(array)\x0d\n * Buffer.from(buffer)\x0d\n * Buffer.from(arrayBuffer[\x2C byteOffset[\x2C length]])\x0d\n */\x0d\nBuffer.from = function from(value\x2C encodingOrOffset\x2C length) {\x0d\n  if (typeof value === 'string')\x0d\n    return fromString(value\x2C encodingOrOffset);\x0d\n\x0d\n  if (typeof value === 'object' && value !== null) {\x0d\n    if (isAnyArrayBuffer(value))\x0d\n      return fromArrayBuffer(value\x2C encodingOrOffset\x2C length);\x0d\n\x0d\n    const valueOf = value.valueOf && value.valueOf();\x0d\n    if (valueOf != null &&\x0d\n        valueOf !== value &&\x0d\n        (typeof valueOf === 'string' || typeof valueOf === 'object')) {\x0d\n      return from(valueOf\x2C encodingOrOffset\x2C length);\x0d\n    }\x0d\n\x0d\n    const b = fromObject(value);\x0d\n    if (b)\x0d\n      return b;\x0d\n\x0d\n    if (typeof value[SymbolToPrimitive] === 'function') {\x0d\n      const primitive = value[SymbolToPrimitive]('string');\x0d\n      if (typeof primitive === 'string') {\x0d\n        return fromString(primitive\x2C encodingOrOffset);\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  throw new ERR_INVALID_ARG_TYPE(\x0d\n    'first argument'\x2C\x0d\n    ['string'\x2C 'Buffer'\x2C 'ArrayBuffer'\x2C 'Array'\x2C 'Array-like Object']\x2C\x0d\n    value\x0d\n  );\x0d\n};\x0d\n\x0d\n// Identical to the built-in %TypedArray%.of()\x2C but avoids using the deprecated\x0d\n// Buffer() constructor. Must use arrow function syntax to avoid automatically\x0d\n// adding a `prototype` property and making the function a constructor.\x0d\n//\x0d\n// Refs: https://tc39.github.io/ecma262/#sec-%typedarray%.of\x0d\n// Refs: https://esdiscuss.org/topic/isconstructor#content-11\x0d\nconst of = (...items) => {\x0d\n  const newObj = createUnsafeBuffer(items.length);\x0d\n  for (let k = 0; k < items.length; k++)\x0d\n    newObj[k] = items[k];\x0d\n  return newObj;\x0d\n};\x0d\nBuffer.of = of;\x0d\n\x0d\nObjectSetPrototypeOf(Buffer\x2C Uint8Array);\x0d\n\x0d\n// The 'assertSize' method will remove itself from the callstack when an error\x0d\n// occurs. This is done simply to keep the internal details of the\x0d\n// implementation from bleeding out to users.\x0d\nconst assertSize = hideStackFrames((size) => {\x0d\n  validateNumber(size\x2C 'size');\x0d\n  if (!(size >= 0 && size <= kMaxLength)) {\x0d\n    throw new ERR_INVALID_ARG_VALUE.RangeError('size'\x2C size);\x0d\n  }\x0d\n});\x0d\n\x0d\n/**\x0d\n * Creates a new filled Buffer instance.\x0d\n * alloc(size[\x2C fill[\x2C encoding]])\x0d\n */\x0d\nBuffer.alloc = function alloc(size\x2C fill\x2C encoding) {\x0d\n  assertSize(size);\x0d\n  if (fill !== undefined && fill !== 0 && size > 0) {\x0d\n    const buf = createUnsafeBuffer(size);\x0d\n    return _fill(buf\x2C fill\x2C 0\x2C buf.length\x2C encoding);\x0d\n  }\x0d\n  return new FastBuffer(size);\x0d\n};\x0d\n\x0d\n/**\x0d\n * Equivalent to Buffer(num)\x2C by default creates a non-zero-filled Buffer\x0d\n * instance. If `--zero-fill-buffers` is set\x2C will zero-fill the buffer.\x0d\n */\x0d\nBuffer.allocUnsafe = function allocUnsafe(size) {\x0d\n  assertSize(size);\x0d\n  return allocate(size);\x0d\n};\x0d\n\x0d\n/**\x0d\n * Equivalent to SlowBuffer(num)\x2C by default creates a non-zero-filled\x0d\n * Buffer instance that is not allocated off the pre-initialized pool.\x0d\n * If `--zero-fill-buffers` is set\x2C will zero-fill the buffer.\x0d\n */\x0d\nBuffer.allocUnsafeSlow = function allocUnsafeSlow(size) {\x0d\n  assertSize(size);\x0d\n  return createUnsafeBuffer(size);\x0d\n};\x0d\n\x0d\n// If --zero-fill-buffers command line argument is set\x2C a zero-filled\x0d\n// buffer is returned.\x0d\nfunction SlowBuffer(length) {\x0d\n  assertSize(length);\x0d\n  return createUnsafeBuffer(length);\x0d\n}\x0d\n\x0d\nObjectSetPrototypeOf(SlowBuffer.prototype\x2C Uint8ArrayPrototype);\x0d\nObjectSetPrototypeOf(SlowBuffer\x2C Uint8Array);\x0d\n\x0d\nfunction allocate(size) {\x0d\n  if (size <= 0) {\x0d\n    return new FastBuffer();\x0d\n  }\x0d\n  if (size < (Buffer.poolSize >>> 1)) {\x0d\n    if (size > (poolSize - poolOffset))\x0d\n      createPool();\x0d\n    const b = new FastBuffer(allocPool\x2C poolOffset\x2C size);\x0d\n    poolOffset += size;\x0d\n    alignPool();\x0d\n    return b;\x0d\n  }\x0d\n  return createUnsafeBuffer(size);\x0d\n}\x0d\n\x0d\nfunction fromStringFast(string\x2C ops) {\x0d\n  const length = ops.byteLength(string);\x0d\n\x0d\n  if (length >= (Buffer.poolSize >>> 1))\x0d\n    return createFromString(string\x2C ops.encodingVal);\x0d\n\x0d\n  if (length > (poolSize - poolOffset))\x0d\n    createPool();\x0d\n  let b = new FastBuffer(allocPool\x2C poolOffset\x2C length);\x0d\n  const actual = ops.write(b\x2C string\x2C 0\x2C length);\x0d\n  if (actual !== length) {\x0d\n    // byteLength() may overestimate. That's a rare case\x2C though.\x0d\n    b = new FastBuffer(allocPool\x2C poolOffset\x2C actual);\x0d\n  }\x0d\n  poolOffset += actual;\x0d\n  alignPool();\x0d\n  return b;\x0d\n}\x0d\n\x0d\nfunction fromString(string\x2C encoding) {\x0d\n  let ops;\x0d\n  if (typeof encoding !== 'string' || encoding.length === 0) {\x0d\n    if (string.length === 0)\x0d\n      return new FastBuffer();\x0d\n    ops = encodingOps.utf8;\x0d\n    encoding = undefined;\x0d\n  } else {\x0d\n    ops = getEncodingOps(encoding);\x0d\n    if (ops === undefined)\x0d\n      throw new ERR_UNKNOWN_ENCODING(encoding);\x0d\n    if (string.length === 0)\x0d\n      return new FastBuffer();\x0d\n  }\x0d\n  return fromStringFast(string\x2C ops);\x0d\n}\x0d\n\x0d\nfunction fromArrayBuffer(obj\x2C byteOffset\x2C length) {\x0d\n  // Convert byteOffset to integer\x0d\n  if (byteOffset === undefined) {\x0d\n    byteOffset = 0;\x0d\n  } else {\x0d\n    byteOffset = +byteOffset;\x0d\n    if (NumberIsNaN(byteOffset))\x0d\n      byteOffset = 0;\x0d\n  }\x0d\n\x0d\n  const maxLength = obj.byteLength - byteOffset;\x0d\n\x0d\n  if (maxLength < 0)\x0d\n    throw new ERR_BUFFER_OUT_OF_BOUNDS('offset');\x0d\n\x0d\n  if (length === undefined) {\x0d\n    length = maxLength;\x0d\n  } else {\x0d\n    // Convert length to non-negative integer.\x0d\n    length = +length;\x0d\n    if (length > 0) {\x0d\n      if (length > maxLength)\x0d\n        throw new ERR_BUFFER_OUT_OF_BOUNDS('length');\x0d\n    } else {\x0d\n      length = 0;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return new FastBuffer(obj\x2C byteOffset\x2C length);\x0d\n}\x0d\n\x0d\nfunction fromArrayLike(obj) {\x0d\n  if (obj.length <= 0)\x0d\n    return new FastBuffer();\x0d\n  if (obj.length < (Buffer.poolSize >>> 1)) {\x0d\n    if (obj.length > (poolSize - poolOffset))\x0d\n      createPool();\x0d\n    const b = new FastBuffer(allocPool\x2C poolOffset\x2C obj.length);\x0d\n    TypedArrayPrototypeSet(b\x2C obj\x2C 0);\x0d\n    poolOffset += obj.length;\x0d\n    alignPool();\x0d\n    return b;\x0d\n  }\x0d\n  return new FastBuffer(obj);\x0d\n}\x0d\n\x0d\nfunction fromObject(obj) {\x0d\n  if (obj.length !== undefined || isAnyArrayBuffer(obj.buffer)) {\x0d\n    if (typeof obj.length !== 'number') {\x0d\n      return new FastBuffer();\x0d\n    }\x0d\n    return fromArrayLike(obj);\x0d\n  }\x0d\n\x0d\n  if (obj.type === 'Buffer' && ArrayIsArray(obj.data)) {\x0d\n    return fromArrayLike(obj.data);\x0d\n  }\x0d\n}\x0d\n\x0d\n// Static methods\x0d\n\x0d\nBuffer.isBuffer = function isBuffer(b) {\x0d\n  return b instanceof Buffer;\x0d\n};\x0d\n\x0d\nBuffer.compare = function compare(buf1\x2C buf2) {\x0d\n  if (!isUint8Array(buf1)) {\x0d\n    throw new ERR_INVALID_ARG_TYPE('buf1'\x2C ['Buffer'\x2C 'Uint8Array']\x2C buf1);\x0d\n  }\x0d\n\x0d\n  if (!isUint8Array(buf2)) {\x0d\n    throw new ERR_INVALID_ARG_TYPE('buf2'\x2C ['Buffer'\x2C 'Uint8Array']\x2C buf2);\x0d\n  }\x0d\n\x0d\n  if (buf1 === buf2) {\x0d\n    return 0;\x0d\n  }\x0d\n\x0d\n  return _compare(buf1\x2C buf2);\x0d\n};\x0d\n\x0d\nBuffer.isEncoding = function isEncoding(encoding) {\x0d\n  return typeof encoding === 'string' && encoding.length !== 0 &&\x0d\n         normalizeEncoding(encoding) !== undefined;\x0d\n};\x0d\nBuffer[kIsEncodingSymbol] = Buffer.isEncoding;\x0d\n\x0d\nBuffer.concat = function concat(list\x2C length) {\x0d\n  validateArray(list\x2C 'list');\x0d\n\x0d\n  if (list.length === 0)\x0d\n    return new FastBuffer();\x0d\n\x0d\n  if (length === undefined) {\x0d\n    length = 0;\x0d\n    for (let i = 0; i < list.length; i++) {\x0d\n      if (list[i].length) {\x0d\n        length += list[i].length;\x0d\n      }\x0d\n    }\x0d\n  } else {\x0d\n    validateOffset(length\x2C 'length');\x0d\n  }\x0d\n\x0d\n  const buffer = Buffer.allocUnsafe(length);\x0d\n  let pos = 0;\x0d\n  for (let i = 0; i < list.length; i++) {\x0d\n    const buf = list[i];\x0d\n    if (!isUint8Array(buf)) {\x0d\n      // TODO(BridgeAR): This should not be of type ERR_INVALID_ARG_TYPE.\x0d\n      // Instead\x2C find the proper error code for this.\x0d\n      throw new ERR_INVALID_ARG_TYPE(\x0d\n        `list[${i}]`\x2C ['Buffer'\x2C 'Uint8Array']\x2C list[i]);\x0d\n    }\x0d\n    pos += _copyActual(buf\x2C buffer\x2C pos\x2C 0\x2C buf.length);\x0d\n  }\x0d\n\x0d\n  // Note: `length` is always equal to `buffer.length` at this point\x0d\n  if (pos < length) {\x0d\n    // Zero-fill the remaining bytes if the specified `length` was more than\x0d\n    // the actual total length\x2C i.e. if we have some remaining allocated bytes\x0d\n    // there were not initialized.\x0d\n    TypedArrayPrototypeFill(buffer\x2C 0\x2C pos\x2C length);\x0d\n  }\x0d\n\x0d\n  return buffer;\x0d\n};\x0d\n\x0d\nfunction base64ByteLength(str\x2C bytes) {\x0d\n  // Handle padding\x0d\n  if (StringPrototypeCharCodeAt(str\x2C bytes - 1) === 0x3D)\x0d\n    bytes--;\x0d\n  if (bytes > 1 && StringPrototypeCharCodeAt(str\x2C bytes - 1) === 0x3D)\x0d\n    bytes--;\x0d\n\x0d\n  // Base64 ratio: 3/4\x0d\n  return (bytes * 3) >>> 2;\x0d\n}\x0d\n\x0d\nconst encodingOps = {\x0d\n  utf8: {\x0d\n    encoding: 'utf8'\x2C\x0d\n    encodingVal: encodingsMap.utf8\x2C\x0d\n    byteLength: byteLengthUtf8\x2C\x0d\n    write: (buf\x2C string\x2C offset\x2C len) => buf.utf8Write(string\x2C offset\x2C len)\x2C\x0d\n    slice: (buf\x2C start\x2C end) => buf.utf8Slice(start\x2C end)\x2C\x0d\n    indexOf: (buf\x2C val\x2C byteOffset\x2C dir) =>\x0d\n      indexOfString(buf\x2C val\x2C byteOffset\x2C encodingsMap.utf8\x2C dir)\x0d\n  }\x2C\x0d\n  ucs2: {\x0d\n    encoding: 'ucs2'\x2C\x0d\n    encodingVal: encodingsMap.utf16le\x2C\x0d\n    byteLength: (string) => string.length * 2\x2C\x0d\n    write: (buf\x2C string\x2C offset\x2C len) => buf.ucs2Write(string\x2C offset\x2C len)\x2C\x0d\n    slice: (buf\x2C start\x2C end) => buf.ucs2Slice(start\x2C end)\x2C\x0d\n    indexOf: (buf\x2C val\x2C byteOffset\x2C dir) =>\x0d\n      indexOfString(buf\x2C val\x2C byteOffset\x2C encodingsMap.utf16le\x2C dir)\x0d\n  }\x2C\x0d\n  utf16le: {\x0d\n    encoding: 'utf16le'\x2C\x0d\n    encodingVal: encodingsMap.utf16le\x2C\x0d\n    byteLength: (string) => string.length * 2\x2C\x0d\n    write: (buf\x2C string\x2C offset\x2C len) => buf.ucs2Write(string\x2C offset\x2C len)\x2C\x0d\n    slice: (buf\x2C start\x2C end) => buf.ucs2Slice(start\x2C end)\x2C\x0d\n    indexOf: (buf\x2C val\x2C byteOffset\x2C dir) =>\x0d\n      indexOfString(buf\x2C val\x2C byteOffset\x2C encodingsMap.utf16le\x2C dir)\x0d\n  }\x2C\x0d\n  latin1: {\x0d\n    encoding: 'latin1'\x2C\x0d\n    encodingVal: encodingsMap.latin1\x2C\x0d\n    byteLength: (string) => string.length\x2C\x0d\n    write: (buf\x2C string\x2C offset\x2C len) => buf.latin1Write(string\x2C offset\x2C len)\x2C\x0d\n    slice: (buf\x2C start\x2C end) => buf.latin1Slice(start\x2C end)\x2C\x0d\n    indexOf: (buf\x2C val\x2C byteOffset\x2C dir) =>\x0d\n      indexOfString(buf\x2C val\x2C byteOffset\x2C encodingsMap.latin1\x2C dir)\x0d\n  }\x2C\x0d\n  ascii: {\x0d\n    encoding: 'ascii'\x2C\x0d\n    encodingVal: encodingsMap.ascii\x2C\x0d\n    byteLength: (string) => string.length\x2C\x0d\n    write: (buf\x2C string\x2C offset\x2C len) => buf.asciiWrite(string\x2C offset\x2C len)\x2C\x0d\n    slice: (buf\x2C start\x2C end) => buf.asciiSlice(start\x2C end)\x2C\x0d\n    indexOf: (buf\x2C val\x2C byteOffset\x2C dir) =>\x0d\n      indexOfBuffer(buf\x2C\x0d\n                    fromStringFast(val\x2C encodingOps.ascii)\x2C\x0d\n                    byteOffset\x2C\x0d\n                    encodingsMap.ascii\x2C\x0d\n                    dir)\x0d\n  }\x2C\x0d\n  base64: {\x0d\n    encoding: 'base64'\x2C\x0d\n    encodingVal: encodingsMap.base64\x2C\x0d\n    byteLength: (string) => base64ByteLength(string\x2C string.length)\x2C\x0d\n    write: (buf\x2C string\x2C offset\x2C len) => buf.base64Write(string\x2C offset\x2C len)\x2C\x0d\n    slice: (buf\x2C start\x2C end) => buf.base64Slice(start\x2C end)\x2C\x0d\n    indexOf: (buf\x2C val\x2C byteOffset\x2C dir) =>\x0d\n      indexOfBuffer(buf\x2C\x0d\n                    fromStringFast(val\x2C encodingOps.base64)\x2C\x0d\n                    byteOffset\x2C\x0d\n                    encodingsMap.base64\x2C\x0d\n                    dir)\x0d\n  }\x2C\x0d\n  base64url: {\x0d\n    encoding: 'base64url'\x2C\x0d\n    encodingVal: encodingsMap.base64url\x2C\x0d\n    byteLength: (string) => base64ByteLength(string\x2C string.length)\x2C\x0d\n    write: (buf\x2C string\x2C offset\x2C len) =>\x0d\n      buf.base64urlWrite(string\x2C offset\x2C len)\x2C\x0d\n    slice: (buf\x2C start\x2C end) => buf.base64urlSlice(start\x2C end)\x2C\x0d\n    indexOf: (buf\x2C val\x2C byteOffset\x2C dir) =>\x0d\n      indexOfBuffer(buf\x2C\x0d\n                    fromStringFast(val\x2C encodingOps.base64url)\x2C\x0d\n                    byteOffset\x2C\x0d\n                    encodingsMap.base64url\x2C\x0d\n                    dir)\x0d\n  }\x2C\x0d\n  hex: {\x0d\n    encoding: 'hex'\x2C\x0d\n    encodingVal: encodingsMap.hex\x2C\x0d\n    byteLength: (string) => string.length >>> 1\x2C\x0d\n    write: (buf\x2C string\x2C offset\x2C len) => buf.hexWrite(string\x2C offset\x2C len)\x2C\x0d\n    slice: (buf\x2C start\x2C end) => buf.hexSlice(start\x2C end)\x2C\x0d\n    indexOf: (buf\x2C val\x2C byteOffset\x2C dir) =>\x0d\n      indexOfBuffer(buf\x2C\x0d\n                    fromStringFast(val\x2C encodingOps.hex)\x2C\x0d\n                    byteOffset\x2C\x0d\n                    encodingsMap.hex\x2C\x0d\n                    dir)\x0d\n  }\x0d\n};\x0d\nfunction getEncodingOps(encoding) {\x0d\n  encoding += '';\x0d\n  switch (encoding.length) {\x0d\n    case 4:\x0d\n      if (encoding === 'utf8') return encodingOps.utf8;\x0d\n      if (encoding === 'ucs2') return encodingOps.ucs2;\x0d\n      encoding = StringPrototypeToLowerCase(encoding);\x0d\n      if (encoding === 'utf8') return encodingOps.utf8;\x0d\n      if (encoding === 'ucs2') return encodingOps.ucs2;\x0d\n      break;\x0d\n    case 5:\x0d\n      if (encoding === 'utf-8') return encodingOps.utf8;\x0d\n      if (encoding === 'ascii') return encodingOps.ascii;\x0d\n      if (encoding === 'ucs-2') return encodingOps.ucs2;\x0d\n      encoding = StringPrototypeToLowerCase(encoding);\x0d\n      if (encoding === 'utf-8') return encodingOps.utf8;\x0d\n      if (encoding === 'ascii') return encodingOps.ascii;\x0d\n      if (encoding === 'ucs-2') return encodingOps.ucs2;\x0d\n      break;\x0d\n    case 7:\x0d\n      if (encoding === 'utf16le' ||\x0d\n          StringPrototypeToLowerCase(encoding) === 'utf16le')\x0d\n        return encodingOps.utf16le;\x0d\n      break;\x0d\n    case 8:\x0d\n      if (encoding === 'utf-16le' ||\x0d\n          StringPrototypeToLowerCase(encoding) === 'utf-16le')\x0d\n        return encodingOps.utf16le;\x0d\n      break;\x0d\n    case 6:\x0d\n      if (encoding === 'latin1' || encoding === 'binary')\x0d\n        return encodingOps.latin1;\x0d\n      if (encoding === 'base64') return encodingOps.base64;\x0d\n      encoding = StringPrototypeToLowerCase(encoding);\x0d\n      if (encoding === 'latin1' || encoding === 'binary')\x0d\n        return encodingOps.latin1;\x0d\n      if (encoding === 'base64') return encodingOps.base64;\x0d\n      break;\x0d\n    case 3:\x0d\n      if (encoding === 'hex' || StringPrototypeToLowerCase(encoding) === 'hex')\x0d\n        return encodingOps.hex;\x0d\n      break;\x0d\n    case 9:\x0d\n      if (encoding === 'base64url' ||\x0d\n          StringPrototypeToLowerCase(encoding) === 'base64url')\x0d\n        return encodingOps.base64url;\x0d\n      break;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction byteLength(string\x2C encoding) {\x0d\n  if (typeof string !== 'string') {\x0d\n    if (isArrayBufferView(string) || isAnyArrayBuffer(string)) {\x0d\n      return string.byteLength;\x0d\n    }\x0d\n\x0d\n    throw new ERR_INVALID_ARG_TYPE(\x0d\n      'string'\x2C ['string'\x2C 'Buffer'\x2C 'ArrayBuffer']\x2C string\x0d\n    );\x0d\n  }\x0d\n\x0d\n  const len = string.length;\x0d\n  if (len === 0)\x0d\n    return 0;\x0d\n\x0d\n  if (encoding) {\x0d\n    const ops = getEncodingOps(encoding);\x0d\n    if (ops) {\x0d\n      return ops.byteLength(string);\x0d\n    }\x0d\n  }\x0d\n  return byteLengthUtf8(string);\x0d\n}\x0d\n\x0d\nBuffer.byteLength = byteLength;\x0d\n\x0d\n// For backwards compatibility.\x0d\nObjectDefineProperty(Buffer.prototype\x2C 'parent'\x2C {\x0d\n  __proto__: null\x2C\x0d\n  enumerable: true\x2C\x0d\n  get() {\x0d\n    if (!(this instanceof Buffer))\x0d\n      return undefined;\x0d\n    return this.buffer;\x0d\n  }\x0d\n});\x0d\nObjectDefineProperty(Buffer.prototype\x2C 'offset'\x2C {\x0d\n  __proto__: null\x2C\x0d\n  enumerable: true\x2C\x0d\n  get() {\x0d\n    if (!(this instanceof Buffer))\x0d\n      return undefined;\x0d\n    return this.byteOffset;\x0d\n  }\x0d\n});\x0d\n\x0d\nBuffer.prototype.copy =\x0d\n  function copy(target\x2C targetStart\x2C sourceStart\x2C sourceEnd) {\x0d\n    return _copy(this\x2C target\x2C targetStart\x2C sourceStart\x2C sourceEnd);\x0d\n  };\x0d\n\x0d\n// No need to verify that "buf.length <= MAX_UINT32" since it's a read-only\x0d\n// property of a typed array.\x0d\n// This behaves neither like String nor Uint8Array in that we set start/end\x0d\n// to their upper/lower bounds if the value passed is out of range.\x0d\nBuffer.prototype.toString = function toString(encoding\x2C start\x2C end) {\x0d\n  if (arguments.length === 0) {\x0d\n    return this.utf8Slice(0\x2C this.length);\x0d\n  }\x0d\n\x0d\n  const len = this.length;\x0d\n\x0d\n  if (start <= 0)\x0d\n    start = 0;\x0d\n  else if (start >= len)\x0d\n    return '';\x0d\n  else\x0d\n    start |= 0;\x0d\n\x0d\n  if (end === undefined || end > len)\x0d\n    end = len;\x0d\n  else\x0d\n    end |= 0;\x0d\n\x0d\n  if (end <= start)\x0d\n    return '';\x0d\n\x0d\n  if (encoding === undefined)\x0d\n    return this.utf8Slice(start\x2C end);\x0d\n\x0d\n  const ops = getEncodingOps(encoding);\x0d\n  if (ops === undefined)\x0d\n    throw new ERR_UNKNOWN_ENCODING(encoding);\x0d\n\x0d\n  return ops.slice(this\x2C start\x2C end);\x0d\n};\x0d\n\x0d\nBuffer.prototype.equals = function equals(otherBuffer) {\x0d\n  if (!isUint8Array(otherBuffer)) {\x0d\n    throw new ERR_INVALID_ARG_TYPE(\x0d\n      'otherBuffer'\x2C ['Buffer'\x2C 'Uint8Array']\x2C otherBuffer);\x0d\n  }\x0d\n\x0d\n  if (this === otherBuffer)\x0d\n    return true;\x0d\n\x0d\n  if (this.byteLength !== otherBuffer.byteLength)\x0d\n    return false;\x0d\n\x0d\n  return this.byteLength === 0 || _compare(this\x2C otherBuffer) === 0;\x0d\n};\x0d\n\x0d\nlet INSPECT_MAX_BYTES = 50;\x0d\n// Override how buffers are presented by util.inspect().\x0d\nBuffer.prototype[customInspectSymbol] = function inspect(recurseTimes\x2C ctx) {\x0d\n  const max = INSPECT_MAX_BYTES;\x0d\n  const actualMax = MathMin(max\x2C this.length);\x0d\n  const remaining = this.length - max;\x0d\n  let str = StringPrototypeTrim(RegExpPrototypeSymbolReplace(\x0d\n    /(.{2})/g\x2C this.hexSlice(0\x2C actualMax)\x2C '$1 '));\x0d\n  if (remaining > 0)\x0d\n    str += ` ... ${remaining} more byte${remaining > 1 ? 's' : ''}`;\x0d\n  // Inspect special properties as well\x2C if possible.\x0d\n  if (ctx) {\x0d\n    let extras = false;\x0d\n    const filter = ctx.showHidden ? ALL_PROPERTIES : ONLY_ENUMERABLE;\x0d\n    const obj = ObjectCreate(null);\x0d\n    ArrayPrototypeForEach(getOwnNonIndexProperties(this\x2C filter)\x2C\x0d\n                          (key) => {\x0d\n                            extras = true;\x0d\n                            obj[key] = this[key];\x0d\n                          });\x0d\n    if (extras) {\x0d\n      if (this.length !== 0)\x0d\n        str += '\x2C ';\x0d\n      // '[Object: null prototype] {'.length === 26\x0d\n      // This is guarded with a test.\x0d\n      str += StringPrototypeSlice(utilInspect(obj\x2C {\x0d\n        ...ctx\x2C\x0d\n        breakLength: Infinity\x2C\x0d\n        compact: true\x0d\n      })\x2C 27\x2C -2);\x0d\n    }\x0d\n  }\x0d\n  return `<${this.constructor.name} ${str}>`;\x0d\n};\x0d\nBuffer.prototype.inspect = Buffer.prototype[customInspectSymbol];\x0d\n\x0d\nBuffer.prototype.compare = function compare(target\x2C\x0d\n                                            targetStart\x2C\x0d\n                                            targetEnd\x2C\x0d\n                                            sourceStart\x2C\x0d\n                                            sourceEnd) {\x0d\n  if (!isUint8Array(target)) {\x0d\n    throw new ERR_INVALID_ARG_TYPE('target'\x2C ['Buffer'\x2C 'Uint8Array']\x2C target);\x0d\n  }\x0d\n  if (arguments.length === 1)\x0d\n    return _compare(this\x2C target);\x0d\n\x0d\n  if (targetStart === undefined)\x0d\n    targetStart = 0;\x0d\n  else\x0d\n    validateOffset(targetStart\x2C 'targetStart');\x0d\n\x0d\n  if (targetEnd === undefined)\x0d\n    targetEnd = target.length;\x0d\n  else\x0d\n    validateOffset(targetEnd\x2C 'targetEnd'\x2C 0\x2C target.length);\x0d\n\x0d\n  if (sourceStart === undefined)\x0d\n    sourceStart = 0;\x0d\n  else\x0d\n    validateOffset(sourceStart\x2C 'sourceStart');\x0d\n\x0d\n  if (sourceEnd === undefined)\x0d\n    sourceEnd = this.length;\x0d\n  else\x0d\n    validateOffset(sourceEnd\x2C 'sourceEnd'\x2C 0\x2C this.length);\x0d\n\x0d\n  if (sourceStart >= sourceEnd)\x0d\n    return (targetStart >= targetEnd ? 0 : -1);\x0d\n  if (targetStart >= targetEnd)\x0d\n    return 1;\x0d\n\x0d\n  return compareOffset(this\x2C target\x2C targetStart\x2C sourceStart\x2C targetEnd\x2C\x0d\n                       sourceEnd);\x0d\n};\x0d\n\x0d\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`\x2C\x0d\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\x0d\n//\x0d\n// Arguments:\x0d\n// - buffer - a Buffer to search\x0d\n// - val - a string\x2C Buffer\x2C or number\x0d\n// - byteOffset - an index into `buffer`; will be clamped to an int32\x0d\n// - encoding - an optional encoding\x2C relevant if val is a string\x0d\n// - dir - true for indexOf\x2C false for lastIndexOf\x0d\nfunction bidirectionalIndexOf(buffer\x2C val\x2C byteOffset\x2C encoding\x2C dir) {\x0d\n  validateBuffer(buffer);\x0d\n\x0d\n  if (typeof byteOffset === 'string') {\x0d\n    encoding = byteOffset;\x0d\n    byteOffset = undefined;\x0d\n  } else if (byteOffset > 0x7fffffff) {\x0d\n    byteOffset = 0x7fffffff;\x0d\n  } else if (byteOffset < -0x80000000) {\x0d\n    byteOffset = -0x80000000;\x0d\n  }\x0d\n  // Coerce to Number. Values like null and [] become 0.\x0d\n  byteOffset = +byteOffset;\x0d\n  // If the offset is undefined\x2C "foo"\x2C {}\x2C coerces to NaN\x2C search whole buffer.\x0d\n  if (NumberIsNaN(byteOffset)) {\x0d\n    byteOffset = dir ? 0 : (buffer.length || buffer.byteLength);\x0d\n  }\x0d\n  dir = !!dir;  // Cast to bool.\x0d\n\x0d\n  if (typeof val === 'number')\x0d\n    return indexOfNumber(buffer\x2C val >>> 0\x2C byteOffset\x2C dir);\x0d\n\x0d\n  let ops;\x0d\n  if (encoding === undefined)\x0d\n    ops = encodingOps.utf8;\x0d\n  else\x0d\n    ops = getEncodingOps(encoding);\x0d\n\x0d\n  if (typeof val === 'string') {\x0d\n    if (ops === undefined)\x0d\n      throw new ERR_UNKNOWN_ENCODING(encoding);\x0d\n    return ops.indexOf(buffer\x2C val\x2C byteOffset\x2C dir);\x0d\n  }\x0d\n\x0d\n  if (isUint8Array(val)) {\x0d\n    const encodingVal =\x0d\n      (ops === undefined ? encodingsMap.utf8 : ops.encodingVal);\x0d\n    return indexOfBuffer(buffer\x2C val\x2C byteOffset\x2C encodingVal\x2C dir);\x0d\n  }\x0d\n\x0d\n  throw new ERR_INVALID_ARG_TYPE(\x0d\n    'value'\x2C ['number'\x2C 'string'\x2C 'Buffer'\x2C 'Uint8Array']\x2C val\x0d\n  );\x0d\n}\x0d\n\x0d\nBuffer.prototype.indexOf = function indexOf(val\x2C byteOffset\x2C encoding) {\x0d\n  return bidirectionalIndexOf(this\x2C val\x2C byteOffset\x2C encoding\x2C true);\x0d\n};\x0d\n\x0d\nBuffer.prototype.lastIndexOf = function lastIndexOf(val\x2C byteOffset\x2C encoding) {\x0d\n  return bidirectionalIndexOf(this\x2C val\x2C byteOffset\x2C encoding\x2C false);\x0d\n};\x0d\n\x0d\nBuffer.prototype.includes = function includes(val\x2C byteOffset\x2C encoding) {\x0d\n  return this.indexOf(val\x2C byteOffset\x2C encoding) !== -1;\x0d\n};\x0d\n\x0d\n// Usage:\x0d\n//    buffer.fill(number[\x2C offset[\x2C end]])\x0d\n//    buffer.fill(buffer[\x2C offset[\x2C end]])\x0d\n//    buffer.fill(string[\x2C offset[\x2C end]][\x2C encoding])\x0d\nBuffer.prototype.fill = function fill(value\x2C offset\x2C end\x2C encoding) {\x0d\n  return _fill(this\x2C value\x2C offset\x2C end\x2C encoding);\x0d\n};\x0d\n\x0d\nfunction _fill(buf\x2C value\x2C offset\x2C end\x2C encoding) {\x0d\n  if (typeof value === 'string') {\x0d\n    if (offset === undefined || typeof offset === 'string') {\x0d\n      encoding = offset;\x0d\n      offset = 0;\x0d\n      end = buf.length;\x0d\n    } else if (typeof end === 'string') {\x0d\n      encoding = end;\x0d\n      end = buf.length;\x0d\n    }\x0d\n\x0d\n    const normalizedEncoding = normalizeEncoding(encoding);\x0d\n    if (normalizedEncoding === undefined) {\x0d\n      validateString(encoding\x2C 'encoding');\x0d\n      throw new ERR_UNKNOWN_ENCODING(encoding);\x0d\n    }\x0d\n\x0d\n    if (value.length === 0) {\x0d\n      // If value === '' default to zero.\x0d\n      value = 0;\x0d\n    } else if (value.length === 1) {\x0d\n      // Fast path: If `value` fits into a single byte\x2C use that numeric value.\x0d\n      if (normalizedEncoding === 'utf8') {\x0d\n        const code = StringPrototypeCharCodeAt(value\x2C 0);\x0d\n        if (code < 128) {\x0d\n          value = code;\x0d\n        }\x0d\n      } else if (normalizedEncoding === 'latin1') {\x0d\n        value = StringPrototypeCharCodeAt(value\x2C 0);\x0d\n      }\x0d\n    }\x0d\n  } else {\x0d\n    encoding = undefined;\x0d\n  }\x0d\n\x0d\n  if (offset === undefined) {\x0d\n    offset = 0;\x0d\n    end = buf.length;\x0d\n  } else {\x0d\n    validateOffset(offset\x2C 'offset');\x0d\n    // Invalid ranges are not set to a default\x2C so can range check early.\x0d\n    if (end === undefined) {\x0d\n      end = buf.length;\x0d\n    } else {\x0d\n      validateOffset(end\x2C 'end'\x2C 0\x2C buf.length);\x0d\n    }\x0d\n    if (offset >= end)\x0d\n      return buf;\x0d\n  }\x0d\n\x0d\n\x0d\n  if (typeof value === 'number') {\x0d\n    // OOB check\x0d\n    const byteLen = TypedArrayPrototypeGetByteLength(buf);\x0d\n    const fillLength = end - offset;\x0d\n    if (offset > end || fillLength + offset > byteLen)\x0d\n      throw new ERR_BUFFER_OUT_OF_BOUNDS();\x0d\n\x0d\n    TypedArrayPrototypeFill(buf\x2C value\x2C offset\x2C end);\x0d\n  } else {\x0d\n    const res = bindingFill(buf\x2C value\x2C offset\x2C end\x2C encoding);\x0d\n    if (res < 0) {\x0d\n      if (res === -1)\x0d\n        throw new ERR_INVALID_ARG_VALUE('value'\x2C value);\x0d\n      throw new ERR_BUFFER_OUT_OF_BOUNDS();\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return buf;\x0d\n}\x0d\n\x0d\nBuffer.prototype.write = function write(string\x2C offset\x2C length\x2C encoding) {\x0d\n  // Buffer#write(string);\x0d\n  if (offset === undefined) {\x0d\n    return this.utf8Write(string\x2C 0\x2C this.length);\x0d\n  }\x0d\n  // Buffer#write(string\x2C encoding)\x0d\n  if (length === undefined && typeof offset === 'string') {\x0d\n    encoding = offset;\x0d\n    length = this.length;\x0d\n    offset = 0;\x0d\n\x0d\n  // Buffer#write(string\x2C offset[\x2C length][\x2C encoding])\x0d\n  } else {\x0d\n    validateOffset(offset\x2C 'offset'\x2C 0\x2C this.length);\x0d\n\x0d\n    const remaining = this.length - offset;\x0d\n\x0d\n    if (length === undefined) {\x0d\n      length = remaining;\x0d\n    } else if (typeof length === 'string') {\x0d\n      encoding = length;\x0d\n      length = remaining;\x0d\n    } else {\x0d\n      validateOffset(length\x2C 'length'\x2C 0\x2C this.length);\x0d\n      if (length > remaining)\x0d\n        length = remaining;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  if (!encoding)\x0d\n    return this.utf8Write(string\x2C offset\x2C length);\x0d\n\x0d\n  const ops = getEncodingOps(encoding);\x0d\n  if (ops === undefined)\x0d\n    throw new ERR_UNKNOWN_ENCODING(encoding);\x0d\n  return ops.write(this\x2C string\x2C offset\x2C length);\x0d\n};\x0d\n\x0d\nBuffer.prototype.toJSON = function toJSON() {\x0d\n  if (this.length > 0) {\x0d\n    const data = new Array(this.length);\x0d\n    for (let i = 0; i < this.length; ++i)\x0d\n      data[i] = this[i];\x0d\n    return { type: 'Buffer'\x2C data };\x0d\n  }\x0d\n  return { type: 'Buffer'\x2C data: [] };\x0d\n};\x0d\n\x0d\nfunction adjustOffset(offset\x2C length) {\x0d\n  // Use Math.trunc() to convert offset to an integer value that can be larger\x0d\n  // than an Int32. Hence\x2C don't use offset | 0 or similar techniques.\x0d\n  offset = MathTrunc(offset);\x0d\n  if (offset === 0) {\x0d\n    return 0;\x0d\n  }\x0d\n  if (offset < 0) {\x0d\n    offset += length;\x0d\n    return offset > 0 ? offset : 0;\x0d\n  }\x0d\n  if (offset < length) {\x0d\n    return offset;\x0d\n  }\x0d\n  return NumberIsNaN(offset) ? 0 : length;\x0d\n}\x0d\n\x0d\nBuffer.prototype.subarray = function subarray(start\x2C end) {\x0d\n  const srcLength = this.length;\x0d\n  start = adjustOffset(start\x2C srcLength);\x0d\n  end = end !== undefined ? adjustOffset(end\x2C srcLength) : srcLength;\x0d\n  const newLength = end > start ? end - start : 0;\x0d\n  return new FastBuffer(this.buffer\x2C this.byteOffset + start\x2C newLength);\x0d\n};\x0d\n\x0d\nBuffer.prototype.slice = function slice(start\x2C end) {\x0d\n  return this.subarray(start\x2C end);\x0d\n};\x0d\n\x0d\nfunction swap(b\x2C n\x2C m) {\x0d\n  const i = b[n];\x0d\n  b[n] = b[m];\x0d\n  b[m] = i;\x0d\n}\x0d\n\x0d\nBuffer.prototype.swap16 = function swap16() {\x0d\n  // For Buffer.length < 128\x2C it's generally faster to\x0d\n  // do the swap in javascript. For larger buffers\x2C\x0d\n  // dropping down to the native code is faster.\x0d\n  const len = this.length;\x0d\n  if (len % 2 !== 0)\x0d\n    throw new ERR_INVALID_BUFFER_SIZE('16-bits');\x0d\n  if (len < 128) {\x0d\n    for (let i = 0; i < len; i += 2)\x0d\n      swap(this\x2C i\x2C i + 1);\x0d\n    return this;\x0d\n  }\x0d\n  return _swap16(this);\x0d\n};\x0d\n\x0d\nBuffer.prototype.swap32 = function swap32() {\x0d\n  // For Buffer.length < 192\x2C it's generally faster to\x0d\n  // do the swap in javascript. For larger buffers\x2C\x0d\n  // dropping down to the native code is faster.\x0d\n  const len = this.length;\x0d\n  if (len % 4 !== 0)\x0d\n    throw new ERR_INVALID_BUFFER_SIZE('32-bits');\x0d\n  if (len < 192) {\x0d\n    for (let i = 0; i < len; i += 4) {\x0d\n      swap(this\x2C i\x2C i + 3);\x0d\n      swap(this\x2C i + 1\x2C i + 2);\x0d\n    }\x0d\n    return this;\x0d\n  }\x0d\n  return _swap32(this);\x0d\n};\x0d\n\x0d\nBuffer.prototype.swap64 = function swap64() {\x0d\n  // For Buffer.length < 192\x2C it's generally faster to\x0d\n  // do the swap in javascript. For larger buffers\x2C\x0d\n  // dropping down to the native code is faster.\x0d\n  const len = this.length;\x0d\n  if (len % 8 !== 0)\x0d\n    throw new ERR_INVALID_BUFFER_SIZE('64-bits');\x0d\n  if (len < 192) {\x0d\n    for (let i = 0; i < len; i += 8) {\x0d\n      swap(this\x2C i\x2C i + 7);\x0d\n      swap(this\x2C i + 1\x2C i + 6);\x0d\n      swap(this\x2C i + 2\x2C i + 5);\x0d\n      swap(this\x2C i + 3\x2C i + 4);\x0d\n    }\x0d\n    return this;\x0d\n  }\x0d\n  return _swap64(this);\x0d\n};\x0d\n\x0d\nBuffer.prototype.toLocaleString = Buffer.prototype.toString;\x0d\n\x0d\nlet transcode;\x0d\nif (internalBinding('config').hasIntl) {\x0d\n  const {\x0d\n    icuErrName\x2C\x0d\n    transcode: _transcode\x0d\n  } = internalBinding('icu');\x0d\n\x0d\n  // Transcodes the Buffer from one encoding to another\x2C returning a new\x0d\n  // Buffer instance.\x0d\n  transcode = function transcode(source\x2C fromEncoding\x2C toEncoding) {\x0d\n    if (!isUint8Array(source)) {\x0d\n      throw new ERR_INVALID_ARG_TYPE('source'\x2C\x0d\n                                     ['Buffer'\x2C 'Uint8Array']\x2C source);\x0d\n    }\x0d\n    if (source.length === 0) return Buffer.alloc(0);\x0d\n\x0d\n    fromEncoding = normalizeEncoding(fromEncoding) || fromEncoding;\x0d\n    toEncoding = normalizeEncoding(toEncoding) || toEncoding;\x0d\n    const result = _transcode(source\x2C fromEncoding\x2C toEncoding);\x0d\n    if (typeof result !== 'number')\x0d\n      return result;\x0d\n\x0d\n    const code = icuErrName(result);\x0d\n    const err = genericNodeError(\x0d\n      `Unable to transcode Buffer [${code}]`\x2C\x0d\n      { code: code\x2C errno: result }\x0d\n    );\x0d\n    throw err;\x0d\n  };\x0d\n}\x0d\n\x0d\nfunction btoa(input) {\x0d\n  // The implementation here has not been performance optimized in any way and\x0d\n  // should not be.\x0d\n  // Refs: https://github.com/nodejs/node/pull/38433#issuecomment-828426932\x0d\n  if (arguments.length === 0) {\x0d\n    throw new ERR_MISSING_ARGS('input');\x0d\n  }\x0d\n  input = `${input}`;\x0d\n  for (let n = 0; n < input.length; n++) {\x0d\n    if (input[n].charCodeAt(0) > 0xff)\x0d\n      throw lazyDOMException('Invalid character'\x2C 'InvalidCharacterError');\x0d\n  }\x0d\n  const buf = Buffer.from(input\x2C 'latin1');\x0d\n  return buf.toString('base64');\x0d\n}\x0d\n\x0d\n// Refs: https://infra.spec.whatwg.org/#forgiving-base64-decode\x0d\nconst kForgivingBase64AllowedChars = [\x0d\n  // ASCII whitespace\x0d\n  // Refs: https://infra.spec.whatwg.org/#ascii-whitespace\x0d\n  0x09\x2C 0x0A\x2C 0x0C\x2C 0x0D\x2C 0x20\x2C\x0d\n\x0d\n  // Uppercase letters\x0d\n  ...ArrayFrom({ length: 26 }\x2C (_\x2C i) => StringPrototypeCharCodeAt('A') + i)\x2C\x0d\n\x0d\n  // Lowercase letters\x0d\n  ...ArrayFrom({ length: 26 }\x2C (_\x2C i) => StringPrototypeCharCodeAt('a') + i)\x2C\x0d\n\x0d\n  // Decimal digits\x0d\n  ...ArrayFrom({ length: 10 }\x2C (_\x2C i) => StringPrototypeCharCodeAt('0') + i)\x2C\x0d\n\x0d\n  0x2B\x2C // +\x0d\n  0x2F\x2C // /\x0d\n  0x3D\x2C // =\x0d\n];\x0d\nconst kEqualSignIndex = ArrayPrototypeIndexOf(kForgivingBase64AllowedChars\x2C\x0d\n                                              0x3D);\x0d\n\x0d\nfunction atob(input) {\x0d\n  // The implementation here has not been performance optimized in any way and\x0d\n  // should not be.\x0d\n  // Refs: https://github.com/nodejs/node/pull/38433#issuecomment-828426932\x0d\n  if (arguments.length === 0) {\x0d\n    throw new ERR_MISSING_ARGS('input');\x0d\n  }\x0d\n\x0d\n  input = `${input}`;\x0d\n  let nonAsciiWhitespaceCharCount = 0;\x0d\n  let equalCharCount = 0;\x0d\n\x0d\n  for (let n = 0; n < input.length; n++) {\x0d\n    const index = ArrayPrototypeIndexOf(\x0d\n      kForgivingBase64AllowedChars\x2C\x0d\n      StringPrototypeCharCodeAt(input\x2C n));\x0d\n\x0d\n    if (index > 4) {\x0d\n      // The first 5 elements of `kForgivingBase64AllowedChars` are\x0d\n      // ASCII whitespace char codes.\x0d\n      nonAsciiWhitespaceCharCount++;\x0d\n\x0d\n      if (index === kEqualSignIndex) {\x0d\n        equalCharCount++;\x0d\n      } else if (equalCharCount) {\x0d\n        // The `=` char is only allowed at the end.\x0d\n        throw lazyDOMException('Invalid character'\x2C 'InvalidCharacterError');\x0d\n      }\x0d\n\x0d\n      if (equalCharCount > 2) {\x0d\n        // Only one more `=` is permitted after the first equal sign.\x0d\n        throw lazyDOMException('Invalid character'\x2C 'InvalidCharacterError');\x0d\n      }\x0d\n    } else if (index === -1) {\x0d\n      throw lazyDOMException('Invalid character'\x2C 'InvalidCharacterError');\x0d\n    }\x0d\n  }\x0d\n\x0d\n  let reminder = nonAsciiWhitespaceCharCount % 4;\x0d\n\x0d\n  // See #2\x2C #3\x2C #4 - https://infra.spec.whatwg.org/#forgiving-base64\x0d\n  if (!reminder) {\x0d\n    // Remove all trailing `=` characters and get the new reminder.\x0d\n    reminder = (nonAsciiWhitespaceCharCount - equalCharCount) % 4;\x0d\n  } else if (equalCharCount) {\x0d\n    // `=` should not in the input if there's a reminder.\x0d\n    throw lazyDOMException('Invalid character'\x2C 'InvalidCharacterError');\x0d\n  }\x0d\n\x0d\n  // See #3 - https://infra.spec.whatwg.org/#forgiving-base64\x0d\n  if (reminder === 1) {\x0d\n    throw lazyDOMException(\x0d\n      'The string to be decoded is not correctly encoded.'\x2C\x0d\n      'InvalidCharacterError');\x0d\n  }\x0d\n\x0d\n  return Buffer.from(input\x2C 'base64').toString('latin1');\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  Blob\x2C\x0d\n  File\x2C\x0d\n  resolveObjectURL\x2C\x0d\n  Buffer\x2C\x0d\n  SlowBuffer\x2C\x0d\n  transcode\x2C\x0d\n\x0d\n  // Legacy\x0d\n  kMaxLength\x2C\x0d\n  kStringMaxLength\x2C\x0d\n  btoa\x2C\x0d\n  atob\x2C\x0d\n};\x0d\n\x0d\nObjectDefineProperties(module.exports\x2C {\x0d\n  constants: {\x0d\n    __proto__: null\x2C\x0d\n    configurable: false\x2C\x0d\n    enumerable: true\x2C\x0d\n    value: constants\x0d\n  }\x2C\x0d\n  INSPECT_MAX_BYTES: {\x0d\n    __proto__: null\x2C\x0d\n    configurable: true\x2C\x0d\n    enumerable: true\x2C\x0d\n    get() { return INSPECT_MAX_BYTES; }\x2C\x0d\n    set(val) { INSPECT_MAX_BYTES = val; }\x0d\n  }\x0d\n});\x0d\n
code-source-info,0x1c9a300e0b0,30,11764,11832,C0O11776C5O11776C9O11797C14O11804C18O11829,,
code-creation,LazyCompile,10,401185,0x1c9a3010c28,54, node:buffer:358:36,0x1adeb58d080,~
code-source-info,0x1c9a3010c28,30,10708,10868,C0O10723C8O10723C13O10756C14O10767C21O10783C23O10780C28O10803C33O10835C46O10809C51O10803C53O10867,,
code-creation,LazyCompile,10,401282,0x1c9a3010db0,177,validateNumber node:internal/validators:176:24,0x3a899792c98,~
code-source-info,0x1c9a3010db0,22,4627,5083,C19O4668C25O4704C41O4710C46O4704C47O4764C54O4790C66O4822C83O4872C86O4872C92O4900C110O4971C136O5003C151O5047C169O4906C174O4900C176O5082,,
code-creation,LazyCompile,10,401489,0x1c9a3010fd0,36, node:internal/fs/promises:356:5,0x1c9a300ddf8,~
code-source-info,0x1c9a3010fd0,466,8437,8496,C0O8437C9O8449C21O8470C30O8449C35O8496,,
code-creation,LazyCompile,10,401601,0x1c9a30112c8,248,close node:internal/fs/promises:216:11,0x2a6f0b9ed58,~
code-source-info,0x1c9a30112c8,466,5022,5843,C0O5035C7O5044C9O5043C15O5049C20O5066C27O5073C30O5090C31O5105C38O5114C40O5113C45O5139C52O5151C54O5150C57O5166C58O5181C65O5186C73O5192C77O5201C84O5210C86O5209C91O5217C96O5233C103O5238C108O5243C112O5256C119O5261C126O5278C136O5321C138O5320C142O5330C147O5330C157O5278C162O5276C168O5422C175O5427C182O5444C189O5486C199O5482C210O5444C215O5442C219O5786C222O5791C230O5791C235O5811C242O5823C244O5822C247O5838,,
code-creation,LazyCompile,10,401766,0x1c9a30116b0,33,primordials.SafePromisePrototypeFinally node:internal/per_context/primordials:449:43,0x1f81b713390,~
code-source-info,0x1c9a30116b0,12,13374,13654,C0O13374C13O13510C27O13510C32O13654,,
code-creation,LazyCompile,10,401843,0x1c9a3011848,46, node:internal/per_context/primordials:452:15,0x1c9a3011600,~
code-source-info,0x1c9a3011848,12,13522,13649,C0O13639C14O13537C20O13612C28O13619C34O13638C39O13639C45O13649,,
code-creation,LazyCompile,10,401901,0x1c9a3011988,27,SafePromise node:internal/per_context/primordials:436:16,0x1f81b713340,~
code-source-info,0x1c9a3011988,12,12827,12858,C3O12840C7O12846C11O12840C26O12857,,
code-creation,LazyCompile,10,401958,0x1c9a3011a80,22, node:internal/per_context/primordials:453:21,0x1c9a3011790,~
code-source-info,0x1c9a3011a80,12,13553,13602,C0O13563C16O13563C21O13602,,
code-creation,LazyCompile,10,402040,0x1c9a3011b70,17, node:internal/fs/promises:230:9,0x1c9a30110b0,~
code-source-info,0x1c9a3011b70,466,5348,5390,C0O5356C7O5361C11O5376C16O5389,,
code-creation,LazyCompile,10,402093,0x1c9a3011c48,3, node:internal/fs/promises:356:51,0x1c9a3010f20,~
code-source-info,0x1c9a3011c48,466,8483,8495,C0O8489C2O8495,,
code-creation,LazyCompile,10,402162,0x1c9a3011d10,36,validateOutput node:internal/modules/esm/loader:593:28,0x1c9a3006548,~
code-source-info,0x1c9a3011d10,451,18335,18580,C0O18375C10O18444C28O18450C33O18444C35O18579,,
code-creation,LazyCompile,10,402352,0x1c9a3012090,196,moduleStrategy node:internal/modules/esm/translators:114:56,0x2a6f0bb3478,~
code-source-info,0x1c9a3012090,471,3264,3694,C0O3264C27O3291C40O3291C45O3336C50O3345C56O3367C66O3367C71O3404C83O3440C88O3404C92O3466C113O3466C119O3515C126O3526C131O3538C136O3542C141O3579C153O3642C157O3538C163O3677C173O3691,,
code-creation,LazyCompile,10,402457,0x1c9a3012e08,83,assertBufferSource node:internal/modules/esm/translators:78:28,0x2a6f0bb3248,~
code-source-info,0x1c9a3012e08,471,2217,2624,C0O2252C10O2304C11O2311C12O2368C15O2368C19O2328C24O2347C29O2388C35O2415C41O2446C42O2453C43O2462C50O2515C77O2468C82O2462,,
code-creation,LazyCompile,10,402527,0x1c9a3012f60,31,lazyTypes node:internal/modules/esm/translators:22:19,0x2a6f0bb31a8,~
code-source-info,0x1c9a3012f60,471,420,517,C0O428C6O449C10O463C11O467C17O483C24O481C30O514,,
code-creation,LazyCompile,10,402600,0x1c9a3013078,72,stringify node:internal/modules/esm/translators:94:19,0x2a6f0bb3298,~
code-source-info,0x1c9a3013078,471,2646,2851,C0O2658C6O2688C8O2700C9O2704C20O2704C25O2759C33O2792C36O2788C45O2808C50O2767C56O2820C61O2835C66O2835C71O2848,,
code-creation,LazyCompile,10,402769,0x1c9a30132a0,284,TextDecoder node:internal/encoding:386:16,0x1adeb5a3180,~
script-source,33,node:internal/encoding,'use strict';\x0d\n\x0d\n// An implementation of the WHATWG Encoding Standard\x0d\n// https://encoding.spec.whatwg.org\x0d\n\x0d\nconst {\x0d\n  Boolean\x2C\x0d\n  ObjectCreate\x2C\x0d\n  ObjectDefineProperties\x2C\x0d\n  ObjectGetOwnPropertyDescriptors\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  ObjectValues\x2C\x0d\n  SafeMap\x2C\x0d\n  StringPrototypeSlice\x2C\x0d\n  Symbol\x2C\x0d\n  SymbolToStringTag\x2C\x0d\n  Uint32Array\x2C\x0d\n  Uint8Array\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  ERR_ENCODING_NOT_SUPPORTED\x2C\x0d\n  ERR_INVALID_ARG_TYPE\x2C\x0d\n  ERR_INVALID_THIS\x2C\x0d\n  ERR_NO_ICU\x0d\n} = require('internal/errors').codes;\x0d\nconst kHandle = Symbol('handle');\x0d\nconst kFlags = Symbol('flags');\x0d\nconst kEncoding = Symbol('encoding');\x0d\nconst kDecoder = Symbol('decoder');\x0d\nconst kEncoder = Symbol('encoder');\x0d\nconst kUTF8FastPath = Symbol('kUTF8FastPath');\x0d\nconst kIgnoreBOM = Symbol('kIgnoreBOM');\x0d\n\x0d\nconst {\x0d\n  getConstructorOf\x2C\x0d\n  customInspectSymbol: inspect\x2C\x0d\n  kEmptyObject\x2C\x0d\n  kEnumerableProperty\x2C\x0d\n} = require('internal/util');\x0d\n\x0d\nconst {\x0d\n  isAnyArrayBuffer\x2C\x0d\n  isArrayBufferView\x2C\x0d\n  isUint8Array\x0d\n} = require('internal/util/types');\x0d\n\x0d\nconst {\x0d\n  validateString\x2C\x0d\n  validateObject\x2C\x0d\n} = require('internal/validators');\x0d\n\x0d\nconst {\x0d\n  encodeInto\x2C\x0d\n  encodeUtf8String\x2C\x0d\n  decodeUTF8\x2C\x0d\n} = internalBinding('buffer');\x0d\n\x0d\nlet Buffer;\x0d\nfunction lazyBuffer() {\x0d\n  if (Buffer === undefined)\x0d\n    Buffer = require('buffer').Buffer;\x0d\n  return Buffer;\x0d\n}\x0d\n\x0d\nfunction validateEncoder(obj) {\x0d\n  if (obj == null || obj[kEncoder] !== true)\x0d\n    throw new ERR_INVALID_THIS('TextEncoder');\x0d\n}\x0d\n\x0d\nfunction validateDecoder(obj) {\x0d\n  if (obj == null || obj[kDecoder] !== true)\x0d\n    throw new ERR_INVALID_THIS('TextDecoder');\x0d\n}\x0d\n\x0d\nconst CONVERTER_FLAGS_FLUSH = 0x1;\x0d\nconst CONVERTER_FLAGS_FATAL = 0x2;\x0d\nconst CONVERTER_FLAGS_IGNORE_BOM = 0x4;\x0d\n\x0d\nconst empty = new Uint8Array(0);\x0d\n\x0d\nconst encodings = new SafeMap([\x0d\n  ['unicode-1-1-utf-8'\x2C 'utf-8']\x2C\x0d\n  ['utf8'\x2C 'utf-8']\x2C\x0d\n  ['utf-8'\x2C 'utf-8']\x2C\x0d\n  ['866'\x2C 'ibm866']\x2C\x0d\n  ['cp866'\x2C 'ibm866']\x2C\x0d\n  ['csibm866'\x2C 'ibm866']\x2C\x0d\n  ['ibm866'\x2C 'ibm866']\x2C\x0d\n  ['csisolatin2'\x2C 'iso-8859-2']\x2C\x0d\n  ['iso-8859-2'\x2C 'iso-8859-2']\x2C\x0d\n  ['iso-ir-101'\x2C 'iso-8859-2']\x2C\x0d\n  ['iso8859-2'\x2C 'iso-8859-2']\x2C\x0d\n  ['iso88592'\x2C 'iso-8859-2']\x2C\x0d\n  ['iso_8859-2'\x2C 'iso-8859-2']\x2C\x0d\n  ['iso_8859-2:1987'\x2C 'iso-8859-2']\x2C\x0d\n  ['l2'\x2C 'iso-8859-2']\x2C\x0d\n  ['latin2'\x2C 'iso-8859-2']\x2C\x0d\n  ['csisolatin3'\x2C 'iso-8859-3']\x2C\x0d\n  ['iso-8859-3'\x2C 'iso-8859-3']\x2C\x0d\n  ['iso-ir-109'\x2C 'iso-8859-3']\x2C\x0d\n  ['iso8859-3'\x2C 'iso-8859-3']\x2C\x0d\n  ['iso88593'\x2C 'iso-8859-3']\x2C\x0d\n  ['iso_8859-3'\x2C 'iso-8859-3']\x2C\x0d\n  ['iso_8859-3:1988'\x2C 'iso-8859-3']\x2C\x0d\n  ['l3'\x2C 'iso-8859-3']\x2C\x0d\n  ['latin3'\x2C 'iso-8859-3']\x2C\x0d\n  ['csisolatin4'\x2C 'iso-8859-4']\x2C\x0d\n  ['iso-8859-4'\x2C 'iso-8859-4']\x2C\x0d\n  ['iso-ir-110'\x2C 'iso-8859-4']\x2C\x0d\n  ['iso8859-4'\x2C 'iso-8859-4']\x2C\x0d\n  ['iso88594'\x2C 'iso-8859-4']\x2C\x0d\n  ['iso_8859-4'\x2C 'iso-8859-4']\x2C\x0d\n  ['iso_8859-4:1988'\x2C 'iso-8859-4']\x2C\x0d\n  ['l4'\x2C 'iso-8859-4']\x2C\x0d\n  ['latin4'\x2C 'iso-8859-4']\x2C\x0d\n  ['csisolatincyrillic'\x2C 'iso-8859-5']\x2C\x0d\n  ['cyrillic'\x2C 'iso-8859-5']\x2C\x0d\n  ['iso-8859-5'\x2C 'iso-8859-5']\x2C\x0d\n  ['iso-ir-144'\x2C 'iso-8859-5']\x2C\x0d\n  ['iso8859-5'\x2C 'iso-8859-5']\x2C\x0d\n  ['iso88595'\x2C 'iso-8859-5']\x2C\x0d\n  ['iso_8859-5'\x2C 'iso-8859-5']\x2C\x0d\n  ['iso_8859-5:1988'\x2C 'iso-8859-5']\x2C\x0d\n  ['arabic'\x2C 'iso-8859-6']\x2C\x0d\n  ['asmo-708'\x2C 'iso-8859-6']\x2C\x0d\n  ['csiso88596e'\x2C 'iso-8859-6']\x2C\x0d\n  ['csiso88596i'\x2C 'iso-8859-6']\x2C\x0d\n  ['csisolatinarabic'\x2C 'iso-8859-6']\x2C\x0d\n  ['ecma-114'\x2C 'iso-8859-6']\x2C\x0d\n  ['iso-8859-6'\x2C 'iso-8859-6']\x2C\x0d\n  ['iso-8859-6-e'\x2C 'iso-8859-6']\x2C\x0d\n  ['iso-8859-6-i'\x2C 'iso-8859-6']\x2C\x0d\n  ['iso-ir-127'\x2C 'iso-8859-6']\x2C\x0d\n  ['iso8859-6'\x2C 'iso-8859-6']\x2C\x0d\n  ['iso88596'\x2C 'iso-8859-6']\x2C\x0d\n  ['iso_8859-6'\x2C 'iso-8859-6']\x2C\x0d\n  ['iso_8859-6:1987'\x2C 'iso-8859-6']\x2C\x0d\n  ['csisolatingreek'\x2C 'iso-8859-7']\x2C\x0d\n  ['ecma-118'\x2C 'iso-8859-7']\x2C\x0d\n  ['elot_928'\x2C 'iso-8859-7']\x2C\x0d\n  ['greek'\x2C 'iso-8859-7']\x2C\x0d\n  ['greek8'\x2C 'iso-8859-7']\x2C\x0d\n  ['iso-8859-7'\x2C 'iso-8859-7']\x2C\x0d\n  ['iso-ir-126'\x2C 'iso-8859-7']\x2C\x0d\n  ['iso8859-7'\x2C 'iso-8859-7']\x2C\x0d\n  ['iso88597'\x2C 'iso-8859-7']\x2C\x0d\n  ['iso_8859-7'\x2C 'iso-8859-7']\x2C\x0d\n  ['iso_8859-7:1987'\x2C 'iso-8859-7']\x2C\x0d\n  ['sun_eu_greek'\x2C 'iso-8859-7']\x2C\x0d\n  ['csiso88598e'\x2C 'iso-8859-8']\x2C\x0d\n  ['csisolatinhebrew'\x2C 'iso-8859-8']\x2C\x0d\n  ['hebrew'\x2C 'iso-8859-8']\x2C\x0d\n  ['iso-8859-8'\x2C 'iso-8859-8']\x2C\x0d\n  ['iso-8859-8-e'\x2C 'iso-8859-8']\x2C\x0d\n  ['iso-ir-138'\x2C 'iso-8859-8']\x2C\x0d\n  ['iso8859-8'\x2C 'iso-8859-8']\x2C\x0d\n  ['iso88598'\x2C 'iso-8859-8']\x2C\x0d\n  ['iso_8859-8'\x2C 'iso-8859-8']\x2C\x0d\n  ['iso_8859-8:1988'\x2C 'iso-8859-8']\x2C\x0d\n  ['visual'\x2C 'iso-8859-8']\x2C\x0d\n  ['csiso88598i'\x2C 'iso-8859-8-i']\x2C\x0d\n  ['iso-8859-8-i'\x2C 'iso-8859-8-i']\x2C\x0d\n  ['logical'\x2C 'iso-8859-8-i']\x2C\x0d\n  ['csisolatin6'\x2C 'iso-8859-10']\x2C\x0d\n  ['iso-8859-10'\x2C 'iso-8859-10']\x2C\x0d\n  ['iso-ir-157'\x2C 'iso-8859-10']\x2C\x0d\n  ['iso8859-10'\x2C 'iso-8859-10']\x2C\x0d\n  ['iso885910'\x2C 'iso-8859-10']\x2C\x0d\n  ['l6'\x2C 'iso-8859-10']\x2C\x0d\n  ['latin6'\x2C 'iso-8859-10']\x2C\x0d\n  ['iso-8859-13'\x2C 'iso-8859-13']\x2C\x0d\n  ['iso8859-13'\x2C 'iso-8859-13']\x2C\x0d\n  ['iso885913'\x2C 'iso-8859-13']\x2C\x0d\n  ['iso-8859-14'\x2C 'iso-8859-14']\x2C\x0d\n  ['iso8859-14'\x2C 'iso-8859-14']\x2C\x0d\n  ['iso885914'\x2C 'iso-8859-14']\x2C\x0d\n  ['csisolatin9'\x2C 'iso-8859-15']\x2C\x0d\n  ['iso-8859-15'\x2C 'iso-8859-15']\x2C\x0d\n  ['iso8859-15'\x2C 'iso-8859-15']\x2C\x0d\n  ['iso885915'\x2C 'iso-8859-15']\x2C\x0d\n  ['iso_8859-15'\x2C 'iso-8859-15']\x2C\x0d\n  ['l9'\x2C 'iso-8859-15']\x2C\x0d\n  ['cskoi8r'\x2C 'koi8-r']\x2C\x0d\n  ['koi'\x2C 'koi8-r']\x2C\x0d\n  ['koi8'\x2C 'koi8-r']\x2C\x0d\n  ['koi8-r'\x2C 'koi8-r']\x2C\x0d\n  ['koi8_r'\x2C 'koi8-r']\x2C\x0d\n  ['koi8-ru'\x2C 'koi8-u']\x2C\x0d\n  ['koi8-u'\x2C 'koi8-u']\x2C\x0d\n  ['csmacintosh'\x2C 'macintosh']\x2C\x0d\n  ['mac'\x2C 'macintosh']\x2C\x0d\n  ['macintosh'\x2C 'macintosh']\x2C\x0d\n  ['x-mac-roman'\x2C 'macintosh']\x2C\x0d\n  ['dos-874'\x2C 'windows-874']\x2C\x0d\n  ['iso-8859-11'\x2C 'windows-874']\x2C\x0d\n  ['iso8859-11'\x2C 'windows-874']\x2C\x0d\n  ['iso885911'\x2C 'windows-874']\x2C\x0d\n  ['tis-620'\x2C 'windows-874']\x2C\x0d\n  ['windows-874'\x2C 'windows-874']\x2C\x0d\n  ['cp1250'\x2C 'windows-1250']\x2C\x0d\n  ['windows-1250'\x2C 'windows-1250']\x2C\x0d\n  ['x-cp1250'\x2C 'windows-1250']\x2C\x0d\n  ['cp1251'\x2C 'windows-1251']\x2C\x0d\n  ['windows-1251'\x2C 'windows-1251']\x2C\x0d\n  ['x-cp1251'\x2C 'windows-1251']\x2C\x0d\n  ['ansi_x3.4-1968'\x2C 'windows-1252']\x2C\x0d\n  ['ascii'\x2C 'windows-1252']\x2C\x0d\n  ['cp1252'\x2C 'windows-1252']\x2C\x0d\n  ['cp819'\x2C 'windows-1252']\x2C\x0d\n  ['csisolatin1'\x2C 'windows-1252']\x2C\x0d\n  ['ibm819'\x2C 'windows-1252']\x2C\x0d\n  ['iso-8859-1'\x2C 'windows-1252']\x2C\x0d\n  ['iso-ir-100'\x2C 'windows-1252']\x2C\x0d\n  ['iso8859-1'\x2C 'windows-1252']\x2C\x0d\n  ['iso88591'\x2C 'windows-1252']\x2C\x0d\n  ['iso_8859-1'\x2C 'windows-1252']\x2C\x0d\n  ['iso_8859-1:1987'\x2C 'windows-1252']\x2C\x0d\n  ['l1'\x2C 'windows-1252']\x2C\x0d\n  ['latin1'\x2C 'windows-1252']\x2C\x0d\n  ['us-ascii'\x2C 'windows-1252']\x2C\x0d\n  ['windows-1252'\x2C 'windows-1252']\x2C\x0d\n  ['x-cp1252'\x2C 'windows-1252']\x2C\x0d\n  ['cp1253'\x2C 'windows-1253']\x2C\x0d\n  ['windows-1253'\x2C 'windows-1253']\x2C\x0d\n  ['x-cp1253'\x2C 'windows-1253']\x2C\x0d\n  ['cp1254'\x2C 'windows-1254']\x2C\x0d\n  ['csisolatin5'\x2C 'windows-1254']\x2C\x0d\n  ['iso-8859-9'\x2C 'windows-1254']\x2C\x0d\n  ['iso-ir-148'\x2C 'windows-1254']\x2C\x0d\n  ['iso8859-9'\x2C 'windows-1254']\x2C\x0d\n  ['iso88599'\x2C 'windows-1254']\x2C\x0d\n  ['iso_8859-9'\x2C 'windows-1254']\x2C\x0d\n  ['iso_8859-9:1989'\x2C 'windows-1254']\x2C\x0d\n  ['l5'\x2C 'windows-1254']\x2C\x0d\n  ['latin5'\x2C 'windows-1254']\x2C\x0d\n  ['windows-1254'\x2C 'windows-1254']\x2C\x0d\n  ['x-cp1254'\x2C 'windows-1254']\x2C\x0d\n  ['cp1255'\x2C 'windows-1255']\x2C\x0d\n  ['windows-1255'\x2C 'windows-1255']\x2C\x0d\n  ['x-cp1255'\x2C 'windows-1255']\x2C\x0d\n  ['cp1256'\x2C 'windows-1256']\x2C\x0d\n  ['windows-1256'\x2C 'windows-1256']\x2C\x0d\n  ['x-cp1256'\x2C 'windows-1256']\x2C\x0d\n  ['cp1257'\x2C 'windows-1257']\x2C\x0d\n  ['windows-1257'\x2C 'windows-1257']\x2C\x0d\n  ['x-cp1257'\x2C 'windows-1257']\x2C\x0d\n  ['cp1258'\x2C 'windows-1258']\x2C\x0d\n  ['windows-1258'\x2C 'windows-1258']\x2C\x0d\n  ['x-cp1258'\x2C 'windows-1258']\x2C\x0d\n  ['x-mac-cyrillic'\x2C 'x-mac-cyrillic']\x2C\x0d\n  ['x-mac-ukrainian'\x2C 'x-mac-cyrillic']\x2C\x0d\n  ['chinese'\x2C 'gbk']\x2C\x0d\n  ['csgb2312'\x2C 'gbk']\x2C\x0d\n  ['csiso58gb231280'\x2C 'gbk']\x2C\x0d\n  ['gb2312'\x2C 'gbk']\x2C\x0d\n  ['gb_2312'\x2C 'gbk']\x2C\x0d\n  ['gb_2312-80'\x2C 'gbk']\x2C\x0d\n  ['gbk'\x2C 'gbk']\x2C\x0d\n  ['iso-ir-58'\x2C 'gbk']\x2C\x0d\n  ['x-gbk'\x2C 'gbk']\x2C\x0d\n  ['gb18030'\x2C 'gb18030']\x2C\x0d\n  ['big5'\x2C 'big5']\x2C\x0d\n  ['big5-hkscs'\x2C 'big5']\x2C\x0d\n  ['cn-big5'\x2C 'big5']\x2C\x0d\n  ['csbig5'\x2C 'big5']\x2C\x0d\n  ['x-x-big5'\x2C 'big5']\x2C\x0d\n  ['cseucpkdfmtjapanese'\x2C 'euc-jp']\x2C\x0d\n  ['euc-jp'\x2C 'euc-jp']\x2C\x0d\n  ['x-euc-jp'\x2C 'euc-jp']\x2C\x0d\n  ['csiso2022jp'\x2C 'iso-2022-jp']\x2C\x0d\n  ['iso-2022-jp'\x2C 'iso-2022-jp']\x2C\x0d\n  ['csshiftjis'\x2C 'shift_jis']\x2C\x0d\n  ['ms932'\x2C 'shift_jis']\x2C\x0d\n  ['ms_kanji'\x2C 'shift_jis']\x2C\x0d\n  ['shift-jis'\x2C 'shift_jis']\x2C\x0d\n  ['shift_jis'\x2C 'shift_jis']\x2C\x0d\n  ['sjis'\x2C 'shift_jis']\x2C\x0d\n  ['windows-31j'\x2C 'shift_jis']\x2C\x0d\n  ['x-sjis'\x2C 'shift_jis']\x2C\x0d\n  ['cseuckr'\x2C 'euc-kr']\x2C\x0d\n  ['csksc56011987'\x2C 'euc-kr']\x2C\x0d\n  ['euc-kr'\x2C 'euc-kr']\x2C\x0d\n  ['iso-ir-149'\x2C 'euc-kr']\x2C\x0d\n  ['korean'\x2C 'euc-kr']\x2C\x0d\n  ['ks_c_5601-1987'\x2C 'euc-kr']\x2C\x0d\n  ['ks_c_5601-1989'\x2C 'euc-kr']\x2C\x0d\n  ['ksc5601'\x2C 'euc-kr']\x2C\x0d\n  ['ksc_5601'\x2C 'euc-kr']\x2C\x0d\n  ['windows-949'\x2C 'euc-kr']\x2C\x0d\n  ['utf-16be'\x2C 'utf-16be']\x2C\x0d\n  ['utf-16le'\x2C 'utf-16le']\x2C\x0d\n  ['utf-16'\x2C 'utf-16le']\x2C\x0d\n]);\x0d\n\x0d\n// Unfortunately\x2C String.prototype.trim also removes non-ascii whitespace\x2C\x0d\n// so we have to do this manually\x0d\nfunction trimAsciiWhitespace(label) {\x0d\n  let s = 0;\x0d\n  let e = label.length;\x0d\n  while (s < e && (\x0d\n    label[s] === '\\u0009' ||\x0d\n    label[s] === '\\u000a' ||\x0d\n    label[s] === '\\u000c' ||\x0d\n    label[s] === '\\u000d' ||\x0d\n    label[s] === '\\u0020')) {\x0d\n    s++;\x0d\n  }\x0d\n  while (e > s && (\x0d\n    label[e - 1] === '\\u0009' ||\x0d\n    label[e - 1] === '\\u000a' ||\x0d\n    label[e - 1] === '\\u000c' ||\x0d\n    label[e - 1] === '\\u000d' ||\x0d\n    label[e - 1] === '\\u0020')) {\x0d\n    e--;\x0d\n  }\x0d\n  return StringPrototypeSlice(label\x2C s\x2C e);\x0d\n}\x0d\n\x0d\nfunction getEncodingFromLabel(label) {\x0d\n  const enc = encodings.get(label);\x0d\n  if (enc !== undefined) return enc;\x0d\n  return encodings.get(trimAsciiWhitespace(label.toLowerCase()));\x0d\n}\x0d\n\x0d\nconst encodeIntoResults = new Uint32Array(2);\x0d\n\x0d\nclass TextEncoder {\x0d\n  constructor() {\x0d\n    this[kEncoder] = true;\x0d\n  }\x0d\n\x0d\n  get encoding() {\x0d\n    validateEncoder(this);\x0d\n    return 'utf-8';\x0d\n  }\x0d\n\x0d\n  encode(input = '') {\x0d\n    validateEncoder(this);\x0d\n    return encodeUtf8String(`${input}`);\x0d\n  }\x0d\n\x0d\n  encodeInto(src\x2C dest) {\x0d\n    validateEncoder(this);\x0d\n    validateString(src\x2C 'src');\x0d\n    if (!dest || !isUint8Array(dest))\x0d\n      throw new ERR_INVALID_ARG_TYPE('dest'\x2C 'Uint8Array'\x2C dest);\x0d\n    encodeInto(src\x2C dest\x2C encodeIntoResults);\x0d\n    return { read: encodeIntoResults[0]\x2C written: encodeIntoResults[1] };\x0d\n  }\x0d\n\x0d\n  [inspect](depth\x2C opts) {\x0d\n    validateEncoder(this);\x0d\n    if (typeof depth === 'number' && depth < 0)\x0d\n      return this;\x0d\n    const ctor = getConstructorOf(this);\x0d\n    const obj = ObjectCreate({\x0d\n      constructor: ctor === null ? TextEncoder : ctor\x0d\n    });\x0d\n    obj.encoding = this.encoding;\x0d\n    // Lazy to avoid circular dependency\x0d\n    return require('internal/util/inspect').inspect(obj\x2C opts);\x0d\n  }\x0d\n}\x0d\n\x0d\nObjectDefineProperties(\x0d\n  TextEncoder.prototype\x2C {\x0d\n    'encode': kEnumerableProperty\x2C\x0d\n    'encodeInto': kEnumerableProperty\x2C\x0d\n    'encoding': kEnumerableProperty\x2C\x0d\n    [SymbolToStringTag]: { __proto__: null\x2C configurable: true\x2C value: 'TextEncoder' }\x2C\x0d\n  });\x0d\n\x0d\nconst TextDecoder =\x0d\n  internalBinding('config').hasIntl ?\x0d\n    makeTextDecoderICU() :\x0d\n    makeTextDecoderJS();\x0d\n\x0d\nfunction makeTextDecoderICU() {\x0d\n  const {\x0d\n    decode: _decode\x2C\x0d\n    getConverter\x2C\x0d\n  } = internalBinding('icu');\x0d\n\x0d\n  class TextDecoder {\x0d\n    constructor(encoding = 'utf-8'\x2C options = kEmptyObject) {\x0d\n      encoding = `${encoding}`;\x0d\n      validateObject(options\x2C 'options'\x2C {\x0d\n        nullable: true\x2C\x0d\n        allowArray: true\x2C\x0d\n        allowFunction: true\x2C\x0d\n      });\x0d\n\x0d\n      const enc = getEncodingFromLabel(encoding);\x0d\n      if (enc === undefined)\x0d\n        throw new ERR_ENCODING_NOT_SUPPORTED(encoding);\x0d\n\x0d\n      let flags = 0;\x0d\n      if (options !== null) {\x0d\n        flags |= options.fatal ? CONVERTER_FLAGS_FATAL : 0;\x0d\n        flags |= options.ignoreBOM ? CONVERTER_FLAGS_IGNORE_BOM : 0;\x0d\n      }\x0d\n\x0d\n      // Only support fast path for UTF-8 without FATAL flag\x0d\n      const fastPathAvailable = enc === 'utf-8' && !(options?.fatal);\x0d\n\x0d\n      this[kDecoder] = true;\x0d\n      this[kFlags] = flags;\x0d\n      this[kEncoding] = enc;\x0d\n      this[kIgnoreBOM] = Boolean(options?.ignoreBOM);\x0d\n      this[kUTF8FastPath] = fastPathAvailable;\x0d\n      this[kHandle] = undefined;\x0d\n\x0d\n      if (!fastPathAvailable) {\x0d\n        this.#prepareConverter();\x0d\n      }\x0d\n    }\x0d\n\x0d\n    #prepareConverter() {\x0d\n      if (this[kHandle] !== undefined) return;\x0d\n      const handle = getConverter(this[kEncoding]\x2C this[kFlags]);\x0d\n      if (handle === undefined)\x0d\n        throw new ERR_ENCODING_NOT_SUPPORTED(this[kEncoding]);\x0d\n      this[kHandle] = handle;\x0d\n    }\x0d\n\x0d\n    decode(input = empty\x2C options = kEmptyObject) {\x0d\n      validateDecoder(this);\x0d\n\x0d\n      this[kUTF8FastPath] &&= !(options?.stream);\x0d\n\x0d\n      if (this[kUTF8FastPath]) {\x0d\n        return decodeUTF8(input\x2C this[kIgnoreBOM]);\x0d\n      }\x0d\n\x0d\n      this.#prepareConverter();\x0d\n\x0d\n      validateObject(options\x2C 'options'\x2C {\x0d\n        nullable: true\x2C\x0d\n        allowArray: true\x2C\x0d\n        allowFunction: true\x2C\x0d\n      });\x0d\n\x0d\n      let flags = 0;\x0d\n      if (options !== null)\x0d\n        flags |= options.stream ? 0 : CONVERTER_FLAGS_FLUSH;\x0d\n\x0d\n      return _decode(this[kHandle]\x2C input\x2C flags\x2C this.encoding);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return TextDecoder;\x0d\n}\x0d\n\x0d\nfunction makeTextDecoderJS() {\x0d\n  let StringDecoder;\x0d\n  function lazyStringDecoder() {\x0d\n    if (StringDecoder === undefined)\x0d\n      ({ StringDecoder } = require('string_decoder'));\x0d\n    return StringDecoder;\x0d\n  }\x0d\n\x0d\n  const kBOMSeen = Symbol('BOM seen');\x0d\n\x0d\n  function hasConverter(encoding) {\x0d\n    return encoding === 'utf-8' || encoding === 'utf-16le';\x0d\n  }\x0d\n\x0d\n  class TextDecoder {\x0d\n    constructor(encoding = 'utf-8'\x2C options = kEmptyObject) {\x0d\n      encoding = `${encoding}`;\x0d\n      validateObject(options\x2C 'options'\x2C {\x0d\n        nullable: true\x2C\x0d\n        allowArray: true\x2C\x0d\n        allowFunction: true\x2C\x0d\n      });\x0d\n\x0d\n      const enc = getEncodingFromLabel(encoding);\x0d\n      if (enc === undefined || !hasConverter(enc))\x0d\n        throw new ERR_ENCODING_NOT_SUPPORTED(encoding);\x0d\n\x0d\n      let flags = 0;\x0d\n      if (options !== null) {\x0d\n        if (options.fatal) {\x0d\n          throw new ERR_NO_ICU('"fatal" option');\x0d\n        }\x0d\n        flags |= options.ignoreBOM ? CONVERTER_FLAGS_IGNORE_BOM : 0;\x0d\n      }\x0d\n\x0d\n      this[kDecoder] = true;\x0d\n      // StringDecoder will normalize WHATWG encoding to Node.js encoding.\x0d\n      this[kHandle] = new (lazyStringDecoder())(enc);\x0d\n      this[kFlags] = flags;\x0d\n      this[kEncoding] = enc;\x0d\n      this[kBOMSeen] = false;\x0d\n    }\x0d\n\x0d\n    decode(input = empty\x2C options = kEmptyObject) {\x0d\n      validateDecoder(this);\x0d\n      if (isAnyArrayBuffer(input)) {\x0d\n        try {\x0d\n          input = lazyBuffer().from(input);\x0d\n        } catch {\x0d\n          input = empty;\x0d\n        }\x0d\n      } else if (isArrayBufferView(input)) {\x0d\n        try {\x0d\n          input = lazyBuffer().from(input.buffer\x2C input.byteOffset\x2C\x0d\n                                    input.byteLength);\x0d\n        } catch {\x0d\n          input = empty;\x0d\n        }\x0d\n      } else {\x0d\n        throw new ERR_INVALID_ARG_TYPE('input'\x2C\x0d\n                                       ['ArrayBuffer'\x2C 'ArrayBufferView']\x2C\x0d\n                                       input);\x0d\n      }\x0d\n      validateObject(options\x2C 'options'\x2C {\x0d\n        nullable: true\x2C\x0d\n        allowArray: true\x2C\x0d\n        allowFunction: true\x2C\x0d\n      });\x0d\n\x0d\n      if (this[kFlags] & CONVERTER_FLAGS_FLUSH) {\x0d\n        this[kBOMSeen] = false;\x0d\n      }\x0d\n\x0d\n      if (options !== null && options.stream) {\x0d\n        this[kFlags] &= ~CONVERTER_FLAGS_FLUSH;\x0d\n      } else {\x0d\n        this[kFlags] |= CONVERTER_FLAGS_FLUSH;\x0d\n      }\x0d\n\x0d\n      let result = this[kFlags] & CONVERTER_FLAGS_FLUSH ?\x0d\n        this[kHandle].end(input) :\x0d\n        this[kHandle].write(input);\x0d\n\x0d\n      if (result.length > 0 &&\x0d\n          !this[kBOMSeen] &&\x0d\n          !(this[kFlags] & CONVERTER_FLAGS_IGNORE_BOM)) {\x0d\n        // If the very first result in the stream is a BOM\x2C and we are not\x0d\n        // explicitly told to ignore it\x2C then we discard it.\x0d\n        if (result[0] === '\\ufeff') {\x0d\n          result = StringPrototypeSlice(result\x2C 1);\x0d\n        }\x0d\n        this[kBOMSeen] = true;\x0d\n      }\x0d\n\x0d\n      return result;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return TextDecoder;\x0d\n}\x0d\n\x0d\n// Mix in some shared properties.\x0d\nconst sharedProperties = ObjectGetOwnPropertyDescriptors({\x0d\n  get encoding() {\x0d\n    validateDecoder(this);\x0d\n    return this[kEncoding];\x0d\n  }\x2C\x0d\n\x0d\n  get fatal() {\x0d\n    validateDecoder(this);\x0d\n    return (this[kFlags] & CONVERTER_FLAGS_FATAL) === CONVERTER_FLAGS_FATAL;\x0d\n  }\x2C\x0d\n\x0d\n  get ignoreBOM() {\x0d\n    validateDecoder(this);\x0d\n    return (this[kFlags] & CONVERTER_FLAGS_IGNORE_BOM) ===\x0d\n              CONVERTER_FLAGS_IGNORE_BOM;\x0d\n  }\x2C\x0d\n\x0d\n  [inspect](depth\x2C opts) {\x0d\n    validateDecoder(this);\x0d\n    if (typeof depth === 'number' && depth < 0)\x0d\n      return this;\x0d\n    const constructor = getConstructorOf(this) || TextDecoder;\x0d\n    const obj = ObjectCreate({ constructor });\x0d\n    obj.encoding = this.encoding;\x0d\n    obj.fatal = this.fatal;\x0d\n    obj.ignoreBOM = this.ignoreBOM;\x0d\n    if (opts.showHidden) {\x0d\n      obj[kFlags] = this[kFlags];\x0d\n      obj[kHandle] = this[kHandle];\x0d\n    }\x0d\n    // Lazy to avoid circular dependency\x0d\n    const { inspect } = require('internal/util/inspect');\x0d\n    return `${constructor.name} ${inspect(obj)}`;\x0d\n  }\x0d\n});\x0d\nconst propertiesValues = ObjectValues(sharedProperties);\x0d\nfor (let i = 0; i < propertiesValues.length; i++) {\x0d\n  // We want to use null-prototype objects to not rely on globally mutable\x0d\n  // %Object.prototype%.\x0d\n  ObjectSetPrototypeOf(propertiesValues[i]\x2C null);\x0d\n}\x0d\nsharedProperties[inspect].enumerable = false;\x0d\n\x0d\nObjectDefineProperties(TextDecoder.prototype\x2C {\x0d\n  decode: kEnumerableProperty\x2C\x0d\n  ...sharedProperties\x2C\x0d\n  [SymbolToStringTag]: {\x0d\n    __proto__: null\x2C\x0d\n    configurable: true\x2C\x0d\n    value: 'TextDecoder'\x0d\n  }\x0d\n});\x0d\n\x0d\nmodule.exports = {\x0d\n  getEncodingFromLabel\x2C\x0d\n  TextDecoder\x2C\x0d\n  TextEncoder\x0d\n};\x0d\n
code-source-info,0x1c9a30132a0,33,10855,11855,C5O10855C28O10886C35O10909C39O10942C49O10957C57O10942C62O11093C67O11093C72O11132C74O11164C83O11170C88O11164C89O11233C91O11243C95O11293C108O11301C117O11354C130O11366C139O11504C141O11508C153O11532C162O11551C166O11556C170O11566C174O11581C178O11586C183O11594C187O11610C191O11615C196O11626C200O11640C204O11645C211O11659C224O11674C232O11659C236O11657C240O11695C244O11700C249O11715C253O11743C257O11748C261O11757C265O11779C269O11814C271O11819C277O11836C283O11854,,
code-creation,LazyCompile,10,404335,0x1c9a30148f8,55,getEncodingFromLabel node:internal/encoding:320:30,0x1adeb5a2e68,~
code-source-info,0x1c9a30148f8,33,9121,9275,C0O9146C5O9156C10O9156C16O9171C18O9194C20O9205C21O9209C26O9226C34O9256C39O9256C44O9230C49O9226C54O9272,,
code-creation,LazyCompile,10,404460,0x1c9a3014b08,205,decode node:internal/encoding:427:11,0x1adeb5a32e8,~
code-source-info,0x1c9a3014b08,33,12148,12735,C8O12157C23O12174C30O12197C35O12197C39O12229C43O12234C61O12262C69O12249C73O12282C77O12291C79O12290C84O12318C95O12348C97O12347C101O12325C106O12361C107O12380C109O12385C115O12402C120O12415C130O12430C138O12415C143O12566C145O12576C149O12624C165O12637C171O12669C182O12689C184O12688C188O12718C199O12676C204O12728,,
code-creation,LazyCompile,10,404555,0x1c9a3014d10,37,validateDecoder node:internal/encoding:71:25,0x1adeb5a2dc8,~
code-source-info,0x1c9a3014d10,33,1496,1600,C0O1507C7O1530C9O1529C14O1540C19O1555C29O1561C34O1555C36O1599,,
code-creation,LazyCompile,10,404703,0x1c9a3015008,337,maybeCacheSourceMap node:internal/source_map/source_map_cache:114:29,0x14dbcb93078,~
code-source-info,0x1c9a
code-creation,LazyCompile,10,404843,0x1c9a30152e0,10, node:internal/modules/esm/translators:42:63,0x2a6f0bb3428,~
code-source-info,0x1c9a30152e0,471,1062,1089,C0O1075C2O1081C9O1088,,
code-creation,Script,10,404994,0x1c9a3015840,372, file:///E:/Javascript%20Renderers/Javascript-Renderer-9v2/renderer_10_js/ColorImplementationTiming/Uint8/Fast%20GC/test.js:1:1,0x1c9a3015548,~
script-source,476,file:///E:/Javascript%20Renderers/Javascript-Renderer-9v2/renderer_10_js/ColorImplementationTiming/Uint8/Fast%20GC/test.js,// import the framebuffer and color\x0d\nimport {FrameBuffer\x2C Color} from "./FramebufferExport.js";\x0d\n\x0d\nconst filePath = "../../../assets/textures/brick2.ppm";\x0d\n\x0d\nconst fbFile = await FrameBuffer.buildFile(filePath);\x0d\n\x0d\nconst fb = new FrameBuffer(1024\x2C 1024\x2C Color.black);\x0d\n\x0d\nfor(let x = 0; x < fb.width; x += 1)\x0d\n    for(let y = 0; y < fb.height; y += 1)\x0d\n        fb.getPixelFB(x\x2C y);\x0d\n\x0d\nfor(let x = 0; x < fb.width; x += 1)   \x0d\n{\x0d\n    for(let y = 0; y < fb.height; y += 1)\x0d\n    {   \x0d\n        const col = new Color(255 * Math.random()\x2C\x0d\n                              255 * Math.random()\x2C \x0d\n                              255 * Math.random()\x2C \x0d\n                              255); \x0d\n        fb.setPixelFB(x\x2C y\x2C col);\x0d\n    }\x0d\n}\x0d\n\x0d\nfb.dumpFB2File("randomFB.ppm");
code-source-info,0x1c9a3015840,476,0,755,C10O0C15O0C35O0C47O116C50O173C56O191C61O191C74O173C100O226C116O254C122O260C129O226C135O283C137O293C141O288C146O325C148O335C152O330C157O363C162O363C168O345C174O313C177O302C183O271C186O396C188O406C192O401C197O444C199O454C203O449C208O501C214O517C218O522C223O522C227O515C234O569C238O574C243O574C247O567C254O622C258O627C263O627C267O620C281O501C287O688C304O688C309O464C315O432C318O415C324O384C327O727C335O727C349O755,,
code-creation,LazyCompile,10,405257,0x1c9a3015d90,140, node:internal/modules/esm/module_job:76:41,0x1c9a300af18,~
code-source-info,0x1c9a3015d90,453,2386,2642,C10O2386C18O2449C23O2454C28O2461C37O2485C46O2461C52O2512C61O2531C64O2512C69O2581C79O2581C105O2619C117O2633,,
code-creation,RegExp,3,405542,0x7ff6a66d2240,1056,%2F|%5C
code-creation,RegExp,3,406068,0x7ff6a66d2700,700,(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])
code-creation,LazyCompile,10,406362,0x1c9a3016228,33,primordials.SafePromiseAllReturnVoid node:internal/per_context/primordials:520:40,0x1f81b713590,~
code-source-info,0x1c9a3016228,12,15933,16345,C0O15933C13O15957C27O15957C32O16345,,
code-creation,LazyCompile,10,406470,0x1c9a30163e8,188, node:internal/per_context/primordials:521:15,0x1c9a3016178,~
code-source-info,0x1c9a30163e8,12,15969,16344,C0O15969C12O16019C17O16028C21O16019C23O16041C27O16061C32O16068C35O16068C38O16097C49O16338C58O16122C66O16102C71O16113C75O16102C91O16151C110O16181C114O16167C128O16199C132O16211C143O16232C146O16232C159O16211C171O16084C187O16343,,
code-creation,Script,10,407318,0x1c9a3016930,45, file:///E:/Javascript%20Renderers/Javascript-Renderer-9v2/renderer_10_js/ColorImplementationTiming/Uint8/Fast%20GC/FramebufferExport.js:1:1,0x1c9a30166a0,~
script-source,477,file:///E:/Javascript%20Renderers/Javascript-Renderer-9v2/renderer_10_js/ColorImplementationTiming/Uint8/Fast%20GC/FramebufferExport.js,/*\x0d\n    FrameBuffer. The MIT License.\x0d\n    Copyright (c) 2022 rlkraft@pnw.edu\x0d\n    See LICENSE for details.\x0d\n*/\x0d\n\x0d\n/*\x0d\nimport FrameBuffer from "./FrameBuffer.js";\x0d\nimport Viewport from "./Viewport.js";\x0d\nimport Color from "./Color.js";\x0d\n\x0d\nexport var FrameBuffer;\x0d\nexport var Viewport;\x0d\nexport var Color;\x0d\n*/\x0d\n\x0d\nexport {default as FrameBuffer} from "./FrameBuffer.js";\x0d\nexport {default as Viewport} from "./Viewport.js";\x0d\nexport {default as Color} from "./Color.js";
code-source-info,0x1c9a3016930,477,0,464,C10O0C15O0C35O0C44O464,,
code-creation,Function,11,408103,0x7ff6a66d2a40,1996,extname node:path:836:10,0x2dbe93db098,^
code-source-info,0x7ff6a66d2a40,73,26945,29073,,,
code-creation,Function,11,408165,0x7ff6a66d32c0,924, node:internal/validators:247:3,0x3a899792dd8,^
code-source-info,0x7ff6a66d32c0,22,6515,7081,,,
code-creation,Function,11,408202,0x7ff6a66d3700,352,get href node:internal/url:754:11,0x914790eb90,^
code-source-info,0x7ff6a66d3700,76,21630,21737,,,
code-creation,Function,11,408237,0x7ff6a66d3900,400,get hostname node:internal/url:884:15,0x914790f040,^
code-source-info,0x7ff6a66d3900,76,25059,25175,,,
code-creation,Function,11,408271,0x7ff6a66d3b40,240,SafePromise node:internal/per_context/primordials:436:16,0x1f81b713340,^
code-source-info,0x7ff6a66d3b40,12,12827,12858,,,
code-creation,Function,11,408304,0x7ff6a66d3cc0,152,isUint8Array node:internal/util/types:13:22,0x3a8997940e8,^
code-source-info,0x7ff6a66d3cc0,23,269,356,,,
code-creation,Function,11,408337,0x7ff6a66d3e00,200,msFromTimeSpec node:internal/fs/utils:450:24,0x914791d9f8,^
code-source-info,0x7ff6a66d3e00,79,11517,11578,,,
code-creation,Function,11,408375,0x7ff6a66d3f80,312,dateFromMs node:internal/fs/utils:465:20,0x914791da98,^
code-source-info,0x7ff6a66d3f80,79,12097,12192,,,
code-creation,Function,11,409038,0x7ff6a66d4140,7788,realpathSync node:fs:2474:22,0x2dbe93f58b0,^
code-source-info,0x7ff6a66d4140,75,68539,72559,,,
code-creation,Function,11,409105,0x7ff6a66d6040,352,toString node:internal/url:748:11,0x914790eb40,^
code-source-info,0x7ff6a66d6040,76,21509,21616,,,
code-creation,Function,11,409150,0x7ff6a66d6240,1308,get origin node:internal/url:771:13,0x914790ec60,^
code-source-info,0x7ff6a66d6240,76,22088,22737,,,
code-creation,Function,11,409191,0x7ff6a66d6800,884,fileURLToPath node:internal/url:1486:23,0x914790f9f0,^
code-source-info,0x7ff6a66d6800,76,42270,42603,,,
code-creation,LazyCompile,10,410305,0x1c9a3017de0,29, node:internal/per_context/primordials:526:53,0x1c9a3016328,~
code-source-info,0x1c9a3017de0,12,16257,16322,C0O16274C9O16280C16O16296C21O16303C24O16303C28O16321,,
code-creation,Function,11,410925,0x7ff6a66d6c00,672, node:internal/fs/utils:674:38,0x914791de88,^
code-source-info,0x7ff6a66d6c00,79,18996,19276,,,
code-creation,Function,11,410982,0x7ff6a66d6f40,244,shouldBeTreatedAsRelativeOrAbsolutePath node:internal/modules/esm/resolve:910:49,0x14dbcbb6748,^
code-source-info,0x7ff6a66d6f40,455,31129,31268,,,
code-creation,Function,11,411018,0x7ff6a66d70c0,168,toPathIfFileURL node:internal/url:1569:25,0x914790fb30,^
code-source-info,0x7ff6a66d70c0,76,45554,45679,,,
code-creation,Function,11,411056,0x7ff6a66d7200,568,Stats._checkModeProperty node:internal/fs/utils:523:46,0x914791dc18,^
code-source-info,0x7ff6a66d7200,79,14310,14538,,,
code-creation,Function,11,411103,0x7ff6a66d74c0,1304,getPackageScopeConfig node:internal/modules/esm/package_config:105:31,0x14dbcbba4e8,^
code-source-info,0x7ff6a66d74c0,456,2598,3694,,,
code-creation,Function,11,411139,0x7ff6a66d7a80,304, node:internal/fs/utils:686:42,0x914791ded8,^
code-source-info,0x7ff6a66d7a80,79,19323,19462,,,
code-creation,Function,11,411180,0x7ff6a66d7c40,596,has node:internal/modules/esm/module_map:37:6,0x14dbcbafcc8,^
code-source-info,0x7ff6a66d7c40,452,1295,1453,,,
tick,0x7ff72600ed10,411344,0,0x0,0,0x7ff72606c200,0x8572813ef0,0x2a6f0bbf2d5,0x1c9a3009f0f,0x1c9a3007df8,0x1c9a3007945,0x1c9a3007054,0x857283c00a,0x1c9a30068c8,0x1c9a3005f6b,0x1c9a3005567,0x1c9a30051d8,0x857283abc6,0x7ff72653f3f3
code-creation,Function,11,411438,0x7ff6a66d7f40,872, node:internal/fs/utils:361:35,0x914791d528,^
code-source-info,0x7ff6a66d7f40,79,8985,9594,,,
code-creation,LazyCompile,10,411805,0x1c9a3018428,63, node:internal/per_context/primordials:505:53,0x1c9a30048f0,~
code-source-info,0x1c9a3018428,12,15446,15558,C0O15469C9O15479C14O15482C18O15501C31O15507C40O15523C45O15530C54O15538C57O15530C62O15557,,
code-creation,Script,10,412946,0x1c9a301a258,346, file:///E:/Javascript%20Renderers/Javascript-Renderer-9v2/renderer_10_js/ColorImplementationTiming/Uint8/Fast%20GC/FrameBuffer.js:1:1,0x1c9a3018d80,~
script-source,478,file:///E:/Javascript%20Renderers/Javascript-Renderer-9v2/renderer_10_js/ColorImplementationTiming/Uint8/Fast%20GC/FrameBuffer.js,/*\x0d\n    FrameBuffer. The MIT License.\x0d\n    Copyright (c) 2022 rlkraft@pnw.edu\x0d\n    See LICENSE for details.\x0d\n*/\x0d\n\x0d\n//@ts-check\x0d\nimport {Viewport\x2C Color} from "./FramebufferExport.js";\x0d\nimport {format} from "../../../renderer/scene/util/UtilExport.js";\x0d\n\x0d\nexport default class FrameBuffer\x0d\n{\x0d\n    /**@type {number} #width the width of a framebuffer*/ #width;\x0d\n    /**@type {number} #height the height of this framebuffer*/ #height;\x0d\n    /**@type {Color} #bgColorFB the default color of the framebuffer*/ #bgColorFB;\x0d\n    /**@type {Viewport} #vp the viewport for this framebuffer */ #vp;\x0d\n\x0d\n    //    /**@type {Color[]} #pixelBuffer the actual pixel data for this framebuffer*/ #pixelBuffer;\x0d\n    \x0d\n    /**@type {Uint8ClampedArray} #pixelBuffer the actual pixel data for this framebuffer */ #pixelBuffer;\x0d\n\x0d\n    ///** #pixelBuffer the actual pixel data for this framebuffer stored as bytes*/ #pixelBuffer\x0d\n\x0d\n    /**\x0d\n    A {@code FrameBuffer} represents a two-dimensional array of pixel data.\x0d\n    The pixel data is stored as a one dimensional array in row-major order.\x0d\n    The first row of data should be displayed as the top row of pixels\x0d\n    in the image.\x0d\n<p>\x0d\n    A {@link Viewport} is a two-dimensional sub array of a {@code FrameBuffer}.\x0d\n<p>\x0d\n    A {@code FrameBuffer} has a default {@link Viewport}. The current {@link Viewport}\x0d\n    is represented by its upper-left-hand corner and its lower-right-hand\x0d\n    corner.\x0d\n<p>\x0d\n    {@code FrameBuffer} and {@link Viewport} coordinates act like Java\x0d\n    {@link java.awt.Graphics2D} coordinates; the positive x direction is\x0d\n    to the right and the positive y direction is downward.\x0d\n*/\x0d\n\x0d\n    /**\x0d\n     * Construct a {@code FrameBuffer} with the width\x2C height\x2C and Color specified.\x0d\n     * Width and height have the default value of 0\x2C and color has the default color black\x0d\n     * Will round Width and Height using the Math.round function.\x0d\n     *\x0d\n     * @param {number} width the width of the {@code FrameBuffer}\x0d\n     * @param {number} height the height of the {@code FrameBuffer}\x0d\n     * @param {Color} color the background {@link Color} of the {@code FrameBuffer}\x0d\n     */\x0d\n    constructor(width\x2C height\x2C color = Color.Black)\x0d\n    {\x0d\n        if (typeof width != "number" ||\x0d\n            typeof height != "number")\x0d\n               throw new Error("Width and Height must be numerical");\x0d\n\x0d\n        if (color instanceof Color == false)\x0d\n            color = Color.Black;\x0d\n\x0d\n        this.#width = Math.round(width);\x0d\n        this.#height = Math.round(height);\x0d\n        this.#bgColorFB = color;\x0d\n        \x0d\n        this.#pixelBuffer = new Uint8ClampedArray(this.#width * this.#height * 4);\x0d\n        this.#vp = Viewport.buildParent(this);\x0d\n\x0d\n        this.clearFB(this.#bgColorFB);\x0d\n    }\x0d\n\x0d\n\x0d\n    /**\x0d\n     * Creates an exact duplicate {@code FrameBuffer} out of the source {@code FrameBuffer}.\x0d\n     *\x0d\n     * @param {FrameBuffer} source\x0d\n     * @returns {FrameBuffer} this {@code FrameBuffer} object created\x0d\n     */\x0d\n    static buildFB(source)\x0d\n    {\x0d\n        if (source instanceof FrameBuffer == false)\x0d\n            throw new Error("Source is not instance of FrameBuffer");\x0d\n\x0d\n        const fb = new FrameBuffer(source.getWidthFB()\x2C\x0d\n                                   source.getHeightFB()\x2C\x0d\n                                   source.getBackgroundColorFB());\x0d\n\x0d\n        for( let x = 0; x < source.getWidthFB(); x += 1)\x0d\n        {\x0d\n            for (let y = 0; y < source.getHeightFB(); y += 1)\x0d\n            {\x0d\n                fb.setPixelFB(x\x2C y\x2C source.getPixelFB(x\x2C y));\x0d\n            }\x0d\n        }\x0d\n\x0d\n        return fb;\x0d\n    }\x0d\n\x0d\n\x0d\n    /**\x0d\n     * Creates an exact duplicate {@code FrameBuffer} out of the source {@code Viewport}\x0d\n     *\x0d\n     * @param {Viewport} source\x0d\n     * @returns {FrameBuffer} this {@code FrameBuffer} object created\x0d\n     */\x0d\n    static buildVP(source)\x0d\n    {\x0d\n        if (source instanceof Viewport == false)\x0d\n            throw new Error("Source is not instance of Viewport");\x0d\n\x0d\n        const fb = new FrameBuffer(source.getWidthVP()\x2C\x0d\n                                   source.getHeightVP()\x2C\x0d\n                                   source.getBackgroundColorVP());\x0d\n\x0d\n        for (let x = 0; x < source.getWidthVP(); x += 1)\x0d\n        {\x0d\n            for (let y = 0; y < source.getHeightVP(); y += 1)\x0d\n            {\x0d\n                fb.setPixelFB(x\x2C y\x2C source.getPixelVP(x\x2C y));\x0d\n            }\x0d\n        }\x0d\n\x0d\n        return fb;\x0d\n    }\x0d\n\x0d\n    /**\x0d\n       Construct a {@code FrameBuffer} from a PPM image file.\x0d\n    <p>\x0d\n       The size of the {@code FrameBuffer} will be the size of the image.\x0d\n    <p>\x0d\n       The default {@link Viewport} is the whole {@code FrameBuffer}.\x0d\n    <p>\x0d\n       This can be used to initialize a {@code FrameBuffer}\x0d\n       with a background image.\x0d\n\x0d\n       NOTE: THIS CODE IS ASYNCHRONOUS\x2C MUST USE AWAIT!!!\x0d\n\x0d\n       @param {string} fileName  must name a PPM image file with magic number P6.\x0d\n       @returns {Promise<FrameBuffer>}\x0d\n    */\x0d\n    static async buildFile(fileName)\x0d\n    {        \x0d\n        if(typeof fileName != "string")\x0d\n            throw new Error("Filename must be a string");\x0d\n        \x0d\n        try\x0d\n        {\x0d\n            document;\x0d\n            return await FrameBuffer.#buildFileOnline(fileName);\x0d\n        }\x0d\n        catch(e)\x0d\n        {\x0d\n            return await FrameBuffer.#buildFileOffline(fileName);\x0d\n        }\x0d\n    }\x0d\n\x0d\n    static async #buildFileOnline(fileName)\x0d\n    {\x0d\n        const resp = await fetch(fileName\x2C {method : "GET"});\x0d\n        const data = await resp.arrayBuffer();\x0d\n\x0d\n        return FrameBuffer.interpretData(new Uint8Array(data));\x0d\n    }\x0d\n\x0d\n    /**\x0d\n     * @param {string} fileName \x0d\n     * @returns {Promise<FrameBuffer>}\x0d\n     */\x0d\n    static async #buildFileOffline(fileName)\x0d\n    {\x0d\n        const fs = await import("node:fs");\x0d\n        const buffer = fs.readFileSync(fileName);\x0d\n\x0d\n        return FrameBuffer.interpretData(Uint8Array.from(buffer));\x0d\n    }\x0d\n\x0d\n    /**\x0d\n     * @param {Uint8Array} data \x0d\n     * @returns {FrameBuffer} a framebuffer made from the data buffer\x0d\n     */\x0d\n    static interpretData(data)\x0d\n    {\x0d\n        // record where in the buffer we are\x0d\n        let buffIndex = 0; \x0d\n\x0d\n        // read the P6 bytes\x0d\n        const byteP = data[buffIndex++];\x0d\n        const byte6 = data[buffIndex++];\x0d\n\x0d\n        if(String.fromCharCode(byteP\x2C byte6) != "P6")\x0d\n            throw new Error("Missing the magic P6");\x0d\n\x0d\n        // skip any non numbers\x0d\n        while(data[buffIndex] < 48 || data[buffIndex] > 57)\x0d\n            buffIndex += 1;\x0d\n\x0d\n        // create a varaible to store the width\x0d\n        let widthStr = "";\x0d\n        // get the width dimensions\x0d\n        while(data[buffIndex] >= 48 && data[buffIndex] <= 57)\x0d\n            widthStr += String.fromCharCode(data[buffIndex++]);\x0d\n\x0d\n        // skip the space between the dimensions\x0d\n        buffIndex++;\x0d\n\x0d\n        // create a variable to store the height\x0d\n        let heightStr = "";\x0d\n        // get the height dimensions\x0d\n        while(data[buffIndex] >= 48 && data[buffIndex] <= 57)\x0d\n            heightStr += String.fromCharCode(data[buffIndex++]);\x0d\n        \x0d\n        // create the framebuffer\x0d\n        const fb = new FrameBuffer(+widthStr\x2C +heightStr);\x0d\n\x0d\n        // skip any nonnumbers\x0d\n        while(data[buffIndex] < 48 || data[buffIndex] > 57)\x0d\n            buffIndex += 1;\x0d\n        \x0d\n        // create a variable for the number of bytes per r\x2C g\x2C b\x0d\n        let maxValStr = "";\x0d\n        // get the number of bytes per r\x2C g\x2C b\x0d\n        while(data[buffIndex] >= 48 && data[buffIndex] <= 57)\x0d\n            maxValStr +=String.fromCharCode(data[buffIndex++]);\x0d\n\x0d\n        // skip any whitespace\x2C whose ascii value is <= 32\x0d\n        while(data[buffIndex] <= 32)\x0d\n            buffIndex += 1;\x0d\n\x0d\n        // create a variable to store where in the pixel buffer we are\x0d\n        let fbIndex = 0;\x0d\n        // read the pixel byte data\x0d\n        for(; buffIndex < data.length; buffIndex += 3)\x0d\n        {\x0d\n            let r = data[buffIndex + 0];\x0d\n            let g = data[buffIndex + 1];\x0d\n            let b = data[buffIndex + 2];\x0d\n            const a = 255;\x0d\n\x0d\n            if(r < 0) r += 256;\x0d\n            if(g < 0) g += 256;\x0d\n            if(b < 0) b += 256;\x0d\n\x0d\n            //fb.pixelBuffer[fbIndex + 0] = r;\x0d\n            //fb.pixelBuffer[fbIndex + 1] = g;\x0d\n            //fb.pixelBuffer[fbIndex + 2] = b;\x0d\n            //fb.pixelBuffer[fbIndex + 3] = a;\x0d\n            \x0d\n            fb.pixelBuffer.set([r\x2C g\x2C b\x2C a]\x2C fbIndex);\x0d\n            fbIndex += 4;\x0d\n        }\x0d\n        \x0d\n        return fb;\x0d\n    }\x0d\n\x0d\n    /**\x0d\n     * Get the width of this {@code FrameBuffer}\x0d\n     *\x0d\n     * @returns {number} the width of this {@code FrameBuffer}\x0d\n     */\x0d\n    getWidthFB()\x0d\n    {\x0d\n        return this.#width;\x0d\n    }\x0d\n\x0d\n    get width()\x0d\n    {\x0d\n        return this.#width;\x0d\n    }\x0d\n\x0d\n\x0d\n    /**\x0d\n     * Get the height of this {@code FrameBuffer}\x0d\n     *\x0d\n     * @returns {number} the height of this {@code FrameBuffer}\x0d\n     */\x0d\n    getHeightFB()\x0d\n    {\x0d\n        return this.#height;\x0d\n    }\x0d\n\x0d\n    get height()\x0d\n    {\x0d\n        return this.#height;\x0d\n    }\x0d\n\x0d\n\x0d\n    /**\x0d\n     * Get the background {Color} of this {@code FrameBuffer}\x0d\n     *\x0d\n     * @returns {Color} the background {Color} of this {@code FrameBuffer}\x0d\n     */\x0d\n    getBackgroundColorFB()\x0d\n    {\x0d\n        return this.#bgColorFB;\x0d\n    }\x0d\n\x0d\n    get bgColorFB()\x0d\n    {\x0d\n        return this.#bgColorFB;\x0d\n    }\x0d\n\x0d\n\x0d\n    /**\x0d\n     * Set this {@code FrameBuffer} new background color.\x0d\n     * <p>\x0d\n     * NOTE: this does not clear the contents of the {@code FrameBuffer}.\x0d\n     * to the given {Color}.  To actually change all the {@code FrameBuffer}\x0d\n     * pixels to the given {Color} call {clearFB()} method.\x0d\n     *\x0d\n     * @param {Color} color: the new background color\x0d\n     */\x0d\n    setBackgroundColorFB(color)\x0d\n    {\x0d\n        if (color instanceof Color == false)\x0d\n            throw new Error("Color must be instance of Color");\x0d\n\x0d\n        this.#bgColorFB = color;\x0d\n    }\x0d\n\x0d\n\x0d\n    set bgColorFB(color)\x0d\n    {\x0d\n        if (color instanceof Color == false)\x0d\n            throw new Error("Color must be instance of Color");\x0d\n\x0d\n        this.#bgColorFB = color;\x0d\n    }\x0d\n\x0d\n\x0d\n    /**\x0d\n     * Get the default {Viewport} of this {@code FrameBuffer}\x0d\n     *\x0d\n     * @returns {Viewport} the {Viewport} of this {@code FrameBuffer}\x0d\n     */\x0d\n    getViewport()\x0d\n    {\x0d\n        return this.#vp;\x0d\n    }\x0d\n\x0d\n    get vp()\x0d\n    {\x0d\n        return this.#vp;\x0d\n    }\x0d\n\x0d\n    get pixelBuffer()\x0d\n    {\x0d\n        return this.#pixelBuffer;\x0d\n    }\x0d\n\x0d\n    getPixelBuffer()\x0d\n    {\x0d\n        return this.#pixelBuffer;\x0d\n    }\x0d\n\x0d\n    /**\x0d\n     * Set this {@code FrameBuffer} default {Viewport} to be this whole this {@code FrameBuffer}\x0d\n    */\x0d\n    setViewportDefault()\x0d\n    {\x0d\n        this.setViewport(this.getWidthFB()\x2C this.getHeightFB());\x0d\n    }\x0d\n\x0d\n\x0d\n    /**\x0d\n     * Set the default {Viewport} with the given upper left hand corner\x2C width\x2C and height within this {@code FrameBuffer}\x0d\n     * If no upper left hand corner is given uses (0\x2C 0) as the default upper left corner for the {Viewport}\x0d\n     *\x0d\n     * @param {number} width width of this {@code FrameBuffer} default {Viewport}\x0d\n     * @param {number} height this {@code FrameBuffer} default {Viewport}\x0d\n     * @param {number} upperLeftX upper left hand x coordinate of this {@code FrameBuffer} default {Viewport}\x0d\n     * @param {number} upperLeftY upper left hand y coordinate of this {@code FrameBuffer} default {Viewport}\x0d\n     */\x0d\n    setViewport(width\x2C height\x2C upperLeftX = 0\x2C upperLeftY = 0)\x0d\n    {\x0d\n        if (typeof upperLeftX != "number" ||\x0d\n            typeof upperLeftY != "number" ||\x0d\n            typeof width      != "number" ||\x0d\n            typeof height     != "number")\x0d\n                throw new Error("All Parameters must be Numerical");\x0d\n\x0d\n        this.#vp.setViewport(width\x2C height\x2C upperLeftX\x2C upperLeftY);\x0d\n    }\x0d\n\x0d\n\x0d\n    /**\x0d\n     * Clear this {@code FrameBuffer} using the background color of this {@code FrameBuffer}\x0d\n     */\x0d\n    clearFBDefault()\x0d\n    {\x0d\n        this.clearFB(this.getBackgroundColorFB());\x0d\n    }\x0d\n\x0d\n\x0d\n    /**\x0d\n     * Clear this {@code FrameBuffer} using the given {Color}\x0d\n     *\x0d\n     * @param {Color} color the color to set this {@code FrameBuffer} pixels to\x0d\n     */\x0d\n    clearFB(color = this.#bgColorFB)\x0d\n    {\x0d\n        if (color instanceof Color == false)\x0d\n            throw new Error("Color must be a Color");\x0d\n\x0d\n        /*\x0d\n        for (let x = 0; x < this.getWidthFB(); x += 1)\x0d\n        {\x0d\n            for (let y = 0; y < this.getHeightFB(); y += 1)\x0d\n            {\x0d\n                this.setPixelFB(x\x2C y\x2C color);\x0d\n            }\x0d\n        }\x0d\n        */\x0d\n\x0d\n        // this code should be 4 times faster than above double for loop\x0d\n        // because instead of looping over every number in the pixelBuffer\x0d\n        // we loop over every pixel in the pixelBuffer\x0d\n        // so instead of looping over every single number\x0d\n        // we acces every fourth number\x2C the start of each pixel\x0d\n        //for(let startPixel = 0; startPixel < this.#pixelBuffer.length; startPixel += 4)\x0d\n        //{\x0d\n        //    this.#pixelBuffer[startPixel + 0] = color.getRed();\x0d\n        //    this.#pixelBuffer[startPixel + 1] = color.getGreen();\x0d\n        //    this.#pixelBuffer[startPixel + 2] = color.getBlue();\x0d\n        //    this.#pixelBuffer[startPixel + 3] = color.getAlpha();\x0d\n        //}\x0d\n\x0d\n        // see page 278 and 279 of the js book\x0d\n        for(let startPixel = 0; startPixel < this.#pixelBuffer.length; startPixel += 4)\x0d\n            this.#pixelBuffer.set(color.rgb\x2C startPixel);\x0d\n    }\x0d\n\x0d\n\x0d\n    /**\x0d\n     * Get the {Color} of the pixel within this {@code FrameBuffer} at the given {@code (x\x2C y)} coordinate\x0d\n     * NOTE: will round x and y using Math.round().\x0d\n     *\x0d\n     * @param {number} x horizontal coordinate within this {@code FrameBuffer}\x0d\n     * @param {number} y vertical coordinate within this {@code FrameBuffer}\x0d\n     * @returns {Color} the {Color} of the pixel at the given (x\x2C y) coordinate\x0d\n     */\x0d\n    getPixelFB(x\x2C y)\x0d\n    {\x0d\n        if (typeof x != "number" || typeof y != "number")\x0d\n            throw new Error("x and y must be numerical");\x0d\n\x0d\n        x = Math.round(x);\x0d\n        y = Math.round(y);\x0d\n\x0d\n        const index = y * this.getWidthFB() + x;\x0d\n\x0d\n        if (index >= this.#pixelBuffer.length)\x0d\n            throw new Error("FrameBuffer: Bad pixel coordinate " +\x0d\n                            "(" + x + "\x2C " + y + ") " +\x0d\n                            "[w= " + this.getWidthFB() + "\x2C h= " + this.getHeightFB() + "]");\x0d\n      \x0d\n        //const startPixelData = y*this.#width + x;\x0d\n        const startPixelData = this.width * 4 * y + 4 * x;\x0d\n\x0d\n        //const r = this.#pixelBuffer[startPixelData + 0];\x0d\n        //const g = this.#pixelBuffer[startPixelData + 1];\x0d\n        //const b = this.#pixelBuffer[startPixelData + 2];\x0d\n        //const a = this.#pixelBuffer[startPixelData + 3];\x0d\n\x0d\n        //return new Color(r\x2C g\x2C b\x2C a);\x0d\n        //return this.#pixelBuffer[index];\x0d\n\x0d\n        // see page 279 of the js book\x0d\n        return Color.buildRGBA(this.#pixelBuffer.slice(startPixelData\x2C startPixelData + 4));\x0d\n    }\x0d\n\x0d\n\x0d\n    /**\x0d\n     * Set the {Color} of the pixel within this {@code FrameBuffer} at the given {@code (x\x2C y)} coordinate\x0d\n     * Note: if no color is uses by deafult uses Color.black;\x0d\n     *\x0d\n     * @param {number} x horizontal coordinate within this {@code FrameBuffer}\x0d\n     * @param {number} y vertical coordinate within this {@code FrameBuffer}\x0d\n     * @param {Color} color that this {@code FrameBuffer} pixel  at the given {@code (x\x2C y)} coordinate should be set to\x0d\n     */\x0d\n    setPixelFB(x\x2C y\x2C color = Color.Black)\x0d\n    {\x0d\n        if (typeof x != "number" || typeof y != "number")\x0d\n            throw new Error("X and Y must be Numerical");\x0d\n\x0d\n        if (color instanceof Color == false)\x0d\n            throw new Error("Color must be of type Color");\x0d\n\x0d\n        x = Math.round(x);\x0d\n        y = Math.round(y);\x0d\n\x0d\n        //const index = y * this.getWidthFB() + x; // wrong indexing\x0d\n        //const index = y * this.getWidthFB() * 4 + x; // wrong indexing\x0d\n        //const index = y * this.getWidthFB() * 4 + (x + 4); // wrong indexing\x0d\n        //const index = y * this.getWidthFB() * 4 + (x + 3); // kinda right\x2C skips alot pixels though\x0d\n        //const index = y * this.getWidthFB() * 4;// kinda right skips a lot of pixels\x0d\n\x0d\n        // to access row 3 pixel 0:\x0d\n        // 3 * width * 4: each row is the width * 4\x2C and we need three rows\x0d\n\x0d\n        // to access row 3 pixel 1:\x0d\n        // 3 * width * 4 + 1 * 4: each row is width * 4\x2C three rows\x2C and second pixel starts at 4\x2C instead of 1\x0d\n\x0d\n        const index = this.getWidthFB() * 4 * y + x * 4;\x0d\n\x0d\n        if (index >= this.#pixelBuffer.length)\x0d\n            throw new Error("FrameBuffer: Bad pixel coordinate " +\x0d\n                            "(" + x + "\x2C " + y + ") " +\x0d\n                            "[w= " + this.getWidthFB() + "\x2C h= " + this.getHeightFB() + "]");\x0d\n\x0d\n        // see page 278 - 279 of the js book\x0d\n        this.#pixelBuffer.set(color.rgb\x2C index);\x0d\n    /*\x0d\n        see if the given color is supposed to be blended\x2C if so then call blending function.\x0d\n\x0d\n        Which blending function should be called?  blendColor uses the formula c1.alpha / (c1.alpha + c2.alpha)\x0d\n        while blendColorWeight just uses c1Weight * c1 + (1-c1Weight) * c2\x0d\n\x0d\n        Should I write a new function setPixelBlend(x\x2C y\x2C color\x2C weight) that would implement this if statement?\x0d\n\x0d\n        if (color.getAlpha() != 1 || color.getAlpha != 255)\x0d\n            this.#pixelBuffer[index] = Color.blendColor(color\x2C this.#pixelBuffer.getPixelFB(x\x2C y));\x0d\n            this.#pixelBuffer[index] = Color.blendColorWeight(color\x2C this.#pixelBuffer.getPixelFB(x\x2C y)\x2C color.getAlpha);\x0d\n        else\x0d\n            this.#pixelBuffer[index] = color;\x0d\n    */\x0d\n        //const c = Color.convert2Int(color);\x0d\n      \x0d\n        //const r = color.getRed();\x0d\n        //const g = color.getGreen();\x0d\n        //const b = color.getBlue();\x0d\n        //const a = color.getAlpha();\x0d\n//\x0d\n        //this.#pixelBuffer[index + 0] = r;\x0d\n        //this.#pixelBuffer[index + 1] = g;\x0d\n        //this.#pixelBuffer[index + 2] = b;\x0d\n        //this.#pixelBuffer[index + 3] = a;\x0d\n\x0d\n        // this seems to properly input the colors into the pixelbuffer\x0d\n        // but when the pixel buffer is printed out it is wrong\x0d\n        // becase we were improperly indexing into the pixelBuffer\x0d\n        //console.log("index: " + index + " x: " + x + " y: " + y + " " + color.toString());\x0d\n        //console.log(  this.#pixelBuffer[index + 0] + "\x2C " \x0d\n        //            + this.#pixelBuffer[index + 1] + "\x2C "\x0d\n        //            + this.#pixelBuffer[index + 2] + "\x2C "\x0d\n        //            + this.#pixelBuffer[index + 3]);\x0d\n       \x0d\n        \x0d\n        //this.#pixelBuffer[index] = Color.convert2Int(color);\x0d\n    }\x0d\n\x0d\n\x0d\n    /**\x0d\n     * Create a new {@code FrameBuffer} containing the pixel data from just the red plane of this {@code FrameBuffer}\x0d\n     *\x0d\n     * @returns {FrameBuffer} holding just the red pixel data from this {@code FrameBuffer}\x0d\n     */\x0d\n    convertRed2FB()\x0d\n    {\x0d\n        const newFB = FrameBuffer.buildFB(this);\x0d\n\x0d\n        for (let x = 0; x < this.getWidthFB(); x += 1)\x0d\n        {\x0d\n            for (let y = 0; y < this.getHeightFB(); y += 1)\x0d\n            {\x0d\n                const origColor = this.getPixelFB(x\x2C y);\x0d\n                const  newColor  = new Color(origColor.getRed()\x2C 0\x2C 0);\x0d\n\x0d\n                newFB.setPixelFB(x\x2C y\x2C newColor);\x0d\n            }\x0d\n        }\x0d\n\x0d\n        return newFB;\x0d\n    }\x0d\n\x0d\n\x0d\n    /**\x0d\n     * Create a new {@code FrameBuffer} containing the pixel data from just the green plane of this {@code FrameBuffer}\x0d\n     *\x0d\n     * @returns {FrameBuffer} holding just the green pixel data from this {@code FrameBuffer}\x0d\n     */\x0d\n    convertGreen2FB()\x0d\n    {\x0d\n        const newFB = FrameBuffer.buildFB(this);\x0d\n\x0d\n        for (let x = 0; x < this.getWidthFB(); x += 1)\x0d\n        {\x0d\n            for (let y = 0; y < this.getHeightFB(); y += 1)\x0d\n            {\x0d\n                const origColor = this.getPixelFB(x\x2C y);\x0d\n                const newColor  = new Color(0\x2C origColor.getGreen()\x2C 0);\x0d\n\x0d\n                newFB.setPixelFB(x\x2C y\x2C newColor);\x0d\n            }\x0d\n        }\x0d\n\x0d\n        return newFB;\x0d\n    }\x0d\n\x0d\n\x0d\n    /**\x0d\n     * Create a new {@code FrameBuffer} containing the pixel data from just the blue plane of this {@code FrameBuffer}\x0d\n     *\x0d\n     * @returns {FrameBuffer} holding just the blue pixel data from this {@code FrameBuffer}\x0d\n     */\x0d\n    convertBlue2FB()\x0d\n    {\x0d\n        const newFB = FrameBuffer.buildFB(this);\x0d\n\x0d\n        for (let x = 0; x < this.getWidthFB(); x += 1)\x0d\n        {\x0d\n            for (let y = 0; y < this.getHeightFB(); y += 1)\x0d\n            {\x0d\n                const origColor = this.getPixelFB(x\x2C y);\x0d\n                const newColor  = new Color(0\x2C 0\x2C origColor.getBlue());\x0d\n\x0d\n                newFB.setPixelFB(x\x2C y\x2C newColor);\x0d\n            }\x0d\n        }\x0d\n\x0d\n        return newFB;\x0d\n    }\x0d\n\x0d\n\x0d\n    /**\x0d\n      For debugging very small {@code FrameBuffer} objects.\x0d\n\x0d\n      @return {string} a string representation of this {@code FrameBuffer}\x0d\n   */\x0d\n    toString()\x0d\n    {\x0d\n        let result = "FrameBuffer [w=" + this.width + "\x2C h=" + this.height + "]\\n";\x0d\n\x0d\n        for (let j = 0; j < this.width; ++j)\x0d\n        {\x0d\n            result += " r   g   b |";\x0d\n        }\x0d\n\x0d\n        result += "\\n";\x0d\n        for (let i = 0; i < this.height; ++i)\x0d\n        {\x0d\n            for (let j = 0; j < this.width; j += 1)\x0d\n            {\x0d\n                const r = this.#pixelBuffer[((i*this.width) + j) ];\x0d\n                const g = this.#pixelBuffer[((i*this.width) + j) ];\x0d\n                const b = this.#pixelBuffer[((i*this.width) + j) ];\x0d\n                const a = this.#pixelBuffer[((i*this.width) + j) ];\x0d\n                \x0d\n                const color = new Color(r\x2C g\x2C b\x2C a);\x0d\n\x0d\n                result += format("%3d "\x2C color.getRed());\x0d\n                result += format("%3d "\x2C color.getGreen());\x0d\n                result += format("%3d|"\x2C color.getBlue());\x0d\n            }\x0d\n            result += "\\n";\x0d\n        }\x0d\n\x0d\n        /*\x0d\n        let result = "FrameBuffer [w = " + this.getWidthFB() + "\x2C h = " + this.getHeightFB() + "]\\n";\x0d\n\x0d\n        for(let y = 0; y < this.getHeightFB(); ++y)\x0d\n        {\x0d\n            for (let x = 0; x < this.getWidthFB(); ++x)\x0d\n            {\x0d\n                const color = this.getPixelFB(x\x2C y);\x0d\n                result += color.getRed() + " " + color.getGreen() + " " + color.getBlue() + " " + color.getAlpha() + " | ";\x0d\n            }\x0d\n            result += "\\n";\x0d\n        }\x0d\n        */\x0d\n        return result;\x0d\n    }\x0d\n\x0d\n\x0d\n    /**\x0d\n    Write this {@code FrameBuffer} to the specified PPM file.\x0d\n    <p>\x0d\n    <a href="https://en.wikipedia.org/wiki/Netpbm_format" target="_top">\x0d\n            https://en.wikipedia.org/wiki/Netpbm_format</a>\x0d\n\x0d\n    @param {string} filename  name of PPM image file to hold {@code FrameBuffer} data\x0d\n    */\x0d\n    dumpFB2File(filename)\x0d\n    {\x0d\n        if (typeof filename != "string")\x0d\n            throw new Error("Filename must be a string");\x0d\n\x0d\n        this.dumpPixels2File(0\x2C 0\x2C this.getWidthFB()\x2C this.getHeightFB()\x2C filename);\x0d\n    }\x0d\n\x0d\n\x0d\n    /**\x0d\n    Write a rectangular sub array of pixels from this {@code FrameBuffer}\x0d\n    to the specified PPM file.\x0d\n    <p>\x0d\n    <a href="https://en.wikipedia.org/wiki/Netpbm_format#PPM_example" target="_top">\x0d\n            https://en.wikipedia.org/wiki/Netpbm_format#PPM_example</a>\x0d\n    <p>\x0d\n    <a href="http://stackoverflow.com/questions/2693631/read-ppm-file-and-store-it-in-an-array-coded-with-c" target="_top">\x0d\n      http://stackoverflow.com/questions/2693631/read-ppm-file-and-store-it-in-an-array-coded-with-c</a>\x0d\n\x0d\n    @param {number} upperLeftX      upper left hand x-coordinate of pixel data rectangle\x0d\n    @param {number} upperLeftY      upper left hand y-coordinate of pixel data rectangle\x0d\n    @param {number} lowerRightX      lower right hand x-coordinate of pixel data rectangle\x0d\n    @param {number} lowerRightY      lower right hand y-coordinate of pixel data rectangle\x0d\n    @param {string} filename  name of PPM image file to hold pixel data\x0d\n    */\x0d\n    dumpPixels2File(upperLeftX\x2C upperLeftY\x2C lowerRightX\x2C lowerRightY\x2C filename)\x0d\n    {\x0d\n        if ( typeof upperLeftX != "number" || typeof upperLeftY != "number" ||\x0d\n            typeof lowerRightX != "number" || typeof lowerRightY != "number")\x0d\n                throw new Error("upperLeftX\x2C upperLeftY\x2C lowerRightX\x2C lowerRightY must be numerical");\x0d\n\x0d\n        if (typeof filename != "string")\x0d\n            throw new Error("Filename must be a String");\x0d\n\x0d\n        let pWidth  = lowerRightX - upperLeftX;\x0d\n        let pHeight = lowerRightY - upperLeftY;\x0d\n\x0d\n        const format = "P6\\n" + pWidth + " " + pHeight + "\\n" + 255 + "\\n"\x0d\n        const colorData = new Uint8Array(pWidth * pHeight * 3);\x0d\n\x0d\n        let index = 0;\x0d\n        for(let y = upperLeftY; y < lowerRightY; y += 1)\x0d\n        {\x0d\n            for(let x = upperLeftX; x < lowerRightX; x += 1)\x0d\n            {\x0d\n                const col = this.getPixelFB(x\x2C y);\x0d\n                \x0d\n                // see page 278 - 279 of the js book\x0d\n                colorData.set(col.rgb.slice(0\x2C 3)\x2C index);\x0d\n\x0d\n                //colorData[index+ 0] = col.getRed();\x0d\n                //colorData[index+ 1] = col.getGreen();\x0d\n                //colorData[index+ 2] = col.getBlue();\x0d\n                index += 3;\x0d\n            }\x0d\n        }\x0d\n\x0d\n        // Use dynamic import and then\x0d\n        // use synchronous API to avoid file corruption.\x0d\n        import('node:fs').then(fs => {\x0d\n          fs.writeFileSync(filename\x2C format\x2C //@ts-ignore\x0d\n                       err => {if (err) throw err;});\x0d\n        });\x0d\n        import('node:fs').then(fs => {\x0d\n          fs.appendFileSync(filename\x2C Buffer.from(colorData)\x2C //@ts-ignore\x0d\n                       err => {if (err) throw err;});\x0d\n        });\x0d\n    }\x0d\n\x0d\n    static main()\x0d\n    {   \x0d\n        // test the ofline ppm file building\x0d\n        //const fb = await FrameBuffer.buildFile("../../assets/textures/brick2.ppm");\x0d\n        //fb.dumpFB2File("output.ppm");\x0d\n\x0d\n        /*\x0d\n        let startTime = new Date().getTime();\x0d\n        const fb = new FrameBuffer(600\x2C 600\x2C Color.black);\x0d\n        let stopTime = new Date().getTime();\x0d\n\x0d\n        console.log("FB make : " + (stopTime - startTime));\x0d\n\x0d\n        for(let x = 0; x < 50; x += 1)\x0d\n        {\x0d\n            for(let y = 0; y < 50; y += 1)\x0d\n                fb.setPixelFB(x\x2C y\x2C new Color(y * 5\x2C y * 5\x2C y*5));\x0d\n        }\x0d\n\x0d\n        fb.dumpFB2File("gray.ppm");\x0d\n        */\x0d\n       \x0d\n        /*\x0d\n        console.log("Making Framebuffer 1 = new FrameBuffer(10\x2C 10)");\x0d\n        const fb1 = new FrameBuffer(10\x2C 10);\x0d\n\x0d\n        console.log("");\x0d\n        console.log("Making fb2 = FB.buildFB(fb1)");\x0d\n        const fb2 = FrameBuffer.buildFB(fb1);\x0d\n\x0d\n        console.log("");\x0d\n        console.log("Making fb3 = FB.buildVP(new VP(3\x2C 3\x2C fb1\x2C 0\x2C 0\x2C Color.blue))");\x0d\n        const vp1 = new Viewport(3\x2C 3\x2C fb1\x2C 0\x2C 0\x2C Color.magenta);\x0d\n        const fb3 = FrameBuffer.buildVP(vp1);\x0d\n\x0d\n        console.log("");\x0d\n        console.log("fb1.getWidth(): ");\x0d\n        console.log(fb1.getWidthFB());\x0d\n\x0d\n        console.log("");\x0d\n        console.log("fb1.getHeight()");\x0d\n        console.log(fb1.getHeightFB());\x0d\n\x0d\n        console.log("");\x0d\n        console.log("fb2.width: ");\x0d\n        console.log(fb2.width);\x0d\n\x0d\n        console.log("");\x0d\n        console.log("fb2.height");\x0d\n        console.log(fb2.height);\x0d\n\x0d\n        console.log("");\x0d\n        console.log("fb3.getBAckgroundColor()");\x0d\n        console.log(fb3.getBackgroundColorFB().toString());\x0d\n        \x0d\n        console.log("");\x0d\n        console.log("fb3.bgColor");\x0d\n        console.log(fb3.bgColorFB.toString());\x0d\n\x0d\n        console.log("");\x0d\n        console.log("fb2.setVP(2\x2C 2\x2C 1\x2C 1)");\x0d\n        fb2.setViewport(2\x2C 2\x2C 1\x2C 1);\x0d\n        console.log(fb2.toString());\x0d\n\x0d\n        console.log("");\x0d\n        console.log("fb2.getViewport()");\x0d\n        console.log(fb2.getViewport().toString());\x0d\n\x0d\n        console.log("");\x0d\n        console.log("fb1.setViewportDefault()");\x0d\n        fb1.setViewportDefault();\x0d\n        console.log(fb1.toString());\x0d\n\x0d\n        console.log("");\x0d\n        console.log("fb1.getViewport()");\x0d\n        console.log(fb1.getViewport().toString());\x0d\n\x0d\n        console.log("");\x0d\n        console.log("fb2.vp to see if fb2 feels fb1's viewport change since fb2 made from fb1");\x0d\n        console.log(fb2.vp.toString());\x0d\n\x0d\n        console.log("");\x0d\n        console.log("fb2.setBackgroundColor(color.red)");\x0d\n        fb2.setBackgroundColorFB(Color.red);\x0d\n        console.log(fb2.toString());\x0d\n\x0d\n        console.log("");\x0d\n        console.log("fb2.clearFBDefault()");\x0d\n        fb2.clearFBDefault();\x0d\n        console.log(fb2.toString());\x0d\n\x0d\n        console.log("");\x0d\n        console.log("fb1.setPixel(9\x2C 9\x2C Color.yellow");\x0d\n        fb1.setPixelFB(9\x2C 9\x2C Color.yellow);\x0d\n        console.log(fb1.toString());\x0d\n\x0d\n        console.log("");\x0d\n        console.log("fb1.getPixel(9\x2C 9)");\x0d\n        console.log(fb1.getPixelFB(9\x2C 9).toString());\x0d\n\x0d\n        console.log("");\x0d\n        console.log("fb1.dumpFB2File(FB1.ppm)");\x0d\n        fb1.dumpFB2File("FB1.ppm");\x0d\n\x0d\n        console.log("")\x0d\n        console.log("fb2.dumpFB2File(fb2.ppm");\x0d\n        fb2.dumpFB2File("FB2.ppm");\x0d\n\x0d\n        console.log("");\x0d\n        console.log('fb3.dumpfb2file(fb3.ppm)');\x0d\n        fb3.dumpFB2File("FB3.ppm");\x0d\n\x0d\n        console.log("");\x0d\n        console.log("fb1.convertRed2FB().dumpfb2file(fb1-red.ppm");\x0d\n        fb1.convertRed2FB().dumpFB2File("FB1-RED.ppm");\x0d\n\x0d\n        console.log("");\x0d\n        console.log("fb2.convertGreen2FB().dumpfb2file(fb2-green.ppm");\x0d\n        fb2.convertGreen2FB().dumpFB2File("FB2-GREEN.ppm");\x0d\n\x0d\n        console.log("");\x0d\n        console.log("fb3.convertblue2FB().dumpfb2file(fb3-blue.ppm");\x0d\n        fb3.convertBlue2FB().dumpFB2File("FB3-BLUE.ppm");\x0d\n        */\x0d\n    }\x0d\n    \x0d\n}\x0d\n\x0d\n// if you run this code with the new vs old color implmentation\x0d\n// the old color implementation is a lot faster then the new implementation\x0d\n//let startTime = new Date().getTime();\x0d\n//let fb1 = await FrameBuffer.buildFile("../../assets/textures/brick2.ppm");\x0d\n//let stopTime = new Date().getTime();\x0d\n//console.log("read file: " + (stopTime - startTime));\x0d\n//\x0d\n//startTime = new Date().getTime();\x0d\n//fb1.dumpFB2File("brick.ppm");\x0d\n//stopTime = new Date().getTime();\x0d\n//console.log("write file: " + (stopTime - startTime));\x0d\n//\x0d\n//startTime = new Date().getTime();\x0d\n//const fb2 = new FrameBuffer(600\x2C 600\x2C Color.black);\x0d\n//stopTime = new Date().getTime();\x0d\n//console.log("FB make : " + (stopTime - startTime));\x0d\n\x0d\n// failed attempts at reading the ppm file byte by byte instead of at once\x0d\n/*\x0d\nconst underlyingSource = nodefs.createReadStream(ppmFile);\x0d\nconst byteStream = new ReadableStream(\x0d\n                                { \x0d\n                                    start(controller) {this.pull; console.log("It called start controller " + controller);}\x2C\x0d\n                                    pull(controller) {console.log("It called pull controller");}\x2C \x0d\n                                    type:"bytes"\x2C \x0d\n                                    autoAllocateChunkSize:3\x0d\n                                });\x0d\n*/\x0d\n/*\x0d\nnodefs.open(ppmFile\x2C 'r'\x2C function (status\x2C fd) \x0d\n                        {\x0d\n                            const buff = Buffer.alloc(3);\x0d\n\x0d\n                            nodefs.read(fd\x2C buff\x2C 0\x2C 3\x2C 0\x2C function(err\x2C num)\x0d\n                                                        {\x0d\n                                                            if(err)\x0d\n                                                                console.log(err);\x0d\n\x0d\n                                                            console.log(buff.toString());\x0d\n                                                        })\x0d\n                        });\x0d\n*/\x0d\n/*\x0d\nnodefs.open(ppmFile\x2C 'r'\x2C function(err\x2C fd) \x0d\n            {\x0d\n                if (err)\x0d\n                  throw err;\x0d\n\x0d\n                var buffer = Buffer.alloc(3);\x0d\n\x0d\n                while (true)\x0d\n                {   \x0d\n                  var num = nodefs.readSync(fd\x2C buffer\x2C 0\x2C 3\x2C null);\x0d\n                  if (num === 0)\x0d\n                    break;\x0d\n                  console.log('byte read'\x2C buffer[0] + "\x2C " + buffer[1] + "\x2C " + buffer[2]);\x0d\n                }\x0d\n            });\x0d\n*/\x0d\n/*\x0d\nnodefs.open(ppmFile\x2C 'r'\x2C \x0d\n    function(error\x2C fileDesc)\x0d\n    {\x0d\n        // make a 1 byte buffer\x0d\n        let byte = Buffer.alloc(1);\x0d\n\x0d\n        // record the number of lines read so we know when we reach the pixel data\x0d\n        let linesRead = 0;\x0d\n\x0d\n        // create the variable to handle the p6 line\x0d\n        let p6Str = "";\x0d\n\x0d\n        // create the variables to handle the dimension line\x0d\n        let hitDimSpace = false;\x0d\n        let widthStr = "";\x0d\n        let heightStr = "";\x0d\n        // create the varaibles to handle the max rgb value\x0d\n        let maxValStr = "";\x0d\n\x0d\n        // create a variable to store where in the pixel buffer we are\x0d\n        let fbIndex = 0;\x0d\n\x0d\n        // create a variable to store if the bytes we are reading are a part of a comment\x0d\n        let inComment = false;\x0d\n        let readComment = false;\x0d\n\x0d\n\x0d\n        let eof = 1;\x0d\n        while(eof)\x0d\n        {\x0d\n            // since 0 can be interpreted as a boolean\x2C can use 0 bytes read to mark eof or an err.\x0d\n            eof = nodefs.readSync(fileDesc\x2C byte);\x0d\n        \x0d\n            // convert the given byte into a string\x0d\n            const charRead = String.fromCharCode(byte[0]);\x0d\n        \x0d\n            // if the byte is a '#' then this line is a comment\x0d\n            // should only have one #\x0d\n            if(charRead == "#" && !readComment)\x0d\n                inComment = true;\x0d\n\x0d\n            // if we are in a comment line and reach the new line char we are no longer in the comment line\x0d\n            if(inComment)\x0d\n            {   \x0d\n                readComment = true;\x0d\n\x0d\n        console.log("in comment " + charRead + " " + byte[0]);\x0d\n                \x0d\n                if(charRead == "\\n" || byte[0] == 13)\x0d\n                    inComment = false;\x0d\n\x0d\n        console.log(inComment);\x0d\n            }\x0d\n            else // not inComment\x0d\n            {\x0d\n                // if we haven't read any lines then we have to check for the magic p6 \x0d\n                if(linesRead == 0)\x0d\n                {\x0d\n                    // if we have hit the new line char then we have read the p6 line\x0d\n                    // or if we have hit a carriage return\x0d\n                    if(charRead == "\\n" || byte[0] == 13)\x0d\n                    {\x0d\n                        linesRead += 1;\x0d\n                        if(p6Str != "P6")\x0d\n                            throw new Error("File does not contain the magic P6");\x0d\n                    }   \x0d\n                    else\x0d\n                        p6Str += charRead// keep concatenating each byte to accumulate the p6 str\x0d\n                }\x0d\n                else if(linesRead == 1)// the next nonComment line should be the dimensions\x0d\n                {\x0d\n        console.log(charRead);\x0d\n                    // see if we have read a whitespace character\x0d\n                    if(charRead == " " || charRead == "\\t" || (!hitDimSpace && charRead == "\\n"))\x0d\n                        hitDimSpace = true;\x0d\n\x0d\n                    if(!hitDimSpace)\x0d\n                        widthStr += charRead;\x0d\n                    else\x0d\n                        if(charRead != " " && charRead != "\\t" && charRead != '\\n')\x0d\n                            heightStr += charRead;\x0d\n\x0d\n                    // if we have read past the first dimension then\x0d\n                    // the next newLine represents an actual new line\x0d\n                    // create the framebuffer from the dimensions read\x0d\n                    if(hitDimSpace && charRead == "\\n")\x0d\n                    {    \x0d\n                        linesRead += 1;\x0d\n                        // create the frameBuffer from the dimensions read in the previous line\x0d\n                        fb = new FrameBuffer(+widthStr\x2C +heightStr);\x0d\n                        arr = new Uint8Array(+widthStr * +heightStr * 4);\x0d\n            //console.log(widthStr);\x0d\n            //console.log(heightStr);\x0d\n                    }\x0d\n            //console.log(linesRead);\x0d\n                }\x0d\n                else if(linesRead == 2)//the next line should be the max rgb value\x0d\n                {\x0d\n            console.log(charRead);\x0d\n                    if(charRead != "\\n")\x0d\n                        maxValStr += charRead;\x0d\n                    else\x0d\n                        linesRead += 1;\x0d\n            console.log(maxValStr);\x0d\n                }\x0d\n                else if(linesRead > 2)// the rest of the values should be the byte pixel data\x0d\n                {\x0d\n                    \x0d\n                    // create a buffer to hold three bytes for the r\x2C g\x2C b\x2C values\x0d\n                    let pixelBytes = Buffer.alloc(3);\x0d\n\x0d\n                    // read the pixel bytes from the file\x0d\n                    eof = nodefs.readSync(fileDesc\x2C pixelBytes);\x0d\n\x0d\n                    // extract each r\x2C g\x2C b\x2C byte\x0d\n                    let r = pixelBytes[0];\x0d\n                    let g = pixelBytes[1];\x0d\n                    let b = pixelBytes[2];\x0d\n\x0d\n                    // convert from unsigned to signed\x0d\n                    if(r < 0) r += 256;\x0d\n                    if(g < 0) g += 256;\x0d\n                    if(b < 0) b += 256;\x0d\n\x0d\n                    // write the rgb and 255 alpha value into the fb\x0d\n                    fb.pixelBuffer[fbIndex + 0] = r;\x0d\n                    fb.pixelBuffer[fbIndex + 1] = g;\x0d\n                    fb.pixelBuffer[fbIndex + 2] = b;\x0d\n                    fb.pixelBuffer[fbIndex + 3] = 255;\x0d\n\x0d\n                    // record that we are 4 more bytes into the pixel buffer\x0d\n                    fbIndex += 4;\x0d\n                    \x0d\n                    \x0d\n                    // set the unknown pixel value to be the byte\x0d\n                    let val = byte[0] < 0 ? byte[0] + 256 : byte[0];\x0d\n\x0d\n                    // write the unknown rgb value into the fb\x0d\n                    fb.pixelBuffer.set(new Uint8Array([val])\x2C fbIndex);\x0d\n            \x0d\n        //console.log(fb.pixelBuffer.length);\x0d\n\x0d\n                    arr[fbIndex] = val;\x0d\n                    fbIndex += 1;\x0d\n\x0d\n        //console.log(val);\x0d\n        //console.log(fb.pixelBuffer[fbIndex]);\x0d\n        //console.log(arr[fbIndex]);\x0d\n        //console.log(fbIndex);\x0d\n\x0d\n                    // if we have written 3 rgb values the next is the alpha value \x0d\n                    if(fbIndex %4 == 0)\x0d\n                        arr[++fbIndex] = 255;//fb.pixelBuffer[++fbIndex] = 255;\x0d\n        //console.log();\x0d\n                }\x0d\n            }  \x0d\n        }\x0d\n\x0d\n        //return fb;\x0d\n    });\x0d\n*/\x0d\n/*\x0d\nconsole.log(fb.pixelBuffer);\x0d\n\x0d\nconsole.log(fb.pixelBuffer.length);\x0d\nconsole.log(fb.getPixelBuffer().length);\x0d\nfor(let x = 0; x < fb.pixelBuffer.length; x += 3)\x0d\n    console.log(fb.pixelBuffer[x] + " " + fb.pixelBuffer[x+1] + " " + fb.pixelBuffer[x+2]);\x0d\nfb.dumpFB2File("output2.ppm");\x0d\n*/\x0d\n/*\x0d\nconst nodefs = await import("node:fs");\x0d\nlet fb = new FrameBuffer(0\x2C 0);\x0d\nnodefs.open(ppmFile\x2C 'r'\x2C \x0d\nfunction(error\x2C fileDesc)\x0d\n{\x0d\n    // make a 1 byte buffer\x0d\n    let byte = Buffer.alloc(1);\x0d\n        \x0d\n    // record the number of lines read so we know when we reach the pixel data\x0d\n    let linesRead = 0;\x0d\n        \x0d\n    // create the variable to handle the p6 line\x0d\n    let p6Str = "";\x0d\n        \x0d\n    // create the variables to handle the dimension line\x0d\n    let hitDimSpace = false;\x0d\n    let widthStr = "";\x0d\n    let heightStr = "";\x0d\n    // create the varaibles to handle the max rgb value\x0d\n    let maxValStr = "";\x0d\n        \x0d\n    // create a variable to store where in the pixel buffer we are\x0d\n    let fbIndex = 0;\x0d\n        \x0d\n    // create a variable to store if the bytes we are reading are a part of a comment\x0d\n    let inComment = false;\x0d\n    let readComment = false;\x0d\n        \x0d\n        \x0d\n    let eof = 1;\x0d\n    while(eof)\x0d\n    {\x0d\n        // since 0 can be interpreted as a boolean\x2C can use 0 bytes read to mark eof or an err.\x0d\n        eof = nodefs.readSync(fileDesc\x2C byte);\x0d\n    \x0d\n        // convert the given byte into a string\x0d\n        const charRead = String.fromCharCode(byte[0]);\x0d\n    \x0d\n        // if the byte is a '#' then this line is a comment\x0d\n        // should only have one #\x0d\n        if(charRead == "#" && !readComment)\x0d\n            inComment = true;\x0d\n    \x0d\n        // if we are in a comment line and reach the new line char we are no longer in the comment line\x0d\n        if(inComment)\x0d\n        {   \x0d\n            readComment = true;\x0d\n        \x0d\n    //console.log("in comment " + charRead + " " + byte[0]);\x0d\n        \x0d\n            if(charRead == "\\n" || byte[0] == 13)\x0d\n                inComment = false;\x0d\n        \x0d\n    //console.log(inComment);\x0d\n        }\x0d\n        else // not inComment\x0d\n        {\x0d\n            // if we haven't read any lines then we have to check for the magic p6 \x0d\n            if(linesRead == 0)\x0d\n            {\x0d\n                // if we have hit the new line char then we have read the p6 line\x0d\n                // or if we have hit a carriage return\x0d\n                if(charRead == "\\n" || byte[0] == 13)\x0d\n                {\x0d\n                    linesRead += 1;\x0d\n                    if(p6Str != "P6")\x0d\n                        throw new Error("File does not contain the magic P6");\x0d\n                }   \x0d\n                else\x0d\n                    p6Str += charRead// keep concatenating each byte to accumulate the p6 str\x0d\n            }\x0d\n            else if(linesRead == 1)// the next nonComment line should be the dimensions\x0d\n            {\x0d\n    //console.log(charRead);\x0d\n                // see if we have read a whitespace character\x0d\n                if(charRead == " " || charRead == "\\t" || (!hitDimSpace && charRead == "\\n"))\x0d\n                    hitDimSpace = true;\x0d\n            \x0d\n                if(!hitDimSpace)\x0d\n                    widthStr += charRead;\x0d\n                else\x0d\n                    if(charRead != " " && charRead != "\\t" && charRead != '\\n')\x0d\n                        heightStr += charRead;\x0d\n            \x0d\n                // if we have read past the first dimension then\x0d\n                // the next newLine represents an actual new line\x0d\n                // create the framebuffer from the dimensions read\x0d\n                if(hitDimSpace && charRead == "\\n")\x0d\n                {    \x0d\n                    linesRead += 1;\x0d\n                    // create the frameBuffer from the dimensions read in the previous line\x0d\n                    fb = new FrameBuffer(+widthStr\x2C +heightStr);\x0d\n        console.log(widthStr);\x0d\n        console.log(heightStr);\x0d\n        //console.log(fb.toString());\x0d\n                }\x0d\n        //console.log(linesRead);\x0d\n            }\x0d\n            else if(linesRead == 2)//the next line should be the max rgb value\x0d\n            {\x0d\n        //console.log(charRead);\x0d\n                if(charRead != "\\n")\x0d\n                    maxValStr += charRead;\x0d\n                else\x0d\n                    linesRead += 1;\x0d\n        //console.log(maxValStr);\x0d\n            }\x0d\n            else if(linesRead > 2)// the rest of the values should be the byte pixel data\x0d\n            {\x0d\n                // create a buffer to hold three bytes for the r\x2C g\x2C b\x2C values\x0d\n                let pixelBytes = Buffer.alloc(3);\x0d\n                // read the pixel bytes from the file\x0d\n                eof = nodefs.readSync(fileDesc\x2C pixelBytes);\x0d\n                // extract each r\x2C g\x2C b\x2C byte\x0d\n                let r = pixelBytes[0];\x0d\n                let g = pixelBytes[1];\x0d\n                let b = pixelBytes[2];\x0d\n                // convert from unsigned to signed\x0d\n                if(r < 0) r += 256;\x0d\n                if(g < 0) g += 256;\x0d\n                if(b < 0) b += 256;\x0d\n                // write the rgb and 255 alpha value into the fb\x0d\n                fb.pixelBuffer[fbIndex + 0] = r;\x0d\n                fb.pixelBuffer[fbIndex + 1] = g;\x0d\n                fb.pixelBuffer[fbIndex + 2] = b;\x0d\n                fb.pixelBuffer[fbIndex + 3] = 255;\x0d\n                // record that we are 4 more bytes into the pixel buffer\x0d\n                fbIndex += 4;\x0d\n                \x0d\n                // set the unknown pixel value to be the byte\x0d\n                let val = byte[0] < 0 ? byte[0] + 256 : byte[0];\x0d\n                // write the unknown rgb value into the fb\x0d\n                fb.pixelBuffer.set(new Uint8Array([val])\x2C fbIndex);\x0d\n//console.log(fb.pixelBuffer.length);\x0d\n                fbIndex += 1;\x0d\n//console.log(val);\x0d\n//console.log(fb.pixelBuffer[fbIndex]);\x0d\n//console.log(arr[fbIndex]);\x0d\n//console.log(fbIndex);\x0d\n                // if we have written 3 rgb values the next is the alpha value \x0d\n                if(fbIndex %4 == 0)\x0d\n                    fb.pixelBuffer[++fbIndex] = 255;\x0d\n//console.log();\x0d\n            \x0d\n            }\x0d\n        }  \x0d\n    }\x0d\n    return fb;\x0d\n}\x0d\n);\x0d\n\x0d\nreturn await fb;\x0d\n*/\x0d\n/*\x0d\nimport("node:fs").then(\x0d\n    fs => fs.open(ppmFile\x2C 'r'\x2C \x0d\n            function(error\x2C fileDesc)\x0d\n            {\x0d\n                console.log("entered funciont");\x0d\n                // make a 1 byte buffer\x0d\n                let byte = Buffer.alloc(1);\x0d\n            \x0d\n                // record the number of lines read so we know when we reach the pixel data\x0d\n                let linesRead = 0;\x0d\n            \x0d\n                // create the variable to handle the p6 line\x0d\n                let p6Str = "";\x0d\n            \x0d\n                // create the variables to handle the dimension line\x0d\n                let hitDimSpace = false;\x0d\n                let widthStr = "";\x0d\n                let heightStr = "";\x0d\n                // create the varaibles to handle the max rgb value\x0d\n                let maxValStr = "";\x0d\n            \x0d\n                // create a variable to store where in the pixel buffer we are\x0d\n                let fbIndex = 0;\x0d\n            \x0d\n                // create a variable to store if the bytes we are reading are a part of a comment\x0d\n                let inComment = false;\x0d\n                let readComment = false;\x0d\n            \x0d\n            \x0d\n                let eof = 1;\x0d\n                while(eof)\x0d\n                {\x0d\n                    // since 0 can be interpreted as a boolean\x2C can use 0 bytes read to mark eof or an err.\x0d\n                    eof = fs.readSync(fileDesc\x2C byte);\x0d\n                \x0d\n                    // convert the given byte into a string\x0d\n                    const charRead = String.fromCharCode(byte[0]);\x0d\n                \x0d\n                    // if the byte is a '#' then this line is a comment\x0d\n                    // should only have one #\x0d\n                    if(charRead == "#" && !readComment)\x0d\n                        inComment = true;\x0d\n                \x0d\n                    // if we are in a comment line and reach the new line char we are no longer in the comment line\x0d\n                    if(inComment)\x0d\n                    {   \x0d\n                        readComment = true;\x0d\n                    \x0d\n                //console.log("in comment " + charRead + " " + byte[0]);\x0d\n                    \x0d\n                        if(charRead == "\\n" || byte[0] == 13)\x0d\n                            inComment = false;\x0d\n                    \x0d\n                //console.log(inComment);\x0d\n                    }\x0d\n                    else // not inComment\x0d\n                    {\x0d\n                        // if we haven't read any lines then we have to check for the magic p6 \x0d\n                        if(linesRead == 0)\x0d\n                        {\x0d\n                            // if we have hit the new line char then we have read the p6 line\x0d\n                            // or if we have hit a carriage return\x0d\n                            if(charRead == "\\n" || byte[0] == 13)\x0d\n                            {\x0d\n                                linesRead += 1;\x0d\n                                if(p6Str != "P6")\x0d\n                                    throw new Error("File does not contain the magic P6");\x0d\n                            }   \x0d\n                            else\x0d\n                                p6Str += charRead// keep concatenating each byte to accumulate the p6 str\x0d\n                        }\x0d\n                        else if(linesRead == 1)// the next nonComment line should be the dimensions\x0d\n                        {\x0d\n                //console.log(charRead);\x0d\n                            // see if we have read a whitespace character\x0d\n                            if(charRead == " " || charRead == "\\t" || (!hitDimSpace && charRead == "\\n"))\x0d\n                                hitDimSpace = true;\x0d\n                        \x0d\n                            if(!hitDimSpace)\x0d\n                                widthStr += charRead;\x0d\n                            else\x0d\n                                if(charRead != " " && charRead != "\\t" && charRead != '\\n')\x0d\n                                    heightStr += charRead;\x0d\n                        \x0d\n                            // if we have read past the first dimension then\x0d\n                            // the next newLine represents an actual new line\x0d\n                            // create the framebuffer from the dimensions read\x0d\n                            if(hitDimSpace && charRead == "\\n")\x0d\n                            {    \x0d\n                                linesRead += 1;\x0d\n                                // create the frameBuffer from the dimensions read in the previous line\x0d\n                                fb = new FrameBuffer(+widthStr\x2C +heightStr);\x0d\n                    console.log(widthStr);\x0d\n                    console.log(heightStr);\x0d\n                    //console.log(fb.toString());\x0d\n                            }\x0d\n                    //console.log(linesRead);\x0d\n                        }\x0d\n                        else if(linesRead == 2)//the next line should be the max rgb value\x0d\n                        {\x0d\n                    //console.log(charRead);\x0d\n                            if(charRead != "\\n")\x0d\n                                maxValStr += charRead;\x0d\n                            else\x0d\n                                linesRead += 1;\x0d\n                    //console.log(maxValStr);\x0d\n                        }\x0d\n                        else if(linesRead > 2)// the rest of the values should be the byte pixel data\x0d\n                    {\x0d\n                        // create a buffer to hold three bytes for the r\x2C g\x2C b\x2C values\x0d\n                        let pixelBytes = Buffer.alloc(3);\x0d\n                    \x0d\n                        // read the pixel bytes from the file\x0d\n                        eof = fs.readSync(fileDesc\x2C pixelBytes);\x0d\n                    \x0d\n                        // extract each r\x2C g\x2C b\x2C byte\x0d\n                        let r = pixelBytes[0];\x0d\n                        let g = pixelBytes[1];\x0d\n                        let b = pixelBytes[2];\x0d\n                    \x0d\n                        // convert from unsigned to signed\x0d\n                        if(r < 0) r += 256;\x0d\n                        if(g < 0) g += 256;\x0d\n                        if(b < 0) b += 256;\x0d\n                    \x0d\n                        // write the rgb and 255 alpha value into the fb\x0d\n                        fb.pixelBuffer[fbIndex + 0] = r;\x0d\n                        fb.pixelBuffer[fbIndex + 1] = g;\x0d\n                        fb.pixelBuffer[fbIndex + 2] = b;\x0d\n                        fb.pixelBuffer[fbIndex + 3] = 255;\x0d\n                    \x0d\n                        // record that we are 4 more bytes into the pixel buffer\x0d\n                        fbIndex += 4;\x0d\n                        \x0d\n                    \x0d\n                        \x0d\n                        // set the unknown pixel value to be the byte\x0d\n                        let val = byte[0] < 0 ? byte[0] + 256 : byte[0];\x0d\n                    \x0d\n                        // write the unknown rgb value into the fb\x0d\n                        fb.pixelBuffer.set(new Uint8Array([val])\x2C fbIndex);\x0d\n                    \x0d\n            //console.log(fb.pixelBuffer.length);\x0d\n                    \x0d\n                        fbIndex += 1;\x0d\n                    \x0d\n            //console.log(val);\x0d\n            //console.log(fb.pixelBuffer[fbIndex]);\x0d\n            //console.log(arr[fbIndex]);\x0d\n            //console.log(fbIndex);\x0d\n                    \x0d\n                        // if we have written 3 rgb values the next is the alpha value \x0d\n                        if(fbIndex %4 == 0)\x0d\n                            fb.pixelBuffer[++fbIndex] = 255;\x0d\n            //console.log();\x0d\n                        \x0d\n                        }\x0d\n                    }  \x0d\n                }\x0d\n            \x0d\n                //return fb;\x0d\n            }));\x0d\n    */\x0d\n/*\x0d\n        const nodefs = await import("node:fs");\x0d\n        const nodeReadLine = await import("node:readline");\x0d\n\x0d\n        const inputStream = nodefs.createReadStream(fileName);\x0d\n        const readLine = nodeReadLine.createInterface(\x0d\n                                        {\x0d\n                                            input: inputStream\x2C\x0d\n                                            crlfDelay: Infinity\x0d\n                                        });\x0d\n        \x0d\n        let fb = new FrameBuffer(0\x2C 0);\x0d\n        const a = 255;\x0d\n\x0d\n        // record the number of lines read so we know when we reach the pixel data\x0d\n        let linesRead = 0;\x0d\n        // record where in the framebuffer we are\x0d\n        let fbIndex = 0;\x0d\n        // record whether a value is 1 or 2 bytes based upon the maxVal color\x0d\n        let numBytesPerPixel = 0;\x0d\n        // record any caryover bytes from each line \x0d\n        let caryOver = new Array();\x0d\n\x0d\n    let sumLine = 0;\x0d\n        for await(const line of readLine)\x0d\n        {\x0d\n            if(!line.startsWith("#"))// if the line isn't a comment\x0d\n            {\x0d\n                if(linesRead == 0)// first noncomment line\x2C saying it is a p6 file\x0d\n                {\x0d\n                    if(!line.startsWith("P6"))\x0d\n                        throw new Error("File doesn't contain the P6 needed");\x0d\n                    else \x0d\n                        linesRead += 1;\x0d\n                }\x0d\n                else if(linesRead == 1) // second non comment line containing the dimensions\x0d\n                {\x0d\n                    const dim = line.split(" ");\x0d\n                    const width  = +dim[0];\x0d\n                    const height = +dim[1];\x0d\n\x0d\n                    fb = new FrameBuffer(width\x2C height);\x0d\n                    linesRead += 1;\x0d\n                }\x0d\n                else if(linesRead == 2)// third noncomment line saying maxVal for a color's r\x2C g\x2C or b value\x0d\n                {\x0d\n                    if(+line < 256 && +line > 0) // maximum 1 byte value\x0d\n                        numBytesPerPixel = 1;\x0d\n                    else if(+line < 65536 && +line >= 256) // maximum 2 byte value\x0d\n                        numBytesPerPixel = 2;\x0d\n                    else // error should only be 1 or 2 bytes\x0d\n                    {    \x0d\n                        console.log(line);\x0d\n                        throw new Error("maxVal should be either 1 or 2 bytes");\x0d\n                    }\x0d\n\x0d\n                    linesRead += 1;\x0d\n                }\x0d\n                else if(linesRead >= 3)// fourth noncomment line and on for the actual rgb bytes\x0d\n                {\x0d\n                    // because the line ends in an a value that doesn't have a char code\x0d\n                //console.log(line.charCodeAt(line.length));\x0d\n                    // this causes the last byte to not have a value\x0d\n                    // so we have to discard the last char in the line\x0d\n                    // before we create the bytes\x0d\n                    const byteLine = line.substring(0\x2C line.length-1);\x0d\n                    \x0d\n                    // since javascript strings are 16 bits shift right 8 bits\x0d\n                    const bytes = Uint8Array.from(byteLine\x2C (c) => c.charCodeAt(0)>>8)\x0d\n\x0d\n                    // record any caryover incase the line isn't divisible by three\x0d\n                    let caryOver = new Array();\x0d\n                    //record where in the fb we are at\x0d\n                    let fbIndex = 0; \x0d\n                    \x0d\n                    // handle any caryover since a line may not be a complete set of r\x2C g\x2C b's\x0d\n                    let caryOverIndex = 0;\x0d\n                    while(caryOverIndex < caryOver.length)\x0d\n                    {\x0d\n                        let val = caryOver[caryOverIndex];\x0d\n                        if(val < 0) val += 256;\x0d\n                    \x0d\n                        // see if we are at the alpha value in the framebuffer\x0d\n                        if(fbIndex %4 == 0)\x0d\n                        {\x0d\n                            fb.#pixelBuffer[fbIndex] = a;\x0d\n                            fbIndex += 1;\x0d\n                        }\x0d\n                    \x0d\n                        fb.#pixelBuffer[fbIndex] = val;\x0d\n\x0d\n                        caryOverIndex += 1;\x0d\n                        fbIndex += 1;\x0d\n                    }\x0d\n                    \x0d\n\x0d\n                    let byteIndex = 0;\x0d\n                    // loop over the bytes in this line\x2C increment by three since we need r\x2C g\x2C b\x0d\n                    for(; byteIndex < bytes.length; byteIndex += 3)\x0d\n                    {\x0d\n                        let r = bytes[byteIndex + 0];\x0d\n                        let g = bytes[byteIndex + 1];\x0d\n                        let b = bytes[byteIndex + 2];\x0d\n\x0d\n                        if(r < 0) r += 256; \x0d\n                        if(g < 0) g += 256; \x0d\n                        if(b < 0) b += 256; \x0d\n\x0d\n                        fb.#pixelBuffer[fbIndex + 0] = r;\x0d\n                        fb.#pixelBuffer[fbIndex + 1] = g;\x0d\n                        fb.#pixelBuffer[fbIndex + 2] = b;\x0d\n                        fb.#pixelBuffer[fbIndex + 3] = a;\x0d\n\x0d\n                        fbIndex += 4;\x0d\n                    }\x0d\n                    \x0d\n                    // record the caryover\x0d\n                    if(byteIndex != bytes.length)\x0d\n                        caryOver = new Array(bytes.slice(byteIndex));\x0d\n                    else // no caryover so reset the array.\x0d\n                        caryOver.length = 0;\x0d\n                    \x0d\n                    linesRead +=1;\x0d\n                }\x0d\n            }\x0d\n\x0d\n        }\x0d\n\x0d\n        // why is the number of lines read 141\x2C shouldn't the ppm raster be free of any whitespace?\x0d\n        console.log("Number of lines read in the ppm raster: " + linesRead)// 141\x0d\n        // why isn't the number of bytes read = width * height * 3 = 512 * 512 * 3 = 786432\x2C how am I mising so many bytes\x0d\n        console.log("Number of bytes read in the ppm raster :" + sumLine);// 748258\x0d\n        return fb;\x0d\n*/
code-source-info,0x1c9a301a258,478,0,58311,C10O0C28O0C48O0C340O270C345O58311,,
code-creation,Function,10,416514,0x1c9a301a428,42,<instance_members_initializer> file:///E:/Javascript%20Renderers/Javascript-Renderer-9v2/renderer_10_js/ColorImplementationTiming/Uint8/Fast%20GC/FrameBuffer.js:11:16,0x1c9a3019c08,~
code-source-info,0x1c9a301a428,478,270,29802,C4O350C12O422C20O503C28O581C36O789C41O29802,,
code-creation,Function,11,416688,0x7ff6a66d8340,2592,nextHookFactory node:internal/modules/esm/loader:114:25,0x14dbcbaca40,^
code-source-info,0x7ff6a66d8340,451,3596,5713,,,
code-creation,Function,11,416769,0x7ff6a66d8e00,2832,ObjectDefineProperty.__proto__ node:internal/modules/esm/loader:148:5,0x857283b918,^
code-source-info,0x7ff6a66d8e00,451,4734,5643,,,
code-creation,Function,11,416805,0x7ff6a66d99c0,108,get fd node:internal/fs/promises:149:9,0x2a6f0b9c9d0,^
code-source-info,0x7ff6a66d99c0,466,3682,3714,,,
code-creation,Script,10,419342,0x1c9a301f260,329, file:///E:/Javascript%20Renderers/Javascript-Renderer-9v2/renderer_10_js/ColorImplementationTiming/Uint8/Fast%20GC/Viewport.js:1:1,0x1c9a301ded8,~
script-source,479,file:///E:/Javascript%20Renderers/Javascript-Renderer-9v2/renderer_10_js/ColorImplementationTiming/Uint8/Fast%20GC/Viewport.js,/*\x0d\n    FrameBuffer. The MIT License.\x0d\n    Copyright (c) 2022 rlkraft@pnw.edu\x0d\n    See LICENSE for details.\x0d\n*/\x0d\n\x0d\n/**\x0d\n      A {@code Viewport} is an inner (non-static nested) class of\x0d\n      {@link FrameBuffer}. That means that a {@code Viewport} has\x0d\n      access to the pixel data of its "parent" {@link FrameBuffer}.\x0d\n   <p>\x0d\n      A {@code Viewport} is a two-dimensional sub array of its\x0d\n      "parent" {@link FrameBuffer}. A {@code Viewport} is\x0d\n      represented by its upper-left-hand corner and its\x0d\n      lower-right-hand corner in the {@link FrameBuffer}.\x0d\n   <p>\x0d\n      When you set a pixel in a {@code Viewport}\x2C you are really\x0d\n      setting a pixel in its parent {@link FrameBuffer}.\x0d\n   <p>\x0d\n      A {@link FrameBuffer} can have multiple {@code Viewport}s.\x0d\n   <p>\x0d\n      {@code Viewport} coordinates act like Java {@link java.awt.Graphics2D}\x0d\n      coordinates; the positive {@code x} direction is to the right and the\x0d\n      positive {@code y} direction is downward.\x0d\n*/\x0d\n\x0d\n//@ts-check\x0d\nimport {FrameBuffer\x2C Color} from "./FramebufferExport.js";\x0d\nimport {format} from "../../../renderer/scene/util/UtilExport.js";\x0d\n\x0d\nexport default class Viewport\x0d\n{\x0d\n    // Coordinates of the viewport within the framebuffer.\x0d\n    /**@type {number} #vp_ur_x upper left x */ #vp_ul_x;\x0d\n    /**@type {number} #vp_ur_y upper left y*/ #vp_ul_y;\x0d\n    /**@type {number} #vp_lr_x lower right x*/ #vp_lr_x;\x0d\n    /**@type {number} #vp_lr_y lower right y*/ #vp_lr_y;\x0d\n    /**@type {Color}  #bgColorVP background color*/ #bgColorVP;\x0d\n    /**@type {FrameBuffer} #parent the parent fb that the vp is in*/ #parent;\x0d\n\x0d\n    /**\x0d\n     * Create a {@code Viewport} with the given upper left hand corner\x0d\n     * width and height within its parent {@link FrameBuffer} and with the given background color.\x0d\n     * If no background color is give the default of {@link Color}.black is used.\x0d\n     * If no upper left hand corner is given then uses (0\x2C 0) as the upper left corner in the parent {@link FrameBuffer}\x0d\n     * NOTE: This constructor does not use the background color to set the pixels\x0d\n     * of this {@code Viewport} If you want the pixels of this {@code Viewport} to be cleared\x0d\n     * to the background color call the {@link clearVP} method\x0d\n     *\x0d\n     * @param {number} width the width of this {@code Viewport}\x0d\n     * @param {number} height the height of this {@code Viewport}\x0d\n     * @param {FrameBuffer} parent the {FrameBuffer} that this {@code Viewport} is inside\x0d\n     * @param {number} upperLeftX upper left hand x coordinate of this {@code Viewport}\x0d\n     * @param {number} upperLeftY upper left hand y coordinate of this {@code Viewport}\x0d\n     * @param {Color} color background {Color} for this {@code Viewport}\x0d\n     */\x0d\n    constructor(width\x2C height\x2C parent\x2C upperLeftX = 0\x2C upperLeftY = 0\x2C color = Color.Black)\x0d\n    {\x0d\n        if ( typeof upperLeftX != "number" ||\x0d\n             typeof upperLeftY != "number" ||\x0d\n             typeof width != "number"      ||\x0d\n             typeof height != "number")\x0d\n                 throw new Error("upperLeftX\x2C upperLeftY\x2C width\x2C height must be numerical");\x0d\n\x0d\n        if (parent instanceof FrameBuffer == false)\x0d\n            throw new Error("Parent is required and must be a FrameBuffer");\x0d\n\x0d\n        if (color instanceof Color == false)\x0d\n        {\x0d\n            color = Color.Black;\x0d\n        }\x0d\n\x0d\n        this.setViewport(width\x2C height\x2C upperLeftX\x2C upperLeftY);\x0d\n\x0d\n        this.#bgColorVP = color;\x0d\n        this.#parent = parent;\x0d\n\x0d\n        // we don't need this line of code\x0d\n        //this.clearVP(this.#bgColorVP);\x0d\n    }\x0d\n\x0d\n    /**\x0d\n     * Create a {@code Viewport} that is the exact replica of its parent {FrameBuffer}.\x0d\n     *\x0d\n     * @param {FrameBuffer} parent the parent {FrameBuffer} from which all data is taken from\x0d\n     * @returns {Viewport} a viewport that is the exact same as its {parent}\x0d\n     */\x0d\n    static buildParent(parent)\x0d\n    {\x0d\n        if (parent instanceof FrameBuffer == false)\x0d\n            throw new Error("Parent is required and must be a FrameBuffer");\x0d\n\x0d\n        const vp = new Viewport(parent.getWidthFB()\x2C\x0d\n                                parent.getHeightFB()\x2C\x0d\n                                parent\x2C\x0d\n                                0\x2C\x0d\n                                0\x2C\x0d\n                                parent.getBackgroundColorFB());\x0d\n\x0d\n        /*\x0d\n        we don't need this code it is just repeating setting the \x0d\n        fb to be its own color\x0d\n        since this function uses the fb's data\x0d\n        and the vp is the whole fb\x0d\n        */\x0d\n       \x0d\n        /*\x0d\n        for (let x = 0; x < parent.getWidthFB(); x += 1)\x0d\n        {\x0d\n            for (let y = 0; y < parent.getHeightFB(); y += 1)\x0d\n            {\x0d\n                vp.setPixelVP(x\x2C y\x2C parent.getPixelFB(x\x2C y));\x0d\n            }\x0d\n        }\x0d\n        */\x0d\n        return vp;\x0d\n    }\x0d\n\x0d\n    /**\x0d\n     * Create a {Viewport} that is the exact replica of the source {FrameBuffer} with its\x0d\n     * upper left hand corner at the specified point inside its parent {FrameBuffer}\x0d\n     * If no upper left hand corner is given uses (0\x2C 0) as the default upper left corner in the parent {FrameBuffer}\x0d\n     *\x0d\n     * @param {FrameBuffer} source the {FrameBuffer} that the width\x2C height\x2C and pixel data is to be taken from\x0d\n     * @param {FrameBuffer} parent the {FrameBuffer} that this {Viewport} is stored within\x0d\n     * @param {number} upperLeftX the upper left hand x coordinate of this {Viewport}\x0d\n     * @param {number} upperLeftY the upper left hand y coordinate of this {Viewport}\x0d\n     * @returns {Viewport} this {Viewport} with the specified upper left corner inside its parent and the size and pixel data of the source\x0d\n     */\x0d\n    static buildFB(source\x2C parent\x2C upperLeftX = 0\x2C upperLeftY = 0)\x0d\n    {\x0d\n        if (typeof upperLeftX != "number" || typeof upperLeftY != "number")\x0d\n            throw new Error("UpperLeftX and UpperleftY must be numerical.");\x0d\n\x0d\n        if (source instanceof FrameBuffer == false)\x0d\n            throw new Error("Source must be of type FrameBuffer");\x0d\n\x0d\n        if (parent instanceof FrameBuffer == false)\x0d\n            throw new Error("Parent is required and must be a framebuffer");\x0d\n\x0d\n        const vp = new Viewport(source.getWidthFB()\x2C\x0d\n                                source.getHeightFB()\x2C\x0d\n                                parent\x2C\x0d\n                                upperLeftX\x2C\x0d\n                                upperLeftY\x2C\x0d\n                                source.getBackgroundColorFB());\x0d\n\x0d\n        for (let x = 0; x < source.getWidthFB(); x += 1)\x0d\n        {\x0d\n            for (let y = 0; y < source.getHeightFB(); y += 1)\x0d\n            {\x0d\n                vp.setPixelVP(x\x2C y\x2C source.getPixelFB(x\x2C y));\x0d\n            }\x0d\n        }\x0d\n\x0d\n        return vp;\x0d\n    }\x0d\n\x0d\n    /**\x0d\n     * Create a {Viewport} that is the exact replica of the source {Viewport} with its\x0d\n     * upper left hand corner at the specified point inside its parent {FrameBuffer}\x0d\n     * if no upper left hand corner is given uses (0\x2C 0) as the default upper left hand corner in the parent {FrameBuffer}\x0d\n     *\x0d\n     * @param {Viewport} source the {Viewport} that the width height and pixel data is to be taken from\x0d\n     * @param {FrameBuffer} parent the {FrameBuffer} that this {Viewport} is stored within\x0d\n     * @param {number} upperLeftX upper left hand x coordinate of this {Viewport}\x0d\n     * @param {number} upperLeftY upper left hand y coordinate of this {Viewport}\x0d\n     * @returns {Viewport} with the specified upper left corner inside its parent and the size and pixel data of the source\x0d\n     */\x0d\n    static buildVP(source\x2C parent\x2C upperLeftX = 0\x2C upperLeftY = 0)\x0d\n    {\x0d\n        if (typeof upperLeftX != "number" || typeof upperLeftY != "number")\x0d\n            throw new Error("UpperLeftX and UpperleftY must be numerical.");\x0d\n\x0d\n        if (source instanceof Viewport == false)\x0d\n            throw new Error("Source must be of type FrameBuffer");\x0d\n\x0d\n        if (parent instanceof FrameBuffer == false)\x0d\n            throw new Error("Parent is required and must be a framebuffer");\x0d\n\x0d\n        const vp = new Viewport(source.getWidthVP()\x2C\x0d\n                                source.getHeightVP()\x2C\x0d\n                                parent\x2C\x0d\n                                upperLeftX\x2C\x0d\n                                upperLeftY\x2C\x0d\n                                source.getBackgroundColorVP());\x0d\n\x0d\n        for (let x = 0; x < source.getWidthVP(); x += 1)\x0d\n        {\x0d\n            for (let y = 0; y < source.getHeightVP(); y += 1)\x0d\n            {\x0d\n                vp.setPixelVP(x\x2C y\x2C source.getPixelVP(x\x2C y));\x0d\n            }\x0d\n        }\x0d\n\x0d\n        return vp;\x0d\n    }\x0d\n\x0d\n    /**\x0d\n     * Mutate this {Viewport} into the given upper left hand corner\x0d\n     * of its parent {FrameBuffer} with the specified widht and height\x0d\n     * if no upper left hand corner is given uses (0\x2C 0) as the default\x0d\n     * NOTE: will use Math.round() on upperLeftX and upperLeftY\x2C width and height\x0d\n     *\x0d\n     * @param {number} width the width of this {Viewport}\x0d\n     * @param {number} height the height of this {Viewport}\x0d\n     * @param {number} upperLeftX horizontal coordinate of this {Viewport}\x0d\n     * @param {number} upperLeftY vertical coordinate of this {Viewport}\x0d\n     */\x0d\n    setViewport(width\x2C height\x2C upperLeftX = 0\x2C upperLeftY = 0)\x0d\n    {\x0d\n        if (typeof width != "number"      ||\x0d\n            typeof height != "number"     ||\x0d\n            typeof upperLeftX != "number" ||\x0d\n            typeof upperLeftY != "number")\x0d\n                throw new Error("All parameters must be numerical.");\x0d\n\x0d\n        upperLeftX = Math.round(upperLeftX);\x0d\n        upperLeftY = Math.round(upperLeftY);\x0d\n        width = Math.round(width);\x0d\n        height = Math.round(height);\x0d\n\x0d\n        this.#vp_ul_x = upperLeftX;\x0d\n        this.#vp_ul_y = upperLeftY;\x0d\n        this.#vp_lr_x = this.#vp_ul_x + width;\x0d\n        this.#vp_lr_y = this.#vp_ul_y + height;\x0d\n    }\x0d\n\x0d\n\x0d\n    /**\x0d\n     * Return a reference to the {FrameBuffer} that this {Viewport} is in\x0d\n     *\x0d\n     * @returns {FrameBuffer} a reference to the {FrameBuffer} that this {Viewport} is inside\x0d\n     */\x0d\n    getFrameBuffer()\x0d\n    {\x0d\n        return this.#parent;\x0d\n    }\x0d\n\x0d\n\x0d\n    framebuffer = () => {return this.#parent}\x0d\n\x0d\n\x0d\n    get parent()\x0d\n    {\x0d\n        return this.#parent\x0d\n    }\x0d\n\x0d\n\x0d\n    /**\x0d\n     * Get the Width of this {Viewport}\x0d\n     *\x0d\n     * @returns {number} width of this {Viewport}\x0d\n     */\x0d\n    getWidthVP()\x0d\n    {\x0d\n        return this.#vp_lr_x - this.#vp_ul_x;\x0d\n    }\x0d\n\x0d\n\x0d\n    get width()\x0d\n    {\x0d\n        return this.#vp_lr_x - this.#vp_ul_x;\x0d\n    }\x0d\n\x0d\n\x0d\n    /**\x0d\n     * Get the height of this {Viewport}\x0d\n     * @returns {number} the height of this {Viewport}\x0d\n     */\x0d\n    getHeightVP()\x0d\n    {\x0d\n        return this.#vp_lr_y - this.#vp_ul_y;\x0d\n    }\x0d\n\x0d\n\x0d\n    get height()\x0d\n    {\x0d\n        return this.#vp_lr_y - this.#vp_ul_y;\x0d\n    }\x0d\n\x0d\n\x0d\n    /**\x0d\n     * Get this {Viewport} background color.\x0d\n     *\x0d\n     * @returns {Color} this {Viewport} background {Color}\x0d\n     */\x0d\n    getBackgroundColorVP()\x0d\n    {\x0d\n        return this.#bgColorVP;\x0d\n    }\x0d\n\x0d\n\x0d\n    get bgColorVP()\x0d\n    {\x0d\n        return this.#bgColorVP;\x0d\n    }\x0d\n\x0d\n\x0d\n    get vp_ul_x() {return this.#vp_ul_x;}\x0d\n    get vp_ul_y() {return this.#vp_ul_y;}\x0d\n    get vp_lr_x() {return this.#vp_lr_x;}\x0d\n    get vp_lr_y() {return this.#vp_lr_y;}\x0d\n\x0d\n\x0d\n    /**\x0d\n     * Set this {Viewport} background color.\x0d\n     * <p>\x0d\n     * NOTE: this method does not clear the pixels of this {Viewport}.\x0d\n     * to actually change all this {Viewport} pixels to the given\x0d\n     * {Color} use the {clearVP} method.\x0d\n     *\x0d\n     * @param {Color} color this {Viewport} new background color\x0d\n     */\x0d\n    setBackgroundColorVP(color)\x0d\n    {        \x0d\n        if (color instanceof Color == false)\x0d\n            throw new Error("Color is not of type Color");\x0d\n\x0d\n        this.#bgColorVP = color;\x0d\n    }\x0d\n\x0d\n\x0d\n    set bgColorVP(color)\x0d\n    {\x0d\n        if (color instanceof Color == false)\x0d\n            throw new Error("Color must be an intance of Color");\x0d\n\x0d\n        this.#bgColorVP = color;\x0d\n    }\x0d\n\x0d\n\x0d\n    /**\x0d\n     * Clear this {Viewport} using its background {Color}\x0d\n     */\x0d\n    clearVPDefault()\x0d\n    {\x0d\n        this.clearVP(this.getBackgroundColorVP());\x0d\n    }\x0d\n\x0d\n\x0d\n    /**\x0d\n     * Clear this {Viewport} using the given {Color}\x0d\n     *\x0d\n     * @param {Color} color\x2C the color to set this {Viewport} pixels to\x0d\n     */\x0d\n    clearVP(color)\x0d\n    {\x0d\n        if (color instanceof Color == false)\x0d\n            throw new Error("Color is not of type Color");\x0d\n\x0d\n        /*\x0d\n        for (let x = 0; x < this.getWidthVP(); x += 1)\x0d\n        {\x0d\n            for (let y = 0; y < this.getHeightVP(); y += 1)\x0d\n            {\x0d\n                this.setPixelVP(x\x2C y\x2C color);\x0d\n            }\x0d\n        }\x0d\n        */\x0d\n\x0d\n        //const c = Color.convert2Int(color);\x0d\n        for(let pixel = 0; pixel < this.getWidthVP() * this.getHeightVP()*4; pixel += 4)\x0d\n        {\x0d\n            this.parent.pixelBuffer[pixel + 0] = color.getRed();\x0d\n            this.parent.pixelBuffer[pixel + 1] = color.getGreen();\x0d\n            this.parent.pixelBuffer[pixel + 2] = color.getBlue();\x0d\n            this.parent.pixelBuffer[pixel + 3] = color.getAlpha();\x0d\n        }\x0d\n\x0d\n        for(let pixel = 0; pixel < this.getWidthVP() * this.getHeightVP()*4; pixel += 4)\x0d\n            this.parent.pixelBuffer.set(color.rgb\x2C pixel);\x0d\n    }\x0d\n\x0d\n\x0d\n    /**\x0d\n     * Get the {Color} of the pixel with coordinates at\x0d\n     * {(x\x2C y)} realtive to this {Viewport}\x0d\n     * Note: uses Math.round() to round x and y\x0d\n     *\x0d\n     * @param {number} x the horizontal coordinate within this {Viewport}\x0d\n     * @param {number} y the vertical coordinate within this {Viewport}\x0d\n     * @returns {Color} of the current pixel at the specified coordinate in this {Viewport}\x0d\n     */\x0d\n    getPixelVP(x\x2C y)\x0d\n    {\x0d\n        if (typeof x != "number" ||\x0d\n            typeof y != "number")\x0d\n               throw new Error("X and Y must be numerical");\x0d\n\x0d\n        x = Math.round(x);\x0d\n        y = Math.round(y);\x0d\n\x0d\n        return this.#parent.getPixelFB(this.#vp_ul_x + x\x2C\x0d\n                                       this.#vp_ul_y + y);\x0d\n    }\x0d\n\x0d\n\x0d\n    /**\x0d\n     * Set the {Color} of the pixel with coordinates {(x\x2C y)} within this {Viewport}\x0d\n     * Note uses default value {Color}.black if no color is given\x0d\n     * Note rounds x and y\x0d\n     *\x0d\n     * @param {number} x the horizontal coordinate within this {Viewport}\x0d\n     * @param {number} y the vertical coordinate within this {Viewport}\x0d\n     * @param {Color} color the {Color} that the {(x\x2C y)} pixel should be set to within this {Viewport}\x0d\n     */\x0d\n    setPixelVP(x\x2C y\x2C color = Color.black)\x0d\n    {\x0d\n        if (typeof x != "number" || typeof y != "number")\x0d\n            throw new Error("X and Y must be numerical");\x0d\n\x0d\n        if (color instanceof Color == false)\x0d\n            throw new Error("Color must be a Color");\x0d\n\x0d\n        x = Math.round(x);\x0d\n        y = Math.round(y);\x0d\n\x0d\n        this.#parent.setPixelFB(this.#vp_ul_x + x\x2C\x0d\n                                this.#vp_ul_y + y\x2C\x0d\n                                color);\x0d\n    }\x0d\n\x0d\n\x0d\n    /**\x0d\n     * Create a new {FrameBuffer} contianing the pixel data from this {Viewport}\x0d\n     *\x0d\n     * @returns {FrameBuffer} holding pixel data from this {Viewport}\x0d\n     */\x0d\n    convertVP2FB()\x0d\n    {\x0d\n        return(FrameBuffer.buildVP(this));\x0d\n    }\x0d\n\x0d\n\x0d\n    /**\x0d\n         Write this {Viewport} to the specified PPM file.\x0d\n      <p>\x0d\n         <a href="https://en.wikipedia.org/wiki/Netpbm_format" target="_top">\x0d\n                  https://en.wikipedia.org/wiki/Netpbm_format</a>\x0d\n\x0d\n         @param filename {string}  name of PPM image file to hold {Viewport} data\x0d\n    */\x0d\n    dumpVP2File(filename)\x0d\n    {\x0d\n        if (typeof filename != "string")\x0d\n            throw new Error("Filename must be a String");\x0d\n\x0d\n        this.#parent.dumpPixels2File(this.#vp_ul_x\x2C\x0d\n                                     this.#vp_ul_y\x2C\x0d\n                                     this.#vp_lr_x\x2C\x0d\n                                     this.#vp_lr_y\x2C\x0d\n                                     filename);\x0d\n    }\x0d\n\x0d\n\x0d\n    /**\x0d\n      For debugging very small {Viewport} objects.\x0d\n\x0d\n      @return {string} a string representation of this {Viewport}\x0d\n   */\x0d\n    toString()\x0d\n    {\x0d\n        let result = "Viewport [w=" + this.width + "\x2C h=" + this.height + "]\\n";\x0d\n\x0d\n        for (let j = 0; j < this.width; ++j)\x0d\n        {\x0d\n            result += " r   g   b |";\x0d\n        }\x0d\n\x0d\n        result += "\\n";\x0d\n        for (let i = 0; i < this.height; ++i)\x0d\n        {\x0d\n            for (let j = 0; j < this.width; ++j)\x0d\n            {\x0d\n                const c = this.getPixelVP(j\x2C i);\x0d\n                const color = Color.buildColor(c);\x0d\n\x0d\n                result += format("%3d "\x2C color.getRed());\x0d\n                result += format("%3d "\x2C color.getGreen());\x0d\n                result += format("%3d|"\x2C color.getBlue());\x0d\n            }\x0d\n            result += "\\n";\x0d\n        }\x0d\n        /*\x0d\n        let result = "Viewport [w = " + this.getWidthVP() + "\x2C h = " + this.getHeightVP() + "]\\n";\x0d\n\x0d\n        for (let y = 0; y < this.getHeightVP(); ++y)\x0d\n        {\x0d\n            for (let x = 0; x < this.getWidthVP(); ++x)\x0d\n            {\x0d\n                const color = this.getPixelVP(x\x2C y);\x0d\n                result += color.getRed() + " " + color.getGreen() + " " + color.getBlue() + " " + color.getAlpha() + " | ";\x0d\n            }\x0d\n            result += "\\n";\x0d\n        }\x0d\n        */\x0d\n        return result;\x0d\n    }\x0d\n\x0d\n\x0d\n    /**\x0d\n     * For Testing.\x0d\n     */\x0d\n    static main()\x0d\n    {\x0d\n        const fb = new FrameBuffer(10\x2C 10);\x0d\n\x0d\n        console.log("creating vp1 = new VP(3\x2C 3\x2C fb = new FrameBuffer(10\x2C 10)\x2C 4\x2C 4\x2C color.orange)");\x0d\n        const vp1 = new Viewport(3\x2C 3\x2C fb\x2C 4\x2C 4\x2C Color.orange);\x0d\n\x0d\n        console.log("creating vp2 = VP.buildParent()");\x0d\n        const vp2 = Viewport.buildParent(fb);\x0d\n\x0d\n        console.log("creating vp3 = vP.buildFB");\x0d\n        const vp3 = Viewport.buildFB(new FrameBuffer(5\x2C 5)\x2C fb\x2C 2\x2C 2);\x0d\n\x0d\n        console.log("creating vp4 = vp.buildVP");\x0d\n        const vp4 = Viewport.buildVP(vp1\x2C fb\x2C 0\x2C 0);\x0d\n\x0d\n        console.log("");\x0d\n        console.log("vp1.getFramebuffer()");\x0d\n        console.log(vp1.getFrameBuffer().toString());\x0d\n\x0d\n        console.log("");\x0d\n        console.log("vp2.framebuffer()");\x0d\n        console.log(vp2.framebuffer().toString());\x0d\n\x0d\n        console.log("");\x0d\n        console.log("vp3.parent");\x0d\n        console.log(vp3.parent.toString());\x0d\n\x0d\n        console.log("");\x0d\n        console.log("vp1.getWidthVP()");\x0d\n        console.log(vp1.getWidthVP());\x0d\n\x0d\n        console.log("");\x0d\n        console.log("vp1.getHeightVP()");\x0d\n        console.log(vp1.getHeightVP());\x0d\n\x0d\n        console.log("");\x0d\n        console.log("vp4.width");\x0d\n        console.log(vp4.width);\x0d\n\x0d\n        console.log("");\x0d\n        console.log("vp4.height");\x0d\n        console.log(vp4.height);\x0d\n\x0d\n        console.log("");\x0d\n        console.log("vp2.getBackGroundColorVP()");\x0d\n        console.log(vp2.getBackgroundColorVP().toString());\x0d\n\x0d\n        console.log("");\x0d\n        console.log("vp3.bgColorVP");\x0d\n        console.log(vp3.bgColorVP.toString());\x0d\n\x0d\n        console.log("");\x0d\n        console.log("vp3.setBackGroundColorVP(Color.Green");\x0d\n        vp3.setBackgroundColorVP(Color.Green);\x0d\n        console.log(vp3.toString());\x0d\n\x0d\n        console.log("");\x0d\n        console.log("vp3.clearVPDefault()");\x0d\n        vp3.clearVPDefault();\x0d\n        console.log(vp3.toString());\x0d\n\x0d\n        console.log("");\x0d\n        console.log("vp2.setPixelVP(1\x2C 1\x2C Color.PINK)");\x0d\n        vp2.setPixelVP(1\x2C 1\x2C Color.Pink);\x0d\n        console.log(vp2.toString());\x0d\n\x0d\n        console.log("");\x0d\n        console.log("vp2.getPixelVP(1\x2C 1");\x0d\n        console.log(vp2.getPixelVP(1\x2C 1).toString());\x0d\n\x0d\n        console.log("");\x0d\n        console.log("vp1.dumpVP2File(VP1.ppm)");\x0d\n        vp1.dumpVP2File("VP1.ppm");\x0d\n\x0d\n        console.log("");\x0d\n        console.log("vp2.dumpVP2File(VP2.ppm)");\x0d\n        vp2.dumpVP2File("VP2.ppm");\x0d\n\x0d\n        console.log("");\x0d\n        console.log("vp3.dumpVP2File(VP3.ppm)");\x0d\n        vp3.dumpVP2File("VP3.ppm");\x0d\n\x0d\n        console.log("");\x0d\n        console.log("vp4.dumpVP2File(VP4.ppm)");\x0d\n        vp4.dumpVP2File("VP4.ppm");\x0d\n\x0d\n        console.log("");\x0d\n        console.log("vp1.convertVP2FB()");\x0d\n        console.log(vp1.convertVP2FB().toString());\x0d\n    }\x0d\n}
code-source-info,0x1c9a301f260,479,0,20230,C10O0C28O0C48O0C323O1152C328O20230,,
code-creation,Function,10,420716,0x1c9a301f498,79,<instance_members_initializer> file:///E:/Javascript%20Renderers/Javascript-Renderer-9v2/renderer_10_js/ColorImplementationTiming/Uint8/Fast%20GC/Viewport.js:31:16,0x1c9a301ec30,~
code-source-info,0x1c9a301f498,479,1152,20230,C0O1152C15O1278C25O1335C35O1393C45O1451C55O1514C65O1596C69O10156C78O20230,,
code-creation,Function,11,421647,0x7ff6a66d9ac0,860,onParsePathComplete node:internal/url:604:29,0x914790e7d8,^
code-source-info,0x7ff6a66d9ac0,76,17306,17788,,,
code-creation,Function,11,421702,0x7ff6a66d9ec0,44,noop node:internal/util/debuglog:47:14,0x3a8997aff00,^
code-source-info,0x7ff6a66d9ec0,28,1465,1473,,,
code-creation,Function,11,421747,0x7ff6a66d9f80,548,isRelativeSpecifier node:internal/modules/esm/resolve:900:29,0x14dbcbb66f8,^
code-source-info,0x7ff6a66d9f80,455,30826,31077,,,
code-creation,Function,11,421805,0x7ff6a66da240,548,handleErrorFromBinding node:internal/fs/utils:344:32,0x914791d4d8,^
code-source-info,0x7ff6a66da240,79,8329,8840,,,
code-creation,Function,11,421846,0x7ff6a66da500,356,validateArgs node:internal/modules/esm/loader:822:26,0x857283ae48,^
code-source-info,0x7ff6a66da500,451,24916,25192,,,
code-creation,Function,11,421882,0x7ff6a66da700,152,isBigInt64Array node:internal/util/types:49:25,0x3a8997943b8,^
code-source-info,0x7ff6a66da700,23,1304,1394,,,
code-creation,Function,11,421916,0x7ff6a66da840,320,StatsBase node:internal/fs/utils:404:19,0x914791d5c8,^
code-source-info,0x7ff6a66da840,79,10378,10679,,,
code-creation,Function,11,421953,0x7ff6a66daa00,664,Stats node:internal/fs/utils:501:15,0x914791dbc8,^
code-source-info,0x7ff6a66daa00,79,13411,13952,,,
code-creation,Function,11,421998,0x7ff6a66dad40,940,statSync node:fs:1588:18,0x2dbe93f4d38,^
code-source-info,0x7ff6a66dad40,75,42315,42729,,,
code-creation,Function,11,422032,0x7ff6a66db180,152,StatsBase.isDirectory node:internal/fs/utils:418:43,0x914791d618,^
code-source-info,0x7ff6a66db180,79,10725,10776,,,
code-creation,Function,11,422065,0x7ff6a66db2c0,152,StatsBase.isFile node:internal/fs/utils:422:38,0x914791d6a8,^
code-source-info,0x7ff6a66db2c0,79,10818,10869,,,
new,MemoryChunk,0x2b2c4040000,262144
new,MemoryChunk,0x31a25cc0000,262144
new,MemoryChunk,0x37b0f5c0000,262144
new,MemoryChunk,0xa19b980000,262144
code-creation,LazyCompile,13,423504,0x7ff6a66db400,1720,normalizeString node:path:66:25,0x2dbe93dad78,*
code-source-info,0x7ff6a66dbx2dbe93daaa0
feedback-vector,423619,0x14dbcb84ef0,53,0x7ff6a66db400,TieringState::kInProgress,0,85,0,0000014DBCB84EF1: [FeedbackVector] in OldSpace\n - map: 0x03ba70f41b89 <Map>\n - length: 53\n - shared function info: 0x02dbe93dad79 <SharedFunctionInfo normalizeString>\n - no optimized code\n - tiering state: TieringState::kInProgress\n - maybe has optimized code: 0\n - invocation count: 85\n - profiler ticks: 0\n - closure feedback cell array: 000003BA70F432F1: [ClosureFeedbackCellArray] in ReadOnlySpace\n - map: 0x03ba70f41f39 <Map>\n - length: 0\n\n - slot #0 LoadProperty POLYMORPHIC {\n     [0]: 0x02b2c4043c79 <Other heap object (WEAK_FIXED_ARRAY_TYPE)>\n     [1]: 0x03ba70f468b1 <Symbol: (uninitialized_symbol)>\n  }\n - slot #2 CompareOp CompareOp:SignedSmall {\n     [2]: 1\n  }\n - slot #3 CompareOp CompareOp:SignedSmall {\n     [3]: 1\n  }\n - slot #4 Call MONOMORPHIC {\n     [4]: [weak] 0x023add77d949 <JSBoundFunction (BoundTargetFunction 000002FFD8F83569)>\n     [5]: 29680\n  }\n - slot #6 Call MONOMORPHIC {\n     [6]: [weak] 0x023add74a421 <JSFunction isPathSeparator (sfi = 000002DBE93DAAA1)>\n     [7]: 340\n  }\n - slot #8 Call MONOMORPHIC {\n     [8]: [weak] 0x023add74a421 <JSFunction isPathSeparator (sfi = 000002DBE93DAAA1)>\n     [9]: 29680\n  }\n - slot #10 BinaryOp BinaryOp:SignedSmall {\n     [10]: 1\n  }\n - slot #11 CompareOp CompareOp:SignedSmall {\n     [11]: 1\n  }\n - slot #12 CompareOp CompareOp:SignedSmall {\n     [12]: 1\n  }\n - slot #13 CompareOp CompareOp:SignedSmall {\n     [13]: 1\n  }\n - slot #14 CompareOp CompareOp:SignedSmall {\n     [14]: 1\n  }\n - slot #15 CompareOp CompareOp:SignedSmall {\n     [15]: 1\n  }\n - slot #16 BinaryOp BinaryOp:None {\n     [16]: 0\n  }\n - slot #17 Call UNINITIALIZED {\n     [17]: 0x03ba70f468b1 <Symbol: (uninitialized_symbol)>\n     [18]: 0\n  }\n - slot #19 CompareOp CompareOp:None {\n     [19]: 0\n  }\n - slot #20 BinaryOp BinaryOp:None {\n     [20]: 0\n  }\n - slot #21 Call UNINITIALIZED {\n     [21]: 0x03ba70f468b1 <Symbol: (uninitialized_symbol)>\n     [22]: 0\n  }\n - slot #23 CompareOp CompareOp:None {\n     [23]: 0\n  }\n - slot #24 CompareOp CompareOp:SignedSmall {\n     [24]: 1\n  }\n - slot #25 Call MONOMORPHIC {\n     [25]: [weak] 0x023add77d8b9 <JSBoundFunction (BoundTargetFunction 000002FFD8F83569)>\n     [26]: 4\n  }\n - slot #27 CompareOp CompareOp:SignedSmall {\n     [27]: 1\n  }\n - slot #28 Call MONOMORPHIC {\n     [28]: [weak] 0x02ffd8f83c69 <JSBoundFunction (BoundTargetFunction 000002FFD8F83569)>\n     [29]: 4\n  }\n - slot #30 BinaryOp BinaryOp:SignedSmall {\n     [30]: 1\n  }\n - slot #31 Call MONOMORPHIC {\n     [31]: [weak] 0x023add77d8b9 <JSBoundFunction (BoundTargetFunction 000002FFD8F83569)>\n     [32]: 4\n  }\n - slot #33 BinaryOp BinaryOp:SignedSmall {\n     [33]: 1\n  }\n - slot #34 CompareOp CompareOp:None {\n     [34]: 0\n  }\n - slot #35 BinaryOp BinaryOp:None {\n     [35]: 0\n  }\n - slot #36 CompareOp CompareOp:None {\n     [36]: 0\n  }\n - slot #37 BinaryOp BinaryOp:None {\n     [37]: 0\n  }\n - slot #38 CompareOp CompareOp:SignedSmall {\n     [38]: 1\n  }\n - slot #39 BinaryOp BinaryOp:String {\n     [39]: 16\n  }\n - slot #40 BinaryOp BinaryOp:String {\n     [40]: 16\n  }\n - slot #41 BinaryOp BinaryOp:SignedSmall {\n     [41]: 1\n  }\n - slot #42 Call MONOMORPHIC {\n     [42]: [weak] 0x02ffd8f83c69 <JSBoundFunction (BoundTargetFunction 000002FFD8F83569)>\n     [43]: 1552\n  }\n - slot #44 BinaryOp BinaryOp:SignedSmall {\n     [44]: 1\n  }\n - slot #45 Call MONOMORPHIC {\n     [45]: [weak] 0x02ffd8f83c69 <JSBoundFunction (BoundTargetFunction 000002FFD8F83569)>\n     [46]: 308\n  }\n - slot #47 BinaryOp BinaryOp:SignedSmall {\n     [47]: 1\n  }\n - slot #48 BinaryOp BinaryOp:SignedSmall {\n     [48]: 1\n  }\n - slot #49 CompareOp CompareOp:SignedSmall {\n     [49]: 1\n  }\n - slot #50 CompareOp CompareOp:SignedSmall {\n     [50]: 1\n  }\n - slot #51 BinaryOp BinaryOp:SignedSmall {\n     [51]: 1\n  }\n - slot #52 BinaryOp BinaryOp:SignedSmall {\n     [52]: 1\n  }\n
code-creation,Script,10,424436,0x1c9a3022f98,225, file:///E:/Javascript%20Renderers/Javascript-Renderer-9v2/renderer_10_js/ColorImplementationTiming/Uint8/Fast%20GC/Color.js:1:1,0x1c9a3022220,~
script-source,480,file:///E:/Javascript%20Renderers/Javascript-Renderer-9v2/renderer_10_js/ColorImplementationTiming/Uint8/Fast%20GC/Color.js,/*\x0d\n    FrameBuffer. The MIT License.\x0d\n    Copyright (c) 2022 rlkraft@pnw.edu\x0d\n    See LICENSE for details.\x0d\n*/\x0d\n\x0d\n/**\x0d\n * An {@code Color} is a way of storing the red\x2C green\x2C blue\x2C and alpha data\x0d\n * about a color object.  It is supposed to mimic Java's Color class.\x0d\n */\x0d\n\x0d\n//@ts-check\x0d\nimport {format} from "../../../renderer/scene/util/UtilExport.js";\x0d\n\x0d\nexport default class Color\x0d\n{\x0d\n    /**@type {Uint8ClampedArray} #rgb the rgba array for this color*/#rgb = new Uint8ClampedArray(4);\x0d\n\x0d\n    static GAMMA = 1/2.2;\x0d\n\x0d\n    static black = new Color();\x0d\n    static BLACK = new Color();\x0d\n    static Black = new Color();\x0d\n\x0d\n    static white = new Color(255\x2C 255\x2C 255);\x0d\n    static WHITE = new Color(255\x2C 255\x2C 255);\x0d\n    static White = new Color(255\x2C 255\x2C 255);\x0d\n\x0d\n    static red = new Color(255\x2C 0\x2C 0);\x0d\n    static RED = new Color(255\x2C 0\x2C 0);\x0d\n    static Red = new Color(255\x2C 0\x2C 0);\x0d\n\x0d\n    static green = new Color(0\x2C 255\x2C 0);\x0d\n    static GREEN = new Color(0\x2C 255\x2C 0);\x0d\n    static Green = new Color(0\x2C 255\x2C 0);\x0d\n\x0d\n    static blue = new Color(0\x2C 0\x2C 255);\x0d\n    static BLUE = new Color(0\x2C 0\x2C 255);\x0d\n    static Blue = new Color(0\x2C 0\x2C 255);\x0d\n\x0d\n    static orange = new Color(255\x2C 127\x2C 0);\x0d\n    static ORANGE = new Color(255\x2C 127\x2C 0);\x0d\n    static Orange = new Color(255\x2C 127\x2C 0);\x0d\n\x0d\n    static yellow = new Color(255\x2C 255\x2C 0);\x0d\n    static YELLOW = new Color(255\x2C 255\x2C 0);\x0d\n    static Yellow = new Color(255\x2C 255\x2C 0);\x0d\n\x0d\n    static pink = new Color(255\x2C 192\x2C 203\x2C);\x0d\n    static PINK = new Color(255\x2C 192\x2C 203\x2C);\x0d\n    static Pink = new Color(255\x2C 192\x2C 203\x2C);\x0d\n\x0d\n    static cyan = new Color(0\x2C 255\x2C 255);\x0d\n    static CYAN = new Color(0\x2C 255\x2C 255);\x0d\n    static Cyan = new Color(0\x2C 255\x2C 255);\x0d\n\x0d\n    static magenta = new Color(255\x2C 0\x2C 255);\x0d\n    static MAGENTA = new Color(255\x2C 0\x2C 255);\x0d\n    static Magenta = new Color(255\x2C 0\x2C 255);\x0d\n\x0d\n    static gray = new Color(192\x2C 192\x2C 192);\x0d\n    static GRAY = new Color(192\x2C 192\x2C 192);\x0d\n    static Gray = new Color(192\x2C 192\x2C 192);\x0d\n\x0d\n    /**\x0d\n     * Creates a new {@code Color} with the specified red\x2C green\x2C blue\x2C and alpha values given.\x0d\n     * Will check to make sure that the given values are within range\x0d\n     * By default alpha is set to 255 \x0d\n     * uses Math.round() on r\x2C g\x2C b\x0d\n     *\x0d\n     * @param {number} r the red value of the {@code Color}\x0d\n     * @param {number} g the green value of the {@code Color}\x0d\n     * @param {number} b the blue value of the {@code Color}\x0d\n     * @param {number} a the alpha value of the {@code Color}\x0d\n     */\x0d\n    constructor(r = 0\x2C g = 0\x2C b = 0\x2C a = 255)\x0d\n    {\x0d\n        if (typeof r != "number" ||\x0d\n            typeof g != "number" ||\x0d\n            typeof b != "number" ||\x0d\n            typeof a != "number")\x0d\n                throw new Error("All parameters must be numeric");\x0d\n\x0d\n        if (! (r >= 0 && r <= 255) ||\x0d\n            ! (g >= 0 && g <= 255) ||\x0d\n            ! (b >= 0 && b <= 255) ||\x0d\n            ! (a >= 0 && a <= 255))\x0d\n               throw new Error("Int data must be between 0 and 255 inclusive");\x0d\n\x0d\n        r = Math.round(r);\x0d\n        g = Math.round(g);\x0d\n        b = Math.round(b);\x0d\n        a = Math.round(a);\x0d\n\x0d\n        this.#rgb[0] = r;\x0d\n        this.#rgb[1] = g;\x0d\n        this.#rgb[2] = b;\x0d\n        this.#rgb[3] = a;\x0d\n    }\x0d\n\x0d\n\x0d\n    /**\x0d\n     * Creates a new color using the rgba data of the given color\x0d\n     *\x0d\n     * @param {Color}  color the color whose data is to be used to create the new {@code Color}\x0d\n     * @returns {Color} a new {@code Color} that is a deep copy of the color passed.\x0d\n     */\x0d\n    static buildColor(color)\x0d\n    {\x0d\n        if (color instanceof Color == false)\x0d\n            throw new Error("color is not of type Color");\x0d\n\x0d\n        return new Color(color.getRed()\x2C\x0d\n                         color.getGreen()\x2C\x0d\n                         color.getBlue()\x2C\x0d\n                         color.getAlpha());\x0d\n    }\x0d\n\x0d\n    /**\x0d\n     * Create a color object from an rgba uint8clamped array.\x0d\n     * @param {Uint8ClampedArray} rgba the rgba array to be used \x0d\n     * @returns {Color} the new color created with the given rgba data\x0d\n     */\x0d\n    static buildRGBA(rgba)\x0d\n    {\x0d\n        if(rgba instanceof Uint8ClampedArray == false)\x0d\n            throw new Error("RGBA needs to be a uint8clamped array");\x0d\n\x0d\n        const col = new Color();\x0d\n        col.#rgb = rgba;\x0d\n        \x0d\n        return col;\x0d\n    }\x0d\n\x0d\n    /**\x0d\n     * Creates a new color that is the same rgb values but not the alpha value of the color passed.\x0d\n     * Insteads uses the passed alpha.  This function is supposed to create a 'stronger' or 'weaker' duplicate color.\x0d\n     * NOTE: this function is NON MUTATING\x0d\n     *\x0d\n     * @param {Color} color the rgb values to be used in the color being created\x0d\n     * @param {number} alpha the alpha value for the color to be created\x0d\n     * @returns {Color} the 'stronger' or 'weaker' duplicate color\x0d\n     */\x0d\n    static buildAlpha(color\x2C alpha)\x0d\n    {\x0d\n        if (color instanceof Color == false)\x0d\n            throw new Error("Color is not of type Color");\x0d\n\x0d\n        if (typeof alpha != "number")\x0d\n            throw new Error("Alpha is not numerical");\x0d\n\x0d\n        return new Color(color.getRed()\x2C\x0d\n                         color.getGreen()\x2C\x0d\n                         color.getBlue()\x2C\x0d\n                         alpha);\x0d\n    }\x0d\n\x0d\n\x0d\n    /**\x0d\n     * Creates a new color that is the weighted average of the two colors using the ratio between their Alphas.\x0d\n     * formula: c1.alpha/(c1.alpha + c2.alpha)\x0d\n     * this function is NON MUTATING\x0d\n     * NOTE: returns a float color with alpha of 1\x0d\n     *\x0d\n     * @param {Color} c1 the first color to be blended with\x0d\n     * @param {Color} c2 the second color to be blended with\x0d\n     * @returns the new float representation of the blended colors with an alpha of 1\x0d\n     */\x0d\n    static blendColor(c1\x2C c2)\x0d\n    {\x0d\n        return Color.blendColorWeight(c1\x2C c2\x2C c1.getAlpha()/(c1.getAlpha() + c2.getAlpha()));\x0d\n    }\x0d\n\x0d\n\x0d\n    /**\x0d\n     * Creates a new color that is the weighted average of\x0d\n     * the two colors using the given c1Weight\x2C the weight\x0d\n     * of the first color.  c1Weight has the default value of 1/2\x0d\n     * Uses the equation: c1Weight * c1 + (1-c1Weight) * c2;\x0d\n     * this function is NON MUTATING\x0d\n     * NOTE: returns a color with alpha of 255\x0d\n     *\x0d\n     * @param {Color} c1 the first color to be blended with\x0d\n     * @param {Color} c2 the second color to be blended with\x0d\n     * @param {number} c1Weight the weight of the first color\x2C must be in the range [0\x2C 1]\x0d\n     * @returns {Color} the new float representation of the passed color\x0d\n     */\x0d\n    static blendColorWeight(c1\x2C c2\x2C c1Weight = .5)\x0d\n    {\x0d\n        if (c1 instanceof Color == false || c2 instanceof Color == false)\x0d\n            throw new Error("C1 and C2 are not of type color");\x0d\n\x0d\n        if (typeof c1Weight != "number")\x0d\n            throw new Error("c1Weight is not numerical");\x0d\n\x0d\n        if (! (c1Weight >= 0 && c1Weight <= 1))\x0d\n            throw new Error("c1Weight has to be in the range 0 to 1 inclusive");\x0d\n\x0d\n        const newR = c1Weight * c1.getRed()   + (1-c1Weight) * c2.getRed();\x0d\n        const newG = c1Weight * c1.getGreen() + (1-c1Weight) * c2.getGreen();\x0d\n        const newB = c1Weight * c1.getBlue()  + (1-c1Weight) * c2.getBlue();\x0d\n\x0d\n        return new Color(newR\x2C newG\x2C newB\x2C 255);\x0d\n    }\x0d\n\x0d\n\x0d\n    /**\x0d\n     * Creates a new {@code Color} that is the float representation of the passed color.\x0d\n     * NOTE: this function is NON MUTATING.  If you want to mutate the color call {@code mutate2Float()}\x0d\n     *\x0d\n     * @param {Color} color the color whose data is to be used to create the new color\x0d\n     * @returns {Color} the new float representation of the color passed\x0d\n     */\x0d\n    /*\x0d\n    static convert2Float(color)\x0d\n    {\x0d\n        if (color instanceof Color == false)\x0d\n            throw new Error("Color is not of type Color");\x0d\n\x0d\n        if (color.isFloat())\x0d\n        {\x0d\n            return Color.buildColor(color);\x0d\n        }\x0d\n\x0d\n        return (new Color(color.getRed()/255\x2C\x0d\n                          color.getGreen()/255\x2C\x0d\n                          color.getBlue()/255\x2C\x0d\n                          color.getAlpha()/255\x2C\x0d\n                          true));\x0d\n    }\x0d\n    */\x0d\n\x0d\n    /**\x0d\n     * Creates a new {@code Color} that is the integer representation of the passed Color.\x0d\n     * NOTE: this function is NON MUTATING.  If you want to mutate the color call {@code mutate2Int()}\x0d\n     *\x0d\n     * @param {Color} color the color whose data is to be used to make the new {@code Color}\x0d\n     * @returns {Color} the new int representation of the color passed.\x0d\n     */\x0d\n    /*\x0d\n    static convert2Int(color)\x0d\n    {\x0d\n        if (color instanceof Color == false)\x0d\n            throw new Error("Color is not of type Color");\x0d\n\x0d\n        if (color.isFloat() == false)\x0d\n        {\x0d\n            return Color.buildColor(color);\x0d\n        }\x0d\n\x0d\n        return (new Color(color.getRed() * 255\x2C\x0d\n                          color.getGreen() * 255\x2C\x0d\n                          color.getBlue() * 255\x2C\x0d\n                          color.getAlpha() * 255\x2C\x0d\n                          false));\x0d\n    }\x0d\n    */\x0d\n\x0d\n    /**\x0d\n     * MUTATE the calling {@code Color} object to be the float representation of itself.\x0d\n     * @param {Color} c the color to be mutated into a float\x0d\n     * @returns {Color} the MUTATED calling color represented as a float for method chaining\x0d\n     */\x0d\n    /*\x0d\n    static mutate2Float(c)\x0d\n    {\x0d\n        if (c instanceof Color == false)\x0d\n            throw new Error("c is not a color");\x0d\n\x0d\n        if (c.isFloat() == false)\x0d\n        {\x0d\n            c = new Color(c.getRed()/255\x2C\x0d\n                          c.getGreen()/255\x2C\x0d\n                          c.getBlue()/255\x2C\x0d\n                          c.getAlpha()/255\x2C\x0d\n                          true);\x0d\n        }\x0d\n\x0d\n        return c;\x0d\n    }\x0d\n    */\x0d\n\x0d\n    /**\x0d\n     * MUTATE the calling {@code Color} object to be the int representation of itself.\x0d\n     * @param {Color} c the color to be mutated\x0d\n     * @returns {Color} the mutated color for method chaining\x0d\n     */\x0d\n    /*\x0d\n    static mutate2Int(c)\x0d\n    {\x0d\n        if (c instanceof Color == false)\x0d\n            throw new Error("c is not a color");\x0d\n\x0d\n        if (c.isFloat())\x0d\n        {\x0d\n            c = new Color(c.getRed() * 255\x2C\x0d\n                          c.getGreen() * 255\x2C\x0d\n                          c.getBlue() * 255\x2C\x0d\n                          c.getAlpha() * 255\x2C\x0d\n                          false);\x0d\n        }\x0d\n\x0d\n        return c;\x0d\n    }\x0d\n    */\x0d\n\x0d\n\x0d\n    /**\x0d\n     * Get the red value of the color\x0d\n     * @returns {number} the red value of the color\x0d\n     */\x0d\n    getRed()\x0d\n    {\x0d\n        return this.#rgb[0];\x0d\n    }\x0d\n\x0d\n    /**\x0d\n     * Get the green value of the color\x0d\n     * @returns {number} the green value of the color\x0d\n     */\x0d\n    getGreen()\x0d\n    {\x0d\n        return this.#rgb[1];\x0d\n    }\x0d\n\x0d\n    /**\x0d\n     * Get the blue value of the color\x0d\n     * @returns {number} the blue value of the color\x0d\n     */\x0d\n    getBlue()\x0d\n    {\x0d\n        return this.#rgb[2];\x0d\n    }\x0d\n\x0d\n    /**\x0d\n     * Get the alpha value of the color\x0d\n     * @returns {number} the alpha value of the color\x0d\n     */\x0d\n    getAlpha()\x0d\n    {\x0d\n        return this.#rgb[3];\x0d\n    }\x0d\n\x0d\n\x0d\n    /**\x0d\n     * Change the alpha value of this color\x0d\n     * @param {number} a the new alpha value for this color\x0d\n     */\x0d\n    setAlpha(a)\x0d\n    {\x0d\n        if(typeof a != "number")\x0d\n            throw new Error("a is not numerical");\x0d\n\x0d\n        if(a < 0 || a > 255)\x0d\n            throw new Error("a is supposed to be between 0 and 255 inclusive");\x0d\n\x0d\n        this.#rgb[3] = Math.round(a);\x0d\n    }\x0d\n\x0d\n\x0d\n    /**\x0d\n     * Get the r\x2C g\x2C b\x2C and alpha values in an array\x0d\n     * @returns {Uint8ClampedArray} the rgba array for this color\x0d\n     */\x0d\n    getRGBComponents()\x0d\n    {\x0d\n        return this.#rgb;\x0d\n    }\x0d\n\x0d\n    get rgb()\x0d\n    {\x0d\n        return this.#rgb;\x0d\n    }\x0d\n\x0d\n    /**\x0d\n     * For debugging.\x0d\n     * @returns {string} a string representation of this color\x0d\n     */\x0d\n    toString()\x0d\n    {\x0d\n        return (format("(r\x2C g\x2C b): (%3d\x2C %3d\x2C %3d)"\x2C this.#rgb[0]\x2C this.#rgb[1]\x2C this.#rgb[2]));\x0d\n    }\x0d\n\x0d\n\x0d\n    /**\x0d\n     * For testing.\x0d\n     */\x0d\n    static main()\x0d\n    {\x0d\n        /*\x0d\n        console.log("Making color1 = new Color(0\x2C 0\x2C 0\x2C 100)");\x0d\n        let color1 = new Color(0\x2C 0\x2C 0\x2C 100);\x0d\n        console.log(color1.toString());\x0d\n\x0d\n        console.log("Making color2 = new Color(1\x2C 1\x2C 1\x2C 1\x2C true)");\x0d\n        let color2 = new Color(1\x2C 1\x2C 1\x2C 1\x2C true);\x0d\n        console.log(color2.toString());\x0d\n\x0d\n        console.log("Making color3 = Color.buildAlpha(color1\x2C 255)");\x0d\n        let color3 = Color.buildAlpha(color1\x2C 255);\x0d\n        console.log(color3.toString());\x0d\n\x0d\n        console.log("Making color4 = Color.buildColor(color2)");\x0d\n        let color4 = Color.buildColor(color2);\x0d\n        console.log(color4.toString());\x0d\n\x0d\n        console.log("Making color5 = Color.blendColor(color2\x2C color3)");\x0d\n        let color5 = Color.blendColor(color2\x2C color3);\x0d\n        console.log(color5.toString());\x0d\n\x0d\n        console.log("Making color6 = Color.blendColorWeight(color3\x2C .9)");\x0d\n        let color6 = Color.blendColorWeight(color2\x2C color3\x2C .9);\x0d\n        console.log(color6.toString());\x0d\n\x0d\n        console.log("Making color7 = Color.convert2Int(color2)");\x0d\n        let color7 = Color.convert2Int(color2);\x0d\n        console.log(color7.toString());\x0d\n\x0d\n        console.log("Making color8 = Color.convert2Float(color3)");\x0d\n        let color8 = Color.convert2Float(color3);\x0d\n        console.log(color8.toString());\x0d\n\x0d\n        console.log("Checking color2.isFloat()");\x0d\n        console.log(color2.isFloat());\x0d\n\x0d\n        console.log("Mutating color2 to be an int");\x0d\n        Color.mutate2Int(color2);\x0d\n        console.log(color2.toString());\x0d\n\x0d\n        console.log("Calling color2.isFloat()");\x0d\n        console.log(color2.isFloat());\x0d\n\x0d\n        console.log("calling color3.isFloat()");\x0d\n        console.log(color3.isFloat());\x0d\n\x0d\n        console.log("Mutating color3 to be a float");\x0d\n        Color.mutate2Int(color3);\x0d\n        console.log(color3.toString());\x0d\n\x0d\n        console.log("calling color3.isFloat())");\x0d\n        console.log(color3.isFloat());\x0d\n        */\x0d\n    }\x0d\n\x0d\n\x0d\n    // Apply gamma-encoding (gamma-compression) to the colors.\x0d\n    // https://www.scratchapixel.com/lessons/digital-imaging/digital-images\x0d\n    // http://blog.johnnovak.net/2016/09/21/what-every-coder-should-know-about-gamma/\x0d\n    static applyGamma(color)\x0d\n    {\x0d\n        if (color instanceof Color == false)\x0d\n            throw new Error("Color is not of type Color");\x0d\n\x0d\n        const newRed   = 255 * Math.pow(color.getRed()/255\x2C   Color.GAMMA);\x0d\n        const newGreen = 255 * Math.pow(color.getGreen()/255\x2C Color.GAMMA);\x0d\n        const newBlue  = 255 * Math.pow(color.getBlue()/255\x2C  Color.GAMMA);\x0d\n\x0d\n        return new Color(newRed\x2C newGreen\x2C newBlue);\x0d\n    }\x0d\n\x0d\n\x0d\n    static hexToRgba(hex)\x0d\n    {\x0d\n        if (hex.match(/^#[A-Fa-f0-9]{6}/))\x0d\n        {\x0d\n            return new Array([parseInt(hex.substring(1\x2C 3)\x2C 16)\x2C\x0d\n                              parseInt(hex.substring(3\x2C 5)\x2C 16)\x2C\x0d\n                              parseInt(hex.substring(5\x2C 7)\x2C 16)\x2C\x0d\n                              255]);\x0d\n        }\x0d\n\x0d\n        return new Array([0\x2C 0\x2C 0\x2C 255]);\x0d\n    }\x0d\n\x0d\n\x0d\n    static RgbToHex(color)\x0d\n    {\x0d\n        if (color instanceof Color == false)\x0d\n            throw new Error("Color is not of type Color");\x0d\n\x0d\n        return "#" + Color.intToHex(color[0]) + Color.intToHex(color[1]) + Color.intToHex(color[2]);\x0d\n    }\x0d\n\x0d\n\x0d\n    static intToHex(x)\x0d\n    {\x0d\n        if (x < 10)\x0d\n        {\x0d\n            return "0" + x.toString(16);\x0d\n        }\x0d\n\x0d\n        return x.toString(16);\x0d\n    }\x0d\n}
code-source-info,0x1c9a3022f98,480,0,15548,C10O0C28O0C48O0C219O374C224O15548,,
code-creation,Function,10,425561,0x1c9a3023230,884,<static_initializer> file:///E:/Javascript%20Renderers/Javascript-Renderer-9v2/renderer_10_js/ColorImplementationTiming/Uint8/Fast%20GC/Color.js:63:5,0x1c9a3022b30,~
code-source-info,0x1c9a3023230,480,1919,1957,C0O515C6O543C11O543C20O576C25O576C34O609C39O609C48O644C70O644C79O690C101O690C110O736C132O736C141O782C157O782C166O822C182O822C191O862C207O862C216O906C232O906C241O948C257O948C266O990C282O990C291O1033C307O1033C316O1074C332O1074C341O1115C357O1115C366O1160C383O1160C392O1205C409O1205C418O1250C435O1250C444O1297C463O1297C472O1342C491O1342C500O1387C519O1387C528O1432C550O1432C559O1478C581O1478C590O1524C612O1524C621O1572C640O1572C649O1615C668O1615C677O1658C696O1658C705O1706C724O1706C733O1752C752O1752C761O1798C780O1798C789O1843C811O1843C820O1888C842O1888C851O1933C873O1933C883O1957,,
code-creation,Function,10,425669,0x1c9a3023728,23,<instance_members_initializer> file:///E:/Javascript%20Renderers/Javascript-Renderer-9v2/renderer_10_js/ColorImplementationTiming/Uint8/Fast%20GC/Color.js:15:16,0x1c9a3022af8,~
code-source-info,0x1c9a3023728,480,374,15548,C3O466C12O466C22O15548,,
tick,0x7ff7265062fe,426937,0,0x0,0,0x7ff725995df0,0x7ff6a66d18a0,0x1c9a300695e,0x7ff72653f3f3
code-creation,Script,10,427073,0x1c9a3025008,45, file:///E:/Javascript%20Renderers/Javascript-Renderer-9v2/renderer_10_js/renderer/scene/util/UtilExport.js:1:1,0x1c9a3024b58,~
script-source,481,file:///E:/Javascript%20Renderers/Javascript-Renderer-9v2/renderer_10_js/renderer/scene/util/UtilExport.js,/*\x0d\n * Renderer 10. The MIT License.\x0d\n * Copyright (c) 2022 rlkraft@pnw.edu\x0d\n * See LICENSE for details.\x0d\n*/\x0d\n\x0d\n/*\x0d\nimport CheckModel from "./CheckModel.js";\x0d\nimport MeshMaker from "./MeshMaker.js";\x0d\nimport PointCloud from "./PointCloud.js";\x0d\nimport ModelShading from "./ModelShading.js";\x0d\nimport StringFormat from "./StringFormat.js";\x0d\n\x0d\nexport var CheckModel;\x0d\nexport var MeshMaker;\x0d\nexport var PointCloud;\x0d\nexport var ModelShading;\x0d\nexport var StringFormat;\x0d\n*/\x0d\nexport {check\x2C checkPrimitives} from "./CheckModel.js";\x0d\nexport {setColor\x2C setRandomColor\x2C setRandomVertexColor\x2C setRainbowPrimitiveColors\x2C setRandomPrimitiveColor\x2C randomColor} from "./ModelShading.js";\x0d\nexport {make} from "./PointCloud.js";\x0d\nexport {format} from "./StringFormat.js";
code-source-info,0x1c9a3025008,481,0,751,C10O0C15O0C35O0C44O751,,
code-creation,Function,11,427955,0x7ff6a66dbbc0,7396,URLSearchParams node:internal/url:184:14,0x914790e198,^
code-source-info,0x7ff6a66dbbc0,76,4560,7487,,,
code-creation,Function,11,428018,0x7ff6a66dd940,752,set pathname node:internal/url:937:15,0x914790f260,^
code-source-info,0x7ff6a66dd940,76,26446,26724,,,
code-creation,Function,11,428061,0x7ff6a66ddcc0,156,getPackageType node:internal/modules/esm/resolve:784:24,0x14dbcbb65b8,^
code-source-info,0x7ff6a66ddcc0,455,26952,27045,,,
code-creation,Function,11,428101,0x7ff6a66dde00,532,defaultGetFormatWithoutErrors node:internal/modules/esm/get_format:106:39,0x14dbcbbb420,^
code-source-info,0x7ff6a66dde00,457,3565,3776,,,
code-creation,Function,11,428138,0x7ff6a66de0c0,544,get node:internal/modules/esm/module_map:18:6,0x14dbcbafc28,^
code-source-info,0x7ff6a66de0c0,452,604,748,,,
code-creation,Function,11,428186,0x7ff6a66de380,1424, node:internal/per_context/primordials:521:15,0x1c9a3016178,^
code-source-info,0x7ff6a66de380,12,15969,16344,,,
code-creation,Function,11,429985,0x7ff6a66de9c0,1360,getModuleJob node:internal/modules/esm/loader:410:21,0x14dbcbacc50,^
code-source-info,0x7ff6a66de9c0,451,12019,12962,,,
code-creation,Function,11,430051,0x7ff6a66defc0,904, node:internal/modules/esm/module_job:76:41,0x1c9a300af18,^
code-source-info,0x7ff6a66defc0,453,2386,2642,,,
code-creation,Function,11,430098,0x7ff6a66df400,1072,getOptions node:internal/fs/utils:319:20,0x914791d488,^
code-source-info,0x7ff6a66df400,79,7609,8235,,,
code-creation,Function,11,430134,0x7ff6a66df8c0,276,SideEffectFreeRegExpPrototypeExec node:internal/util:557:43,0x3a89978eac0,^
code-source-info,0x7ff6a66df8c0,21,15882,16056,,,
code-creation,Function,11,430167,0x7ff6a66dfa80,216,splitRoot node:fs:2426:33,0x2dbe93f5788,^
code-source-info,0x7ff6a66dfa80,75,67210,67290,,,
code-creation,Function,11,430200,0x7ff6a66dfc00,320,tryStatSync node:internal/modules/esm/resolve:176:3,0x14dbcbb6978,^
code-source-info,0x7ff6a66dfc00,455,5877,5943,,,
code-creation,Function,11,430234,0x7ff6a66dfdc0,384,toUSVString node:internal/util:64:21,0x3a89978d118,^
code-source-info,0x7ff6a66dfdc0,21,1497,1797,,,
code-creation,Function,11,430398,0x7ff6a66dffc0,4032,resolve node:internal/modules/esm/loader:789:16,0x14dbcbacde0,^
code-source-info,0x7ff6a66dffc0,451,24163,26992,,,
code-creation,Function,11,430446,0x7ff6a66e1000,308, node:internal/per_context/primordials:526:53,0x1c9a3016328,^
code-source-info,0x7ff6a66e1000,12,16257,16322,,,
code-creation,Function,11,430482,0x7ff6a66e11c0,324,validateOutput node:internal/modules/esm/loader:830:28,0x857283ae98,^
code-source-info,0x7ff6a66e11c0,451,25222,25467,,,
code-creation,Function,11,431155,0x7ff6a66e13c0,1260,open node:internal/fs/promises:536:20,0x2a6f0b9bdd8,^
code-source-info,0x7ff6a66e13c0,466,13887,14200,,,
code-creation,Function,11,431241,0x7ff6a66e1940,2036, node:internal/per_context/primordials:495:15,0x1c9a30046f8,^
code-source-info,0x7ff6a66e1940,12,15045,15580,,,
code-creation,Function,11,431289,0x7ff6a66e21c0,1296,ModuleJob node:internal/modules/esm/module_job:54:14,0x14dbcbb0b38,^
code-source-info,0x7ff6a66e21c0,453,1351,3195,,,
code-creation,Function,11,431753,0x7ff6a66e2780,484,checkAborted node:internal/fs/promises:386:22,0x2a6f0b9bbf8,^
code-source-info,0x7ff6a66e2780,466,9210,9312,,,
code-creation,Function,11,431814,0x7ff6a66e2a00,1448,set node:internal/modules/esm/module_map:23:6,0x14dbcbafc78,^
code-source-info,0x7ff6a66e2a00,452,755,1288,,,
code-creation,Function,11,431854,0x7ff6a66e3040,332,primordials.SafePromiseAllReturnVoid node:internal/per_context/primordials:520:40,0x1f81b713590,^
code-source-info,0x7ff6a66e3040,12,15933,16345,,,
code-creation,Function,11,431888,0x7ff6a66e3240,108,SafeIterator node:internal/per_context/primordials:313:16,0x1f81b7120b0,^
code-source-info,0x7ff6a66e3240,12,9071,9133,,,
code-creation,Function,11,431918,0x7ff6a66e3340,40, node:internal/per_context/primordials:319:21,0x1f81b7122f0,^
code-source-info,0x7ff6a66e3340,12,9212,9243,,,
code-creation,Function,11,432040,0x7ff6a66e3400,140,EventEmitter node:events:212:22,0x3a8997b8f98,^
script-source,29,node:events,// Copyright Joyent\x2C Inc. and other Node contributors.\x0d\n//\x0d\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\x0d\n// copy of this software and associated documentation files (the\x0d\n// "Software")\x2C to deal in the Software without restriction\x2C including\x0d\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\x0d\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\x0d\n// persons to whom the Software is furnished to do so\x2C subject to the\x0d\n// following conditions:\x0d\n//\x0d\n// The above copyright notice and this permission notice shall be included\x0d\n// in all copies or substantial portions of the Software.\x0d\n//\x0d\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\x0d\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\x0d\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\x0d\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\x0d\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\x0d\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\x0d\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\x0d\n\x0d\n'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeJoin\x2C\x0d\n  ArrayPrototypeShift\x2C\x0d\n  ArrayPrototypeSlice\x2C\x0d\n  ArrayPrototypeSplice\x2C\x0d\n  ArrayPrototypeUnshift\x2C\x0d\n  Boolean\x2C\x0d\n  Error\x2C\x0d\n  ErrorCaptureStackTrace\x2C\x0d\n  FunctionPrototypeBind\x2C\x0d\n  FunctionPrototypeCall\x2C\x0d\n  NumberIsNaN\x2C\x0d\n  ObjectCreate\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectDefineProperties\x2C\x0d\n  ObjectGetPrototypeOf\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  Promise\x2C\x0d\n  PromiseReject\x2C\x0d\n  PromiseResolve\x2C\x0d\n  ReflectApply\x2C\x0d\n  ReflectOwnKeys\x2C\x0d\n  String\x2C\x0d\n  StringPrototypeSplit\x2C\x0d\n  Symbol\x2C\x0d\n  SymbolFor\x2C\x0d\n  SymbolAsyncIterator\x2C\x0d\n} = primordials;\x0d\nconst kRejection = SymbolFor('nodejs.rejection');\x0d\n\x0d\nconst { kEmptyObject } = require('internal/util');\x0d\n\x0d\nconst {\x0d\n  inspect\x2C\x0d\n  identicalSequenceRange\x2C\x0d\n} = require('internal/util/inspect');\x0d\n\x0d\nlet spliceOne;\x0d\n\x0d\nconst {\x0d\n  AbortError\x2C\x0d\n  kEnhanceStackBeforeInspector\x2C\x0d\n  codes: {\x0d\n    ERR_INVALID_ARG_TYPE\x2C\x0d\n    ERR_INVALID_THIS\x2C\x0d\n    ERR_OUT_OF_RANGE\x2C\x0d\n    ERR_UNHANDLED_ERROR\x0d\n  }\x2C\x0d\n  genericNodeError\x2C\x0d\n} = require('internal/errors');\x0d\n\x0d\nconst {\x0d\n  validateAbortSignal\x2C\x0d\n  validateBoolean\x2C\x0d\n  validateFunction\x2C\x0d\n  validateString\x2C\x0d\n} = require('internal/validators');\x0d\n\x0d\nconst kCapture = Symbol('kCapture');\x0d\nconst kErrorMonitor = Symbol('events.errorMonitor');\x0d\nconst kMaxEventTargetListeners = Symbol('events.maxEventTargetListeners');\x0d\nconst kMaxEventTargetListenersWarned =\x0d\n  Symbol('events.maxEventTargetListenersWarned');\x0d\n\x0d\nlet EventEmitterAsyncResource;\x0d\n// The EventEmitterAsyncResource has to be initialized lazily because event.js\x0d\n// is loaded so early in the bootstrap process\x2C before async_hooks is available.\x0d\n//\x0d\n// This implementation was adapted straight from addaleax's\x0d\n// eventemitter-asyncresource MIT-licensed userland module.\x0d\n// https://github.com/addaleax/eventemitter-asyncresource\x0d\nfunction lazyEventEmitterAsyncResource() {\x0d\n  if (EventEmitterAsyncResource === undefined) {\x0d\n    const {\x0d\n      AsyncResource\x0d\n    } = require('async_hooks');\x0d\n\x0d\n    const kEventEmitter = Symbol('kEventEmitter');\x0d\n    const kAsyncResource = Symbol('kAsyncResource');\x0d\n    class EventEmitterReferencingAsyncResource extends AsyncResource {\x0d\n      /**\x0d\n       * @param {EventEmitter} ee\x0d\n       * @param {string} [type]\x0d\n       * @param {{\x0d\n       *   triggerAsyncId?: number\x2C\x0d\n       *   requireManualDestroy?: boolean\x2C\x0d\n       * }} [options]\x0d\n       */\x0d\n      constructor(ee\x2C type\x2C options) {\x0d\n        super(type\x2C options);\x0d\n        this[kEventEmitter] = ee;\x0d\n      }\x0d\n\x0d\n      /**\x0d\n       * @type {EventEmitter}\x0d\n       */\x0d\n      get eventEmitter() {\x0d\n        if (this[kEventEmitter] === undefined)\x0d\n          throw new ERR_INVALID_THIS('EventEmitterReferencingAsyncResource');\x0d\n        return this[kEventEmitter];\x0d\n      }\x0d\n    }\x0d\n\x0d\n    EventEmitterAsyncResource =\x0d\n      class EventEmitterAsyncResource extends EventEmitter {\x0d\n        /**\x0d\n         * @param {{\x0d\n         *   name?: string\x2C\x0d\n         *   triggerAsyncId?: number\x2C\x0d\n         *   requireManualDestroy?: boolean\x2C\x0d\n         * }} [options]\x0d\n         */\x0d\n        constructor(options = undefined) {\x0d\n          let name;\x0d\n          if (typeof options === 'string') {\x0d\n            name = options;\x0d\n            options = undefined;\x0d\n          } else {\x0d\n            if (new.target === EventEmitterAsyncResource) {\x0d\n              validateString(options?.name\x2C 'options.name');\x0d\n            }\x0d\n            name = options?.name || new.target.name;\x0d\n          }\x0d\n          super(options);\x0d\n\x0d\n          this[kAsyncResource] =\x0d\n            new EventEmitterReferencingAsyncResource(this\x2C name\x2C options);\x0d\n        }\x0d\n\x0d\n        /**\x0d\n         * @param {symbol\x2Cstring} event\x0d\n         * @param  {...any} args\x0d\n         * @returns {boolean}\x0d\n         */\x0d\n        emit(event\x2C ...args) {\x0d\n          if (this[kAsyncResource] === undefined)\x0d\n            throw new ERR_INVALID_THIS('EventEmitterAsyncResource');\x0d\n          const { asyncResource } = this;\x0d\n          ArrayPrototypeUnshift(args\x2C super.emit\x2C this\x2C event);\x0d\n          return ReflectApply(asyncResource.runInAsyncScope\x2C asyncResource\x2C\x0d\n                              args);\x0d\n        }\x0d\n\x0d\n        /**\x0d\n         * @returns {void}\x0d\n         */\x0d\n        emitDestroy() {\x0d\n          if (this[kAsyncResource] === undefined)\x0d\n            throw new ERR_INVALID_THIS('EventEmitterAsyncResource');\x0d\n          this.asyncResource.emitDestroy();\x0d\n        }\x0d\n\x0d\n        /**\x0d\n         * @type {number}\x0d\n         */\x0d\n        get asyncId() {\x0d\n          if (this[kAsyncResource] === undefined)\x0d\n            throw new ERR_INVALID_THIS('EventEmitterAsyncResource');\x0d\n          return this.asyncResource.asyncId();\x0d\n        }\x0d\n\x0d\n        /**\x0d\n         * @type {number}\x0d\n         */\x0d\n        get triggerAsyncId() {\x0d\n          if (this[kAsyncResource] === undefined)\x0d\n            throw new ERR_INVALID_THIS('EventEmitterAsyncResource');\x0d\n          return this.asyncResource.triggerAsyncId();\x0d\n        }\x0d\n\x0d\n        /**\x0d\n         * @type {EventEmitterReferencingAsyncResource}\x0d\n         */\x0d\n        get asyncResource() {\x0d\n          if (this[kAsyncResource] === undefined)\x0d\n            throw new ERR_INVALID_THIS('EventEmitterAsyncResource');\x0d\n          return this[kAsyncResource];\x0d\n        }\x0d\n      };\x0d\n  }\x0d\n  return EventEmitterAsyncResource;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Creates a new `EventEmitter` instance.\x0d\n * @param {{ captureRejections?: boolean; }} [opts]\x0d\n * @constructs {EventEmitter}\x0d\n */\x0d\nfunction EventEmitter(opts) {\x0d\n  EventEmitter.init.call(this\x2C opts);\x0d\n}\x0d\nmodule.exports = EventEmitter;\x0d\nmodule.exports.once = once;\x0d\nmodule.exports.on = on;\x0d\nmodule.exports.getEventListeners = getEventListeners;\x0d\n// Backwards-compat with node 0.10.x\x0d\nEventEmitter.EventEmitter = EventEmitter;\x0d\n\x0d\nEventEmitter.usingDomains = false;\x0d\n\x0d\nEventEmitter.captureRejectionSymbol = kRejection;\x0d\nObjectDefineProperty(EventEmitter\x2C 'captureRejections'\x2C {\x0d\n  __proto__: null\x2C\x0d\n  get() {\x0d\n    return EventEmitter.prototype[kCapture];\x0d\n  }\x2C\x0d\n  set(value) {\x0d\n    validateBoolean(value\x2C 'EventEmitter.captureRejections');\x0d\n\x0d\n    EventEmitter.prototype[kCapture] = value;\x0d\n  }\x2C\x0d\n  enumerable: true\x0d\n});\x0d\n\x0d\nObjectDefineProperty(EventEmitter\x2C 'EventEmitterAsyncResource'\x2C {\x0d\n  __proto__: null\x2C\x0d\n  enumerable: true\x2C\x0d\n  get: lazyEventEmitterAsyncResource\x2C\x0d\n  set: undefined\x2C\x0d\n  configurable: true\x2C\x0d\n});\x0d\n\x0d\nEventEmitter.errorMonitor = kErrorMonitor;\x0d\n\x0d\n// The default for captureRejections is false\x0d\nObjectDefineProperty(EventEmitter.prototype\x2C kCapture\x2C {\x0d\n  __proto__: null\x2C\x0d\n  value: false\x2C\x0d\n  writable: true\x2C\x0d\n  enumerable: false\x0d\n});\x0d\n\x0d\nEventEmitter.prototype._events = undefined;\x0d\nEventEmitter.prototype._eventsCount = 0;\x0d\nEventEmitter.prototype._maxListeners = undefined;\x0d\n\x0d\n// By default EventEmitters will print a warning if more than 10 listeners are\x0d\n// added to it. This is a useful default which helps finding memory leaks.\x0d\nlet defaultMaxListeners = 10;\x0d\nlet isEventTarget;\x0d\n\x0d\nfunction checkListener(listener) {\x0d\n  validateFunction(listener\x2C 'listener');\x0d\n}\x0d\n\x0d\nObjectDefineProperty(EventEmitter\x2C 'defaultMaxListeners'\x2C {\x0d\n  __proto__: null\x2C\x0d\n  enumerable: true\x2C\x0d\n  get: function() {\x0d\n    return defaultMaxListeners;\x0d\n  }\x2C\x0d\n  set: function(arg) {\x0d\n    if (typeof arg !== 'number' || arg < 0 || NumberIsNaN(arg)) {\x0d\n      throw new ERR_OUT_OF_RANGE('defaultMaxListeners'\x2C\x0d\n                                 'a non-negative number'\x2C\x0d\n                                 arg);\x0d\n    }\x0d\n    defaultMaxListeners = arg;\x0d\n  }\x0d\n});\x0d\n\x0d\nObjectDefineProperties(EventEmitter\x2C {\x0d\n  kMaxEventTargetListeners: {\x0d\n    __proto__: null\x2C\x0d\n    value: kMaxEventTargetListeners\x2C\x0d\n    enumerable: false\x2C\x0d\n    configurable: false\x2C\x0d\n    writable: false\x2C\x0d\n  }\x2C\x0d\n  kMaxEventTargetListenersWarned: {\x0d\n    __proto__: null\x2C\x0d\n    value: kMaxEventTargetListenersWarned\x2C\x0d\n    enumerable: false\x2C\x0d\n    configurable: false\x2C\x0d\n    writable: false\x2C\x0d\n  }\x0d\n});\x0d\n\x0d\n/**\x0d\n * Sets the max listeners.\x0d\n * @param {number} n\x0d\n * @param {EventTarget[] | EventEmitter[]} [eventTargets]\x0d\n * @returns {void}\x0d\n */\x0d\nEventEmitter.setMaxListeners =\x0d\n  function(n = defaultMaxListeners\x2C ...eventTargets) {\x0d\n    if (typeof n !== 'number' || n < 0 || NumberIsNaN(n))\x0d\n      throw new ERR_OUT_OF_RANGE('n'\x2C 'a non-negative number'\x2C n);\x0d\n    if (eventTargets.length === 0) {\x0d\n      defaultMaxListeners = n;\x0d\n    } else {\x0d\n      if (isEventTarget === undefined)\x0d\n        isEventTarget = require('internal/event_target').isEventTarget;\x0d\n\x0d\n      for (let i = 0; i < eventTargets.length; i++) {\x0d\n        const target = eventTargets[i];\x0d\n        if (isEventTarget(target)) {\x0d\n          target[kMaxEventTargetListeners] = n;\x0d\n          target[kMaxEventTargetListenersWarned] = false;\x0d\n        } else if (typeof target.setMaxListeners === 'function') {\x0d\n          target.setMaxListeners(n);\x0d\n        } else {\x0d\n          throw new ERR_INVALID_ARG_TYPE(\x0d\n            'eventTargets'\x2C\x0d\n            ['EventEmitter'\x2C 'EventTarget']\x2C\x0d\n            target);\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n  };\x0d\n\x0d\n// If you're updating this function definition\x2C please also update any\x0d\n// re-definitions\x2C such as the one in the Domain module (lib/domain.js).\x0d\nEventEmitter.init = function(opts) {\x0d\n\x0d\n  if (this._events === undefined ||\x0d\n      this._events === ObjectGetPrototypeOf(this)._events) {\x0d\n    this._events = ObjectCreate(null);\x0d\n    this._eventsCount = 0;\x0d\n  }\x0d\n\x0d\n  this._maxListeners = this._maxListeners || undefined;\x0d\n\x0d\n\x0d\n  if (opts?.captureRejections) {\x0d\n    validateBoolean(opts.captureRejections\x2C 'options.captureRejections');\x0d\n    this[kCapture] = Boolean(opts.captureRejections);\x0d\n  } else {\x0d\n    // Assigning the kCapture property directly saves an expensive\x0d\n    // prototype lookup in a very sensitive hot path.\x0d\n    this[kCapture] = EventEmitter.prototype[kCapture];\x0d\n  }\x0d\n};\x0d\n\x0d\nfunction addCatch(that\x2C promise\x2C type\x2C args) {\x0d\n  if (!that[kCapture]) {\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  // Handle Promises/A+ spec\x2C then could be a getter\x0d\n  // that throws on second use.\x0d\n  try {\x0d\n    const then = promise.then;\x0d\n\x0d\n    if (typeof then === 'function') {\x0d\n      then.call(promise\x2C undefined\x2C function(err) {\x0d\n        // The callback is called with nextTick to avoid a follow-up\x0d\n        // rejection from this promise.\x0d\n        process.nextTick(emitUnhandledRejectionOrErr\x2C that\x2C err\x2C type\x2C args);\x0d\n      });\x0d\n    }\x0d\n  } catch (err) {\x0d\n    that.emit('error'\x2C err);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction emitUnhandledRejectionOrErr(ee\x2C err\x2C type\x2C args) {\x0d\n  if (typeof ee[kRejection] === 'function') {\x0d\n    ee[kRejection](err\x2C type\x2C ...args);\x0d\n  } else {\x0d\n    // We have to disable the capture rejections mechanism\x2C otherwise\x0d\n    // we might end up in an infinite loop.\x0d\n    const prev = ee[kCapture];\x0d\n\x0d\n    // If the error handler throws\x2C it is not catchable and it\x0d\n    // will end up in 'uncaughtException'. We restore the previous\x0d\n    // value of kCapture in case the uncaughtException is present\x0d\n    // and the exception is handled.\x0d\n    try {\x0d\n      ee[kCapture] = false;\x0d\n      ee.emit('error'\x2C err);\x0d\n    } finally {\x0d\n      ee[kCapture] = prev;\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\n/**\x0d\n * Increases the max listeners of the event emitter.\x0d\n * @param {number} n\x0d\n * @returns {EventEmitter}\x0d\n */\x0d\nEventEmitter.prototype.setMaxListeners = function setMaxListeners(n) {\x0d\n  if (typeof n !== 'number' || n < 0 || NumberIsNaN(n)) {\x0d\n    throw new ERR_OUT_OF_RANGE('n'\x2C 'a non-negative number'\x2C n);\x0d\n  }\x0d\n  this._maxListeners = n;\x0d\n  return this;\x0d\n};\x0d\n\x0d\nfunction _getMaxListeners(that) {\x0d\n  if (that._maxListeners === undefined)\x0d\n    return EventEmitter.defaultMaxListeners;\x0d\n  return that._maxListeners;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Returns the current max listener value for the event emitter.\x0d\n * @returns {number}\x0d\n */\x0d\nEventEmitter.prototype.getMaxListeners = function getMaxListeners() {\x0d\n  return _getMaxListeners(this);\x0d\n};\x0d\n\x0d\nfunction enhanceStackTrace(err\x2C own) {\x0d\n  let ctorInfo = '';\x0d\n  try {\x0d\n    const { name } = this.constructor;\x0d\n    if (name !== 'EventEmitter')\x0d\n      ctorInfo = ` on ${name} instance`;\x0d\n  } catch {\x0d\n    // Continue regardless of error.\x0d\n  }\x0d\n  const sep = `\\nEmitted 'error' event${ctorInfo} at:\\n`;\x0d\n\x0d\n  const errStack = ArrayPrototypeSlice(\x0d\n    StringPrototypeSplit(err.stack\x2C '\\n')\x2C 1);\x0d\n  const ownStack = ArrayPrototypeSlice(\x0d\n    StringPrototypeSplit(own.stack\x2C '\\n')\x2C 1);\x0d\n\x0d\n  const { len\x2C offset } = identicalSequenceRange(ownStack\x2C errStack);\x0d\n  if (len > 0) {\x0d\n    ArrayPrototypeSplice(ownStack\x2C offset + 1\x2C len - 2\x2C\x0d\n                         '    [... lines matching original stack trace ...]');\x0d\n  }\x0d\n\x0d\n  return err.stack + sep + ArrayPrototypeJoin(ownStack\x2C '\\n');\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously calls each of the listeners registered\x0d\n * for the event.\x0d\n * @param {string | symbol} type\x0d\n * @param {...any} [args]\x0d\n * @returns {boolean}\x0d\n */\x0d\nEventEmitter.prototype.emit = function emit(type\x2C ...args) {\x0d\n  let doError = (type === 'error');\x0d\n\x0d\n  const events = this._events;\x0d\n  if (events !== undefined) {\x0d\n    if (doError && events[kErrorMonitor] !== undefined)\x0d\n      this.emit(kErrorMonitor\x2C ...args);\x0d\n    doError = (doError && events.error === undefined);\x0d\n  } else if (!doError)\x0d\n    return false;\x0d\n\x0d\n  // If there is no 'error' event listener then throw.\x0d\n  if (doError) {\x0d\n    let er;\x0d\n    if (args.length > 0)\x0d\n      er = args[0];\x0d\n    if (er instanceof Error) {\x0d\n      try {\x0d\n        const capture = {};\x0d\n        ErrorCaptureStackTrace(capture\x2C EventEmitter.prototype.emit);\x0d\n        ObjectDefineProperty(er\x2C kEnhanceStackBeforeInspector\x2C {\x0d\n          __proto__: null\x2C\x0d\n          value: FunctionPrototypeBind(enhanceStackTrace\x2C this\x2C er\x2C capture)\x2C\x0d\n          configurable: true\x0d\n        });\x0d\n      } catch {\x0d\n        // Continue regardless of error.\x0d\n      }\x0d\n\x0d\n      // Note: The comments on the `throw` lines are intentional\x2C they show\x0d\n      // up in Node's output if this results in an unhandled exception.\x0d\n      throw er; // Unhandled 'error' event\x0d\n    }\x0d\n\x0d\n    let stringifiedEr;\x0d\n    try {\x0d\n      stringifiedEr = inspect(er);\x0d\n    } catch {\x0d\n      stringifiedEr = er;\x0d\n    }\x0d\n\x0d\n    // At least give some kind of context to the user\x0d\n    const err = new ERR_UNHANDLED_ERROR(stringifiedEr);\x0d\n    err.context = er;\x0d\n    throw err; // Unhandled 'error' event\x0d\n  }\x0d\n\x0d\n  const handler = events[type];\x0d\n\x0d\n  if (handler === undefined)\x0d\n    return false;\x0d\n\x0d\n  if (typeof handler === 'function') {\x0d\n    const result = handler.apply(this\x2C args);\x0d\n\x0d\n    // We check if result is undefined first because that\x0d\n    // is the most common case so we do not pay any perf\x0d\n    // penalty\x0d\n    if (result !== undefined && result !== null) {\x0d\n      addCatch(this\x2C result\x2C type\x2C args);\x0d\n    }\x0d\n  } else {\x0d\n    const len = handler.length;\x0d\n    const listeners = arrayClone(handler);\x0d\n    for (let i = 0; i < len; ++i) {\x0d\n      const result = listeners[i].apply(this\x2C args);\x0d\n\x0d\n      // We check if result is undefined first because that\x0d\n      // is the most common case so we do not pay any perf\x0d\n      // penalty.\x0d\n      // This code is duplicated because extracting it away\x0d\n      // would make it non-inlineable.\x0d\n      if (result !== undefined && result !== null) {\x0d\n        addCatch(this\x2C result\x2C type\x2C args);\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return true;\x0d\n};\x0d\n\x0d\nfunction _addListener(target\x2C type\x2C listener\x2C prepend) {\x0d\n  let m;\x0d\n  let events;\x0d\n  let existing;\x0d\n\x0d\n  checkListener(listener);\x0d\n\x0d\n  events = target._events;\x0d\n  if (events === undefined) {\x0d\n    events = target._events = ObjectCreate(null);\x0d\n    target._eventsCount = 0;\x0d\n  } else {\x0d\n    // To avoid recursion in the case that type === "newListener"! Before\x0d\n    // adding it to the listeners\x2C first emit "newListener".\x0d\n    if (events.newListener !== undefined) {\x0d\n      target.emit('newListener'\x2C type\x2C\x0d\n                  listener.listener ?? listener);\x0d\n\x0d\n      // Re-assign `events` because a newListener handler could have caused the\x0d\n      // this._events to be assigned to a new object\x0d\n      events = target._events;\x0d\n    }\x0d\n    existing = events[type];\x0d\n  }\x0d\n\x0d\n  if (existing === undefined) {\x0d\n    // Optimize the case of one listener. Don't need the extra array object.\x0d\n    events[type] = listener;\x0d\n    ++target._eventsCount;\x0d\n  } else {\x0d\n    if (typeof existing === 'function') {\x0d\n      // Adding the second element\x2C need to change to array.\x0d\n      existing = events[type] =\x0d\n        prepend ? [listener\x2C existing] : [existing\x2C listener];\x0d\n      // If we've already got an array\x2C just append.\x0d\n    } else if (prepend) {\x0d\n      existing.unshift(listener);\x0d\n    } else {\x0d\n      existing.push(listener);\x0d\n    }\x0d\n\x0d\n    // Check for listener leak\x0d\n    m = _getMaxListeners(target);\x0d\n    if (m > 0 && existing.length > m && !existing.warned) {\x0d\n      existing.warned = true;\x0d\n      // No error code for this since it is a Warning\x0d\n      const w = genericNodeError(\x0d\n        `Possible EventEmitter memory leak detected. ${existing.length} ${String(type)} listeners ` +\x0d\n        `added to ${inspect(target\x2C { depth: -1 })}. Use emitter.setMaxListeners() to increase limit`\x2C\x0d\n        { name: 'MaxListenersExceededWarning'\x2C emitter: target\x2C type: type\x2C count: existing.length });\x0d\n      process.emitWarning(w);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return target;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Adds a listener to the event emitter.\x0d\n * @param {string | symbol} type\x0d\n * @param {Function} listener\x0d\n * @returns {EventEmitter}\x0d\n */\x0d\nEventEmitter.prototype.addListener = function addListener(type\x2C listener) {\x0d\n  return _addListener(this\x2C type\x2C listener\x2C false);\x0d\n};\x0d\n\x0d\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\x0d\n\x0d\n/**\x0d\n * Adds the `listener` function to the beginning of\x0d\n * the listeners array.\x0d\n * @param {string | symbol} type\x0d\n * @param {Function} listener\x0d\n * @returns {EventEmitter}\x0d\n */\x0d\nEventEmitter.prototype.prependListener =\x0d\n    function prependListener(type\x2C listener) {\x0d\n      return _addListener(this\x2C type\x2C listener\x2C true);\x0d\n    };\x0d\n\x0d\nfunction onceWrapper() {\x0d\n  if (!this.fired) {\x0d\n    this.target.removeListener(this.type\x2C this.wrapFn);\x0d\n    this.fired = true;\x0d\n    if (arguments.length === 0)\x0d\n      return this.listener.call(this.target);\x0d\n    return this.listener.apply(this.target\x2C arguments);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction _onceWrap(target\x2C type\x2C listener) {\x0d\n  const state = { fired: false\x2C wrapFn: undefined\x2C target\x2C type\x2C listener };\x0d\n  const wrapped = onceWrapper.bind(state);\x0d\n  wrapped.listener = listener;\x0d\n  state.wrapFn = wrapped;\x0d\n  return wrapped;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Adds a one-time `listener` function to the event emitter.\x0d\n * @param {string | symbol} type\x0d\n * @param {Function} listener\x0d\n * @returns {EventEmitter}\x0d\n */\x0d\nEventEmitter.prototype.once = function once(type\x2C listener) {\x0d\n  checkListener(listener);\x0d\n\x0d\n  this.on(type\x2C _onceWrap(this\x2C type\x2C listener));\x0d\n  return this;\x0d\n};\x0d\n\x0d\n/**\x0d\n * Adds a one-time `listener` function to the beginning of\x0d\n * the listeners array.\x0d\n * @param {string | symbol} type\x0d\n * @param {Function} listener\x0d\n * @returns {EventEmitter}\x0d\n */\x0d\nEventEmitter.prototype.prependOnceListener =\x0d\n    function prependOnceListener(type\x2C listener) {\x0d\n      checkListener(listener);\x0d\n\x0d\n      this.prependListener(type\x2C _onceWrap(this\x2C type\x2C listener));\x0d\n      return this;\x0d\n    };\x0d\n\x0d\n/**\x0d\n * Removes the specified `listener` from the listeners array.\x0d\n * @param {string | symbol} type\x0d\n * @param {Function} listener\x0d\n * @returns {EventEmitter}\x0d\n */\x0d\nEventEmitter.prototype.removeListener =\x0d\n    function removeListener(type\x2C listener) {\x0d\n      checkListener(listener);\x0d\n\x0d\n      const events = this._events;\x0d\n      if (events === undefined)\x0d\n        return this;\x0d\n\x0d\n      const list = events[type];\x0d\n      if (list === undefined)\x0d\n        return this;\x0d\n\x0d\n      if (list === listener || list.listener === listener) {\x0d\n        if (--this._eventsCount === 0)\x0d\n          this._events = ObjectCreate(null);\x0d\n        else {\x0d\n          delete events[type];\x0d\n          if (events.removeListener)\x0d\n            this.emit('removeListener'\x2C type\x2C list.listener || listener);\x0d\n        }\x0d\n      } else if (typeof list !== 'function') {\x0d\n        let position = -1;\x0d\n\x0d\n        for (let i = list.length - 1; i >= 0; i--) {\x0d\n          if (list[i] === listener || list[i].listener === listener) {\x0d\n            position = i;\x0d\n            break;\x0d\n          }\x0d\n        }\x0d\n\x0d\n        if (position < 0)\x0d\n          return this;\x0d\n\x0d\n        if (position === 0)\x0d\n          list.shift();\x0d\n        else {\x0d\n          if (spliceOne === undefined)\x0d\n            spliceOne = require('internal/util').spliceOne;\x0d\n          spliceOne(list\x2C position);\x0d\n        }\x0d\n\x0d\n        if (list.length === 1)\x0d\n          events[type] = list[0];\x0d\n\x0d\n        if (events.removeListener !== undefined)\x0d\n          this.emit('removeListener'\x2C type\x2C listener);\x0d\n      }\x0d\n\x0d\n      return this;\x0d\n    };\x0d\n\x0d\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\x0d\n\x0d\n/**\x0d\n * Removes all listeners from the event emitter. (Only\x0d\n * removes listeners for a specific event name if specified\x0d\n * as `type`).\x0d\n * @param {string | symbol} [type]\x0d\n * @returns {EventEmitter}\x0d\n */\x0d\nEventEmitter.prototype.removeAllListeners =\x0d\n    function removeAllListeners(type) {\x0d\n      const events = this._events;\x0d\n      if (events === undefined)\x0d\n        return this;\x0d\n\x0d\n      // Not listening for removeListener\x2C no need to emit\x0d\n      if (events.removeListener === undefined) {\x0d\n        if (arguments.length === 0) {\x0d\n          this._events = ObjectCreate(null);\x0d\n          this._eventsCount = 0;\x0d\n        } else if (events[type] !== undefined) {\x0d\n          if (--this._eventsCount === 0)\x0d\n            this._events = ObjectCreate(null);\x0d\n          else\x0d\n            delete events[type];\x0d\n        }\x0d\n        return this;\x0d\n      }\x0d\n\x0d\n      // Emit removeListener for all listeners on all events\x0d\n      if (arguments.length === 0) {\x0d\n        for (const key of ReflectOwnKeys(events)) {\x0d\n          if (key === 'removeListener') continue;\x0d\n          this.removeAllListeners(key);\x0d\n        }\x0d\n        this.removeAllListeners('removeListener');\x0d\n        this._events = ObjectCreate(null);\x0d\n        this._eventsCount = 0;\x0d\n        return this;\x0d\n      }\x0d\n\x0d\n      const listeners = events[type];\x0d\n\x0d\n      if (typeof listeners === 'function') {\x0d\n        this.removeListener(type\x2C listeners);\x0d\n      } else if (listeners !== undefined) {\x0d\n        // LIFO order\x0d\n        for (let i = listeners.length - 1; i >= 0; i--) {\x0d\n          this.removeListener(type\x2C listeners[i]);\x0d\n        }\x0d\n      }\x0d\n\x0d\n      return this;\x0d\n    };\x0d\n\x0d\nfunction _listeners(target\x2C type\x2C unwrap) {\x0d\n  const events = target._events;\x0d\n\x0d\n  if (events === undefined)\x0d\n    return [];\x0d\n\x0d\n  const evlistener = events[type];\x0d\n  if (evlistener === undefined)\x0d\n    return [];\x0d\n\x0d\n  if (typeof evlistener === 'function')\x0d\n    return unwrap ? [evlistener.listener || evlistener] : [evlistener];\x0d\n\x0d\n  return unwrap ?\x0d\n    unwrapListeners(evlistener) : arrayClone(evlistener);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Returns a copy of the array of listeners for the event name\x0d\n * specified as `type`.\x0d\n * @param {string | symbol} type\x0d\n * @returns {Function[]}\x0d\n */\x0d\nEventEmitter.prototype.listeners = function listeners(type) {\x0d\n  return _listeners(this\x2C type\x2C true);\x0d\n};\x0d\n\x0d\n/**\x0d\n * Returns a copy of the array of listeners and wrappers for\x0d\n * the event name specified as `type`.\x0d\n * @param {string | symbol} type\x0d\n * @returns {Function[]}\x0d\n */\x0d\nEventEmitter.prototype.rawListeners = function rawListeners(type) {\x0d\n  return _listeners(this\x2C type\x2C false);\x0d\n};\x0d\n\x0d\n/**\x0d\n * Returns the number of listeners listening to the event name\x0d\n * specified as `type`.\x0d\n * @deprecated since v3.2.0\x0d\n * @param {EventEmitter} emitter\x0d\n * @param {string | symbol} type\x0d\n * @returns {number}\x0d\n */\x0d\nEventEmitter.listenerCount = function(emitter\x2C type) {\x0d\n  if (typeof emitter.listenerCount === 'function') {\x0d\n    return emitter.listenerCount(type);\x0d\n  }\x0d\n  return FunctionPrototypeCall(listenerCount\x2C emitter\x2C type);\x0d\n};\x0d\n\x0d\nEventEmitter.prototype.listenerCount = listenerCount;\x0d\n\x0d\n/**\x0d\n * Returns the number of listeners listening to event name\x0d\n * specified as `type`.\x0d\n * @param {string | symbol} type\x0d\n * @returns {number}\x0d\n */\x0d\nfunction listenerCount(type) {\x0d\n  const events = this._events;\x0d\n\x0d\n  if (events !== undefined) {\x0d\n    const evlistener = events[type];\x0d\n\x0d\n    if (typeof evlistener === 'function') {\x0d\n      return 1;\x0d\n    } else if (evlistener !== undefined) {\x0d\n      return evlistener.length;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return 0;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Returns an array listing the events for which\x0d\n * the emitter has registered listeners.\x0d\n * @returns {any[]}\x0d\n */\x0d\nEventEmitter.prototype.eventNames = function eventNames() {\x0d\n  return this._eventsCount > 0 ? ReflectOwnKeys(this._events) : [];\x0d\n};\x0d\n\x0d\nfunction arrayClone(arr) {\x0d\n  // At least since V8 8.3\x2C this implementation is faster than the previous\x0d\n  // which always used a simple for-loop\x0d\n  switch (arr.length) {\x0d\n    case 2: return [arr[0]\x2C arr[1]];\x0d\n    case 3: return [arr[0]\x2C arr[1]\x2C arr[2]];\x0d\n    case 4: return [arr[0]\x2C arr[1]\x2C arr[2]\x2C arr[3]];\x0d\n    case 5: return [arr[0]\x2C arr[1]\x2C arr[2]\x2C arr[3]\x2C arr[4]];\x0d\n    case 6: return [arr[0]\x2C arr[1]\x2C arr[2]\x2C arr[3]\x2C arr[4]\x2C arr[5]];\x0d\n  }\x0d\n  return ArrayPrototypeSlice(arr);\x0d\n}\x0d\n\x0d\nfunction unwrapListeners(arr) {\x0d\n  const ret = arrayClone(arr);\x0d\n  for (let i = 0; i < ret.length; ++i) {\x0d\n    const orig = ret[i].listener;\x0d\n    if (typeof orig === 'function')\x0d\n      ret[i] = orig;\x0d\n  }\x0d\n  return ret;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Returns a copy of the array of listeners for the event name\x0d\n * specified as `type`.\x0d\n * @param {EventEmitter | EventTarget} emitterOrTarget\x0d\n * @param {string | symbol} type\x0d\n * @returns {Function[]}\x0d\n */\x0d\nfunction getEventListeners(emitterOrTarget\x2C type) {\x0d\n  // First check if EventEmitter\x0d\n  if (typeof emitterOrTarget.listeners === 'function') {\x0d\n    return emitterOrTarget.listeners(type);\x0d\n  }\x0d\n  // Require event target lazily to avoid always loading it\x0d\n  const { isEventTarget\x2C kEvents } = require('internal/event_target');\x0d\n  if (isEventTarget(emitterOrTarget)) {\x0d\n    const root = emitterOrTarget[kEvents].get(type);\x0d\n    const listeners = [];\x0d\n    let handler = root?.next;\x0d\n    while (handler?.listener !== undefined) {\x0d\n      const listener = handler.listener?.deref ?\x0d\n        handler.listener.deref() : handler.listener;\x0d\n      listeners.push(listener);\x0d\n      handler = handler.next;\x0d\n    }\x0d\n    return listeners;\x0d\n  }\x0d\n  throw new ERR_INVALID_ARG_TYPE('emitter'\x2C\x0d\n                                 ['EventEmitter'\x2C 'EventTarget']\x2C\x0d\n                                 emitterOrTarget);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Creates a `Promise` that is fulfilled when the emitter\x0d\n * emits the given event.\x0d\n * @param {EventEmitter} emitter\x0d\n * @param {string} name\x0d\n * @param {{ signal: AbortSignal; }} [options]\x0d\n * @returns {Promise}\x0d\n */\x0d\nasync function once(emitter\x2C name\x2C options = kEmptyObject) {\x0d\n  const signal = options?.signal;\x0d\n  validateAbortSignal(signal\x2C 'options.signal');\x0d\n  if (signal?.aborted)\x0d\n    throw new AbortError(undefined\x2C { cause: signal?.reason });\x0d\n  return new Promise((resolve\x2C reject) => {\x0d\n    const errorListener = (err) => {\x0d\n      emitter.removeListener(name\x2C resolver);\x0d\n      if (signal != null) {\x0d\n        eventTargetAgnosticRemoveListener(signal\x2C 'abort'\x2C abortListener);\x0d\n      }\x0d\n      reject(err);\x0d\n    };\x0d\n    const resolver = (...args) => {\x0d\n      if (typeof emitter.removeListener === 'function') {\x0d\n        emitter.removeListener('error'\x2C errorListener);\x0d\n      }\x0d\n      if (signal != null) {\x0d\n        eventTargetAgnosticRemoveListener(signal\x2C 'abort'\x2C abortListener);\x0d\n      }\x0d\n      resolve(args);\x0d\n    };\x0d\n    eventTargetAgnosticAddListener(emitter\x2C name\x2C resolver\x2C { once: true });\x0d\n    if (name !== 'error' && typeof emitter.once === 'function') {\x0d\n      // EventTarget does not have `error` event semantics like Node\x0d\n      // EventEmitters\x2C we listen to `error` events only on EventEmitters.\x0d\n      emitter.once('error'\x2C errorListener);\x0d\n    }\x0d\n    function abortListener() {\x0d\n      eventTargetAgnosticRemoveListener(emitter\x2C name\x2C resolver);\x0d\n      eventTargetAgnosticRemoveListener(emitter\x2C 'error'\x2C errorListener);\x0d\n      reject(new AbortError(undefined\x2C { cause: signal?.reason }));\x0d\n    }\x0d\n    if (signal != null) {\x0d\n      eventTargetAgnosticAddListener(\x0d\n        signal\x2C 'abort'\x2C abortListener\x2C { once: true });\x0d\n    }\x0d\n  });\x0d\n}\x0d\n\x0d\nconst AsyncIteratorPrototype = ObjectGetPrototypeOf(\x0d\n  ObjectGetPrototypeOf(async function* () {}).prototype);\x0d\n\x0d\nfunction createIterResult(value\x2C done) {\x0d\n  return { value\x2C done };\x0d\n}\x0d\n\x0d\nfunction eventTargetAgnosticRemoveListener(emitter\x2C name\x2C listener\x2C flags) {\x0d\n  if (typeof emitter.removeListener === 'function') {\x0d\n    emitter.removeListener(name\x2C listener);\x0d\n  } else if (typeof emitter.removeEventListener === 'function') {\x0d\n    emitter.removeEventListener(name\x2C listener\x2C flags);\x0d\n  } else {\x0d\n    throw new ERR_INVALID_ARG_TYPE('emitter'\x2C 'EventEmitter'\x2C emitter);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction eventTargetAgnosticAddListener(emitter\x2C name\x2C listener\x2C flags) {\x0d\n  if (typeof emitter.on === 'function') {\x0d\n    if (flags?.once) {\x0d\n      emitter.once(name\x2C listener);\x0d\n    } else {\x0d\n      emitter.on(name\x2C listener);\x0d\n    }\x0d\n  } else if (typeof emitter.addEventListener === 'function') {\x0d\n    emitter.addEventListener(name\x2C listener\x2C flags);\x0d\n  } else {\x0d\n    throw new ERR_INVALID_ARG_TYPE('emitter'\x2C 'EventEmitter'\x2C emitter);\x0d\n  }\x0d\n}\x0d\n\x0d\n/**\x0d\n * Returns an `AsyncIterator` that iterates `event` events.\x0d\n * @param {EventEmitter} emitter\x0d\n * @param {string | symbol} event\x0d\n * @param {{ signal: AbortSignal; }} [options]\x0d\n * @returns {AsyncIterator}\x0d\n */\x0d\nfunction on(emitter\x2C event\x2C options) {\x0d\n  const signal = options?.signal;\x0d\n  validateAbortSignal(signal\x2C 'options.signal');\x0d\n  if (signal?.aborted)\x0d\n    throw new AbortError(undefined\x2C { cause: signal?.reason });\x0d\n\x0d\n  const unconsumedEvents = [];\x0d\n  const unconsumedPromises = [];\x0d\n  let error = null;\x0d\n  let finished = false;\x0d\n\x0d\n  const iterator = ObjectSetPrototypeOf({\x0d\n    next() {\x0d\n      // First\x2C we consume all unread events\x0d\n      const value = unconsumedEvents.shift();\x0d\n      if (value) {\x0d\n        return PromiseResolve(createIterResult(value\x2C false));\x0d\n      }\x0d\n\x0d\n      // Then we error\x2C if an error happened\x0d\n      // This happens one time if at all\x2C because after 'error'\x0d\n      // we stop listening\x0d\n      if (error) {\x0d\n        const p = PromiseReject(error);\x0d\n        // Only the first element errors\x0d\n        error = null;\x0d\n        return p;\x0d\n      }\x0d\n\x0d\n      // If the iterator is finished\x2C resolve to done\x0d\n      if (finished) {\x0d\n        return PromiseResolve(createIterResult(undefined\x2C true));\x0d\n      }\x0d\n\x0d\n      // Wait until an event happens\x0d\n      return new Promise(function(resolve\x2C reject) {\x0d\n        unconsumedPromises.push({ resolve\x2C reject });\x0d\n      });\x0d\n    }\x2C\x0d\n\x0d\n    return() {\x0d\n      eventTargetAgnosticRemoveListener(emitter\x2C event\x2C eventHandler);\x0d\n      eventTargetAgnosticRemoveListener(emitter\x2C 'error'\x2C errorHandler);\x0d\n\x0d\n      if (signal) {\x0d\n        eventTargetAgnosticRemoveListener(\x0d\n          signal\x2C\x0d\n          'abort'\x2C\x0d\n          abortListener\x2C\x0d\n          { once: true });\x0d\n      }\x0d\n\x0d\n      finished = true;\x0d\n\x0d\n      for (const promise of unconsumedPromises) {\x0d\n        promise.resolve(createIterResult(undefined\x2C true));\x0d\n      }\x0d\n\x0d\n      return PromiseResolve(createIterResult(undefined\x2C true));\x0d\n    }\x2C\x0d\n\x0d\n    throw(err) {\x0d\n      if (!err || !(err instanceof Error)) {\x0d\n        throw new ERR_INVALID_ARG_TYPE('EventEmitter.AsyncIterator'\x2C\x0d\n                                       'Error'\x2C err);\x0d\n      }\x0d\n      error = err;\x0d\n      eventTargetAgnosticRemoveListener(emitter\x2C event\x2C eventHandler);\x0d\n      eventTargetAgnosticRemoveListener(emitter\x2C 'error'\x2C errorHandler);\x0d\n    }\x2C\x0d\n\x0d\n    [SymbolAsyncIterator]() {\x0d\n      return this;\x0d\n    }\x0d\n  }\x2C AsyncIteratorPrototype);\x0d\n\x0d\n  eventTargetAgnosticAddListener(emitter\x2C event\x2C eventHandler);\x0d\n  if (event !== 'error' && typeof emitter.on === 'function') {\x0d\n    emitter.on('error'\x2C errorHandler);\x0d\n  }\x0d\n\x0d\n  if (signal) {\x0d\n    eventTargetAgnosticAddListener(\x0d\n      signal\x2C\x0d\n      'abort'\x2C\x0d\n      abortListener\x2C\x0d\n      { once: true });\x0d\n  }\x0d\n\x0d\n  function abortListener() {\x0d\n    errorHandler(new AbortError(undefined\x2C { cause: signal?.reason }));\x0d\n  }\x0d\n\x0d\n  function eventHandler(...args) {\x0d\n    const promise = ArrayPrototypeShift(unconsumedPromises);\x0d\n    if (promise) {\x0d\n      promise.resolve(createIterResult(args\x2C false));\x0d\n    } else {\x0d\n      unconsumedEvents.push(args);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  function errorHandler(err) {\x0d\n    finished = true;\x0d\n\x0d\n    const toError = ArrayPrototypeShift(unconsumedPromises);\x0d\n\x0d\n    if (toError) {\x0d\n      toError.reject(err);\x0d\n    } else {\x0d\n      // The next time we call next()\x0d\n      error = err;\x0d\n    }\x0d\n\x0d\n    iterator.return();\x0d\n  }\x0d\n  return iterator;\x0d\n}\x0d\n
code-source-info,0x7ff6a66e3400,29,6524,6574,,,
code-creation,Function,11,434236,0x7ff6a66e3540,556,MixedEventEmitter node:internal/event_target:1063:16,0x2a6f0bb01d8,^
code-source-info,0x7ff6a66e3540,47,28570,28704,,,
code-creation,Function,11,434272,0x7ff6a66e3800,192,<instance_members_initializer> node:internal/fs/promises:132:1,0x2a6f0b9d150,^
code-source-info,0x7ff6a66e3800,466,3276,8319,,,
code-creation,Function,11,434314,0x7ff6a66e3940,904,FileHandle node:internal/fs/promises:136:14,0x2a6f0b9c918,^
code-source-info,0x7ff6a66e3940,466,3432,3605,,,
code-creation,Function,11,434348,0x7ff6a66e3d80,272,FastBuffer node:internal/buffer:960:14,0x1adeb59a488,^
code-source-info,0x7ff6a66e3d80,31,27333,27424,,,
code-creation,Function,11,434383,0x7ff6a66e3f40,216,allocUnsafeSlow node:buffer:392:50,0x1adeb58d170,^
code-source-info,0x7ff6a66e3f40,30,11764,11832,,,
code-creation,Script,10,434916,0x1c9a302a388,58, file:///E:/Javascript%20Renderers/Javascript-Renderer-9v2/renderer_10_js/renderer/scene/util/CheckModel.js:1:1,0x1c9a3029bf0,~
script-source,482,file:///E:/Javascript%20Renderers/Javascript-Renderer-9v2/renderer_10_js/renderer/scene/util/CheckModel.js,/*\x0d\n * Renderer 10. The MIT License.\x0d\n * Copyright (c) 2022 rlkraft@pnw.edu\x0d\n * See LICENSE for details.\x0d\n*/\x0d\n\x0d\n/**\x0d\n   Several static utility methods for checking\x0d\n   and/or debugging a {@link Model}.\x0d\n*/\x0d\n//@ts-check\x0d\n\x0d\nimport {Camera\x2C Matrix\x2C Model\x2C OrthoNorm\x2C PerspNorm\x2C Position\x2C Scene\x2C Vector\x2C Vertex} from "../SceneExport.js";\x0d\nimport {Primitive\x2C Point\x2C LineSegment} from "../primitives/PrimitiveExport.js";\x0d\n\x0d\n/**\x0d\n *  Give this {@code Primitive} the uniform {@link java.awt.Color} indexed\x0d\n    by the given color index.\x0d\n    <p>\x0d\n    NOTE: This method does not put a {@link java.awt.Color} object\x0d\n    into this {@link Primitive}'s {@link renderer.scene.Model} object.\x0d\n    This method assumes that the given index is valid (or will be valid\x0d\n    by the time this {@link Primitive} gets rendered).\x0d\n\x0d\n * @param {Model} model  the model to be checked\x0d\n */\x0d\nexport function check(model)\x0d\n{\x0d\n    if (model instanceof Model == false)\x0d\n        throw new Error("Model is not a Model");\x0d\n\x0d\n    let error = false;\x0d\n    if (model.getVertexList().length == 0 &&\x0d\n        model.getPrimitiveList().length != 0)\x0d\n    {\x0d\n        console.log("***WARNING: This model does not have any vertices.");\x0d\n        error = true;\x0d\n    }\x0d\n\x0d\n    if (model.getVertexList().length != 0 &&\x0d\n        model.getPrimitiveList().length == 0)\x0d\n    {\x0d\n        console.log("***WARNING: This model does not have any primitives");\x0d\n        error = true;\x0d\n    }\x0d\n    if (model.getVertexList().length != 0 &&\x0d\n        model.getColorList().length == 0)\x0d\n    {\x0d\n        console.log("***WARNING: This model does not have any colors.");\x0d\n        error = true;\x0d\n    }\x0d\n\x0d\n    if (error)\x0d\n        console.log(model.toString());\x0d\n}\x0d\n\x0d\n\x0d\n/**\x0d\n *  Check each {@link Primitive} in the {@link Model} to make sure that\x0d\n    each index in the {@link Primitive}'s {@code vIndexList} refers to a\x0d\n    valid {@link Vertex} in the {@link Model}'s {@code vertexList} and\x0d\n    also that each index in the {@link Primitive}'s {@code cIndexList}\x0d\n    refers to a valid {@link java.awt.Color} in the {@link Model}'s\x0d\n    {@code colorList}\x0d\n\x0d\n * @param {Model} model the model to be checked for consistent indexes\x0d\n * @returns {boolean} true if no error\x2C false if there is an error\x0d\n */\x0d\nexport function checkPrimitives(model)\x0d\n{\x0d\n    if (model instanceof Model == false)\x0d\n        throw new Error("Model must be a Model");\x0d\n\x0d\n    const numberOfVertices = model.getVertexList().length;\x0d\n    let result = true;\x0d\n\x0d\n    for (let p of model.getPrimitiveList())\x0d\n    {\x0d\n        for (let i = 0; i < p.getVertexIndexList().length; ++i)\x0d\n        {\x0d\n            if (i >= numberOfVertices)\x0d\n            {\x0d\n                console.log("This Primitve has invalid Vertex index: " + i);\x0d\n                console.log(p);\x0d\n                result = false;\x0d\n            }\x0d\n        }\x0d\n    }\x0d\n\x0d\n    const numberOfColors = model.getColorList().length;\x0d\n    for (let p of model.getPrimitiveList())\x0d\n    {\x0d\n        for (let i = 0; i < p.getColorIndexList().length; ++ i)\x0d\n        {\x0d\n            if (i >= numberOfColors)\x0d\n            {\x0d\n                console.log("This Primitve has invalid Color index: " + i);\x0d\n                console.log(p);\x0d\n                result = false;\x0d\n            }\x0d\n        }\x0d\n    }\x0d\n\x0d\n    return result;\x0d\n}\x0d\n
code-source-info,0x1c9a302a388,482,0,3256,C10O0C28O0C48O0C57O3256,,
code-creation,Function,11,436074,0x7ff6a66e40c0,2896,getStatsFromBinding node:internal/fs/utils:536:29,0x914791dca8,^
code-source-info,0x7ff6a66e40c0,79,14691,15763,,,
code-creation,Function,11,436136,0x7ff6a66e4cc0,552,createUnsafeBuffer node:internal/buffer:1061:28,0x1adeb59ae60,^
code-source-info,0x7ff6a66e4cc0,31,31376,31492,,,
code-creation,Function,11,436174,0x7ff6a66e4f80,168, node:internal/per_context/primordials:453:21,0x1c9a3011790,^
code-source-info,0x7ff6a66e4f80,12,13553,13602,,,
code-creation,Function,11,436209,0x7ff6a66e50c0,296, node:internal/per_context/primordials:452:15,0x1c9a3011600,^
code-source-info,0x7ff6a66e50c0,12,13522,13649,,,
code-creation,Function,11,436244,0x7ff6a66e5280,332,primordials.SafePromisePrototypeFinally node:internal/per_context/primordials:449:43,0x1f81b713390,^
code-source-info,0x7ff6a66e5280,12,13374,13654,,,
code-creation,Function,11,436279,0x7ff6a66e5480,304, node:internal/fs/promises:356:5,0x1c9a300ddf8,^
code-source-info,0x7ff6a66e5480,466,8437,8496,,,
code-creation,Script,10,437522,0x1c9a302bcc0,58, file:///E:/Javascript%20Renderers/Javascript-Renderer-9v2/renderer_10_js/renderer/scene/util/ModelShading.js:1:1,0x1c9a302b328,~
script-source,483,file:///E:/Javascript%20Renderers/Javascript-Renderer-9v2/renderer_10_js/renderer/scene/util/ModelShading.js,/*\x0d\n * Renderer 10. The MIT License.\x0d\n * Copyright (c) 2022 rlkraft@pnw.edu\x0d\n * See LICENSE for details.\x0d\n*/\x0d\n\x0d\n/**\x0d\n   This is a library of static methods that\x0d\n   add color shading to a {@link Model}.\x0d\n*/\x0d\n\x0d\n//@ts-check\x0d\nimport {Camera\x2C Matrix\x2C Model\x2C OrthoNorm\x2C PerspNorm\x2C Position\x2C Scene\x2C Vector\x2C Vertex} from "../SceneExport.js";\x0d\nimport {Color} from "../../framebuffer/FramebufferExport.js";\x0d\n\x0d\n/**\x0d\n * Set each vertex in the model to be the same color.\x0d\n *\x0d\n * @param {Model} model the model whose colors are to be changed\x0d\n * @param {Color} color the color to set all the vertexes to be\x0d\n */\x0d\n\x0d\nexport function setColor(model\x2C color)\x0d\n{\x0d\n    if (model instanceof Model == false)\x0d\n        throw new Error("Model must be a Model");\x0d\n\x0d\n    if (color instanceof Color == false)\x0d\n        throw new Error("Color must be a Color");\x0d\n\x0d\n    if (model.getColorList().length == 0)\x0d\n    {\x0d\n        for (let i = 0; i < model.getVertexList().length; i += 1)\x0d\n        {\x0d\n            model.addColor(color);\x0d\n\x09\x09}\x0d\n    }\x0d\n    else\x0d\n    {\x0d\n        for (let i = 0; i < model.getColorList().length; i += 1)\x0d\n        {\x0d\n            model.getColorList()[i] = color;\x0d\n\x09\x09}\x0d\n\x09}\x0d\n}\x0d\n\x0d\n\x0d\n/**\x0d\n * Set each vertex in the model to be the same random color.\x0d\n *\x0d\n * @param {Model} model the model whose color is to be changed\x0d\n */\x0d\nexport function setRandomColor(model)\x0d\n{\x0d\n    if (model instanceof Model == false)\x0d\n        throw new Error("Model must be a Model");\x0d\n\x0d\n    if (model.getColorList().length == 0)\x0d\n    {\x0d\n        for (let i = 0; i < model.getVertexList().length; i += 1)\x0d\n        {\x0d\n            model.addColor(randomColor());\x0d\n\x09\x09}\x0d\n\x09}\x0d\n    else\x0d\n    {\x0d\n        for (let i = 0; i < model.getColorList().length; i += 1)\x0d\n        {\x0d\n            model.getColorList()[i] = randomColor();\x0d\n\x09\x09}\x0d\n\x09}\x0d\n}\x0d\n\x0d\n\x0d\n/**\x0d\n * Set each vertex to have a different random color.\x0d\n * NOTE: This will destroy the color structure of the model.\x0d\n *\x0d\n * @param {Model} model the model whose colors are to be changed\x0d\n */\x0d\nexport function setRandomVertexColor(model)\x0d\n{\x0d\n    if (model instanceof Model == false)\x0d\n        throw new Error("Model must be a Model");\x0d\n\x0d\n    model.getColorList().length = 0;\x0d\n    for (let i = 0; i < model.getVertexList().length; i += 1)\x0d\n    {\x0d\n        model.addColor(randomColor());\x0d\n\x09}\x0d\n\x0d\n    for( let p of model.getPrimitiveList())\x0d\n    {\x0d\n        for (let i = 0; i < p.getVertexIndexList().length; i += 1)\x0d\n        {\x0d\n            p.getColorIndexList()[i] = p.getVertexIndexList[i];\x0d\n\x09\x09}\x0d\n    }\x0d\n}\x0d\n\x0d\n\x0d\n/**\x0d\n * Set each primitive to be a different random color.\x0d\n * NOTE: This will destroy the color structure of the model.\x0d\n *\x0d\n * @param {Model} model the model whose colors are to be changed\x0d\n */\x0d\nexport function setRandomPrimitiveColor(model)\x0d\n{\x0d\n    if (model instanceof Model == false)\x0d\n        throw new Error("Model must be a model");\x0d\n\x0d\n    model.getColorList().length = 0;\x0d\n    let cIndex = 0;\x0d\n    for (let p of model.getPrimitiveList())\x0d\n    {\x0d\n        model.addColor(randomColor());\x0d\n        for (let i = 0; i < p.getColorIndexList().length; i += 1)\x0d\n        {\x0d\n            p.getColorIndexList()[i] = cIndex;\x0d\n\x09\x09}\x0d\n        ++cIndex;\x0d\n    }\x0d\n}\x0d\n\x0d\n\x0d\n/**\x0d\n * Set each primitive to be a random color\x2C this creates a\x0d\n * 'rainbow primitive' effect.\x0d\n * NOTE: This will destory the color structure of the model.\x0d\n *\x0d\n * @param {Model} model the model whose colors are to be changed\x0d\n */\x0d\nexport function setRainbowPrimitiveColors(model)\x0d\n{\x0d\n    if (model instanceof Model == false)\x0d\n        throw new Error("Model must be a Model");\x0d\n\x0d\n    model.getColorList().length = 0;\x0d\n    let cIndex = 0;\x0d\n    for (let p of model.getPrimitiveList())\x0d\n    {\x0d\n        for (let i = 0; i < p.getColorIndexList().length; ++i)\x0d\n        {\x0d\n            model.addColor(randomColor());\x0d\n            p.getColorIndexList()[i] = cIndex;\x0d\n            ++cIndex;\x0d\n        }\x0d\n    }\x0d\n}\x0d\n\x0d\n\x0d\n/**\x0d\n * Create a random color by randomly generating a r\x2C g\x2C and b value.\x0d\n * @returns {Color} a random color\x0d\n */\x0d\nexport function randomColor()\x0d\n{\x0d\n    let r = Math.random() * 255;\x0d\n    let g = Math.random() * 255;\x0d\n    let b = Math.random() * 255;\x0d\n\x0d\n    return new Color(r\x2C g\x2C b);\x0d\n}\x0d\n\x0d\n
code-source-info,0x1c9a302bcc0,483,0,4155,C10O0C28O0C48O0C57O4155,,
code-creation,Function,11,439099,0x7ff6a66e5640,1224,#createModuleJob node:internal/modules/esm/loader:451:19,0x14dbcbacac0,^
code-source-info,0x7ff6a66e5640,451,13629,14641,,,
code-creation,Function,11,439172,0x7ff6a66e5bc0,1012,moduleResolve node:internal/modules/esm/resolve:923:23,0x14dbcbb6798,^
code-source-info,0x7ff6a66e5bc0,455,31492,32284,,,
code-creation,Function,11,439227,0x7ff6a66e6040,1180,readFile node:internal/fs/promises:892:24,0x2a6f0b9c8c8,^
code-source-info,0x7ff6a66e6040,466,25395,25727,,,
code-creation,Function,11,439266,0x7ff6a66e6580,512,get search node:internal/url:948:13,0x914790f2d0,^
code-source-info,0x7ff6a66e6580,76,26740,26940,,,
code-creation,Function,11,439301,0x7ff6a66e6800,512,get hash node:internal/url:984:11,0x914790f420,^
code-source-info,0x7ff6a66e6800,76,27709,27921,,,
code-creation,Script,10,439538,0x1c9a302d108,58, file:///E:/Javascript%20Renderers/Javascript-Renderer-9v2/renderer_10_js/renderer/scene/util/PointCloud.js:1:1,0x1c9a302c998,~
script-source,484,file:///E:/Javascript%20Renderers/Javascript-Renderer-9v2/renderer_10_js/renderer/scene/util/PointCloud.js,/*\x0d\n * Renderer 10. The MIT License.\x0d\n * Copyright (c) 2022 rlkraft@pnw.edu\x0d\n * See LICENSE for details.\x0d\n*/\x0d\n\x0d\nimport {Camera\x2C Matrix\x2C Model\x2C OrthoNorm\x2C PerspNorm\x2C Position\x2C Scene\x2C Vector\x2C Vertex} from "../SceneExport.js";\x0d\nimport {Primitive\x2C Point\x2C LineSegment} from "../primitives/PrimitiveExport.js";\x0d\nimport {Color} from "../../framebuffer/FramebufferExport.js";\x0d\n\x0d\n/**\x0d\n   Convert a {@link Model} object into a point cloud {@link Model}.\x0d\n<p>\x0d\n   See <a href="https://en.wikipedia.org/wiki/Point_cloud" target="_top">\x0d\n                https://en.wikipedia.org/wiki/Point_cloud</a>\x0d\n*/\x0d\n\x0d\n/**\x0d\n * Convert a model into a model made of only points.\x0d\n *\x0d\n * @param {Model} model\x0d\n * @param {number} [pointSize=0]\x0d\n * @returns {Model} the new model in the form of points\x0d\n */\x0d\nexport function make(model\x2C pointSize = 0)\x0d\n{\x0d\n    if (model instanceof Model == false)\x0d\n        throw new Error("Model must be a model");\x0d\n\x0d\n    if (typeof pointSize != "number")\x0d\n        throw new Error("Point Size must be a number");\x0d\n\x0d\n    //have to copy the models vertex list into new vertex list\x0d\n    let newVertexList = new Array();\x0d\n    for (let x = 0; x < model.getVertexList().length; x += 1)\x0d\n    {\x0d\n        newVertexList[x] = model.vertexList[x];\x0d\n\x09}\x0d\n\x0d\n    let newColorList = new Array()\x0d\n    for (let x = 0; x < model.getColorList().length; x += 1)\x0d\n    {\x0d\n        newColorList[x] = model.colorList[x];\x0d\n\x09}\x0d\n\x0d\n    let pointCloud = new Model(newVertexList\x2C\x0d\n                               new Array()\x2C\x0d\n                               newColorList\x2C\x0d\n                               "PointCloud: " + model.getName()\x2C\x0d\n                               model.visible);\x0d\n\x0d\n    /**@type {boolean[]} */ let vIndices = new Array(model.getVertexList().length);\x0d\n    /**@type {number[]}  */ let cIndices = new Array(model.getVertexList().length);\x0d\n    for (let p of model.getPrimitiveList())\x0d\n    {\x0d\n        for (let i = 0; i < p.getVertexIndexList().length; i += 1)\x0d\n        {\x0d\n            vIndices[p.getVertexIndexList()[i]] = true;\x0d\n            cIndices[p.getVertexIndexList()[i]] = p.getColorIndexList()[i];\x0d\n        }\x0d\n    }\x0d\n\x0d\n    for (let i = 0; i < vIndices.length; i += 1)\x0d\n    {\x0d\n        if (vIndices[i])\x0d\n        {\x0d\n            pointCloud.addPrimitive(new Point(i\x2C cIndices[i]));\x0d\n\x09\x09}\x0d\n    }\x0d\n\x0d\n    for (let p of pointCloud.getPrimitiveList())\x0d\n    {\x0d\n        /**@type {Point}*/(p).radius = pointSize;\x0d\n    }\x0d\n\x0d\n    return pointCloud;\x0d\n}\x0d\n
code-source-info,0x1c9a302d108,484,0,2429,C10O0C28O0C48O0C57O2429,,
code-creation,Function,11,440083,0x7ff6a66e6a80,1492,set search node:internal/url:957:13,0x914790f340,^
code-source-info,0x7ff6a66e6a80,76,26956,27548,,,
code-creation,Function,11,440130,0x7ff6a66e7100,152, node:internal/fs/promises:230:9,0x1c9a30110b0,^
code-source-info,0x7ff6a66e7100,466,5348,5390,,,
code-creation,Function,11,440161,0x7ff6a66e7240,44, node:internal/fs/promises:356:51,0x1c9a3010f20,^
code-source-info,0x7ff6a66e7240,466,8483,8495,,,
code-creation,Function,11,440210,0x7ff6a66e7300,1240,moduleProvider node:internal/modules/esm/loader:452:28,0x1c9a3004ff0,^
code-source-info,0x7ff6a66e7300,451,13702,14159,,,
code-creation,Function,11,440268,0x7ff6a66e7880,2180,pathToFileURL node:internal/url:1528:23,0x914790fa90,^
code-source-info,0x7ff6a66e7880,76,44137,45401,,,
code-creation,Function,11,441277,0x7ff6a66e81c0,1540,link node:internal/modules/esm/module_job:67:18,0x1c9a3005360,^
code-source-info,0x7ff6a66e81c0,453,1921,2802,,,
code-creation,Function,11,441379,0x7ff6a66e8880,4012,finalizeResolution node:internal/modules/esm/resolve:290:28,0x14dbcbb61f8,^
code-source-info,0x7ff6a66e8880,455,9814,11597,,,
code-creation,Script,10,441729,0x1c9a302e768,76, file:///E:/Javascript%20Renderers/Javascript-Renderer-9v2/renderer_10_js/renderer/scene/util/StringFormat.js:1:1,0x1c9a302e438,~
script-source,485,file:///E:/Javascript%20Renderers/Javascript-Renderer-9v2/renderer_10_js/renderer/scene/util/StringFormat.js,/*\x0d\n * Renderer 10. The MIT License.\x0d\n * Copyright (c) 2022 rlkraft@pnw.edu\x0d\n * See LICENSE for details.\x0d\n*/\x0d\n\x0d\n/**\x0d\n   A partial implementation of Java's String.format() method.\x0d\n*/\x0d\n\x0d\n//@ts-check\x0d\n\x0d\n/**\x0d\n *\x0d\n * @param {string} str\x0d\n * @param  {...any} values\x0d\n * @returns {string} the formated string\x0d\n */\x0d\nexport function format(str\x2C ... values)\x0d\n{\x0d\n    if (typeof str != "string")\x0d\n        throw new Error("Str must be a string");\x0d\n\x0d\n    let newStr = "";\x0d\n    let valueIndex = 0;\x0d\n\x0d\n    for (let x = 0; x < str.length; x += 1)\x0d\n    {\x0d\n        if (str.charAt(x) != '%')\x0d\n        {\x0d\n            newStr += str.charAt(x);\x0d\n\x09\x09}\x0d\n        else // %03d or %.2f or %s\x0d\n        {\x0d\n            let formatStr = "";\x0d\n            while (str.charAt(++x) != 'd' && str.charAt(x) != 'f' && str.charAt(x) != 's')\x0d\n            {\x0d\n                formatStr += str.charAt(x);\x0d\n\x09\x09\x09}\x0d\n            formatStr += str.charAt(x);\x0d\n\x0d\n            newStr += replace(formatStr\x2C values[valueIndex++]);\x0d\n        }\x0d\n    }\x0d\n\x0d\n    if(newStr.includes("-"))\x0d\n    {   \x0d\n        // remove the minus sign\x0d\n        newStr.replace("-"\x2C "");\x0d\n        //append the minus sign to the front\x0d\n        newStr = "-" + newStr;\x0d\n    }\x0d\n\x0d\n    return newStr;\x0d\n}\x0d\n\x0d\n\x0d\nfunction replace(format\x2C value)\x0d\n{\x0d\n    let form = "";\x0d\n\x0d\n    for (let x = 0; x < format.length; x += 1)\x0d\n    {\x0d\n        const afterMod = format.charAt(x);\x0d\n\x0d\n        if (afterMod == 'd')\x0d\n        {\x0d\n            if (typeof value != "number")\x0d\n                throw new Error("Value must be numerical but got type " + typeof value);\x0d\n\x0d\n            return Math.trunc(value).toString();\x0d\n        }\x0d\n        else if (afterMod == 'f')\x0d\n        {\x0d\n            if (typeof value != "number")\x0d\n                throw new Error("Value must be numerical but got type " + typeof value);\x0d\n\x0d\n            return value.toString();\x0d\n        }\x0d\n        else if (afterMod == 's')\x0d\n        {\x0d\n            if (typeof value != "string")\x0d\n                throw new Error("Value must be string but got type " + typeof value);\x0d\n\x0d\n            return value;\x0d\n        }\x0d\n        else // not a simple replacement\x0d\n        {\x0d\n            let widthFormat = "0";\x0d\n\x0d\n            while (format.charAt(x) != '.' && format.charAt(x) != 'd' && format.charAt(x) != 'f')\x0d\n            {\x0d\n                widthFormat += format.charAt(x++);\x0d\n\x09\x09\x09}\x0d\n\x0d\n            if (format.charAt(x) == '.')\x0d\n            {\x0d\n                form += handleWidth(widthFormat\x2C value\x2C true);\x0d\n                let end = x;\x0d\n\x0d\n                x += 1;\x0d\n                while (format.charAt(x) != 'd' && format.charAt(x) != 'f')\x0d\n                {    end += 1; x += 1; }\x0d\n\x0d\n                form += handlePrecision(format.substring(x\x2C end)\x2C value);\x0d\n                x += 1;\x0d\n            }\x0d\n            else\x0d\n            {\x0d\n                form += handleWidth(widthFormat\x2C value\x2C false);\x0d\n\x09\x09\x09}\x0d\n        }\x0d\n    }\x0d\n\x0d\n    return form;\x0d\n}\x0d\n\x0d\n\x0d\nfunction handleWidth(format\x2C value\x2C truncate) // goes from 0 to numbers\x2C no decimal so when reach end thats it\x0d\n{\x0d\n    let endStr = "";\x0d\n\x0d\n    if (truncate)\x0d\n        value = Math.trunc(value); // truncate to include just integers not decimals\x0d\n\x0d\n    let width = Number(format);\x0d\n    let valueStr = value.toString();\x0d\n\x0d\n    if (valueStr.length < width)\x0d\n    {\x0d\n        for (let x = 0; x < width - valueStr.length; x += 1)\x0d\n        {\x0d\n            endStr += '0';\x0d\n\x09\x09}\x0d\n\x0d\n        endStr += valueStr;\x0d\n    }\x0d\n    else if (valueStr.length-1 >= width)\x0d\n    {\x0d\n       endStr = valueStr.substring(0\x2C width);\x0d\n    }\x0d\n    else\x0d\n    {\x0d\n        endStr += valueStr;\x0d\n\x09}\x0d\n\x0d\n    return endStr;\x0d\n}\x0d\n\x0d\n\x0d\nfunction handlePrecision(format\x2C value) // contains decimal plus optional numbers\x0d\n{\x0d\n    let endStr = "";\x0d\n\x0d\n    if (format.length == 0)\x0d\n        return ".";\x0d\n\x0d\n    let precision = Number(format);\x0d\n    let valueStr = value.toString();\x0d\n\x0d\n    let decimalStr = "";\x0d\n    if (valueStr.includes("."))\x0d\n    {\x0d\n        decimalStr = valueStr.substring(valueStr.indexOf(".")+1);\x0d\n\x0d\n        if (decimalStr.length > precision)\x0d\n        {\x0d\n            decimalStr = decimalStr.substring(0\x2C precision);\x0d\n\x09\x09}\x0d\n        else if (decimalStr.length < precision)\x0d\n        {\x0d\n            while (decimalStr.length < precision)\x0d\n            {\x0d\n                decimalStr += '0';\x0d\n\x09\x09\x09}\x0d\n        }\x0d\n    }\x0d\n    else\x0d\n    {\x0d\n        while (precision-- > 0)\x0d\n        {\x0d\n            decimalStr += '0';\x0d\n\x09\x09}\x0d\n    }\x0d\n\x0d\n    return "." + decimalStr;\x0d\n}
code-source-info,0x1c9a302e768,485,0,4391,C10O0C46O0C66O0C75O4391,,
code-creation,Function,11,442275,0x7ff6a66e98c0,1004,addJobsToDependencyGraph node:internal/modules/esm/module_job:108:38,0x1c9a300c8f0,^
code-source-info,0x7ff6a66e98c0,453,3458,3725,,,
code-creation,Function,11,442343,0x7ff6a66e9d40,1516,defaultLoad node:internal/modules/esm/load:72:27,0x2a6f0b993c8,^
code-source-info,0x7ff6a66e9d40,465,2287,2844,,,
code-creation,Function,11,442387,0x7ff6a66ea3c0,700,stringify node:internal/modules/esm/translators:94:19,0x2a6f0bb3298,^
code-source-info,0x7ff6a66ea3c0,471,2646,2851,,,
tick,0x7ff726abcf09,442496,0,0x0,0,0x7ff72606c200,0x1c9a300d28b,0x7ff72653f3f3
code-creation,Function,11,442548,0x7ff6a66ea700,1216,moduleStrategy node:internal/modules/esm/translators:114:56,0x2a6f0bb3478,^
code-source-info,0x7ff6a66ea700,471,3264,3694,,,
code-creation,Function,11,442636,0x7ff6a66eac40,536, node:internal/per_context/primordials:505:53,0x1c9a30048f0,^
code-source-info,0x7ff6a66eac40,12,15446,15558,,,
code-creation,Script,10,443835,0x1c9a302fde8,45, file:///E:/Javascript%20Renderers/Javascript-Renderer-9v2/renderer_10_js/renderer/scene/SceneExport.js:1:1,0x1c9a302f7b8,~
script-source,486,file:///E:/Javascript%20Renderers/Javascript-Renderer-9v2/renderer_10_js/renderer/scene/SceneExport.js,/*\x0d\n * Renderer 10. The MIT License.\x0d\n * Copyright (c) 2022 rlkraft@pnw.edu\x0d\n * See LICENSE for details.\x0d\n*/\x0d\n\x0d\n/*\x0d\nimport Camera from "./Camera.js";\x0d\nimport Matrix from "./Matrix.js";\x0d\nimport Model from "./Model.js";\x0d\nimport OrthoNorm from "./OrthoGraphicNormalizeMatrix.js";\x0d\nimport PerspNorm from "./PerspectiveNormalizeMatrix.js";\x0d\nimport Position from "./Position.js";\x0d\nimport Scene from "./Scene.js";\x0d\nimport Vector from "./Vector.js";\x0d\nimport Vertex from "./Vertex.js";\x0d\n\x0d\nexport var Camera;\x0d\nexport var Matrix;\x0d\nexport var Model;\x0d\nexport var OrthoNorm;\x0d\nexport var PerspNorm;\x0d\nexport var Position;\x0d\nexport var Scene;\x0d\nexport var Vector;\x0d\nexport var Vertex;\x0d\n*/\x0d\n\x0d\nexport {default as Camera} from "./Camera.js";\x0d\nexport {default as Matrix} from "./Matrix.js";\x0d\nexport {default as Model} from "./Model.js";\x0d\nexport {default as OrthoNorm} from "./OrthographicNormalizeMatrix.js";\x0d\nexport {default as PerspNorm} from "./PerspectiveNormalizeMatrix.js";\x0d\nexport {default as Position} from "./Position.js";\x0d\nexport {default as Scene} from "./Scene.js";\x0d\nexport {default as Vector} from "./Vector.js";\x0d\nexport {default as Vertex} from "./Vertex.js";\x0d\nexport {Primitive} from "./primitives/PrimitiveExport.js";\x0d\nexport {Point} from "./primitives/PrimitiveExport.js";\x0d\nexport {LineSegment} from "./primitives/PrimitiveExport.js"
code-source-info,0x1c9a302fde8,486,0,1326,C10O0C15O0C35O0C44O1326,,
new,MemoryChunk,0x3a217e40000,262144
new,MemoryChunk,0x2662fa00000,262144
code-creation,Function,11,445753,0x7ff6a66eaf00,1692,encodePathChars node:internal/url:1513:25,0x914790fa40,^
code-source-info,0x7ff6a66eaf00,76,43406,44111,,,
code-creation,Function,11,445840,0x7ff6a66eb640,524,handleFdClose node:internal/fs/promises:353:29,0x2a6f0b9bb58,^
code-source-info,0x7ff6a66eb640,466,8351,8703,,,
code-creation,Function,11,445896,0x7ff6a66eb900,1756,close node:internal/fs/promises:216:11,0x2a6f0b9ed58,^
code-source-info,0x7ff6a66eb900,466,5022,5843,,,
code-creation,Function,11,445941,0x7ff6a66ec080,648,assertBufferSource node:internal/modules/esm/translators:78:28,0x2a6f0bb3248,^
code-source-info,0x7ff6a66ec080,471,2217,2624,,,
code-creation,Function,11,445989,0x7ff6a66ec3c0,384,lazyTypes node:internal/modules/esm/translators:22:19,0x2a6f0bb31a8,^
code-source-info,0x7ff6a66ec3c0,471,420,517,,,
code-creation,LazyCompile,13,447546,0x7ff6a66ec5c0,4084,getPathFromURLWin32 node:internal/url:1433:29,0x914790f950,*
code-source-info,0x7ff6a66ec5cx914790f1f0S0x914790e8c8S0x914790ea00S0x914790f040
feedback-vector,447690,0x2a6f0bbec48,51,0x7ff6a66ec5c0,TieringState::kInProgress,0,150,0,000002A6F0BBEC49: [FeedbackVector] in OldSpace\n - map: 0x03ba70f41b89 <Map>\n - length: 51\n - shared function info: 0x00914790f951 <SharedFunctionInfo getPathFromURLWin32>\n - no optimized code\n - tiering state: TieringState::kInProgress\n - maybe has optimized code: 0\n - invocation count: 150\n - profiler ticks: 0\n - closure feedback cell array: 000003BA70F432F1: [ClosureFeedbackCellArray] in ReadOnlySpace\n - map: 0x03ba70f41f39 <Map>\n - length: 0\n\n - slot #0 LoadProperty MONOMORPHIC {\n     [0]: [weak] 0x009983f09bd9 <Map(HOLEY_ELEMENTS)>\n     [1]: 0x01c9a3002e81 <Other heap object (LOAD_HANDLER_TYPE)>\n  }\n - slot #2 LoadProperty MONOMORPHIC {\n     [2]: [weak] 0x009983f09bd9 <Map(HOLEY_ELEMENTS)>\n     [3]: 0x01c9a3002ea1 <Other heap object (LOAD_HANDLER_TYPE)>\n  }\n - slot #4 LoadProperty MONOMORPHIC {\n     [4]: [weak] 0x03ba70f42c29 <Map[32]>\n     [5]: 0x03ba70f4f9a1 <Code BUILTIN LoadIC_StringLength>\n  }\n - slot #6 CompareOp CompareOp:SignedSmall {\n     [6]: 1\n  }\n - slot #7 LoadKeyed MONOMORPHIC {\n     [7]: [weak] 0x03ba70f42c29 <Map[32]>\n     [8]: 1\n  }\n - slot #9 CompareOp CompareOp:String {\n     [9]: 48\n  }\n - slot #10 BinaryOp BinaryOp:SignedSmall {\n     [10]: 1\n  }\n - slot #11 LoadProperty POLYMORPHIC {\n     [11]: 0x03a217e43c31 <Other heap object (WEAK_FIXED_ARRAY_TYPE)>\n     [12]: 0x03ba70f468b1 <Symbol: (uninitialized_symbol)>\n  }\n - slot #13 BinaryOp BinaryOp:SignedSmall {\n     [13]: 1\n  }\n - slot #14 Call MONOMORPHIC {\n     [14]: [weak] 0x010673ee0829 <JSFunction codePointAt (sfi = 000003893BCF5469)>\n     [15]: 700\n  }\n - slot #16 BinaryOp BinaryOp:SignedSmall {\n     [16]: 1\n  }\n - slot #17 LoadKeyed MONOMORPHIC {\n     [17]: [weak] 0x03ba70f42c29 <Map[32]>\n     [18]: 1\n  }\n - slot #19 CompareOp CompareOp:String {\n     [19]: 48\n  }\n - slot #20 CompareOp CompareOp:SignedSmall {\n     [20]: 1\n  }\n - slot #21 BinaryOp BinaryOp:SignedSmall {\n     [21]: 1\n  }\n - slot #22 LoadKeyed MONOMORPHIC {\n     [22]: [weak] 0x03ba70f42c29 <Map[32]>\n     [23]: 1\n  }\n - slot #24 CompareOp CompareOp:String {\n     [24]: 48\n  }\n - slot #25 CompareOp CompareOp:None {\n     [25]: 0\n  }\n - slot #26 Call UNINITIALIZED {\n     [26]: 0x03ba70f468b1 <Symbol: (uninitialized_symbol)>\n     [27]: 0\n  }\n - slot #28 BinaryOp BinaryOp:SignedSmall {\n     [28]: 1\n  }\n - slot #29 Call MONOMORPHIC {\n     [29]: [weak] 0x023add77d7c9 <JSBoundFunction (BoundTargetFunction 000002FFD8F83569)>\n     [30]: 600\n  }\n - slot #31 Call MONOMORPHIC {\n     [31]: [weak] 0x02ffd8f99d21 <JSFunction decodeURIComponent (sfi = 000003A8997BE769)>\n     [32]: 600\n  }\n - slot #33 CompareOp CompareOp:InternalizedString {\n     [33]: 16\n  }\n - slot #34 BinaryOp BinaryOp:None {\n     [34]: 0\n  }\n - slot #35 Call UNINITIALIZED {\n     [35]: 0x03ba70f468b1 <Symbol: (uninitialized_symbol)>\n     [36]: 0\n  }\n - slot #37 BinaryOp BinaryOp:SignedSmall {\n     [37]: 1\n  }\n - slot #38 Call MONOMORPHIC {\n     [38]: [weak] 0x010673ee0829 <JSFunction codePointAt (sfi = 000003893BCF5469)>\n     [39]: 600\n  }\n - slot #40 LoadKeyed MONOMORPHIC {\n     [40]: [weak] 0x03ba70f41901 <Map>\n     [41]: 1\n  }\n - slot #42 CompareOp CompareOp:SignedSmall {\n     [42]: 1\n  }\n - slot #43 CompareOp CompareOp:SignedSmall {\n     [43]: 1\n  }\n - slot #44 CompareOp CompareOp:String {\n     [44]: 48\n  }\n - slot #45 Call UNINITIALIZED {\n     [45]: 0x03ba70f468b1 <Symbol: (uninitialized_symbol)>\n     [46]: 0\n  }\n - slot #47 LoadProperty MONOMORPHIC {\n     [47]: [weak] 0x03ba70f41901 <Map>\n     [48]: 0x02a6f0bbee61 <Other heap object (LOAD_HANDLER_TYPE)>\n  }\n - slot #49 Call MONOMORPHIC {\n     [49]: [weak] 0x02ffd8f83c99 <JSFunction slice (sfi = 000003893BCF5901)>\n     [50]: 600\n  }\n
code-creation,Function,11,448765,0x7ff6a66ed680,6264,defaultResolve node:internal/modules/esm/resolve:1063:30,0x14dbcbb6928,^
code-source-info,0x7ff6a66ed680,455,35979,40014,,,
code-creation,Function,11,448836,0x7ff6a66eef80,1240,set hash node:internal/url:993:11,0x914790f488,^
code-source-info,0x7ff6a66eef80,76,27935,28451,,,
code-creation,Function,11,451292,0x7ff6a66ef500,968,validateArgs node:internal/modules/esm/loader:567:26,0x1c9a30064f8,^
code-source-info,0x7ff6a66ef500,451,17527,18305,,,
code-creation,Function,11,451356,0x7ff6a66ef980,620,getConditionsSet node:internal/modules/esm/resolve:158:26,0x14dbcbb6018,^
code-source-info,0x7ff6a66ef980,455,5399,5735,,,
code-creation,Function,11,451421,0x7ff6a66efc80,2652,getPackageConfig node:internal/modules/esm/package_config:40:26,0x14dbcbba498,^
code-source-info,0x7ff6a66efc80,456,947,2488,,,
code-creation,Function,11,451458,0x7ff6a66f0780,400,throwIfUnsupportedURLProtocol node:internal/modules/esm/resolve:1035:39,0x14dbcbb6888,^
code-source-info,0x7ff6a66f0780,455,35270,35435,,,
code-creation,Function,11,451754,0x7ff6a66f09c0,4300,load node:internal/modules/esm/loader:556:13,0x14dbcbaccf0,^
code-source-info,0x7ff6a66f09c0,451,17247,20612,,,
code-creation,Script,10,452451,0x1c9a3032860,45, file:///E:/Javascript%20Renderers/Javascript-Renderer-9v2/renderer_10_js/renderer/scene/primitives/PrimitiveExport.js:1:1,0x1c9a30325d0,~
script-source,487,file:///E:/Javascript%20Renderers/Javascript-Renderer-9v2/renderer_10_js/renderer/scene/primitives/PrimitiveExport.js,/*\x0d\n * Renderer 10. The MIT License.\x0d\n * Copyright (c) 2022 rlkraft@pnw.edu\x0d\n * See LICENSE for details.\x0d\n*/\x0d\n\x0d\n/*\x0d\nimport Primitive from "./Primitive.js";\x0d\nimport Point from "./Point.js";\x0d\nimport LineSegment from "./LineSegment.js";\x0d\n\x0d\nexport var Primitive;\x0d\nexport var Point;\x0d\nexport var LineSegment;\x0d\n*/\x0d\nexport {default as Primitive} from "./Primitive.js";\x0d\nexport {default as Point} from "./Point.js";\x0d\nexport {default as LineSegment} from "./LineSegment.js";
code-source-info,0x1c9a3032860,487,0,464,C10O0C15O0C35O0C44O464,,
code-creation,Script,10,454395,0x1c9a3032ef0,45, file:///E:/Javascript%20Renderers/Javascript-Renderer-9v2/renderer_10_js/renderer/framebuffer/FramebufferExport.js:1:1,0x1c9a3032c60,~
script-source,488,file:///E:/Javascript%20Renderers/Javascript-Renderer-9v2/renderer_10_js/renderer/framebuffer/FramebufferExport.js,/*\x0d\n    FrameBuffer. The MIT License.\x0d\n    Copyright (c) 2022 rlkraft@pnw.edu\x0d\n    See LICENSE for details.\x0d\n*/\x0d\n\x0d\n/*\x0d\nimport FrameBuffer from "./FrameBuffer.js";\x0d\nimport Viewport from "./Viewport.js";\x0d\nimport Color from "./Color.js";\x0d\n\x0d\nexport var FrameBuffer;\x0d\nexport var Viewport;\x0d\nexport var Color;\x0d\n*/\x0d\n\x0d\nexport {default as FrameBuffer} from "./FrameBuffer.js";\x0d\nexport {default as Viewport} from "./Viewport.js";\x0d\nexport {default as Color} from "./Color.js";
code-source-info,0x1c9a3032ef0,488,0,464,C10O0C15O0C35O0C44O464,,
code-creation,Function,11,456227,0x7ff6a66f1b40,1184,EventEmitter.init node:events:337:29,0x3a8997b94d8,^
code-source-info,0x7ff6a66f1b40,29,10180,10788,,,
code-creation,Function,11,456306,0x7ff6a66f2080,1044, node:internal/validators:138:40,0x3a899792b10,^
code-source-info,0x7ff6a66f2080,22,3648,4093,,,
code-creation,Function,11,456353,0x7ff6a66f2540,1152,validateAssertions node:internal/modules/esm/assert:55:28,0x14dbcbb2be0,^
code-source-info,0x7ff6a66f2540,454,1835,3000,,,
code-creation,Function,11,456391,0x7ff6a66f2a40,332,primordials.SafePromiseAllReturnArrayLike node:internal/per_context/primordials:494:45,0x1f81b713500,^
code-source-info,0x7ff6a66f2a40,12,15009,15581,,,
code-creation,Function,11,456427,0x7ff6a66f2c40,328,validateOutput node:internal/modules/esm/loader:593:28,0x1c9a3006548,^
code-source-info,0x7ff6a66f2c40,451,18335,18580,,,
code-creation,Function,11,456472,0x7ff6a66f2e40,500,hasNoEntryError node:fs:1526:25,0x2dbe93f4c48,^
code-source-info,0x7ff6a66f2e40,75,40743,40945,,,
code-creation,Function,11,456511,0x7ff6a66f30c0,764,parseFileMode node:internal/validators:70:23,0x3a899792a20,^
code-source-info,0x7ff6a66f30c0,22,1721,2021,,,
code-creation,Function,11,456808,0x7ff6a66f3440,5128,readFileHandle node:internal/fs/promises:426:30,0x2a6f0b9bc98,^
code-source-info,0x7ff6a66f3440,466,10523,12712,,,
tick,0x7ffaea990ddc,458097,0,0x0,8
code-creation,Script,10,458558,0x1c9a30344c0,134, file:///E:/Javascript%20Renderers/Javascript-Renderer-9v2/renderer_10_js/renderer/scene/Camera.js:1:1,0x1c9a3033d60,~
script-source,489,file:///E:/Javascript%20Renderers/Javascript-Renderer-9v2/renderer_10_js/renderer/scene/Camera.js,/*\x0d\n * Renderer 10. The MIT License.\x0d\n * Copyright (c) 2022 rlkraft@pnw.edu\x0d\n * See LICENSE for details.\x0d\n*/\x0d\n\x0d\n/**\x0d\n   This {@code Camera} data structure represents a camera\x0d\n   located at the origin\x2C looking down the negative z-axis\x2C\x0d\n   with a near clipping plane.\x0d\n<p>\x0d\n   This {@code Camera} has a configurable "view volume" that\x0d\n   determines what part of space the camera "sees" when we use\x0d\n   the camera to take a picture (that is\x2C when we render a\x0d\n   {@link Scene}).\x0d\n<p>\x0d\n   This {@code Camera} can "take a picture" two ways\x2C using\x0d\n   a perspective projection or a parallel (orthographic)\x0d\n   projection. Each way of taking a picture has a different\x0d\n   shape for its view volume. The data in this data structure\x0d\n   determines the shape of each of the two view volumes.\x0d\n<p>\x0d\n   For the perspective projection\x2C the view volume (in view\x0d\n   coordinates!) is an infinitely long pyramid that is formed\x0d\n   by the pyramid with its apex at the origin and its base in\x0d\n   the plane {@code z = -near} with edges {@code x = left}\x2C\x0d\n   {@code x = right}\x2C {@code y = top}\x2C and {@code y = bottom}.\x0d\n   The perspective view volume's shape is set by the\x0d\n   {@link projPerspective} method.\x0d\n<p>\x0d\n   For the orthographic projection\x2C the view volume (in view\x0d\n   coordinates!) is an infinitely long rectangular cylinder\x0d\n   parallel to the z-axis and with sides {@code x = left}\x2C\x0d\n   {@code x = right}\x2C {@code y = top}\x2C and {@code y = bottom}\x0d\n   (an infinite parallelepiped). The orthographic view volume's\x0d\n   shape is set by the {@link projOrtho} method.\x0d\n<p>\x0d\n   When the graphics rendering {@link renderer.pipeline.Pipeline}\x0d\n   uses this {@code Camera} to render a {@link Scene}\x2C the renderer\x0d\n   only "sees" the geometry from the scene that is contained in this\x0d\n   camera's view volume. (Notice that this means the orthographic\x0d\n   camera will see geometry that is behind the camera. In fact\x2C the\x0d\n   perspective camera also sees geometry that is behind the camera.)\x0d\n   The renderer's {@link renderer.pipeline.NearClip} and\x0d\n   {@link renderer.pipeline.Clip} pipeline stages are responsible\x0d\n   for making sure that the scene's geometry that is outside of this\x0d\n   camera's view volume is not visible.\x0d\n<p>\x0d\n   The plane {@code z = -near} (in view coordinates) is the camera's\x0d\n   image plane. The rectangle in the image plane with corners\x0d\n   {@code (left\x2C bottom\x2C -near)} and {@code (right\x2C top\x2C -near)} is\x0d\n   the camera's view rectangle. The view rectangle is like the film\x0d\n   in a real camera\x2C it is where the camera's image appears when you\x0d\n   take a picture. The contents of the camera's view rectangle (after\x0d\n   it gets "normalized" to camera coordinates by the renderer's\x0d\n   {@link renderer.pipeline.View2Camera} stage) is what gets rasterized\x2C\x0d\n   by the renderer's {@link renderer.pipeline.Rasterize}\x0d\n   pipeline stage\x2C into a {@link renderer.framebuffer.FrameBuffer}'s\x0d\n   {@link renderer.framebuffer.FrameBuffer.Viewport}.\x0d\n<p>\x0d\n   For both the perspective and the parallel projections\x2C the camera's\x0d\n   near plane is there to prevent the camera from seeing what is "behind"\x0d\n   the near plane. For the perspective projection\x2C the near plane also\x0d\n   prevents the renderer from incorrectly rasterizing line segments that\x0d\n   cross the camera plane\x2C {@code z = 0}.\x0d\n*/\x0d\n\x0d\n//@ts-check\x0d\nimport {format} from "../scene/util/UtilExport.js";\x0d\n\x0d\nexport default class Camera\x0d\n{\x0d\n    /**@type {number} left the left wall of the view volumne*/ left;\x0d\n    /**@type {number} right the right wall of the view valumne*/ right;\x0d\n    /**@type {number} bottom the bottom wall of the view valumne*/ bottom;\x0d\n    /**@type {number} top the top wall of the view valumne*/ top;\x0d\n    /**@type {number} n the front wall of the view valumne*/ n;\x0d\n    /**@type {boolean} perspective whether the camera is projecting ortho or perspective*/ perspective;\x0d\n\x0d\n    /**\x0d\n     * Set up this {@code Camera}'s view volume as a specified by {@param} persp\x0d\n     *\x0d\n     * @param {number} [l=-1] the left edge of view rectangle in the near plane\x0d\n     * @param {number} [r=1] the right edge of view rectangle in the near plane\x0d\n     * @param {number} [b=-1] the bottom edge of view rectangle in the near plane\x0d\n     * @param {number} [t=1] the top edge of view rectangle in the near plane\x0d\n     * @param {number} [near=1] the front edge of view rectangle in the near plane\x2C distance from origin to view plane\x0d\n     * @param {boolean} [persp=true] whether to project perspective or orthographic\x0d\n     */\x0d\n    constructor(l = -1\x2C r = -l\x2C b = -1\x2C t = -b\x2C near = 1\x2C persp = true)\x0d\n    {\x0d\n        if (typeof persp != "boolean")\x0d\n            throw new Error("Perspective must be a boolean");\x0d\n\x0d\n        if(persp)\x0d\n            this.projPerspective(l\x2C r\x2C b\x2C t\x2C near);\x0d\n        else\x0d\n            this.projOrtho(l\x2C r\x2C b\x2C t\x2C near);\x0d\n    }\x0d\n\x0d\n\x0d\n    /**\x0d\n     * Set up this {@code Camera}'s view volume as a perspective projection\x0d\n     * of an infinite view pyramid extending along the negative z-axis.\x0d\n     *\x0d\n     * @param {number} [left=-1] the left edge of view rectangle in the near plane\x0d\n     * @param {number} [right=-1*left] the right edge of view rectangle in the near plane\x0d\n     * @param {number} [bottom=-1] the bottom edge of view rectangle in the near plane\x0d\n     * @param {number} [top=-1*bottom] the top edge of view rectangle in the near plane\x0d\n     * @param {number} [near=1] the front edge of view rectangle in the near plane\x2C distance from origin to view plane\x0d\n     */\x0d\n    projPerspective(left = -1\x2C right = -1 * left\x2C bottom = -1\x2C top = -1 * bottom\x2C near = 1)\x0d\n    {\x0d\n        if (typeof left != "number"   ||\x0d\n            typeof right != "number"  ||\x0d\n            typeof bottom != "number" ||\x0d\n            typeof top != "number"    ||\x0d\n            typeof near != "number")\x0d\n                throw new Error("All parameters must be numerical");\x0d\n\x0d\n        this.left = left;\x0d\n        this.right = right;\x0d\n        this.bottom = bottom;\x0d\n        this.top = top;\x0d\n        this.n = -1 * near;\x0d\n\x0d\n        this.perspective = true;\x0d\n    }\x0d\n\x0d\n\x0d\n    /**\x0d\n     * An alternative way to determine this {@code Camera}'s perspective\x0d\n       view volume.\x0d\n       <p>\x0d\n       Here\x2C the view volume is determined by a vertical "field of view"\x0d\n       angle and an aspect ratio for the view rectangle in the near plane.\x0d\n\x0d\n     * @param {number} [fovy=90] angle in the y-direction subtended by the view rectangle in the near plane\x0d\n     * @param {number} [aspect=1] aspect ratio of the view rectangle in the near plane\x0d\n     * @param {number} [near=1] distance from the origin to the near plane\x0d\n     */\x0d\n    projPerspectiveFOVY(fovy = 90\x2C aspect = 1\x2C near = 1)\x0d\n    {\x0d\n        if (typeof fovy != "number"   ||\x0d\n            typeof aspect != "number" ||\x0d\n            typeof near != "number")\x0d\n                throw new Error("FOVY\x2C aspect\x2C and near must be numerical");\x0d\n\x0d\n        this.top = near * Math.tan((Math.PI/180)*fovy/2);\x0d\n        this.bottom = -1 * this.top;\x0d\n        this.right = this.top * aspect;\x0d\n        this.left = -1 * this.right;\x0d\n        this.n = -1 * near;\x0d\n        this.perspective = true;\x0d\n\x0d\n        // why do we call this fucntion? the only difference is the one line this.perspective = true?\x0d\n        // this.projPerspective(this.left\x2C this.right\x2C this.bottom\x2C this.top\x2C this.near);\x0d\n    }\x0d\n\x0d\n\x0d\n    /**\x0d\n     * Set up this {@code Camera}'s view volume as a parallel (orthographic)\x0d\n       projection of an infinite view parallelepiped extending along the\x0d\n       z-axis.\x0d\n\x0d\n     * @param {number} [left=-1] left edge of view rectangle in the xy-plane\x0d\n     * @param {number} [right=1] right edge of view rectangle in the xy-plane\x0d\n     * @param {number} [bottom=-1] bottom edge of view rectangle in the xy-plane\x0d\n     * @param {number} [top=-1] top edge of view rectangle in the xy-plane\x0d\n     * @param {number} [near=-1] distance from the origin to the near plane\x0d\n     */\x0d\n    projOrtho(left = -1\x2C right = 1\x2C bottom = -1\x2C top = 1\x2C near = -1)\x0d\n    {\x0d\n        if (typeof left != "number"   ||\x0d\n            typeof right != "number"  ||\x0d\n            typeof bottom != "number" ||\x0d\n            typeof top != "number"    ||\x0d\n            typeof near != "number")\x0d\n                throw new Error("All parameters must be numerical");\x0d\n\x0d\n        this.left = left;\x0d\n        this.right = right;\x0d\n        this.bottom = bottom;\x0d\n        this.top = top;\x0d\n        this.n = -1 * near;\x0d\n\x0d\n        this.perspective = false;\x0d\n    }\x0d\n\x0d\n\x0d\n    /**\x0d\n     * An alternative way to determine this {@code Camera}'s orthographic\x0d\n     * view volume.\x0d\n     * <p>\x0d\n     * Here\x2C the view volume is determined by a vertical "field-of-view"\x0d\n     * angle and an aspect ratio for the view rectangle in the near plane.\x0d\n\x0d\n     * @param {number} [fovy=90]  angle in the y direction subtended by the view rectangle in the near plane\x0d\n     * @param {number} [aspect=1] aspect ratio of the view rectangle in the near plane\x0d\n     * @param {number} [near=-1] distance from the origin to the near plane\x0d\n     */\x0d\n    projOrthoFOVY(fovy = 90\x2C aspect = 1\x2C near = -1)\x0d\n    {\x0d\n        if (typeof fovy != "number" || typeof aspect != "number" || typeof near != "number")\x0d\n            throw new Error("All parameters must be numerical");\x0d\n\x0d\n        this.top = near * Math.tan((Math.PI/180)*fovy/2);\x0d\n        this.bottom = -1 * this.top;\x0d\n        this.right = this.top * aspect;\x0d\n        this.left = -1 * this.right;\x0d\n        this.n = -1 * near;\x0d\n        this.perspective = false;\x0d\n\x0d\n        // why do we call this fucntion? the only difference is the one line this.perspective = false?\x0d\n        // this.projPerspective(this.left\x2C this.right\x2C this.bottom\x2C this.top\x2C this.near);\x0d\n    }\x0d\n\x0d\n\x0d\n    /**\x0d\n      For debugging.\x0d\n\x0d\n      @return {string} representation of this {@code Camera} object\x0d\n    */\x0d\n    toString()\x0d\n    {\x0d\n        const fovy = 2 * (180 / Math.PI) * Math.atan(this.top/(-1*this.n));\x0d\n        const ratio = (this.right - this.left) / (this.top - this.bottom);\x0d\n\x0d\n        let result = "";\x0d\n        result += "Camera: \\n";\x0d\n        result += "  perspective = " + this.perspective + "\\n";\x0d\n        result += "  left = "   + this.left + "\x2C "\x0d\n               +  "  right = "  + this.right + "\\n"\x0d\n               +  "  bottom = " + this.bottom + "\x2C "\x0d\n               +  "  top = "    + this.top + "\\n"\x0d\n               +  "  near = "   + -1 * this.n + "\\n"\x0d\n               +  "  (fovy = " + fovy\x0d\n               +  format("\x2C aspect ratio = %.2f)"\x2C ratio );\x0d\n\x0d\n        return result;\x0d\n    }\x0d\n\x0d\n\x0d\n    /**\x0d\n     * Method for testing camera class\x0d\n     */\x0d\n    static main()\x0d\n    {\x0d\n        console.log("Creating cam1 = new Camera()");\x0d\n        const cam1 = new Camera();\x0d\n        console.log("cam1: ");\x0d\n        console.log(cam1.toString());\x0d\n\x0d\n        console.log("");\x0d\n        console.log("cam1.projOrtho(-2\x2C 2\x2C -2\x2C 2\x2C 2): ");\x0d\n        cam1.projOrtho(-2\x2C 2\x2C -2\x2C 2\x2C 2);\x0d\n        console.log(cam1.toString());\x0d\n\x0d\n        console.log("");\x0d\n        console.log("cam1.projPerspFOVY(): ")\x0d\n        cam1.projPerspectiveFOVY();\x0d\n        console.log(cam1.toString());\x0d\n\x0d\n        console.log("");\x0d\n        console.log("Creating cam2 = new Camera(-4\x2C 4\x2C -4\x2C 4\x2C false)");\x0d\n        const cam2 = new Camera(-4\x2C 4\x2C -4\x2C 4\x2C 4\x2C false);\x0d\n        console.log("cam2: ");\x0d\n        console.log(cam2.toString());\x0d\n\x0d\n        console.log("");\x0d\n        console.log("cam2.projPerspective(-3\x2C 3\x2C -3\x2C 3\x2C 3): ");\x0d\n        cam2.projPerspective(-3\x2C 3\x2C -3\x2C 3\x2C 3);\x0d\n        console.log(cam2.toString());\x0d\n\x0d\n        console.log("");\x0d\n        console.log("cam2.projOrthoFOVY(): ");\x0d\n        cam2.projOrthoFOVY();\x0d\n        console.log(cam2.toString());\x0d\n    }\x0d\n}
code-source-info,0x1c9a30344c0,489,0,11587,C10O0C28O0C48O0C128O3381C133O11587,,
code-creation,Function,10,459387,0x1c9a30345f8,32,<instance_members_initializer> file:///E:/Javascript%20Renderers/Javascript-Renderer-9v2/renderer_10_js/renderer/scene/Camera.js:71:16,0x1c9a3034200,~
code-source-info,0x1c9a30345f8,489,3381,11587,C1O3461C6O3533C11O3608C16O3678C21O3745C26O3840C31O11587,,
code-creation,Script,10,460362,0x1c9a3036958,231, file:///E:/Javascript%20Renderers/Javascript-Renderer-9v2/renderer_10_js/renderer/scene/Matrix.js:1:1,0x1c9a3035878,~
script-source,490,file:///E:/Javascript%20Renderers/Javascript-Renderer-9v2/renderer_10_js/renderer/scene/Matrix.js,/*\x0d\n * Renderer 10. The MIT License.\x0d\n * Copyright (c) 2022 rlkraft@pnw.edu\x0d\n * See LICENSE for details.\x0d\n*/\x0d\n\x0d\n/**\x0d\n   A {@code Matrix} object has four {@link Vector} objects.\x0d\n<p>\x0d\n   The four {@link Vector} objects represent the four column vectors\x0d\n   of the 4-by-4 matrix (as in a Linear Algebra course).\x0d\n<p>\x0d\n   In computer graphics\x2C the points and vectors of 3-dimensional space\x0d\n   are represented using 4-dimensional homogeneous coordinates.\x0d\n   So each transformation of 3-dimensional space is represented by\x0d\n   a 4-by-4 (homogeneous) matrix.\x0d\n<p>\x0d\n   A 4-by-4 matrix represents a transformation of 3-dimensional space.\x0d\n   The most common transformations are translation\x2C rotation\x2C and\x0d\n   scaling. A 4-by-4 matrix can also represent a projection transformation.\x0d\n*/\x0d\n//@ts-check\x0d\nimport {format} from "../scene/util/UtilExport.js";\x0d\nimport {Camera\x2C Model\x2C OrthoNorm\x2C PerspNorm\x2C Position\x2C Scene\x2C Vector\x2C Vertex} from "./SceneExport.js";\x0d\n\x0d\nexport default class Matrix\x0d\n{\x0d\n\x0d\n   /** @type {Vector} v1 the first column vector of this matrix*/ v1;\x0d\n   /** @type {Vector} v2 the second column vector of this matrix*/ v2;\x0d\n   /** @type {Vector} v3 the third column vector of this matrix*/ v3;\x0d\n   /** @type {Vector} v4 the fourth column vector of this matrix*/ v4;\x0d\n   /** @type {boolean} #instantiable\x2C allows private constructor*/ static #instantiable = false;\x0d\n\x0d\n   /**\x0d\n    * Construct an arbitrary 4x4 {@code Matrix} with the given column {@link Vector}s.\x0d\n    *\x0d\n    * NOTE: Use the Static Factory methods to create a matrix.\x0d\n    * This is for internal use only.\x0d\n    *\x0d\n    * @param {Vector} v1 1st column for the new {@code Matrix}\x0d\n    * @param {Vector} v2 2nd column for the new {@code Matrix}\x0d\n    * @param {Vector} v3 3rd column for the new {@code Matrix}\x0d\n    * @param {Vector} v4 4th column for the new {@code Matrix}\x0d\n    */\x0d\n   constructor(v1\x2C v2\x2C v3\x2C v4)\x0d\n   {\x0d\n      if (Matrix.#instantiable == false)\x0d\n         throw new Error("NON INSTANTIABLE Class");\x0d\n\x0d\n      if (v1 instanceof Vector == false ||\x0d\n          v2 instanceof Vector == false ||\x0d\n          v3 instanceof Vector == false ||\x0d\n          v4 instanceof Vector == false)\x0d\n            throw new Error("All parameters must be Vectors");\x0d\n\x0d\n      this.v1 = v1;\x0d\n      this.v2 = v2;\x0d\n      this.v3 = v3;\x0d\n      this.v4 = v4;\x0d\n\x0d\n      Matrix.#instantiable = false;\x0d\n   }\x0d\n\x0d\n\x0d\n   /**\x0d\n    * This is a static Factory method.\x0d\n    *\x0d\n    * Construct a 4x4 {@code Matrix} using the given column {@link Vector}s.\x0d\n    * @param {Vector} c1 1st column for the new {@code Matrix}\x0d\n    * @param {Vector} c2 2nd column for the new {@code Matrix}\x0d\n    * @param {Vector} c3 3rd column for the new {@code Matrix}\x0d\n    * @param {Vector} c4 4th column for the new {@code Matrix}\x0d\n    * @returns {Matrix} a new {@code Matrix} made from c1\x2C c2\x2C c3\x2C c4\x0d\n    */\x0d\n   static buildFromColumns(c1\x2C c2\x2C c3\x2C c4)\x0d\n   {\x0d\n      Matrix.#instantiable = true;\x0d\n      return new Matrix(c1\x2C c2\x2C c3\x2C c4);\x0d\n   }\x0d\n\x0d\n\x0d\n   /**\x0d\n    * This is a static factory method.\x0d\n    *\x0d\n    * Construct a 4x4 {@code Matrix} using the given row {@link Vector}s.\x0d\n    * @param {Vector} r1 1st row for the new {@code Matrix}\x0d\n    * @param {Vector} r2 2nd row for the new {@code Matrix}\x0d\n    * @param {Vector} r3 3rd row for the new {@code Matrix}\x0d\n    * @param {Vector} r4 4th row for the new {@code Matrix}\x0d\n    * @returns {Matrix} a new {@code Matrix} made from r1\x2C r2\x2C r3\x2C r4\x0d\n    */\x0d\n   static buildFromRows(r1\x2C r2\x2C r3\x2C r4)\x0d\n   {\x0d\n      if (r1 instanceof Vector == false ||\x0d\n          r2 instanceof Vector == false ||\x0d\n          r3 instanceof Vector == false ||\x0d\n          r4 instanceof Vector == false)\x0d\n            throw new Error("All parameters must be Vectors");\x0d\n\x0d\n      const c1 = new Vector(r1.x\x2C r2.x\x2C r3.x\x2C r4.x);\x0d\n      const c2 = new Vector(r1.y\x2C r2.y\x2C r3.y\x2C r4.y);\x0d\n      const c3 = new Vector(r1.z\x2C r2.z\x2C r3.z\x2C r4.z);\x0d\n      const c4 = new Vector(r1.w\x2C r2.w\x2C r3.w\x2C r4.w);\x0d\n\x0d\n      Matrix.#instantiable = true;\x0d\n\x0d\n      return new Matrix(c1\x2C c2\x2C c3\x2C c4);\x0d\n   }\x0d\n\x0d\n\x0d\n   /**\x0d\n    * This is a static factory method.\x0d\n    * Construct an identity {@code Matrix}.\x0d\n    *\x0d\n    * @returns {Matrix} an identity {@code Matrix}\x0d\n    */\x0d\n   static identity()\x0d\n   {\x0d\n      return Matrix.scaleXYZ(1\x2C 1\x2C 1);\x0d\n   }\x0d\n\x0d\n\x0d\n   /**\x0d\n    * This is a static Factory Method.\x0d\n    * Construct a translation {@code Matrix} that translates by the\x0d\n    * given amounts in the x\x2C y\x2C and z directions.\x0d\n    *\x0d\n    * @param {number } x translation factor for the x direction.\x0d\n    * @param {number} y translation factor for the y direction.\x0d\n    * @param {number} z translation factor for the z direction.\x0d\n    * @returns {Matrix} a new translation {@code Matrix}\x0d\n    */\x0d\n   static translate(x\x2C y\x2C z)\x0d\n   {\x0d\n      if (typeof x != "number"\x0d\n       || typeof y != "number"\x0d\n       || typeof z != "number")\x0d\n         throw new Error("All parameters must be numerical");\x0d\n\x0d\n      Matrix.#instantiable = true;\x0d\n      return new Matrix(new Vector(1\x2C 0\x2C 0\x2C 0)\x2C\x0d\n                        new Vector(0\x2C 1\x2C 0\x2C 0)\x2C\x0d\n                        new Vector(0\x2C 0\x2C 1\x2C 0)\x2C\x0d\n                        new Vector(x\x2C y\x2C z\x2C 1));\x0d\n   }\x0d\n\x0d\n\x0d\n   /**\x0d\n    * This is a static Factory method.\x0d\n    * Construct a diagonal {@code Matrix} with the given number on the diagonal.\x0d\n    * @param {number} d the diagonal value for the new {@code Matrix}\x0d\n    * @returns {Matrix} a new scale {@code Matrix}\x0d\n    */\x0d\n   static scale(d)\x0d\n   {\x0d\n      if (typeof d != "number")\x0d\n         throw new Error("D must be numerical");\x0d\n\x0d\n      return Matrix.scaleXYZ(d\x2C d\x2C d);\x0d\n   }\x0d\n\x0d\n\x0d\n   /**\x0d\n    * This is a static factory mehtod.\x0d\n    * Construct a diagonal {@code Matrix} that scales in the\x0d\n    * x\x2C y\x2C and z directions by the given values.\x0d\n    *\x0d\n    * @param {number} x scale factor for the x direction\x0d\n    * @param {number} y scale factor for the y direction\x0d\n    * @param {number} z scale factor for the z direction\x0d\n    * @returns {Matrix} a new scaling {@code Matrix}\x0d\n    */\x0d\n   static scaleXYZ(x\x2C y\x2C z)\x0d\n   {\x0d\n      if (typeof x != "number"\x0d\n       || typeof y != "number"\x0d\n       || typeof z != "number")\x0d\n         throw new Error("All parameters must be numercial");\x0d\n\x0d\n      Matrix.#instantiable = true;\x0d\n      return new Matrix(new Vector(x\x2C 0\x2C 0\x2C 0)\x2C\x0d\n                        new Vector(0\x2C y\x2C 0\x2C 0\x2C)\x2C\x0d\n                        new Vector(0\x2C 0\x2C z\x2C 0)\x2C\x0d\n                        new Vector(0\x2C 0\x2C 0\x2C 1));\x0d\n   }\x0d\n\x0d\n\x0d\n   /**\x0d\n    * This is a static factory mehtod.\x0d\n    * Construct a rotation {@code Matrix} that rotates around\x0d\n    * the x axis by the given angle theta.\x0d\n    *\x0d\n    * @param {number} theta angle in degrees to rotate around the x axis by\x0d\n    * @returns {Matrix} a new rotation {@code Matrix}\x0d\n    */\x0d\n   static rotateX(theta)\x0d\n   {\x0d\n      if (typeof theta != "number")\x0d\n         throw new Error("Theta must be numerical");\x0d\n\x0d\n      Matrix.#instantiable = true;\x0d\n      return Matrix.rotate(theta\x2C 1\x2C 0\x2C 0);\x0d\n   }\x0d\n\x0d\n\x0d\n   /**\x0d\n    * This is a static factory mehtod.\x0d\n    * Construct a rotation {@code Matrix} that rotates around\x0d\n    * the y axis by the given angle theta.\x0d\n    *\x0d\n    * @param {number} theta angle in degrees to rotate around the y axis by\x0d\n    * @returns {Matrix} a new rotation {@code Matrix}\x0d\n    */\x0d\n   static rotateY(theta)\x0d\n   {\x0d\n      if (typeof theta != "number")\x0d\n         throw new Error("Theta must be numerical");\x0d\n\x0d\n      Matrix.#instantiable = true;\x0d\n      return Matrix.rotate(theta\x2C 0\x2C 1\x2C 0);\x0d\n   }\x0d\n\x0d\n\x0d\n   /**\x0d\n    * This is a static factory mehtod.\x0d\n    * Construct a rotation {@code Matrix} that rotates around\x0d\n    * the z axis by the given angle theta.\x0d\n    *\x0d\n    * @param {number} theta angle in degrees to rotate around the z axis by\x0d\n    * @returns {Matrix} a new rotation {@code Matrix}\x0d\n    */\x0d\n   static rotateZ(theta)\x0d\n   {\x0d\n      if (typeof theta != "number")\x0d\n         throw new Error("Theta must be numerical");\x0d\n\x0d\n      Matrix.#instantiable = true;\x0d\n      return Matrix.rotate(theta\x2C 0\x2C 0\x2C 1);\x0d\n   }\x0d\n\x0d\n\x0d\n   /**\x0d\n      This is a static facory method.\x0d\n      <p>\x0d\n      Construct a rotation {@code Matrix} that rotates around\x0d\n      the axis vector {@code (x\x2Cy\x2Cz)} by the angle {@code theta}.\x0d\n      <p>\x0d\n      See\x0d\n      <a href="https://www.opengl.org/sdk/docs/man2/xhtml/glRotate.xml" target="_top">\x0d\n               https://www.opengl.org/sdk/docs/man2/xhtml/glRotate.xml</a>\x0d\n\x0d\n    * @param {number} theta angle in degrees to rotate around the axis vector by\x0d\n    * @param {number} x the x component of the axis vector to rotate around\x0d\n    * @param {number} y the y component of the axis vector to rotate around\x0d\n    * @param {number} z the z component of the axis vector to rotate around\x0d\n    * @returns {Matrix} a new rotation {@code Matrix}\x0d\n    */\x0d\n   static rotate(theta\x2C x\x2C y\x2C z)\x0d\n   {\x0d\n      if (typeof theta != "number" ||\x0d\n          typeof x != "number" ||\x0d\n          typeof y != "number" ||\x0d\n          typeof z != "number")\x0d\n            throw new Error("All parameters need to be numerical");\x0d\n\x0d\n      const norm = Math.sqrt(x*x + y*y + z*z);\x0d\n      const ux = x/norm;\x0d\n      const uy = y/norm;\x0d\n      const uz = z/norm;\x0d\n\x0d\n      const c = Math.cos( Math.PI/180 * theta);\x0d\n      const s = Math.sin( Math.PI/180 * theta);\x0d\n\x0d\n      Matrix.#instantiable = true;\x0d\n      return new Matrix(\x0d\n\x09\x09         new Vector(ux*ux*(1-c)+c\x2C      uy*ux*(1-c)+(uz*s)\x2C uz*ux*(1-c)-(uy*s)\x2C 0.0)\x2C\x0d\n                 new Vector(ux*uy*(1-c)-(uz*s)\x2C uy*uy*(1-c)+c\x2C      uz*uy*(1-c)+(ux*s)\x2C 0.0)\x2C\x0d\n                 new Vector(ux*uz*(1-c)+(uy*s)\x2C uy*uz*(1-c)-(ux*s)\x2C uz*uz*(1-c)+c\x2C      0.0)\x2C\x0d\n                 new Vector(0.0\x2C                0.0\x2C                0.0\x2C                1.0));\x0d\n\x0d\n   }\x0d\n\x0d\n\x0d\n   /**\x0d\n    * A scalar times this {@code Matrix} returns a new {@code Matrix}.\x0d\n    *\x0d\n    * @param {number} s scalar value to multiply this {@code Matrix} by\x0d\n    * @returns {Matrix} a new scaled {@code Matrix} = this * s\x0d\n    */\x0d\n   timesScalar(s)\x0d\n   {\x0d\n      if (typeof s != "number")\x0d\n         throw new Error("S must be numerical");\x0d\n\x0d\n      Matrix.#instantiable = true;\x0d\n      return new Matrix(this.v1.timesScalar(s)\x2C\x0d\n                        this.v2.timesScalar(s)\x2C\x0d\n                        this.v3.timesScalar(s)\x2C\x0d\n                        this.v4.timesScalar(s));\x0d\n   }\x0d\n\x0d\n\x0d\n   /**\x0d\n    * This {@code Matrix} times a {@link Vertex} returns a new {@link Vertex}.\x0d\n    *\x0d\n    * @param {Vertex} v the vertex to be multiplied by this {@code Matrix}\x0d\n    * @returns {Vertex}  a new {@link Vertex} = this * v\x0d\n    */\x0d\n   timesVertex(v)\x0d\n   {\x0d\n      if (v instanceof Vertex == false)\x0d\n         throw new Error("V must be a Vertex");\x0d\n\x0d\n      const newX = this.v1.x * v.x + this.v2.x * v.y + this.v3.x * v.z + this.v4.x * v.w;\x0d\n      const newY = this.v1.y * v.x + this.v2.y * v.y + this.v3.y * v.z + this.v4.y * v.w;\x0d\n      const newZ = this.v1.z * v.x + this.v2.z * v.y + this.v3.z * v.z + this.v4.z * v.w;\x0d\n      const newW = this.v1.w * v.x + this.v2.w * v.y + this.v3.w * v.z + this.v4.w * v.w;\x0d\n\x0d\n      return new Vertex(newX\x2C newY\x2C newZ\x2C newW);\x0d\n   }\x0d\n\x0d\n\x0d\n   /**\x0d\n    * This {@code Matrix} times a {@link Vector} returns a new {@link Vector}.\x0d\n    *\x0d\n    * @param {Vector} v the vector to be multiplied by this {@code Matrix}\x0d\n    * @returns {Vector}  a new {@link Vector} = this * v\x0d\n    */\x0d\n   timesVector(v)\x0d\n   {\x0d\n      if (v instanceof Vector == false)\x0d\n         throw new Error("V is not a Vector");\x0d\n\x0d\n      const newX = this.v1.x * v.x + this.v2.x * v.y + this.v3.x * v.z + this.v4.x * v.w;\x0d\n      const newY = this.v1.y * v.x + this.v2.y * v.y + this.v3.y * v.z + this.v4.y * v.w;\x0d\n      const newZ = this.v1.z * v.x + this.v2.z * v.y + this.v3.z * v.z + this.v4.z * v.w;\x0d\n      const newW = this.v1.w * v.x + this.v2.w * v.y + this.v3.w * v.z + this.v4.w * v.w;\x0d\n\x0d\n      return new Vector(newX\x2C newY\x2C newZ\x2C newW);\x0d\n   }\x0d\n\x0d\n\x0d\n   /**\x0d\n    * This {@code Matrix} times {@code Matrix} returns a new {@code Matrix}.\x0d\n    *\x0d\n    * @param {Matrix} m the matrix to be multiplied on the right of this {@code Matrix}\x0d\n    * @returns {Matrix}  a new {@code Matrix} = this * m\x0d\n    */\x0d\n   timesMatrix(m)\x0d\n   {\x0d\n      if (m instanceof Matrix == false)\x0d\n         throw new Error("M is not a Matrix");\x0d\n\x0d\n      Matrix.#instantiable = true;\x0d\n      return new Matrix(this.timesVector(m.v1)\x2C\x0d\n                        this.timesVector(m.v2)\x2C\x0d\n                        this.timesVector(m.v3)\x2C\x0d\n                        this.timesVector(m.v4));\x0d\n   }\x0d\n\x0d\n\x0d\n   /**\x0d\n    * Mutate this {@code Matrix} to contain the product of this * s.\x0d\n    *\x0d\n    * @param {number} s the number to scale this {@code Matrix} by\x0d\n    * @returns {Matrix}  a reference to this scaled {@code Matrix}\x0d\n    */\x0d\n   timesEqualsScalar(s)\x0d\n   {\x0d\n      if (typeof s != "number")\x0d\n         throw new Error("S is not numerical");\x0d\n\x0d\n      this.v1.timesEqualsScalar(s);\x0d\n      this.v2.timesEqualsScalar(s);\x0d\n      this.v3.timesEqualsScalar(s);\x0d\n      this.v4.timesEqualsScalar(s);\x0d\n\x0d\n      return this;\x0d\n   }\x0d\n\x0d\n\x0d\n   /**\x0d\n    * Mutate this {@code Matrix} to contain the product of this * m.\x0d\n    * @param {Matrix} m the matrix to be multiplied on the right of this {@link Matrix}\x0d\n    * @returns {Matrix}  a reference to this multiplied {@ Matrix} to facilitate chaining methods\x0d\n    */\x0d\n   mult(m)\x0d\n   {\x0d\n      if (m instanceof Matrix == false)\x0d\n         throw new Error("M is not a Matrix");\x0d\n\x0d\n      let x = 0\x2C y = 0\x2C z = 0\x2C w = 0;\x0d\n      x = m.v1.x;\x0d\n      y = m.v1.y;\x0d\n      z = m.v1.z;\x0d\n      w = m.v1.w;\x0d\n      const x1 = this.v1.x * x + this.v2.x * y + this.v3.x * z + this.v4.x * w;\x0d\n      const y1 = this.v1.y * x + this.v2.y * y + this.v3.y * z + this.v4.y * w;\x0d\n      const z1 = this.v1.z * x + this.v2.z * y + this.v3.z * z + this.v4.z * w;\x0d\n      const w1 = this.v1.w * x + this.v2.w * y + this.v3.w * z + this.v4.w * w;\x0d\n\x0d\n      x = m.v2.x;\x0d\n      y = m.v2.y;\x0d\n      z = m.v2.z;\x0d\n      w = m.v2.w;\x0d\n      const x2 = this.v1.x * x + this.v2.x * y + this.v3.x * z + this.v4.x * w;\x0d\n      const y2 = this.v1.y * x + this.v2.y * y + this.v3.y * z + this.v4.y * w;\x0d\n      const z2 = this.v1.z * x + this.v2.z * y + this.v3.z * z + this.v4.z * w;\x0d\n      const w2 = this.v1.w * x + this.v2.w * y + this.v3.w * z + this.v4.w * w;\x0d\n\x0d\n      x = m.v3.x;\x0d\n      y = m.v3.y;\x0d\n      z = m.v3.z;\x0d\n      w = m.v3.w;\x0d\n      const x3 = this.v1.x * x + this.v2.x * y + this.v3.x * z + this.v4.x * w;\x0d\n      const y3 = this.v1.y * x + this.v2.y * y + this.v3.y * z + this.v4.y * w;\x0d\n      const z3 = this.v1.z * x + this.v2.z * y + this.v3.z * z + this.v4.z * w;\x0d\n      const w3 = this.v1.w * x + this.v2.w * y + this.v3.w * z + this.v4.w * w;\x0d\n\x0d\n      x = m.v4.x;\x0d\n      y = m.v4.y;\x0d\n      z = m.v4.z;\x0d\n      w = m.v4.w;\x0d\n      const x4 = this.v1.x * x + this.v2.x * y + this.v3.x * z + this.v4.x * w;\x0d\n      const y4 = this.v1.y * x + this.v2.y * y + this.v3.y * z + this.v4.y * w;\x0d\n      const z4 = this.v1.z * x + this.v2.z * y + this.v3.z * z + this.v4.z * w;\x0d\n      const w4 = this.v1.w * x + this.v2.w * y + this.v3.w * z + this.v4.w * w;\x0d\n\x0d\n      this.v1.x = x1;\x0d\n      this.v1.y = y1;\x0d\n      this.v1.z = z1;\x0d\n      this.v1.w = w1;\x0d\n\x0d\n      this.v2.x = x2;\x0d\n      this.v2.y = y2;\x0d\n      this.v2.z = z2;\x0d\n      this.v2.w = w2;\x0d\n\x0d\n      this.v3.x = x3;\x0d\n      this.v3.y = y3;\x0d\n      this.v3.z = z3;\x0d\n      this.v3.w = w3;\x0d\n\x0d\n      this.v4.x = x4;\x0d\n      this.v4.y = y4;\x0d\n      this.v4.z = z4;\x0d\n      this.v4.w = w4;\x0d\n\x0d\n      return this;\x0d\n   }\x0d\n\x0d\n\x0d\n   /**\x0d\n    * Mutate this {@code Matrix} to contain the product of m * this.\x0d\n    * @param {Matrix} m the matrix to be multiplied on the left of this {@code Matrix}\x0d\n    * @returns {Matrix}  a reference to this multiplied {@code Matrix} for method chaining\x0d\n    */\x0d\n   multLeft(m)\x0d\n   {\x0d\n      if (m instanceof Matrix == false)\x0d\n         throw new Error("M is not a  Matrix");\x0d\n\x0d\n      this.v1.timesEqualsMatrix(m);\x0d\n      this.v2.timesEqualsMatrix(m);\x0d\n      this.v3.timesEqualsMatrix(m);\x0d\n      this.v4.timesEqualsMatrix(m);\x0d\n\x0d\n      return this;\x0d\n   }\x0d\n\x0d\n\x0d\n   /**\x0d\n    * For debugging.\x0d\n    *\x0d\n    * @returns {string} representation of this {@code Matrix}\x0d\n    */\x0d\n   toString()\x0d\n   {\x0d\n      let result = "";\x0d\n\x0d\n      result += format("[[%3.5f  %3.5f  %3.5f  %3.5f ]\\n"\x2C this.v1.x\x2C this.v2.x\x2C this.v3.x\x2C this.v4.x);\x0d\n      result += format(" [%3.5f  %3.5f  %3.5f  %3.5f ]\\n"\x2C this.v1.y\x2C this.v2.y\x2C this.v3.y\x2C this.v4.y);\x0d\n      result += format(" [%3.5f  %3.5f  %3.5f  %3.5f ]\\n"\x2C this.v1.z\x2C this.v2.z\x2C this.v3.z\x2C this.v4.z);\x0d\n      result += format(" [%3.5f  %3.5f  %3.5f  %3.5f ]]"\x2C  this.v1.w\x2C this.v2.w\x2C this.v3.w\x2C this.v4.w);\x0d\n\x0d\n      //result += "[[" + this.v1.x + " " + this.v2.x + " " + this.v3.x + " " + this.v4.x + "]\\n";\x0d\n      //result += " [" + this.v1.y + " " + this.v2.y + " " + this.v3.y + " " + this.v4.y + "]\\n";\x0d\n      //result += " [" + this.v1.z + " " + this.v2.z + " " + this.v3.z + " " + this.v4.z + "]\\n";\x0d\n      //result += " [" + this.v1.w + " " + this.v2.w + " " + this.v3.w + " " + this.v4.w + "]]\\n";\x0d\n\x0d\n      return result;\x0d\n   }\x0d\n\x0d\n\x0d\n   /**\x0d\n    * Static function used to test methods.\x0d\n    */\x0d\n    static main()\x0d\n    {\x0d\n        console.log("Creating vector v1 = new Vector(1\x2C 2\x2C 3)");\x0d\n        console.log("Creating vector v2 = new Vector(4\x2C 5\x2C 6)");\x0d\n        console.log("Creating vector v3 = new Vector(7\x2C 8\x2C 9)");\x0d\n        console.log("Creating vector v4 = new Vector(10\x2C 11\x2C 12)");\x0d\n        const v1 = new Vector(1\x2C 2\x2C 3)\x2C v2 = new Vector(4\x2C 5\x2C 6);\x0d\n        const v3 = new Vector(7\x2C 8\x2C 9)\x2C v4 = new Vector(10\x2C 11\x2C 12);\x0d\n\x0d\n        console.log("");\x0d\n        console.log("Creating m1 = buildColumns(v1\x2C v2\x2C v3\x2C v4) : ");\x0d\n        const m1 = Matrix.buildFromColumns(v1\x2C v2\x2C v3\x2C v4);\x0d\n        console.log(m1.toString());\x0d\n\x0d\n        console.log("");\x0d\n        console.log("Creating m2 = buildRows(v1\x2C v2\x2C v3\x2C v4): ");\x0d\n        const m2 = Matrix.buildFromRows(v1\x2C v2\x2C v3\x2C v4);\x0d\n        console.log(m2.toString());\x0d\n\x0d\n        console.log("");\x0d\n        console.log("Creating id = identity(): ");\x0d\n        const id = Matrix.identity();\x0d\n        console.log(id.toString());\x0d\n\x0d\n        console.log("");\x0d\n        console.log("Creating trans = translate(1\x2C 1\x2C 1): ");\x0d\n        const trans = Matrix.translate(1\x2C 1\x2C 1);\x0d\n        console.log(trans.toString());\x0d\n\x0d\n        console.log("");\x0d\n        console.log("Creating sc = scale(2): ");\x0d\n        const sc = Matrix.scale(2);\x0d\n        console.log(sc.toString());\x0d\n\x0d\n        console.log("");\x0d\n        console.log("Creating scXYZ = scale(3\x2C 3\x2C 3): ");\x0d\n        const scXYZ = Matrix.scaleXYZ(3\x2C 3\x2C 3);\x0d\n        console.log(scXYZ.toString());\x0d\n\x0d\n        console.log("");\x0d\n        console.log("Creating rotX = rotateX(90): ");\x0d\n        const rotX = Matrix.rotateZ(90);\x0d\n        console.log(rotX.toString());\x0d\n\x0d\n        console.log("");\x0d\n        console.log("Creating rotY = rotateY(90): ");\x0d\n        const rotY = Matrix.rotateY(90);\x0d\n        console.log(rotY.toString());\x0d\n\x0d\n        console.log("");\x0d\n        console.log("Creating rotZ = rotateZ(90): ");\x0d\n        const rotZ = Matrix.rotateZ(90);\x0d\n        console.log(rotZ.toString());\x0d\n\x0d\n        console.log("");\x0d\n        console.log("Creating rot = rotate(90\x2C 1\x2C 1\x2C 1): ");\x0d\n        const rot = Matrix.rotate(90\x2C 1\x2C 1\x2C 1);\x0d\n        console.log(rot.toString());\x0d\n\x0d\n        console.log("");\x0d\n        console.log("Creating timesSC = m1.timesScalar(5): ");\x0d\n        const timesSC = m1.timesScalar(5);\x0d\n        console.log(timesSC.toString());\x0d\n\x0d\n        console.log("");\x0d\n        console.log("Creating timesVert = m1.timesVertex(new Vertex(10\x2C 10\x2C 10)): ");\x0d\n        const timesVert = m1.timesVertex(new Vertex(10\x2C 10\x2C 10));\x0d\n        console.log(timesVert.toString());\x0d\n\x0d\n        console.log("");\x0d\n        console.log("Creating timesVect = m1.timesVect(v1): ");\x0d\n        const timesVect = m1.timesVector(v1);\x0d\n        console.log(timesVect.toString());\x0d\n\x0d\n\x0d\n        console.log("");\x0d\n        console.log("Outputing m1 and m2 to allow for checking of subsequent functions");\x0d\n        console.log(m1.toString());\x0d\n        console.log(m2.toString());\x0d\n\x0d\n\x0d\n        // this is wrong doesn't give right answer when checked using calculator\x0d\n        console.log("");\x0d\n        console.log("Creating timesMat = m1.timesMatrix(m2): ");\x0d\n        const timesMat = m1.timesMatrix(m2);\x0d\n        console.log(timesMat.toString());\x0d\n\x0d\n\x0d\n        //can comment out to allow for checking of m1.timesMatrix vs m1.mult\x0d\n\x0d\n        // this is wrong\x2C v3 doesn't get multiplied right\x0d\n        console.log("");\x0d\n        console.log("m1.timesEqualsScalar(5): ");\x0d\n        m1.timesEqualsScalar(5);\x0d\n        console.log(m1.toString());\x0d\n\x0d\n\x0d\n        console.log("");\x0d\n        console.log("m1.mult(m2): ");\x0d\n        m1.mult(m2);\x0d\n        console.log(m1.toString());\x0d\n\x0d\n        // this throws a m is not a matrix error but m1 is made using constructor\x0d\n        // it throws the error whether done before or after m1.mult(m2) so can't be\x0d\n        // that m1 got mutated.\x0d\n        console.log("");\x0d\n        console.log("m2.multLeft(m1): ");\x0d\n        m2.multLeft(m1);\x0d\n        console.log(m2.toString());\x0d\n    }\x0d\n}
code-source-info,0x1c9a3036958,490,0,20934,C10O0C28O0C48O0C225O968C230O20934,,
code-creation,Function,10,461793,0x1c9a3036ab0,10,<static_initializer> file:///E:/Javascript%20Renderers/Javascript-Renderer-9v2/renderer_10_js/renderer/scene/Matrix.js:33:68,0x1c9a30364e8,~
code-source-info,0x1c9a3036ab0,490,1340,1368,C3O1363C9O1368,,
code-creation,Function,10,461825,0x1c9a3036b58,22,<instance_members_initializer> file:///E:/Javascript%20Renderers/Javascript-Renderer-9v2/renderer_10_js/renderer/scene/Matrix.js:26:16,0x1c9a30364b0,~
code-source-info,0x1c9a3036b58,490,968,20934,C1O1053C6O1125C11O1196C16O1268C21O20934,,
new,MemoryChunk,0xc1e5040000,262144
code-creation,Script,10,463556,0x1c9a3039708,261, file:///E:/Javascript%20Renderers/Javascript-Renderer-9v2/renderer_10_js/renderer/scene/Model.js:1:1,0x1c9a3038458,~
script-source,491,file:///E:/Javascript%20Renderers/Javascript-Renderer-9v2/renderer_10_js/renderer/scene/Model.js,/*\x0d\n * Renderer 10. The MIT License.\x0d\n * Copyright (c) 2022 rlkraft@pnw.edu\x0d\n * See LICENSE for details.\x0d\n*/\x0d\n\x0d\n/**\x0d\n   A {@code Model} object represents a distinct geometric object in a\x0d\n   {@link Scene}. A {@code Model} data structure is mainly a {@link List}\x0d\n   of {@link Vertex} objects\x2C a {@link List} of {@link Primitive} objects\x2C\x0d\n   and a list of {@link Color} objects.\x0d\n<p>\x0d\n   Each {@link Vertex} object contains the xyz-coordinates\x2C in the\x0d\n   {@code Model}'s own coordinate system\x2C for one point from the\x0d\n   {@code Model}.\x0d\n<p>\x0d\n   Each {@link Color} object represents a color associated to one\x0d\n   (or more) {@link Vertex} objects.\x0d\n<p>\x0d\n   The {@link Vertex} objects represents points from the geometric object\x0d\n   that we are modeling. In the real world\x2C a geometric object has an infinite\x0d\n   number of points. In 3D graphics\x2C we "approximate" a geometric object by\x0d\n   listing just enough points to adequately describe the object. For example\x2C\x0d\n   in the real world\x2C a rectangle contains an infinite number of points\x2C but\x0d\n   it can be adequately modeled by just its four corner points. (Think about\x0d\n   a circle. How many points does it take to adequately model a circle? Look\x0d\n   at the {@link renderer.models_L.Circle} model.)\x0d\n<p>\x0d\n   Each {@link Primitive} object is either a {@link LineSegment} or a\x0d\n   {@link Point}.\x0d\n<p>\x0d\n   Each {@link LineSegment} object contains four integers\x2C two integers that\x0d\n   are the indices of two {@link Vertex} objects from the {@code Model}'s\x0d\n   vertex list\x2C and two integers that are indices of two {@link Color}\x0d\n   objects from the {@link Model}'s color list. The two vertices are the\x0d\n   line segment's two endpoints\x2C and each of the two colors is associated\x0d\n   with one of the two endpoints.\x0d\n<p>\x0d\n   Each {@link Point} object contains two integers\x2C one integer index of\x0d\n   a {@link Vertex} from the {@code Model}'s vertex list\x2C and one integer\x0d\n   index of a {@link Color} from the {@code Model}'s color list.\x0d\n<p>\x0d\n   We use {@link LineSegment} objects to represent the space between the\x0d\n   model's vertices. For example\x2C while a rectangle can be approximated by\x0d\n   its four corner points\x2C those same four points could also represent two\x0d\n   parallel line segments\x2C or they could represent two lines that cross each\x0d\n   other. By using four line segments that connect around the four points\x2C\x0d\n   we get a good\x2C unambiguous representation of a rectangle.\x0d\n<p>\x0d\n   If we modeled a circle using just points\x2C we would probably need to use\x0d\n   hundreds of points. But if we connect every two adjacent points with a\x0d\n   short line segment\x2C we can get a good model of a circle with just a few\x0d\n   dozen points.\x0d\n<p>\x0d\n   Our {@code Model}'s represent geometric objects as a "wire-frame" of line\x0d\n   segments\x2C that is\x2C a geometric object is drawn as a collection of "edges".\x0d\n   This is a fairly simplistic way of doing 3D graphics and we will improve\x0d\n   this in later renderers.\x0d\n<p>\x0d\n   See\x0d\n<br> <a href="https://en.wikipedia.org/wiki/Wire-frame_model" target="_top">\x0d\n              https://en.wikipedia.org/wiki/Wire-frame_model</a>\x0d\n<br>or\x0d\n<br> <a href="https://www.google.com/search?q=computer+graphics+wireframe&tbm=isch" target="_top">\x0d\n              https://www.google.com/search?q=computer+graphics+wireframe&tbm=isch</a>\x0d\n*/\x0d\n\x0d\n//@ts-check\x0d\nimport {Camera\x2C Matrix\x2C OrthoNorm\x2C PerspNorm\x2C Position\x2C Scene\x2C Vector\x2C Vertex\x2C Primitive\x2C LineSegment\x2C Point} from "./SceneExport.js";\x0d\nimport {Color} from "../framebuffer/FramebufferExport.js";\x0d\n\x0d\nexport default class Model\x0d\n{\x0d\n    /**@type {Vertex[]} #vertexList the array of vertexes for this model */#vertexList;\x0d\n\x0d\n    // should the type of primitive list be made into\x0d\n    // @type{LineSegment[]|Point[]}\x0d\n    // or would that be a problem if a model contains a combo of points and linesegments\x0d\n\x0d\n    /**@type {Primitive[]} #primitiveList the array of primitives for this model */#primitiveList;\x0d\n    /**@type {Color[]} #colorList the array of colors for this model */#colorList;\x0d\n    /**@type {string} #name the name for this model */#name;\x0d\n    /**@type {boolean} visible whether or not this model should be "seen" */visible;\x0d\n\x0d\n    /**\x0d\n     * Construct a {@code Model} with all the given data.\x0d\n     *\x0d\n     * @param {Vertex[]} [vList=new Array()] an array of {@link Vertex}s for this model\x0d\n     * @param {Primitive[]} [pList=new Array()] an array of {@link Primitive}s for this model\x0d\n     * @param {Color[]} [cList=new Array()] an array of {@link Color}s for this model\x0d\n     * @param {string} [name=""] the name for this model\x0d\n     * @param {boolean} [vis=true] whether this model should be seen by the renderer\x0d\n     */\x0d\n    constructor(vList= new Array()\x2C\x0d\n                pList= new Array()\x2C\x0d\n                cList = new Array()\x2C\x0d\n                name = ""\x2C\x0d\n                vis = true)\x0d\n    {\x0d\n        if (Array.isArray(vList) == false)\x0d\n            throw new Error("Vertex list must be array");\x0d\n\x0d\n        if (Array.isArray(pList) == false)\x0d\n            throw new Error("Primitive list must be array");\x0d\n\x0d\n        if (Array.isArray(cList) == false)\x0d\n            throw new Error("Color List must be array");\x0d\n\x0d\n        if (typeof name != "string")\x0d\n            throw new Error("Name must be a string");\x0d\n\x0d\n        if (typeof vis != "boolean")\x0d\n            throw new Error("Visible is not a boolean");\x0d\n\x0d\n        let vertexLength = 0;\x0d\n        this.#vertexList = new Array()\x0d\n        for (let x = 0; x < vList.length; x += 1)\x0d\n        {\x0d\n            if (vList[x] instanceof Vertex == false)\x0d\n            {\x0d\n                this.#vertexList.length = vertexLength;\x0d\n                throw new Error("Vertex List must contain Vertexes");\x0d\n            }\x0d\n            else\x0d\n            {\x0d\n                this.#vertexList.push(vList[x]);\x0d\n                vertexLength += 1;\x0d\n            }\x0d\n        }\x0d\n\x0d\n        let primitiveLength = 0;\x0d\n        this.#primitiveList = new Array();\x0d\n        for (let x = 0; x < pList.length; x += 1)\x0d\n        {\x0d\n            if (pList[x] instanceof Primitive == false)\x0d\n            {\x0d\n                this.#primitiveList.length = primitiveLength;\x0d\n                throw new Error("Primitive List mut contain Primitives")\x0d\n            }\x0d\n            else\x0d\n            {\x0d\n                this.#primitiveList.push(pList[x]);\x0d\n                primitiveLength += 1;\x0d\n            }\x0d\n        }\x0d\n\x0d\n        let colorLength = 0;\x0d\n        this.#colorList = new Array();\x0d\n        for (let x = 0; x < cList.length; x += 1)\x0d\n        {\x0d\n            if (cList[x] instanceof Color == false)\x0d\n            {\x0d\n                this.#colorList.length = colorLength;\x0d\n                throw new Error("Color List must only contain Colors");\x0d\n            }\x0d\n            else\x0d\n            {\x0d\n                this.#colorList.push(cList[x]);\x0d\n                colorLength += 1;\x0d\n            }\x0d\n        }\x0d\n\x0d\n        this.#name = name;\x0d\n        this.visible = vis;\x0d\n    }\x0d\n\x0d\n\x0d\n    /**\x0d\n     * Create an empty model with the given name.\x0d\n     *\x0d\n     * @param {string} [name=""] the name of the model\x0d\n     * @returns {Model} an empty model with the specified name\x0d\n     */\x0d\n    static buildName(name = "")\x0d\n    {\x0d\n        return new Model(new Array()\x2C new Array()\x2C new Array()\x2C name);\x0d\n    }\x0d\n\x0d\n\x0d\n    /**\x0d\n     * @returns {Vertex[]} returns a reference to this models array of vertexes\x0d\n     */\x0d\n    getVertexList()\x0d\n    {\x0d\n        return this.#vertexList;\x0d\n    }\x0d\n\x0d\n    /**\x0d\n     * @returns {Vertex[]} returns a reference to this models array of vertexes\x0d\n     */\x0d\n    get vertexList()\x0d\n    {\x0d\n        return this.#vertexList;\x0d\n    }\x0d\n\x0d\n\x0d\n    /**\x0d\n     * @returns {Primitive[]} returns a reference to this models array of primitives\x0d\n     */\x0d\n    getPrimitiveList()\x0d\n    {\x0d\n        return this.#primitiveList;\x0d\n    }\x0d\n\x0d\n    /**\x0d\n     * @returns {Primitive[]} returns a reference to this models array of primitives\x0d\n     */\x0d\n    get primitiveList()\x0d\n    {\x0d\n        return this.#primitiveList;\x0d\n    }\x0d\n\x0d\n\x0d\n    /**\x0d\n     * @returns {Color[]} returns a reference to this models array of colors\x0d\n     */\x0d\n    getColorList()\x0d\n    {\x0d\n        return this.#colorList;\x0d\n    }\x0d\n\x0d\n    /**\x0d\n     * @returns {Color[]} returns a reference to this models array of colors\x0d\n     */\x0d\n    get colorList()\x0d\n    {\x0d\n        return this.#colorList;\x0d\n    }\x0d\n\x0d\n\x0d\n    /**\x0d\n     * @returns {string} returns a reference to this models name\x0d\n     */\x0d\n    getName()\x0d\n    {\x0d\n        return this.#name;\x0d\n    }\x0d\n\x0d\n    /**\x0d\n     * @returns {string} returns a reference to this models name\x0d\n     */\x0d\n    get name()\x0d\n    {\x0d\n        return this.#name;\x0d\n    }\x0d\n\x0d\n\x0d\n    /**\x0d\n     * @param {string} name the new name for this model\x0d\n     */\x0d\n    setName(name = "")\x0d\n    {\x0d\n        if (typeof name != "string")\x0d\n            throw new Error("Name must be a string");\x0d\n\x0d\n        this.#name = name;\x0d\n    }\x0d\n\x0d\n    /**\x0d\n     * @param {string} n the new name for this model\x0d\n     */\x0d\n    set name(n)\x0d\n    {\x0d\n        if (typeof n != "string")\x0d\n            throw new Error("Name must be a string");\x0d\n\x0d\n        this.#name = n;\x0d\n    }\x0d\n\x0d\n\x0d\n    /**\x0d\n     * Get the {@link Vertex} at the specified index in this models vertexList.\x0d\n     *\x0d\n     * @param {number} [index=0] the index into this models vertexList\x0d\n     * @returns {Vertex} the vertex at the specified index\x0d\n     */\x0d\n    getVertex(index = 0)\x0d\n    {\x0d\n        if (typeof index != "number" )\x0d\n            throw new Error("Index must be numerical");\x0d\n\x0d\n        return this.#vertexList[index];\x0d\n    }\x0d\n\x0d\n\x0d\n    /**\x0d\n     * Add the vertex(s) to this models vertex list.\x0d\n     * @param  {...Vertex} vArray the vertexes to be added to the model\x0d\n     */\x0d\n    addVertex(... vArray)\x0d\n    {\x0d\n        for (let v of vArray)\x0d\n        {\x0d\n            if (v instanceof Vertex == false)\x0d\n                throw new Error("Can only add Vertexes");\x0d\n\x0d\n            this.#vertexList.push(v);\x0d\n        }\x0d\n    }\x0d\n\x0d\n\x0d\n     /**\x0d\n     * Get the {@link Primitive} at the specified index in this models primitive list.\x0d\n     *\x0d\n     * @param {number} [index=0] the index into this models primitive list\x0d\n     * @returns {Primitive} the primitive at the specified index\x0d\n     */\x0d\n    getPrimitive(index = 0)\x0d\n    {\x0d\n        if (typeof index != "number" )\x0d\n            throw new Error("Index must be numerical");\x0d\n\x0d\n        return this.#primitiveList[index];\x0d\n    }\x0d\n\x0d\n\x0d\n    /**\x0d\n     * Add the primitive(s) to this models primitive list.\x0d\n     * @param  {...Primitive} pArray the primitives to be added to the model\x0d\n     */\x0d\n    addPrimitive(... pArray)\x0d\n    {\x0d\n        for (let p of pArray)\x0d\n        {\x0d\n            if (p instanceof Primitive == false)\x0d\n                throw new  Error("Can only add primitives");\x0d\n\x0d\n            this.#primitiveList.push(p);\x0d\n        }\x0d\n    }\x0d\n\x0d\n\x0d\n     /**\x0d\n     * Get the {@link Color} at the specified index in this models color list.\x0d\n     *\x0d\n     * @param {number} [index=0] the index into this models colorlist\x0d\n     * @returns {Color} the color at the specified index\x0d\n     */\x0d\n    getColor(index = 0)\x0d\n    {\x0d\n        if (typeof index != "number")\x0d\n            throw new Error("Index must be numerical");\x0d\n\x0d\n        return this.#colorList[index];\x0d\n    }\x0d\n\x0d\n\x0d\n    /**\x0d\n     * Add the color(s) to this models color list.\x0d\n     * @param  {...Color} cArray the Colors to be added to the model\x0d\n     */\x0d\n    addColor(... cArray)\x0d\n    {\x0d\n        for (let c of cArray)\x0d\n        {\x0d\n            if (c instanceof Color == false)\x0d\n                throw new Error("Can only add Colors");\x0d\n\x0d\n            this.#colorList.push(c);\x0d\n        }\x0d\n    }\x0d\n\x0d\n\x0d\n    /**\x0d\n     * For debugging.\x0d\n     * @returns {string} the string representation of this model\x0d\n     */\x0d\n    toString()\x0d\n    {\x0d\n        let result = "";\x0d\n        result += "Model: " + this.#name + "\\n";\x0d\n        result += "This Model's visibility is: " + this.visible + "\\n";\x0d\n        result += "Model has " + this.#vertexList.length + " vertices.\\n";\x0d\n        result += "Model has " + this.#colorList.length + " colors.\\n";\x0d\n        result += "Model has " + this.#primitiveList.length + " primitives.\\n";\x0d\n\x0d\n        let i = 0;\x0d\n        for (let v of this.#vertexList)\x0d\n        {\x0d\n            result += i + ": " + v.toString() + "\\n";\x0d\n            ++i;\x0d\n        }\x0d\n        i = 0;\x0d\n        for (let c of this.#colorList)\x0d\n        {\x0d\n            result += i + ": " + c.toString() + "\\n";\x0d\n            ++i;\x0d\n        }\x0d\n        i = 0;\x0d\n        for (let p of this.#primitiveList)\x0d\n        {\x0d\n            result += i + ": " + p.toString() + "\\n";\x0d\n            ++i;\x0d\n        }\x0d\n\x0d\n        return result;\x0d\n    }\x0d\n\x0d\n\x0d\n    /**\x0d\n     * Method for testing the class\x0d\n     */\x0d\n    static main()\x0d\n    {\x0d\n        console.log("Creating m1 = new Model(): ");\x0d\n        const m1 = new Model();\x0d\n        console.log(m1.toString());\x0d\n\x0d\n        console.log("");\x0d\n        console.log("Creating m2 = buildName('Model 2'): ");\x0d\n        const m2 = Model.buildName("Model 2");\x0d\n        console.log(m2.toString());\x0d\n\x0d\n        console.log("");\x0d\n        console.log("m1.getVertexList(): ");\x0d\n        console.log(m1.getVertexList());\x0d\n\x0d\n        console.log("");\x0d\n        console.log("m1.vertexList(): ");\x0d\n        console.log(m1.vertexList);\x0d\n\x0d\n        console.log("");\x0d\n        console.log("m1.getPrimitiveList(): ");\x0d\n        console.log(m1.getPrimitiveList());\x0d\n\x0d\n        console.log("");\x0d\n        console.log("m1.primitiveList(): ");\x0d\n        console.log(m1.primitiveList);\x0d\n\x0d\n        console.log("");\x0d\n        console.log("m1.getColorList(): ");\x0d\n        console.log(m1.getColorList());\x0d\n\x0d\n        console.log("");\x0d\n        console.log("m1.colorList(): ");\x0d\n        console.log(m1.colorList);\x0d\n\x0d\n        console.log("");\x0d\n        console.log("m1.getName(): ");\x0d\n        console.log(m1.getName());\x0d\n\x0d\n        console.log("");\x0d\n        console.log("m1.name(): ");\x0d\n        console.log(m1.name);\x0d\n\x0d\n        console.log("");\x0d\n        console.log("m1.setName('Model 1')");\x0d\n        m1.setName("Model 1");\x0d\n        console.log(m1.toString())\x0d\n\x0d\n        console.log("");\x0d\n        console.log("m1.addVertex(new Vertex(0\x2C 0\x2C 0): ");\x0d\n        m1.addVertex(new Vertex(0\x2C 0\x2C 0));\x0d\n        console.log(m1.toString());\x0d\n\x0d\n        console.log("");\x0d\n        console.log("m1.addVertex(new Vertex(1\x2C 0\x2C 0)\x2C new Vertex(-1\x2C 0\x2C 0)\x2C new Vertex(0\x2C 1\x2C 0)\x2C new Vertex(0\x2C -1\x2C 0)): ");\x0d\n        m1.addVertex(new Vertex(1\x2C 0\x2C 0)\x2C\x0d\n                     new Vertex(-1\x2C 0\x2C 0)\x2C\x0d\n                     new Vertex(0\x2C 1\x2C 0)\x2C\x0d\n                     new Vertex(0\x2C -1\x2C 0));\x0d\n        console.log(m1.toString());\x0d\n\x0d\n        console.log("");\x0d\n        console.log("m1.getVertex(0).toString(): ");\x0d\n        console.log(m1.getVertex(0).toString());\x0d\n\x0d\n        console.log("");\x0d\n        console.log("m1.getVertex(3).toString(): ");\x0d\n        console.log(m1.getVertex(3).toString());\x0d\n\x0d\n        console.log("");\x0d\n        console.log("m1.addColor(new Color(0\x2C 0\x2C 0)): ");\x0d\n        m1.addColor(new Color(0\x2C 0\x2C 0));\x0d\n        console.log(m1.toString());\x0d\n\x0d\n        console.log("");\x0d\n        console.log("m1.addColor(Color.blue\x2C Color.red\x2C Color.green\x2C Color.yellow): ");\x0d\n        m1.addColor(Color.blue\x2C Color.red\x2C Color.green\x2C Color.yellow);\x0d\n        console.log(m1.toString());\x0d\n\x0d\n        console.log("");\x0d\n        console.log("m1.getColor(0): ");\x0d\n        console.log(m1.getColor(0).toString());\x0d\n\x0d\n        console.log("");\x0d\n        console.log("m1.getColor(3): ");\x0d\n        console.log(m1.getColor(3).toString());\x0d\n\x0d\n        console.log("");\x0d\n        console.log("m1.addPrimitive(new Point(0\x2C 0)")\x0d\n        m1.addPrimitive(new Point(0\x2C 0));\x0d\n        console.log(m1.toString());\x0d\n\x0d\n        console.log("");\x0d\n        console.log("m1.addPrimitive(new ls(1\x2C 3\x2C 1\x2C 3)\x2C new ls(1\x2C 4\x2C 1\x2C 4)\x2C new ls(2\x2C 3\x2C 2\x2C 3)\x2C new ls(2\x2C 4\x2C 2\x2C 4)): ");\x0d\n        m1.addPrimitive(LineSegment.buildVertexColors(1\x2C 3\x2C 1\x2C 3)\x2C\x0d\n                        LineSegment.buildVertexColors(1\x2C 4\x2C 1\x2C 4)\x2C\x0d\n                        LineSegment.buildVertexColors(2\x2C 3\x2C 2\x2C 3)\x2C\x0d\n                        LineSegment.buildVertexColors(2\x2C 4\x2C 2\x2C 4));\x0d\n        console.log(m1.toString());\x0d\n\x0d\n        console.log("");\x0d\n        console.log("m1.getPrimitive(0): ");\x0d\n        console.log(m1.getPrimitive(0).toString());\x0d\n\x0d\n        console.log("");\x0d\n        console.log("m1.getPrimitive(3): ");\x0d\n        console.log(m1.getPrimitive(3).toString());\x0d\n    }\x0d\n}
code-source-info,0x1c9a3039708,491,0,16215,C10O0C28O0C48O0C255O3529C260O16215,,
code-creation,Function,10,476271,0x1c9a3039898,39,<instance_members_initializer> file:///E:/Javascript%20Renderers/Javascript-Renderer-9v2/renderer_10_js/renderer/scene/Model.js:72:16,0x1c9a3039228,~
code-source-info,0x1c9a3039898,491,3529,16215,C4O3620C12O3903C20O3991C28O4058C33O4142C38O16215,,
tick,0x7ffaeaa0d0e4,476877,1,0x7ff725a90da0,3,0x7ff7264a2ab0,0x7ff6a66ea9ec,0x7ff6a66e771b,0x7ff72653f3f3
code-creation,Script,10,477840,0x1c9a303afd8,58, file:///E:/Javascript%20Renderers/Javascript-Renderer-9v2/renderer_10_js/renderer/scene/OrthographicNormalizeMatrix.js:1:1,0x1c9a303aa98,~
script-source,492,file:///E:/Javascript%20Renderers/Javascript-Renderer-9v2/renderer_10_js/renderer/scene/OrthographicNormalizeMatrix.js,/*\x0d\n * Renderer 10. The MIT License.\x0d\n * Copyright (c) 2022 rlkraft@pnw.edu\x0d\n * See LICENSE for details.\x0d\n*/\x0d\n\x0d\n/**\x0d\n   We use two steps to transform the camera's orthographic view volume\x0d\n   into the standard orthographic view volume. The first step translates\x0d\n   the  current view volume so that its center line is the z-axis. The\x0d\n   second step scales the translated view volume so that it intersects\x0d\n   the plane {@code z = 0} with corners {@code (-1\x2C -1\x2C 0)} and\x0d\n   {@code (+1\x2C +1\x2C 0)}.\x0d\n<p>\x0d\n   This matrix translates the camera's view volume so that the translated\x0d\n   view volume will be centered on the z-axis.\x0d\n   <pre>{@code\x0d\n     [ 1  0  0  -(r+l)/2 ]\x0d\n     [ 0  1  0  -(t+b)/2 ]\x0d\n     [ 0  0  1      0    ]\x0d\n     [ 0  0  0      1    ]\x0d\n   }</pre>\x0d\n   This matrix scales the translated view volume so that it will\x0d\n   be 2 units wide and 2 units tall at the view plane {@code z = 0}.\x0d\n   <pre>{@code\x0d\n     [ 2/(r-l)    0    0  0 ]\x0d\n     [   0     2/(t-b) 0  0 ]\x0d\n     [   0        0    1  0 ]\x0d\n     [   0        0    0  1 ]\x0d\n   }</pre>\x0d\n   The matrix product looks like this.\x0d\n   <pre>{@code\x0d\n     [ 1  0  0  -(r+l)/2 ]   [ 2/(r-l)    0    0  0 ]\x0d\n     [ 0  1  0  -(t+b)/2 ] = [   0     2/(t-b) 0  0 ]\x0d\n     [ 0  0  1      0    ]   [   0        0    1  0 ]\x0d\n     [ 0  0  0      1    ]   [   0        0    0  1 ]\x0d\n\x0d\n          [ 2/(r-l)    0    0  -(r+l)/2 ]\x0d\n        = [   0     2/(t-b) 0  -(t+b)/2 ]\x0d\n          [   0        0    1      0    ]\x0d\n          [   0        0    0      1    ]\x0d\n   }</pre>\x0d\n   This product matrix transforms the camera's orthographic view\x0d\n   volume into the standard (normalized) orthographic view volume\x0d\n   whose intersection with the view plane\x2C {@code z = 0}\x2C has\x0d\n   {@code left = -1}\x2C {@code right = +1}\x2C {@code bottom = -1}\x2C\x0d\n   and {@code top = +1}.\x0d\n*/\x0d\n\x0d\n//@ts-check\x0d\nimport {Camera\x2C Matrix\x2C Model\x2C PerspNorm\x2C Position\x2C Scene\x2C Vector\x2C Vertex} from "./SceneExport.js";\x0d\n\x0d\n\x0d\n/**\x0d\n * This is a static factory method.\x0d\n * <p>\x0d\n * Construct the {@link Matrix} that transforms from the\x0d\n * {@link Camera}'s orthographic view coordinate system to\x0d\n * the normalized orthographic camera coordinate system.\x0d\n\x0d\n * @param {number} l the left edge of the view volume\x0d\n * @param {number} r the right edge of the view volume\x0d\n * @param {number} b the bottom edge of the view volume\x0d\n * @param {number} t the top edge of the view volume\x0d\n * @returns {Matrix} a new matrix containing an orthographic normalization matrix\x0d\n */\x0d\nexport default function build(l\x2C r\x2C b\x2C t)\x0d\n{\x0d\n    if (typeof l != "number" ||\x0d\n        typeof r != "number" ||\x0d\n        typeof b != "number" ||\x0d\n        typeof t != "number")\x0d\n            throw new Error("L\x2C B\x2C R\x2C T must be numerical");\x0d\n\x0d\n    let m1\x2C m2;\x0d\n    m1 = Matrix.buildFromColumns(\x0d\n                   new Vector(  1.0\x2C      0.0\x2C    0.0\x2C 0.0)\x2C\x0d\n                   new Vector(  0.0\x2C      1.0\x2C    0.0\x2C 0.0)\x2C\x0d\n                   new Vector(  0.0\x2C      0.0\x2C    1.0\x2C 0.0)\x2C\x0d\n                   new Vector(-(r+l)/2\x2C -(t+b)/2\x2C 0.0\x2C 1.0));\x0d\n\x0d\n    m2 = Matrix.buildFromColumns(\x0d\n                   new Vector(2/(r-l)\x2C   0.0\x2C   0.0\x2C 0.0)\x2C\x0d\n                   new Vector(   0.0\x2C  2/(t-b)\x2C 0.0\x2C 0.0)\x2C\x0d\n                   new Vector(   0.0\x2C    0.0\x2C   1.0\x2C 0.0)\x2C\x0d\n                   new Vector(   0.0\x2C    0.0\x2C   0.0\x2C 1.0));\x0d\n\x0d\n    return m2.timesMatrix(m1);\x0d\n}\x0d\n
code-source-info,0x1c9a303afd8,492,0,3319,C10O0C28O0C48O0C57O3319,,
code-creation,Script,10,478627,0x1c9a303bad8,58, file:///E:/Javascript%20Renderers/Javascript-Renderer-9v2/renderer_10_js/renderer/scene/PerspectiveNormalizeMatrix.js:1:1,0x1c9a303b598,~
script-source,493,file:///E:/Javascript%20Renderers/Javascript-Renderer-9v2/renderer_10_js/renderer/scene/PerspectiveNormalizeMatrix.js,/*\x0d\n * Renderer 10. The MIT License.\x0d\n * Copyright (c) 2022 rlkraft@pnw.edu\x0d\n * See LICENSE for details.\x0d\n*/\x0d\n\x0d\n/**\x0d\n   We use two steps to transform the camera's perspective view volume\x0d\n   into the standard perspective view volume. The first step "skews" the\x0d\n   current view volume so that its center line is the negative z-axis.\x0d\n   The second step scales the skewed view volume so that it intersects\x0d\n   the plane {@code z = -1} with corners {@code (-1\x2C -1\x2C -1)} and\x0d\n   {@code (+1\x2C +1\x2C -1)}.\x0d\n<p>\x0d\n   Suppose we have an asymmetrical field-of-view in the yz-plane that is\x0d\n   determined by the two points {@code (t\x2C -near)} and {@code (b\x2C -near)}.\x0d\n   The center line of this field-of-view is determined by the point\x0d\n   {@code ((t+b)/2\x2C -near)}. We want to skew the yz-plane in the\x0d\n   y-direction along the z-axis so that the field-of-view's center line\x0d\n   becomes the z-axis. So we need to solve this equation for the value\x0d\n   of the skew factor {@code s}.\x0d\n   <pre>{@code\x0d\n      [ 1  s ] * [ (t+b)/2 ] = [  0   ]\x0d\n      [ 0  1 ]   [  -near  ]   [-near ]\x0d\n   }</pre>\x0d\n   This simplifies to the equation\x0d\n   <pre>{@code\x0d\n      (t+b)/2 + (s * -near) = 0\x0d\n      s * near = (t+b)/2\x0d\n      s = (t + b)/(2*near).\x0d\n   }</pre>\x0d\n   Once this field-of-view has been made symmetric with respect to the\x0d\n   z-axis\x2C we want to scale it in the y-direction so that the scaled\x0d\n   field-of-view has an angle at the origin of 90 degrees. We need to\x0d\n   scale the point {@code ((t-b)/2\x2C -near)} to {@code (near\x2C -near)}\x0d\n   (and the point {@code (-(t-b)/2\x2C -near)} to {@code (-near\x2C -near)}).\x0d\n   So we need to solve this equation for the value of the scale factor\x0d\n   {@code s}.\x0d\n   <pre>{@code\x0d\n      [ s  0 ] * [ (t-b)/2 ] = [ near ]\x0d\n      [ 0  1 ]   [  -near  ]   [-near ]\x0d\n   }</pre>\x0d\n   This simplifies to the equation\x0d\n   <pre>{@code\x0d\n      s * (t-b)/2 = near\x0d\n      s = 2*near/(t - b).\x0d\n   }</pre>\x0d\n<p>\x0d\n   Similar calculations can be made for the field-of-view in the xz-plane.\x0d\n<p>\x0d\n   The following matrix skews the camera's view volume along the\x0d\n   z-axis so that the transformed view volume will be centered on\x0d\n   the negative z-axis.\x0d\n   <pre>{@code\x0d\n     [ 1  0  (r+l)/(2*near)  0 ]\x0d\n     [ 0  1  (t+b)/(2*near)  0 ]\x0d\n     [ 0  0       1          0 ]\x0d\n     [ 0  0       0          1 ]\x0d\n   }</pre>\x0d\n   The following matrix scales the skewed view volume so that it will\x0d\n   be 2 units wide and 2 units tall at the view plane {@code z = -1}.\x0d\n   <pre>{@code\x0d\n     [ 2*near/(r-l)       0       0  0 ]\x0d\n     [       0      2*near/(t-b)  0  0 ]\x0d\n     [       0            0       1  0 ]\x0d\n     [       0            0       0  1 ]\x0d\n   }</pre>\x0d\n   The matrix product looks like this.\x0d\n   <pre>{@code\x0d\n     [ 1  0  (r+l)/(2*near)  0 ]   [ 2*near/(r-l)       0       0  0 ]\x0d\n     [ 0  1  (t+b)/(2*near)  0 ] * [       0      2*near/(t-b)  0  0 ]\x0d\n     [ 0  0       1          0 ]   [       0            0       1  0 ]\x0d\n     [ 0  0       0          1 ]   [       0            0       0  1 ]\x0d\n\x0d\n         [ 2*near/(r-l)       0       (r+l)/(r-l)  0 ]\x0d\n       = [   0          2*near/(t-b)  (t+b)/(t-b)  0 ]\x0d\n         [   0                0            1       0 ]\x0d\n         [   0                0            0       1 ]\x0d\n   }</pre>\x0d\n   This product matrix transforms the camera's perspective view\x0d\n   volume into the standard (normalized) perspective view volume\x0d\n   whose intersection with the view plane\x2C {@code z = -1}\x2C has\x0d\n   {@code left = -1}\x2C {@code right = +1}\x2C {@code bottom = -1}\x2C\x0d\n   and {@code top = +1}.\x0d\n*/\x0d\n//@ts-check\x0d\nimport {Camera\x2C Matrix\x2C Model\x2C OrthoNorm\x2C Position\x2C Scene\x2C Vector\x2C Vertex} from "./SceneExport.js";\x0d\n\x0d\n/**\x0d\n * This is a static factory method.\x0d\n * <p>\x0d\n * Construct the {@link Matrix} that transforms from the\x0d\n * {@link Camera}'s perspective view coordinate system to\x0d\n * the normalized perspective camera coordinate system.\x0d\n\x0d\n * @param {number} l the left edge of the view rectangle in the plane z = -near\x0d\n * @param {number} r the right edge of the view rectangle in the plane z = -near\x0d\n * @param {number} b the bottom edge of the view rectangle in the plane z = -near\x0d\n * @param {number} t the top edge of the view rectangle in the plane z = -near\x0d\n * @param {number} near the distance from the origin to the near plane\x0d\n * @returns {Matrix} a new matrix containing the perspective nomarlization matrix\x0d\n */\x0d\nexport default function build(l\x2C r\x2C b\x2C t\x2C near)\x0d\n{\x0d\n   if (typeof l != "number" ||\x0d\n       typeof r != "number" ||\x0d\n       typeof b != "number" ||\x0d\n       typeof t != "number" ||\x0d\n       typeof near != "number")\x0d\n           throw new Error("L\x2C R\x2C B\x2C T\x2C and near must be numerical");\x0d\n\x0d\n   let m1\x2C m2;\x0d\n\x0d\n   m1 = Matrix.buildFromColumns(\x0d\n           new Vector(    1.0\x2C            0.0\x2C        0.0\x2C 0.0)\x2C\x0d\n           new Vector(    0.0\x2C            1.0\x2C        0.0\x2C 0.0)\x2C\x0d\n           new Vector((r+l)/(2*near)\x2C (t+b)/(2*near)\x2C 1.0\x2C 0.0)\x2C\x0d\n           new Vector(    0.0\x2C            0.0\x2C        0.0\x2C 1.0));\x0d\n\x0d\n   m2 = Matrix.buildFromColumns(\x0d\n           new Vector(2*near/(r-l)\x2C      0.0\x2C     0.0\x2C 0.0)\x2C\x0d\n           new Vector(     0.0\x2C     2*near/(t-b)\x2C 0.0\x2C 0.0)\x2C\x0d\n           new Vector(     0.0\x2C          0.0\x2C     1.0\x2C 0.0)\x2C\x0d\n           new Vector(     0.0\x2C          0.0\x2C     0.0\x2C 1.0));\x0d\n\x0d\n   return m2.timesMatrix(m1);\x0d\n}
code-source-info,0x1c9a303bad8,493,0,5267,C10O0C28O0C48O0C57O5267,,
code-creation,Script,10,479753,0x1c9a303d650,273, file:///E:/Javascript%20Renderers/Javascript-Renderer-9v2/renderer_10_js/renderer/scene/Position.js:1:1,0x1c9a303c440,~
script-source,494,file:///E:/Javascript%20Renderers/Javascript-Renderer-9v2/renderer_10_js/renderer/scene/Position.js,/*\x0d\n * Renderer 10. The MIT License.\x0d\n * Copyright (c) 2022 rlkraft@pnw.edu\x0d\n * See LICENSE for details.\x0d\n*/\x0d\n\x0d\n/**\x0d\n   A {@code Position} data structure represents a group of geometric objects\x0d\n   positioned (both location and orientation) in three-dimensional space as\x0d\n   part of a {@link Scene}. A {@code Position} is a recursive data structure.\x0d\n   Every {@code Position} object contains a {@link List} of nested\x0d\n   {@code Position} objects. The list of nested {@code Position}s lets us\x0d\n   define what are called hierarchical\x2C or nested\x2C scenes. These are scenes\x0d\n   that are made up of groups of models and each group can be moved around\x0d\n   in the scene as a single unit while the individual models in the group\x0d\n   can also be moved around within the group.\x0d\n<p>\x0d\n   A {@code Position} object holds references to a {@link Model} object\x2C\x0d\n   a {@link Matrix} object\x2C and a {@code List} of {@code Position} objects.\x0d\n   A {@code Position}'s {@code List} of {@code Position} objects creates\x0d\n   a tree data structure of {@code Position} objects. A {@code Position}'s\x0d\n   {@link Model} object represents a geometric shape in the {@link Scene}.\x0d\n   The role of a {@code Position}'s  {@link Matrix} can be understood two\x0d\n   ways. First\x2C the {@link Matrix} determines the {@link Model}'s location\x0d\n   and orientation within the local coordinate system determined by the\x0d\n   {@code Position}'s parent {@code Position} (in the {@link Scene}'s forest\x0d\n   of {@code Position} objects). Second\x2C the {@link Matrix} determines a new\x0d\n   local coordinate system within which the {@link Model} (and all the nested\x0d\n   models lower in the tree) is plotted. The two ways of understanding a\x0d\n   {@code Position}'s  {@link Matrix} correspond to reading a matrix\x0d\n   transformation expression\x0d\n   <pre>{@code\x0d\n                T * v\x0d\n   }</pre>\x0d\n   from either right-to-left or left-to-right.\x0d\n<p>\x0d\n   When the renderer renders a {@code Position} object\x2C the renderer\x0d\n   traverses the tree of {@code Position}s rooted at the given\x0d\n   {@code Position}. The renderer does a recursive\x2C pre-order\x0d\n   depth-first-traversal of the tree. As the renderer traverses the tree\x2C\x0d\n   it accumulates a "current-transformation-matrix" that multiplies each\x0d\n   {@code Position}'s {@link Matrix} along the path from the tree's root\x0d\n   {@code Position} to wherever the traversal is in the tree (this is the\x0d\n   "pre-order" step in the traversal). The {@code ctm} is the current\x0d\n   model-to-view transformation {@link Matrix}. The first stage of the\x0d\n   rendering pipeline\x2C {@link renderer.pipeline.Model2View}\x2C multiplies every\x0d\n   {@link Vertex} in a {@link Model}'s vertex list by this {@code ctm}\x2C which\x0d\n   converts the coordinates in each {@link Vertex} from the model's own local\x0d\n   coordinate system to the {@code Camera}'s view coordinate system (which is "shared"\x0d\n   by all the other models). Multiplication by the {@code ctm} has the effect\x0d\n   of "placing" the model in view space at an appropriate location (using the\x0d\n   translation part of the {@code ctm}) and in the appropriate orientation\x0d\n   (using the rotation part of the {@code ctm}). Notice the difference between\x0d\n   a {@code Position}'s {@code ctm} and the {@code Position}'s {@link Matrix}.\x0d\n   At any specific node in the {@link Scene}'s forest of {@code Position} nodes\x2C\x0d\n   the {@code Position}'s {@link Matrix} places the {@code Position}'s\x0d\n   {@link Model} within the local coordinate system of the {@code Position}'s\x0d\n   parent {@code Position}. But the {@code Position}'s {@code ctm} places the\x0d\n   {@code Position}'s {@link Model} within the {@link Camera}'s view coordinate\x0d\n   system.\x0d\n*/\x0d\n//@ts-check\x0d\nimport {Camera\x2C Matrix\x2C Model\x2C OrthoNorm\x2C PerspNorm\x2C Scene\x2C Vector\x2C Vertex} from "./SceneExport.js";\x0d\n\x0d\nexport default class Position\x0d\n{\x0d\n   /**@type {Model} this positions model*/ #model;\x0d\n   /**@type {Matrix} this positions matrix*/#matrix;\x0d\n   /**@type {string} this positions string*/#name;\x0d\n   /**@type {Position[]} an array of positions*/#nestedPositions;\x0d\n   /**@type {boolean} whether to render this position*/visible;\x0d\n   /**@type {boolean} whether to output info on this position*/debug;\x0d\n\x0d\n   /**\x0d\n    * Construct a position with the given data.\x0d\n    *\x0d\n    * @param {Model} [model=new Model] this positions model\x0d\n    * @param {Matrix} [matrix=Matrix.identity()] this positions matrix\x0d\n    * @param {string} [name=""] this positions name\x0d\n    * @param {Position[]} [nestedPositions=new Array()] this positions array of nested positions\x0d\n    * @param {boolean} [visible=true] whether to render this position\x0d\n    * @param {boolean} [debug=false] whether to debug this position\x0d\n    */\x0d\n   constructor(model = new Model()\x2C\x0d\n               matrix = Matrix.identity()\x2C\x0d\n               name = ""\x2C\x0d\n               nestedPositions = new Array()\x2C\x0d\n               visible = true\x2C\x0d\n               debug = false)\x0d\n   {\x0d\n      if (model instanceof Model == false)\x0d\n         throw new Error("Model has to be a model");\x0d\n\x0d\n      if (matrix instanceof Matrix == false)\x0d\n         throw new Error("Matrix has to be a Matrix");\x0d\n\x0d\n      if (typeof name != "string")\x0d\n         throw new Error("Name has to be a string");\x0d\n\x0d\n      if (!Array.isArray(nestedPositions))\x0d\n         throw new Error("Nested Positions has to be an array");\x0d\n\x0d\n      if (typeof visible != "boolean" || typeof debug != "boolean")\x0d\n         throw new Error("Visible and Debug must be booleans");\x0d\n\x0d\n      let nestedLength = 0;\x0d\n      this.#nestedPositions = new Array();\x0d\n      for (let x = 0; x < nestedPositions.length; x += 1)\x0d\n      {\x0d\n         if (nestedPositions[x] instanceof Position == false)\x0d\n         {\x0d\n            this.#nestedPositions.length = nestedLength;\x0d\n            throw new Error("Nested Position must be a Position");\x0d\n         }\x0d\n         else\x0d\n         {\x0d\n            this.#nestedPositions.push(nestedPositions[x]);\x0d\n            nestedLength += 1;\x0d\n         }\x0d\n      }\x0d\n\x0d\n      this.#model = model;\x0d\n      this.#matrix = matrix;\x0d\n      this.#name = name;\x0d\n      this.visible = visible;\x0d\n      this.debug = debug;\x0d\n   }\x0d\n\x0d\n\x0d\n   /**\x0d\n    * Build a position with this model and the models name\x0d\n    * positioned using the identity matrix.\x0d\n    * @param {Model} model\x0d\n    * @returns {Position} the new position\x0d\n    */\x0d\n   static buildFromModel(model)\x0d\n   {\x0d\n      return new Position(model\x2C Matrix.identity()\x2C model.getName());\x0d\n   }\x0d\n\x0d\n\x0d\n   /**\x0d\n    * Build a position with a default model\x2C\x0d\n    * positions using the identity matrix\x2C\x0d\n    * with the given name.\x0d\n    * @param {string} name\x0d\n    * @returns {Position} the new position\x0d\n    */\x0d\n   static buildFromName(name)\x0d\n   {\x0d\n      return new Position(new Model()\x2C Matrix.identity()\x2C name);\x0d\n   }\x0d\n\x0d\n\x0d\n   /**\x0d\n    * Build a position with the given model and name\x0d\n    * positioned with the identity matrix.\x0d\n    * @param {Model} model\x0d\n    * @param {string} name\x0d\n    * @returns {Position} the new position\x0d\n    */\x0d\n   static buildFromModelName(model\x2C name)\x0d\n   {\x0d\n      return new Position(model\x2C Matrix.identity()\x2C name);\x0d\n   }\x0d\n\x0d\n\x0d\n   /**\x0d\n    * Get the name of this position.\x0d\n    * @returns {string} this positions name\x0d\n    */\x0d\n   getName()\x0d\n   {\x0d\n      return this.#name;\x0d\n   }\x0d\n\x0d\n   /**\x0d\n    * Get the name of this position.\x0d\n    * @returns {string} this positions name\x0d\n    */\x0d\n   get name()\x0d\n   {\x0d\n      return this.#name;\x0d\n   }\x0d\n\x0d\n\x0d\n   /**\x0d\n    * Get the model of this position.\x0d\n    * @returns {Model} return this positions model\x0d\n    */\x0d\n   getModel()\x0d\n   {\x0d\n      return this.#model;\x0d\n   }\x0d\n\x0d\n   /**\x0d\n    * Get the model of this position.\x0d\n    * @returns {Model} this positions model\x0d\n    */\x0d\n   get model()\x0d\n   {\x0d\n      return this.#model;\x0d\n   }\x0d\n\x0d\n\x0d\n   /**\x0d\n    * Set this positions model to be the given model.\x0d\n    * @param {Model} model\x0d\n    */\x0d\n   setModel(model)\x0d\n   {\x0d\n      if (model instanceof Model == false)\x0d\n         throw new Error("Model must be a Model");\x0d\n\x0d\n      if (model == undefined)\x0d\n         throw new Error("Model cannot be null or undefined")\x0d\n\x0d\n      this.#model = model;\x0d\n   }\x0d\n\x0d\n   /**\x0d\n    * Set this positions model to be the given model.\x0d\n    * @param {Model} mod\x0d\n    */\x0d\n   set model(mod)\x0d\n   {\x0d\n      if (mod instanceof Model == false)\x0d\n         throw new Error("Model must be a model");\x0d\n\x0d\n      if (mod == undefined)\x0d\n         throw new Error("Model cannot be null or undefined");\x0d\n\x0d\n      this.#model = mod;\x0d\n   }\x0d\n\x0d\n\x0d\n   /**\x0d\n    * Get this positions matrix.\x0d\n    * @returns {Matrix} this positions matrix\x0d\n    */\x0d\n   getMatrix()\x0d\n   {\x0d\n      return this.#matrix;\x0d\n   }\x0d\n\x0d\n   /**\x0d\n    * Get this positions matrix.\x0d\n    * @returns {Matrix} this positions matrix\x0d\n    */\x0d\n   get matrix()\x0d\n   {\x0d\n      return this.#matrix;\x0d\n   }\x0d\n\x0d\n\x0d\n   /**\x0d\n    * Set this positions matrix.\x0d\n    * NOTE this function is chainable.\x0d\n    * @param {Matrix} matrix\x0d\n    */\x0d\n   setMatrix(matrix)\x0d\n   {\x0d\n      if (matrix instanceof Matrix == false)\x0d\n         throw new Error("Matrix must be a Matrix");\x0d\n\x0d\n      if (matrix == undefined)\x0d\n         throw new Error("Matrix cannot be null or undefined");\x0d\n\x0d\n      this.#matrix = matrix;\x0d\n\x0d\n      return this.#matrix;\x0d\n   }\x0d\n\x0d\n   /**\x0d\n    * Set this positions matrix to be the given matrix.\x0d\n    * NOTE cannot use for method chaining.\x0d\n    *\x0d\n    * @param {Matrix} mat\x0d\n    */\x0d\n   set matrix(mat)\x0d\n   {\x0d\n      if (mat instanceof Matrix == false)\x0d\n         throw new Error("Matrix must be a matrix");\x0d\n\x0d\n      // should we check for null/undefined\x0d\n      if (mat == undefined)\x0d\n         throw new Error("Matrix cannot be undefined or null");\x0d\n\x0d\n      this.#matrix = mat;\x0d\n   }\x0d\n\x0d\n\x0d\n   /**\x0d\n    * Get this positions array of nested positions\x0d\n    * @returns {Position[]} all nested positions of this position\x0d\n    */\x0d\n   getNestedPositions()\x0d\n   {\x0d\n      return this.#nestedPositions;\x0d\n   }\x0d\n\x0d\n\x0d\n   /**\x0d\n    * get this positions array of nested positions\x0d\n    * @returns {Position[]} all nested positions of this position\x0d\n    */\x0d\n   get nestedPositions()\x0d\n   {\x0d\n      return this.#nestedPositions;\x0d\n   }\x0d\n\x0d\n\x0d\n   /**\x0d\n    * Reset this positions matrix to be the identity matrix\x0d\n    * @returns {Matrix} this positions reset identity matrix for method chaining\x0d\n    */\x0d\n   matrix2Identity()\x0d\n   {\x0d\n      this.#matrix = Matrix.identity();\x0d\n\x0d\n      return this.#matrix;\x0d\n   }\x0d\n\x0d\n\x0d\n   /**\x0d\n    * Set the nested position at the given index to be the given position\x0d\n    * @param {number} index the index to insert the position at\x0d\n    * @param {Position} position the position to be inserted into this positions nested positions\x0d\n    */\x0d\n   setNestedPosition(index\x2C position)\x0d\n   {\x0d\n      if (typeof index != "number")\x0d\n         throw new Error("Index must be numerical");\x0d\n\x0d\n      if (position instanceof Position == false)\x0d\n         throw new Error("Position must be a Position");\x0d\n\x0d\n      this.#nestedPositions[index] = position;\x0d\n   }\x0d\n\x0d\n\x0d\n   /**\x0d\n    * Add the given positions to this positions array of nested positions\x0d\n    * @param {Position[]} pArray the positions to be added into this positions array of nested position\x0d\n    */\x0d\n   addNestedPosition(... pArray)\x0d\n   {\x0d\n      let nestedLength = this.#nestedPositions.length;\x0d\n      for (let p of pArray)\x0d\n      {\x0d\n         if (p instanceof Position == false)\x0d\n         {\x0d\n            this.#nestedPositions.length = nestedLength;\x0d\n            throw new Error("Can only add Positions");\x0d\n         }\x0d\n         else\x0d\n         {\x0d\n            this.#nestedPositions.push(p);\x0d\n            nestedLength += 1;\x0d\n         }\x0d\n      }\x0d\n   }\x0d\n\x0d\n\x0d\n   /**\x0d\n    * DO NOT USE\x2C for compatibility with previous renderers\x0d\n    * @deprecated use the Matrix.translate function instead\x0d\n    * @param {number} dx translation amount for the x direction\x0d\n    * @param {number} dy translation amount for the y direction\x0d\n    * @param {number} dz translation amount for the z direction\x0d\n    */\x0d\n   translation(dx\x2C dy\x2C dz)\x0d\n   {\x0d\n      if (typeof dx != "number" || typeof dy != "number" || typeof dz != "number")\x0d\n         throw new Error("dx\x2C dy\x2C and dz must be numerical");\x0d\n\x0d\n      this.#matrix = Matrix.translate(dx\x2C dy\x2C dz);\x0d\n   }\x0d\n\x0d\n\x0d\n   /**\x0d\n    * For debugging purposes.\x0d\n    * @returns {string} representation of this position\x0d\n    */\x0d\n   toString()\x0d\n   {\x0d\n      let result = "";\x0d\n      result += "Position: " + this.#name + "\\n";\x0d\n      result += "This Position's visibility is: " + this.visible + "\\n";\x0d\n      result += "This Position's Matrix is\\n";\x0d\n      result += this.#matrix.toString() + "\\n";\x0d\n      result += "This Position's Model is\\n";\x0d\n      result += (null == this.#model || undefined == this.#model) ? "null\\n" : this.#model.toString();\x0d\n      result += "This Position has " + this.#nestedPositions.length + " nested Positions\\n";\x0d\n\x0d\n      for (let p of this.#nestedPositions)\x0d\n         result += p.toString();\x0d\n\x0d\n      return result;\x0d\n   }\x0d\n\x0d\n\x0d\n   /**\x0d\n    * For testing purposes.\x0d\n    */\x0d\n   static main()\x0d\n   {\x0d\n\x0d\n      console.log("Creating p1 = new Position.");\x0d\n      console.log("Creating p2 = Position.buildFromModel(new Model())");\x0d\n      console.log("Creating p3 = Position.buildFromName('p2')");\x0d\n      console.log("Creating p4 = Position.buildFromModelName(new Model()\x2C 'p4')");\x0d\n      const p1 = new Position();\x0d\n      const p2 = Position.buildFromModel(new Model());\x0d\n      const p3 = Position.buildFromName("p3");\x0d\n      const p4 = Position.buildFromModelName(new Model()\x2C "p4");\x0d\n\x0d\n      console.log("");\x0d\n      console.log("p1: ");\x0d\n      console.log(p1.toString());\x0d\n\x0d\n\x0d\n      console.log("");\x0d\n      console.log("p2: ");\x0d\n      console.log(p2.toString());\x0d\n\x0d\n\x0d\n      console.log("");\x0d\n      console.log("p3: ");\x0d\n      console.log(p3.toString());\x0d\n\x0d\n\x0d\n      console.log("");\x0d\n      console.log("p4: ");\x0d\n      console.log(p4.toString());\x0d\n\x0d\n//    ------------------------------------------------------\x0d\n\x0d\n      console.log("");\x0d\n      console.log("p1.getName(): ");\x0d\n      console.log(p1.getName());\x0d\n\x0d\n      console.log("");\x0d\n      console.log("p1.name");\x0d\n      console.log(p1.name);\x0d\n\x0d\n\x0d\n      console.log("");\x0d\n      console.log("p2.getName(): ");\x0d\n      console.log(p2.getName());\x0d\n\x0d\n      console.log("");\x0d\n      console.log("p2.name");\x0d\n      console.log(p2.name);\x0d\n\x0d\n      console.log("");\x0d\n      console.log("p3.getName(): ");\x0d\n      console.log(p3.getName());\x0d\n\x0d\n      console.log("");\x0d\n      console.log("p3.name");\x0d\n      console.log(p3.name);\x0d\n\x0d\n      console.log("");\x0d\n      console.log("p4.getName(): ");\x0d\n      console.log(p4.getName());\x0d\n\x0d\n      console.log("");\x0d\n      console.log("p4.name");\x0d\n      console.log(p4.name);\x0d\n\x0d\n//    ----------------------------------------------------\x0d\n      // outputs function data instead of model.toString\x0d\n      console.log("");\x0d\n      console.log("p1.getModel(): ");\x0d\n      console.log(p1.getModel().toString());\x0d\n\x0d\n      console.log("");\x0d\n      console.log("p1.model");\x0d\n      console.log(p1.model.toString());\x0d\n\x0d\n      console.log("");\x0d\n      console.log("p2.getModel(): ");\x0d\n      console.log(p2.getModel().toString());\x0d\n\x0d\n      console.log("");\x0d\n      console.log("p2.model");\x0d\n      console.log(p2.model.toString());\x0d\n\x0d\n      console.log("");\x0d\n      console.log("p3.getModel(): ");\x0d\n      console.log(p3.getModel().toString());\x0d\n\x0d\n      console.log("");\x0d\n      console.log("p3.model");\x0d\n      console.log(p3.model.toString());\x0d\n\x0d\n      console.log("");\x0d\n      console.log("p4.getModel(): ");\x0d\n      console.log(p4.getModel().toString());\x0d\n\x0d\n      console.log("");\x0d\n      console.log("p4.model");\x0d\n      console.log(p4.model.toString());\x0d\n\x0d\n//    ---------------------------------------------------\x0d\n\x0d\n      /*\x0d\n      console.log("");\x0d\n      console.log("p1.setModel(new Model()): ");\x0d\n      p1.setModel(new Model());\x0d\n      console.log(p1.toString());\x0d\n      */\x0d\n      console.log("");\x0d\n      console.log("p1.model = (new Model()): ");\x0d\n      p1.model = new Model();\x0d\n      console.log(p1.toString());\x0d\n\x0d\n      /*\x0d\n      console.log("");\x0d\n      console.log("p3.setModel(new Model()): ");\x0d\n      p3.setModel(new Model());\x0d\n      console.log(p3.toString());\x0d\n      */\x0d\n\x0d\n      console.log("");\x0d\n      console.log("p3.model = (new Model()): ");\x0d\n      p3.model = (new Model());\x0d\n      console.log(p3.toString());\x0d\n// _--------------------------------------------------\x0d\n\x0d\n      console.log("");\x0d\n      console.log("p1.getMatrix(): ");\x0d\n      console.log(p1.getMatrix());\x0d\n\x0d\n      console.log("");\x0d\n      console.log("p1.matrix");\x0d\n      console.log(p1.matrix);\x0d\n\x0d\n      console.log("");\x0d\n      console.log("p2.getMatrix(): ");\x0d\n      console.log(p2.getMatrix());\x0d\n\x0d\n      console.log("");\x0d\n      console.log("p3.getMatrix(): ");\x0d\n      console.log(p3.getMatrix());\x0d\n\x0d\n      console.log("");\x0d\n      console.log("p4.getMatrix(): ");\x0d\n      console.log(p4.getMatrix());\x0d\n\x0d\n// --------------------------------------------------\x0d\n\x0d\n      /*\x0d\n      console.log("");\x0d\n      console.log("p1.setMatrix(Matrix.translate(1\x2C 1\x2C 1)): ");\x0d\n      p1.setMatrix(Matrix.translate(1\x2C 1\x2C 1));\x0d\n      console.log(p1.toString());\x0d\n      */\x0d\n\x0d\n      console.log("");\x0d\n      console.log("p1.matrix = (Matrix.translate(1\x2C 1\x2C 1)): ");\x0d\n      p1.matrix = (Matrix.translate(1\x2C 1\x2C 1));\x0d\n      console.log(p1.toString());\x0d\n\x0d\n      console.log("");\x0d\n      console.log("p1.matrix2Identity(): ");\x0d\n      p1.matrix2Identity();\x0d\n      console.log(p1.toString());\x0d\n\x0d\n// -----------------------------------------------------\x0d\n\x0d\n      console.log("");\x0d\n      console.log("p1.getNestedPositions(): ");\x0d\n      console.log(p1.getNestedPositions());\x0d\n\x0d\n      console.log("");\x0d\n      console.log("p1.addNestedPosition(p2): ");\x0d\n      p1.addNestedPosition(p2);\x0d\n      console.log(p1.toString());\x0d\n\x0d\n      console.log("");\x0d\n      console.log("p1.addNestedPosition(p3\x2C p4): ");\x0d\n      p1.addNestedPosition(p3\x2C p4);\x0d\n      console.log(p1.toString());\x0d\n\x0d\n      console.log("");\x0d\n      console.log("p1.nestedPosition: ");\x0d\n      console.log(p1.nestedPositions);\x0d\n\x0d\n      console.log("");\x0d\n      console.log("p1.setNestedPosition(0\x2C p4)");\x0d\n      p1.setNestedPosition(0\x2C p4);\x0d\n      console.log(p1.toString());\x0d\n   }\x0d\n}
code-source-info,0x1c9a303d650,494,0,17977,C10O0C28O0C48O0C267O3786C272O17977,,
code-creation,Function,10,481001,0x1c9a303d7f8,44,<instance_members_initializer> file:///E:/Javascript%20Renderers/Javascript-Renderer-9v2/renderer_10_js/renderer/scene/Position.js:65:16,0x1c9a303d130,~
code-source-info,0x1c9a303d7f8,494,3786,17977,C4O3848C12O3901C20O3955C28O4011C33O4085C38O4158C43O17977,,
code-creation,Script,10,481712,0xc1e5043238,242, file:///E:/Javascript%20Renderers/Javascript-Renderer-9v2/renderer_10_js/renderer/scene/Scene.js:1:1,0x1c9a303ef90,~
script-source,495,file:///E:/Javascript%20Renderers/Javascript-Renderer-9v2/renderer_10_js/renderer/scene/Scene.js,/*\x0d\n * Renderer 10. The MIT License.\x0d\n * Copyright (c) 2022 rlkraft@pnw.edu\x0d\n * See LICENSE for details.\x0d\n*/\x0d\n\x0d\n/**\x0d\n   A {@code Scene} data structure is a {@link List} of {@link Position}\x0d\n   data structures and a {@link Camera} data structure.\x0d\n<p>\x0d\n   Each {@link Position} object represents a {@link Model} object in a\x0d\n   distinct position in three-dimensional view space.\x0d\n<p>\x0d\n   Each {@link Model} object represents a distinct geometric object\x0d\n   in the scene.\x0d\n<p>\x0d\n   The {@link Camera} object determines a "view volume"\x2C which\x0d\n   determines how much of the scene is actually visible (to the\x0d\n   camera) and gets rendered into the framebuffer.\x0d\n*/\x0d\n\x0d\n//@ts-check\x0d\nimport {Camera\x2C Matrix\x2C Model\x2C OrthoNorm\x2C PerspNorm\x2C Position\x2C Vector\x2C Vertex\x2C LineSegment} from "./SceneExport.js";\x0d\n// for testing purposes\x0d\nimport {Color} from "../framebuffer/FramebufferExport.js";\x0d\n\x0d\nexport default class Scene\x0d\n{\x0d\n    /**@type {Position[]} the array of positions in this scene*/ #positionList;\x0d\n    /**@type {Camera} the camera for this scene*/ #camera;\x0d\n    /**@type {string} the name of this scene*/#name;\x0d\n    /**@type {boolean} whether to debug this scene */ debug = false;\x0d\n\x0d\n    /**\x0d\n     * Create a scene with the given data\x0d\n     * @param {Camera} [camera=new Camera()] the camera for this scene\x0d\n     * @param {Position[]} [positionList=new Array()] the array of positions in this scene\x0d\n     * @param {string} [name=""] the name for this scene\x0d\n     * @param {boolean} [debug=false] whether to debug this scene\x0d\n     */\x0d\n    constructor(camera = new Camera()\x2C\x0d\n                positionList = new Array()\x2C\x0d\n                name = ""\x2C\x0d\n                debug = false)\x0d\n    {\x0d\n        if (camera instanceof Camera == false)\x0d\n            throw new Error("Camera must be a camera");\x0d\n\x0d\n        if (! Array.isArray(positionList))\x0d\n            throw new Error("Position List must be an array and is type: " + typeof positionList );\x0d\n\x0d\n        if (typeof name != "string")\x0d\n            throw new Error("Name must be a String");\x0d\n\x0d\n        if (typeof debug != "boolean")\x0d\n            throw new Error("Debug must be a boolean");\x0d\n\x0d\n        let posLength = 0;\x0d\n        this.#positionList = new Array();\x0d\n        for (let x = 0; x < positionList.length; x += 1)\x0d\n        {\x0d\n            if (positionList[x] instanceof Position == false)\x0d\n            {\x0d\n                this.#positionList.length = posLength;\x0d\n                throw new Error("Position List can only contain Positions");\x0d\n            }\x0d\n            else\x0d\n            {\x0d\n                this.#positionList.push(positionList[x]);\x0d\n                posLength += 1;\x0d\n            }\x0d\n        }\x0d\n\x0d\n        this.#camera = camera;\x0d\n        this.#name = name;\x0d\n        this.debug = debug;\x0d\n    }\x0d\n\x0d\n\x0d\n    /**\x0d\n     * Build a Scene with the given name and default camera and empty position list.\x0d\n     * @param {string} name\x0d\n     */\x0d\n    static buildFromName(name)\x0d\n    {\x0d\n        return new Scene(new Camera()\x2C new Array()\x2C name);\x0d\n    }\x0d\n\x0d\n\x0d\n    /**\x0d\n     * Build a scene with the given camera and empty position list.\x0d\n     * @param {Camera} cam\x0d\n     */\x0d\n    static buildFromCamera(cam)\x0d\n    {\x0d\n        return new Scene(cam);\x0d\n    }\x0d\n\x0d\n\x0d\n    /**\x0d\n     * Build a Scene with the given camera and name with an empty position list.\x0d\n     * @param {Camera} cam\x0d\n     * @param {string} name\x0d\n     */\x0d\n    static buildFromCameraName(cam\x2C name)\x0d\n    {\x0d\n        return new Scene(cam\x2C new Array()\x2C name);\x0d\n    }\x0d\n\x0d\n\x0d\n    /**\x0d\n     * Get the name of this scene.\x0d\n     * @returns {string} this scenes name\x0d\n     */\x0d\n    getName()\x0d\n    {\x0d\n        return this.#name;\x0d\n    }\x0d\n\x0d\n    /**\x0d\n     * Get the name of this scene.\x0d\n     * @returns {string} this scenes name\x0d\n     */\x0d\n    get name()\x0d\n    {\x0d\n        return this.#name;\x0d\n    }\x0d\n\x0d\n\x0d\n    /**\x0d\n     * Get the camera for this scene.\x0d\n     * @returns {Camera} this scenes camera\x0d\n     */\x0d\n    getCamera()\x0d\n    {\x0d\n        return this.#camera;\x0d\n    }\x0d\n\x0d\n    /**\x0d\n     * Get the camera for this scene.\x0d\n     * @returns {Camera} this scenes camera\x0d\n     */\x0d\n    get camera()\x0d\n    {\x0d\n        return this.#camera;\x0d\n    }\x0d\n\x0d\n\x0d\n    /**\x0d\n     * Set this scenes camera to be the given camera.\x0d\n     * @param {Camera} camera the new camera for this scene\x0d\n     */\x0d\n    setCamera(camera)\x0d\n    {\x0d\n        if (camera instanceof Camera == false)\x0d\n            throw new Error("Camera must be a Camera");\x0d\n\x0d\n        this.#camera = camera;\x0d\n    }\x0d\n\x0d\n    /**\x0d\n     * Set this scenes camera to be the given camera.\x0d\n     * @param {Camera} cam the new camera for this scene\x0d\n     */\x0d\n    set camera(cam)\x0d\n    {\x0d\n        if (cam instanceof Camera == false)\x0d\n            throw new Error("Camera must be a Camera");\x0d\n\x0d\n        this.#camera = cam;\x0d\n    }\x0d\n\x0d\n\x0d\n    /**\x0d\n     * Get the array of positions for this scene.\x0d\n     * @returns {Position[]} this scenes array of positions\x0d\n     */\x0d\n    getPositionList()\x0d\n    {\x0d\n        return this.#positionList;\x0d\n    }\x0d\n\x0d\n    /**\x0d\n     * Get the array of positions for this scene.\x0d\n     * @returns {Position[]} this scenes array of positions\x0d\n     */\x0d\n    get positionList()\x0d\n    {\x0d\n        return this.#positionList;\x0d\n    }\x0d\n\x0d\n\x0d\n    /**\x0d\n     * Get the position at the specified index.\x0d\n     * @param {number} index the index of the position to be returned\x0d\n     * @returns {Position} the position at the given index\x0d\n     */\x0d\n    getPosition(index)\x0d\n    {\x0d\n        if (typeof index != "number")\x0d\n            throw new Error("Index must be numerical");\x0d\n\x0d\n        return this.#positionList[index];\x0d\n    }\x0d\n\x0d\n\x0d\n    /**\x0d\n     * Set the position at the specified index to be the specified position.\x0d\n     * @param {number} index the index of the position to be set\x0d\n     * @param {Position} position the position that will be set at the given index\x0d\n     */\x0d\n    setPosition(index\x2C position)\x0d\n    {\x0d\n        if (typeof index != "number")\x0d\n            throw new Error("Index must be numerical");\x0d\n\x0d\n        if (position instanceof Position == false)\x0d\n            throw new Error("Position must be a Position");\x0d\n\x0d\n        this.#positionList[index] = position;\x0d\n    }\x0d\n\x0d\n\x0d\n    /**\x0d\n     * Add the given positions to this scenes array of positions.\x0d\n     * @param {Position[]} pArray the positions to be added to the scene\x0d\n     */\x0d\n    addPosition(... pArray)\x0d\n    {\x0d\n        for (let pos of pArray)\x0d\n        {\x0d\n            if (pos instanceof Position == false)\x0d\n                throw new Error("Can only add Positions");\x0d\n\x0d\n            this.#positionList.push(pos);\x0d\n        }\x0d\n    }\x0d\n\x0d\n\x0d\n    /**\x0d\n     * Get the first model with the given name in this scenes\x0d\n     * array of positions.\x0d\n     * @param {string} name the name of the model to be gotten\x0d\n     * @returns {Model | undefined} the model with the specified name or undefined if unfound\x0d\n     */\x0d\n    getModelByName(name)\x0d\n    {\x0d\n        if (typeof name != "string")\x0d\n            throw new Error("Name must be a String");\x0d\n\x0d\n        for (let pos of this.#positionList)\x0d\n        {\x0d\n            if (name === pos.getModel().getName())\x0d\n            {\x0d\n                return pos.getModel();\x0d\n\x09\x09\x09}\x0d\n        }\x0d\n\x0d\n        return undefined;\x0d\n    }\x0d\n\x0d\n\x0d\n    /**\x0d\n     * Get the first Position with the given model name in\x0d\n     * this scenes array of positions.\x0d\n     * @param {string} name the name of the model\x0d\n     * @returns {Position | undefined} returns the position containing the specified model name or undefined if unfound\x0d\n     */\x0d\n    getPositionByModelName(name)\x0d\n    {\x0d\n        if (typeof name != "string")\x0d\n            throw new Error("Name must be a String");\x0d\n\x0d\n        for (let pos of this.#positionList)\x0d\n        {\x0d\n            if (name === pos.getModel().getName())\x0d\n            {\x0d\n                return pos;\x0d\n\x09\x09\x09}\x0d\n        }\x0d\n\x0d\n        return undefined;\x0d\n    }\x0d\n\x0d\n\x0d\n    /**\x0d\n     * For debugging.\x0d\n     * @returns {string} a string representation of this scene\x0d\n     */\x0d\n    toString()\x0d\n    {\x0d\n        let result = "";\x0d\n        result += "Scene: " + this.#name + "\\n";\x0d\n        result += this.#camera.toString();\x0d\n        result += "This Scene has " + this.#positionList.length + " positions\\n";\x0d\n\x0d\n        let i = 0;\x0d\n        for (let p of this.#positionList)\x0d\n        {\x0d\n            result += "Position " + (i++) + "\\n";\x0d\n            if (p == undefined)\x0d\n            {\x0d\n                result += "missing position \\n";\x0d\n\x09\x09\x09}\x0d\n            else\x0d\n            {\x0d\n                result += p.toString();\x0d\n\x09\x09\x09}\x0d\n        }\x0d\n\x0d\n        result += "\\n"\x0d\n        return result;\x0d\n    }\x0d\n\x0d\n\x0d\n    /**\x0d\n     * For Testing.\x0d\n     */\x0d\n    static main()\x0d\n    {\x0d\n        const line = new Model();\x0d\n        line.addColor(Color.orange);\x0d\n        line.addVertex(new Vertex(-1\x2C 0\x2C 0)\x2C\x0d\n                        new Vertex(1\x2C 0\x2C 0));\x0d\n        line.addPrimitive(LineSegment.buildVertexColor(0\x2C 1\x2C 0));\x0d\n        line.setName("Line Model");\x0d\n\x0d\n        const pos1 = Position.buildFromModelName(line\x2C "Pos 1");\x0d\n        //pos1.setName("Pos 1");\x0d\n\x0d\n        const cam = new Camera();\x0d\n\x0d\n        console.log("Creating scene1 = new Scene()");\x0d\n        const scene1 = new Scene();\x0d\n        console.log("Creating scene2 = Scene.buildFromCamera(cam = new Camera)");\x0d\n        const scene2 = Scene.buildFromCamera(cam);\x0d\n        console.log("Creating scene3 = Scene.buildFromName('scene 3')");\x0d\n        const scene3 = Scene.buildFromName("Scene 3");\x0d\n        console.log("Creating scene4 = Scene.buildFromCameraName(new Camera\x2C 'Scene 4')");\x0d\n        const scene4 = Scene.buildFromCameraName(cam\x2C "Scene 4");\x0d\n\x0d\n        console.log("");\x0d\n        console.log("Scene1: ");\x0d\n        console.log(scene1.toString());\x0d\n\x0d\n        console.log("");\x0d\n        console.log("scene 2: ");\x0d\n        console.log(scene2.toString());\x0d\n\x0d\n        console.log("");\x0d\n        console.log("Scene 3: ");\x0d\n        console.log(scene3.toString());\x0d\n\x0d\n        console.log("");\x0d\n        console.log("Scene 4: ");\x0d\n        console.log(scene4.toString());\x0d\n\x0d\n        console.log("");\x0d\n        console.log("Scene1.getName(): ");\x0d\n        console.log(scene1.getName());\x0d\n\x0d\n\x0d\n        console.log("");\x0d\n        console.log("scene1.name");\x0d\n        console.log(scene1.name);\x0d\n\x0d\n        console.log("");\x0d\n        console.log("scene2.getCamera()")\x0d\n        console.log(scene2.getCamera());\x0d\n\x0d\n        console.log("");\x0d\n        console.log("scene2.camera");\x0d\n        console.log(scene2.camera);\x0d\n\x0d\n        console.log("");\x0d\n        console.log("scene3.getPositionList() ");\x0d\n        console.log(scene3.getPositionList());\x0d\n\x0d\n\x0d\n        console.log("");\x0d\n        console.log("scene3.positionList");\x0d\n        console.log(scene3.positionList);\x0d\n\x0d\n        /*\x0d\n        console.log("");\x0d\n        console.log("scene1.setCamera(cam): ");\x0d\n        scene1.setCamera(cam);\x0d\n        console.log(scene1.toString());\x0d\n        */\x0d\n\x0d\n        console.log("");\x0d\n        console.log("scene1.camera = cam");\x0d\n        scene1.camera = cam;\x0d\n        console.log(scene1.toString());\x0d\n\x0d\n\x0d\n        console.log("");\x0d\n        console.log("scene2.setPosition(1\x2C pos1)");\x0d\n        scene2.setPosition(1\x2C pos1);\x0d\n        console.log(scene2.toString());\x0d\n\x0d\n        console.log("");\x0d\n        console.log("scene3.addPosition(pos1)");\x0d\n        scene3.addPosition(pos1);\x0d\n        console.log(scene3.toString());\x0d\n\x0d\n        console.log("");\x0d\n        console.log("scene3.getPosition(0) ");\x0d\n        console.log(scene3.getPosition(0).toString());\x0d\n\x0d\n        console.log("");\x0d\n        console.log("scene4.addPosition(pos1\x2C pos1\x2C pos1)");\x0d\n        scene4.addPosition(pos1\x2C pos1\x2C pos1);\x0d\n        console.log(scene4.toString());\x0d\n\x0d\n        console.log("");\x0d\n        console.log("scene4.getModelByName(Line Model)")\x0d\n        console.log(scene4.getModelByName("Line Model")?.toString());\x0d\n\x0d\n        console.log("");\x0d\n        console.log("scene4.getPositionByModelName(Pos 1)");\x0d\n        console.log(scene4.getPositionByModelName("Pos 1")?.toString());\x0d\n\x0d\n        console.log("");\x0d\n        console.log("scene4.getPositionByModelName(Line Model)");\x0d\n        console.log(scene4.getPositionByModelName("Line Model")?.toString());\x0d\n    }\x0d\n}
code-source-info,0xc1e5043238,495,0,11986,C10O0C28O0C48O0C236O896C241O11986,,
code-creation,Function,10,482578,0xc1e50433b8,31,<instance_members_initializer> file:///E:/Javascript%20Renderers/Javascript-Renderer-9v2/renderer_10_js/renderer/scene/Scene.js:27:16,0x1c9a303fc20,~
code-source-info,0xc1e50433b8,495,896,11986,C4O977C12O1043C20O1099C24O1169C30O11986,,
code-creation,Function,11,483005,0x7ff6a66f4900,2072,getFileProtocolModuleFormat node:internal/modules/esm/get_format:54:37,0x14dbcbbb380,^
code-source-info,0x7ff6a66f4900,457,1605,2939,,,
code-creation,Function,11,483058,0x7ff6a66f51c0,472, node:buffer:358:36,0x1adeb58d080,^
code-source-info,0x7ff6a66f51c0,30,10708,10868,,,
code-creation,Function,11,483095,0x7ff6a66f5440,368,validateDecoder node:internal/encoding:71:25,0x1adeb5a2dc8,^
code-source-info,0x7ff6a66f5440,33,1496,1600,,,
code-creation,Function,11,483142,0x7ff6a66f5640,1552,decode node:internal/encoding:427:11,0x1adeb5a32e8,^
code-source-info,0x7ff6a66f5640,33,12148,12735,,,
code-creation,Function,11,483177,0x7ff6a66f5d00,332,getSourceMapsEnabled node:internal/source_map/source_map_cache:51:30,0x14dbcb92f38,^
code-source-info,0x7ff6a66f5d00,443,1891,2041,,,
code-creation,Script,10,483877,0xc1e5045810,185, file:///E:/Javascript%20Renderers/Javascript-Renderer-9v2/renderer_10_js/renderer/scene/Vector.js:1:1,0xc1e5044998,~
script-source,496,file:///E:/Javascript%20Renderers/Javascript-Renderer-9v2/renderer_10_js/renderer/scene/Vector.js,/*\x0d\n * Renderer 10. The MIT License.\x0d\n * Copyright (c) 2022 rlkraft@pnw.edu\x0d\n * See LICENSE for details.\x0d\n*/\x0d\n\x0d\n/**\x0d\n   A {@code Vector} object holds four doubles\x2C which makes it a vector\x0d\n   in 4-dimensional space.\x0d\n<p>\x0d\n   In computer graphics\x2C we use 4-dimensional homogeneous coordinates\x0d\n   to represent vectors (and points) in 3-dimensional space.\x0d\n<p>\x0d\n   Unlike a homogeneous {@link Vertex}\x2C a homogeneous {@code Vector} usually\x0d\n   has its fourth coordinate set to 0.\x0d\n*/\x0d\n\x0d\n// @ts-check\x0d\nimport {format} from "../scene/util/UtilExport.js";\x0d\nimport {Camera\x2C Matrix\x2C Model\x2C OrthoNorm\x2C PerspNorm\x2C Position\x2C Scene\x2C Vertex} from "./SceneExport.js";\x0d\n\x0d\nexport default class Vector\x0d\n{\x0d\n   /** @type {number} x the x value of this Vector*/ x;\x0d\n   /** @type {number} y the y value of this Vector*/ y;\x0d\n   /** @type {number} z the z value of this Vector*/ z;\x0d\n   /** @type {number} w the w value of this Vector*/ w;\x0d\n\x0d\n   /**\x0d\n    * Create a new {@code Vector} using the given x\x2C y\x2C z\x2C and w coordinates\x0d\n    * If no w is given uses the default value of 1.\x0d\n    *\x0d\n    * @param {number} x x coordinate of the new {@code Vector}\x0d\n    * @param {number} y y coordinate of the new {@code Vector}\x0d\n    * @param {number} z z coordinate of the new {@code Vector}\x0d\n    * @param {number} [w=0] w coordinate of the new {@code Vector}\x0d\n    */\x0d\n   constructor(x\x2C y\x2C z\x2C w = 0) // should w be 1 or 0?\x0d\n   {\x0d\n      if (typeof x != "number" ||\x0d\n          typeof y != "number" ||\x0d\n          typeof z != "number" ||\x0d\n          typeof w != "number")\x0d\n              throw new Error("All parameters must be numerical.");\x0d\n\x0d\n      this.x = x;\x0d\n      this.y = y;\x0d\n      this.z = z;\x0d\n      this.w = w;\x0d\n   }\x0d\n\x0d\n\x0d\n   /**\x0d\n    * Create a new {@this Vector} from a {@link Vertex}.\x0d\n    * @param {Vertex} v the vertex to convert into a {@code Vector}\x0d\n    * @returns the new {@code Vector} created from a {@link Vertex }\x0d\n    */\x0d\n   static buildVertex(v)\x0d\n   {\x0d\n      if (v instanceof Vertex == false)\x0d\n         throw new Error("V is not a Vertex");\x0d\n\x0d\n      return new Vector(v.x\x2C v.y\x2C v.z\x2C v.w);\x0d\n   }\x0d\n\x0d\n\x0d\n   /**\x0d\n    * The dot-product of two {@code Vector}s which returns a scalar.\x0d\n    * @param {Vector} v the vector to multiply with this {@code Vector}\x0d\n    * @returns  {number} that is the dot product of this {@code Vector} and @param {Vector} v\x0d\n    *\x0d\n    */\x0d\n   dotProduct(v)\x0d\n   {\x0d\n      if (v instanceof Vector == false)\x0d\n         throw new Error("V is not a Vector");\x0d\n\x0d\n      return (this.x * v.x) + (this.y * v.y) + (this.z * v.z);\x0d\n   }\x0d\n\x0d\n\x0d\n   /**\x0d\n    * The cross product of two {@code Vector}s returns a (new) {@code Vector}.\x0d\n    * @param {Vector} v the vector to mutliply with this {@code Vector}\x0d\n    * @returns  {Vector} the new {@code Vector} that is the cross product of this {@code Vector} and @param {Vector} v\x0d\n    */\x0d\n   crossProduct(v)\x0d\n   {\x0d\n      if (v instanceof Vector == false)\x0d\n         throw new Error("V is not a Vector");\x0d\n\x0d\n         return new Vector(this.y*v.z - this.z*v.y\x2C\x0d\n                           this.z*v.x - this.x*v.z\x2C\x0d\n                           this.x*v.y - this.y*v.x);\x0d\n   }\x0d\n\x0d\n\x0d\n   /**\x0d\n    * A scalar times a {@code Vector} returns a (new) {@code Vector}.\x0d\n    *\x0d\n    * @param {number} s the number to multiply this {@code Vector} by\x0d\n    * @returns {Vector} a new {@code Vector} that is the scalar times this {@code Vector}\x0d\n    */\x0d\n   timesScalar(s)\x0d\n   {\x0d\n      if (typeof s != "number")\x0d\n         throw new Error("S has to be numerical");\x0d\n\x0d\n      return new Vector(this.x * s\x2C\x0d\n                        this.y * s\x2C\x0d\n                        this.z * s\x2C\x0d\n                        this.w * s);\x0d\n   }\x0d\n\x0d\n\x0d\n   /**\x0d\n    * A {@code Vector} plus a {@code Vector} returns a (new) {@code Vector}.\x0d\n    * @param {Vector} v the vector to add to this {@code Vector}\x0d\n    * @returns {Vector} a new {@code Vector} object that is the sum of this {@code Vector} and v\x0d\n    */\x0d\n   plusVector(v)\x0d\n   {\x0d\n      if (v instanceof Vector == false)\x0d\n         throw new Error("V is not a vector");\x0d\n\x0d\n      return new Vector(this.x + v.x\x2C\x0d\n                        this.y + v.y\x2C\x0d\n                        this.z + v.z\x2C\x0d\n                        this.w + v.w);\x0d\n   }\x0d\n\x0d\n\x0d\n   /**\x0d\n    * A {@code Vector} minus a {@code Vector} returns a (new) {@code Vector}.\x0d\n    * @param {Vector} v the vector to subtract from this {@code Vector}\x0d\n    * @returns {Vector} a new {@code Vector} that is this {@code Vector} minus v\x0d\n    */\x0d\n   minusVector(v)\x0d\n   {\x0d\n      if (v instanceof Vector == false)\x0d\n         throw new Error("V is not a vector");\x0d\n\x0d\n      return new Vector(this.x - v.x\x2C\x0d\n                        this.y - v.y\x2C\x0d\n                        this.z - v.z\x2C\x0d\n                        this.w - v.w);\x0d\n   }\x0d\n\x0d\n\x0d\n   /**\x0d\n    * Return the normalized version of this {@code Vector}.\x0d\n    * <p>\x0d\n    * That is\x2C return the {@code Vector} with length 1 that\x0d\n    * points in the same direction as this {@code Vector}.\x0d\n    *\x0d\n    * @returns {Vector}a new {@code Vector} that has length one and has the same direction of this {@code Vector}\x0d\n    */\x0d\n   normalize()\x0d\n   {\x0d\n      const norm = Math.sqrt(this.x * this.x +\x0d\n                             this.y * this.y +\x0d\n                             this.z * this.z);\x0d\n\x0d\n      return new Vector(this.x/norm\x2C this.y/norm\x2C this.z/norm);\x0d\n   }\x0d\n\x0d\n\x0d\n   /**\x0d\n    * A {@code Vector} plus a {@link Vertex } returns a new {@link Vertex }.\x0d\n    * The vector translates the vertex to a new location.\x0d\n    * @param {Vertex} v the vertex to add to this {@code Vector}\x0d\n    * @returns {Vertex} a new {@link Vertex } that is the translation of {@code v} by this {@code Vector}\x0d\n    */\x0d\n   plusVertex(v)\x0d\n   {\x0d\n      if (v instanceof Vertex == false)\x0d\n         throw new Error("V is not a vertex");\x0d\n\x0d\n      return new Vertex(this.x + v.x\x2C\x0d\n                        this.y + v.y\x2C\x0d\n                        this.z + v.z);\x0d\n   }\x0d\n\x0d\n\x0d\n   /**\x0d\n    * MUTATE this {@code Vector} to contain the product of {@code Vector}\x0d\n    * with the scalar {@code s}.\x0d\n    *\x0d\n    * @param {number} s the number to multiply this {@code Vector} by\x0d\n    * @returns {Vector} a reference to this {@code Vector} for method chaining.\x0d\n    */\x0d\n   timesEqualsScalar(s)\x0d\n   {\x0d\n      if (typeof s != "number")\x0d\n         throw new Error("S is not a number");\x0d\n\x0d\n      this.x *= s;\x0d\n      this.y *= s;\x0d\n      this.z *= s;\x0d\n      this.w *= s;\x0d\n\x0d\n      return this;\x0d\n   }\x0d\n\x0d\n   // when the function is hovered over it says that the matrix m is of type vector\x0d\n   // after it gives the object structure\x0d\n\x0d\n\x0d\n   /**\x0d\n    * MUTATE this {@code Vector} to contain the product of this {@code Vector}\x0d\n    * with the {@link Matrix } m.\x0d\n    * @param {{ v1: Vector\x2C v2: Vector\x2C v3: Vector\x2C v4: Vector; }} m the matrix to multiply this {@code Vector} by\x0d\n    * @returns {Vector} a reference to this {@code Vector} for method chaining.\x0d\n    */\x0d\n   timesEqualsMatrix(m)\x0d\n   {\x0d\n      if (m instanceof Matrix == false)\x0d\n         throw new Error("M must be a Matrix");\x0d\n\x0d\n      const v1 = m.v1;\x0d\n      const v2 = m.v2;\x0d\n      const v3 = m.v3;\x0d\n      const v4 = m.v4;\x0d\n\x0d\n      const newX = v1.x * this.x + v2.x * this.y + v3.x * this.z + v4.x * this.w;\x0d\n      const newY = v1.y * this.x + v2.y * this.y + v3.y * this.z + v4.y * this.w;\x0d\n      const newZ = v1.z * this.x + v2.z * this.y + v3.z * this.z + v4.z * this.w;\x0d\n      const newW = v1.w * this.x + v2.w * this.y + v3.w * this.z + v4.w * this.w;\x0d\n\x0d\n      this.x = newX;\x0d\n      this.y = newY;\x0d\n      this.z = newZ;\x0d\n      this.w = newW;\x0d\n\x0d\n      return this;\x0d\n   }\x0d\n\x0d\n\x0d\n   // if no return type is given assumes the object vector is of type this\x0d\n   /**\x0d\n    * MUTATE this {@code Vector} to contain the sum of this {@code Vector}\x0d\n    * with the {@code Vector} {@code v}.\x0d\n    * @param {Vector} v the vector to add to this {@code Vector}\x0d\n    * @returns {Vector} a reference to this {@code Vector} for method chaining.\x0d\n    */\x0d\n   plusEqualsVector(v)\x0d\n   {\x0d\n      if (v instanceof Vector == false)\x0d\n         throw new Error("V is not a vector");\x0d\n\x0d\n      this.x += v.x;\x0d\n      this.y += v.y;\x0d\n      this.z += v.z;\x0d\n      this.w += v.w;\x0d\n\x0d\n      return this;\x0d\n   }\x0d\n\x0d\n\x0d\n   /**\x0d\n    * MUTATE this {@code Vector} to contain the differenceo of this {@code Vector}\x0d\n    * with the {@code Vector} {@code v}.\x0d\n    * @param {Vector} v the vector to subtract form this {@code Vector}\x0d\n    * @returns {Vector} a reference to this {@code Vector} for method chaining.\x0d\n    */\x0d\n   minusEqualsVector(v)\x0d\n   {\x0d\n      if (v instanceof Vector == false)\x0d\n         throw new Error("V is not a Vector");\x0d\n\x0d\n      this.x -= v.x;\x0d\n      this.y -= v.y;\x0d\n      this.z -= v.z;\x0d\n      this.w -= v.w;\x0d\n\x0d\n      return this;\x0d\n   }\x0d\n\x0d\n\x0d\n   /**\x0d\n    * MUTATE this {@code Vector} to contain the normalized version of\x0d\n    * this {@code Vector}.\x0d\n    * <p>\x0d\n    * That is\x2C mutate this {@code Vector} to have length 1.\x0d\n    *\x0d\n    * @returns {Vector} a reference to this {@code Vector} for method chaining\x0d\n    */\x0d\n   normalizeEquals()\x0d\n   {\x0d\n      const norm = Math.sqrt(this.x * this.x +\x0d\n                             this.y * this.y +\x0d\n                             this.z * this.z);\x0d\n\x0d\n      this.x /= norm;\x0d\n      this.y /= norm;\x0d\n      this.z /= norm;\x0d\n\x0d\n      return this;\x0d\n   }\x0d\n\x0d\n\x0d\n   /**\x0d\n    * For debugging.\x0d\n    *\x0d\n    * @returns {string} the string representation of this {@code Vector}\x0d\n    */\x0d\n   toString()\x0d\n   {\x0d\n      // width = 3;\x0d\n      // precision = 5;\x0d\n      return format("[x\x2C y\x2C z\x2C w] = [%3.5d\x2C %3.5d\x2C %3.5d\x2C %3.5d]"\x2C this.x\x2C this.y\x2C this.z\x2C this.w);\x0d\n      //  return "[x\x2Cy\x2Cz\x2Cw]=[" + this.x + "\x2C " + this.y + "\x2C " + this.z + "\x2C " + this.w + "]";\x0d\n   }\x0d\n\x0d\n\x0d\n   static main()\x0d\n   {\x0d\n      console.log("Creating new Vector v1 = new Vector(1\x2C 1\x2C 1)");\x0d\n      const v1 = new Vector(1\x2C 1\x2C 1);\x0d\n\x0d\n      console.log("Creating Vector v2 from buildVertex(vertex1 = new Vertex(2\x2C 2\x2C 2))");\x0d\n      const vertex1 = new Vertex(2\x2C 2\x2C 2);\x0d\n      const v2 = Vector.buildVertex(vertex1);\x0d\n\x0d\n      console.log("");\x0d\n      console.log("Creating dotProdV = v1.dotProduct(v2): ")\x0d\n      const dotProdV = v1.dotProduct(v2);\x0d\n      console.log(dotProdV);\x0d\n\x0d\n      console.log("");\x0d\n      console.log("Creating crossProdV = v1.crossProduct(v2): ");\x0d\n      const crossProdV = v1.crossProduct(v2);\x0d\n      console.log(crossProdV.toString());\x0d\n\x0d\n      console.log("");\x0d\n      console.log("Creating timesNum = v1.timesScalar(5): ");\x0d\n      const timesNum = v1.timesScalar(5);\x0d\n      console.log(timesNum.toString());\x0d\n\x0d\n      console.log("");\x0d\n      console.log("Creating plusVect = v1.plusVector(v2): ");\x0d\n      const plusVect = v1.plusVector(v2);\x0d\n      console.log(plusVect.toString());\x0d\n\x0d\n      console.log("");\x0d\n      console.log("Creating minusVect = v1.minusVector(v2): ");\x0d\n      const minusVect = v1.minusVector(v2);\x0d\n      console.log(minusVect.toString());\x0d\n\x0d\n      console.log("");\x0d\n      console.log("Creating v1Norm = v1.normalize(): ");\x0d\n      const v1Norm = v1.normalize();\x0d\n      console.log(v1Norm.toString());\x0d\n\x0d\n      // note plusVert is a vertex not vector\x0d\n      console.log("");\x0d\n      console.log("Creating plusVert = v1.plusVertex(vertex1): ");\x0d\n      const plusVert = v1.plusVertex(vertex1);\x0d\n      console.log(plusVert.toString());\x0d\n\x0d\n      console.log("");\x0d\n      console.log("v1.timesEqualsScalar(2): ");\x0d\n      v1.timesEqualsScalar(2);\x0d\n      console.log(v1.toString());\x0d\n\x0d\n      console.log("");\x0d\n      console.log("v1.plusEqualsVector(v2): ");\x0d\n      v1.plusEqualsVector(v2);\x0d\n      console.log(v1.toString());\x0d\n\x0d\n      console.log("");\x0d\n      console.log("v1.minusEqualsVector(v2): ");\x0d\n      v1.minusEqualsVector(v2);\x0d\n      console.log(v1.toString());\x0d\n\x0d\n      console.log("");\x0d\n      console.log("v1.normalizeEquals(): ");\x0d\n      v1.normalizeEquals();\x0d\n      console.log(v1.toString());\x0d\n\x0d\n      /*\x0d\n      console.log("");\x0d\n      console.log("Creating timesEqMat = v1.timesEqualsMatrix(m = Matrix.identity()): ");\x0d\n      const m = Matrix.identity();\x0d\n      const timesEqMat = v1.timesEqualsMatrix(m);\x0d\n      console.log(timesEqMat.toString());\x0d\n      */\x0d\n   }\x0d\n}
code-source-info,0xc1e5045810,496,0,11982,C10O0C28O0C48O0C179O672C184O11982,,
code-creation,Function,10,484738,0xc1e5045970,22,<instance_members_initializer> file:///E:/Javascript%20Renderers/Javascript-Renderer-9v2/renderer_10_js/renderer/scene/Vector.js:22:16,0xc1e5045430,~
code-source-info,0xc1e5045970,496,672,11982,C1O742C6O799C11O856C16O913C21O11982,,
code-creation,Script,10,485653,0xc1e5047278,175, file:///E:/Javascript%20Renderers/Javascript-Renderer-9v2/renderer_10_js/renderer/scene/primitives/Primitive.js:1:1,0xc1e50469d0,~
script-source,497,file:///E:/Javascript%20Renderers/Javascript-Renderer-9v2/renderer_10_js/renderer/scene/primitives/Primitive.js,/*\x0d\n * Renderer 10. The MIT License.\x0d\n * Copyright (c) 2022 rlkraft@pnw.edu\x0d\n * See LICENSE for details.\x0d\n*/\x0d\n\x0d\n/**\x0d\n   A {@code Primitive} is something that we can build\x0d\n   geometric shapes out of (a "graphics primitive").\x0d\n<p>\x0d\n   See <a href="https://en.wikipedia.org/wiki/Geometric_primitive" target="_top">\x0d\n                https://en.wikipedia.org/wiki/Geometric_primitive</a>\x0d\n<p>\x0d\n   We have two geometric primitives\x2C\x0d\n   <ul>\x0d\n   <li>{@link LineSegment}\x2C\x0d\n   <li>{@link Point}.\x0d\n   </ul>\x0d\n<p>\x0d\n   Each {@code Primitive} holds two lists of integer indices.\x0d\n<p>\x0d\n   One list is of indices into its {@link renderer.scene.Model}'s\x0d\n   {@link List} of {@link renderer.scene.Vertex} objects. These\x0d\n   are the vertices that determine the primitive's geometry.\x0d\n<p>\x0d\n   The other list is of indices into its {@link renderer.scene.Model}'s\x0d\n   {@link List} of {@link java.awt.Color} objects.\x0d\n<p>\x0d\n   The two lists of integer indices must always have the same\x0d\n   length. For every {@link renderer.scene.Vertex} index in a\x0d\n   {@code Primitive} there must be a {@link java.awt.Color} index.\x0d\n*/\x0d\n/*\x0d\n   NOTE: The Primitive class could be an inner class of\x0d\n         the Model class. Then each Primitive object would\x0d\n         automatically have access to the actual Vertex and\x0d\n         Color lists that the Primitive is indexing into.\x0d\n*/\x0d\n\x0d\n//@ts-check\x0d\nexport default class Primitive\x0d\n{\x0d\n    /**@type {number[]} the array of vertex indexes into the models vertex list for this primitive*/ #vIndexList;\x0d\n    /**@type {number[]} the array of color indexes into the models color listfor this primitive*/ #cIndexList;\x0d\n\x0d\n    /**\x0d\n     * Construct a {@code Primitive} using the two given {@link Array} of integer inexes.\x0d\n     * <p>\x0d\n     * NOTE: This constructor does not put any {@link renderer.scene.Vertex}\x0d\n      or {@link renderer.color.Color} objects into this {@link Primitive}'s\x0d\n      {@link renderer.scene.Model} object. This constructor assumes that\x0d\n      the given indices are valid (or will be valid by the time this\x0d\n      {@link Primitive} gets rendered).\x0d\n      <p>\x0d\n      NOTE: Uses the default values of empty arrays.\x0d\n\x0d\n     * @param {number[]} [vIndList=new Array()] the list of integer indexes into the {@link renderer.scene.Vertex} list\x0d\n     * @param {number[]} [cIndList=new Array()] the list of integer indexes into the {@link renderer.color.Color} list\x0d\n     */\x0d\n    constructor(vIndList = new Array()\x2C cIndList = new Array())\x0d\n    {\x0d\n        if (! Array.isArray(vIndList) ||\x0d\n            ! Array.isArray(cIndList))\x0d\n            throw new Error("Vertex and Color index lists must be Array types");\x0d\n\x0d\n        // If the user pases an empty array have to make sure the check accounts for that\x0d\n        // hence why making sure the data is okay to be undefined.\x0d\n        for (let x = 0; x < vIndList.length; x += 1)\x0d\n        {\x0d\n            if (typeof vIndList[x] != "number" &&\x0d\n                typeof vIndList[x] != undefined)\x0d\n            {\x0d\n                throw new Error("All Vertex indexes must be numerical");\x0d\n\x09\x09\x09}\x0d\n\x09\x09}\x0d\n\x0d\n        for (let y = 0; y < cIndList.length; y += 1)\x0d\n        {\x0d\n            if (typeof cIndList[y] != "number" &&\x0d\n                typeof cIndList[y] != undefined)\x0d\n            {\x0d\n                throw new Error("All Color indexes must be numerical");\x0d\n\x09\x09\x09}\x0d\n\x09\x09}\x0d\n\x0d\n        this.#vIndexList = vIndList;\x0d\n        this.#cIndexList = cIndList;\x0d\n    }\x0d\n\x0d\n\x0d\n    /**\x0d\n     * Construct a {@code Primitive} with the given array of indices for the\x0d\n      {@link renderer.scene.Vertex} and {@link renderer.color.Color} index lists.\x0d\n      <p>\x0d\n      NOTE: This constructor does not put any {@link renderer.scene.Vertex}\x0d\n      or {@link renderer.color.Color} objects into this {@link Primitive}'s\x0d\n      {@link renderer.scene.Model} object. This constructor assumes that\x0d\n      the given indices are valid (or will be valid by the time this\x0d\n      {@link Primitive} gets rendered).\x0d\n\x0d\n     * @param  {...number} indices array of indexes into the vertex and color list to place in this {@code Primitve}\x0d\n     * @returns a new {@code Primitive} created from the given indexes\x0d\n     */\x0d\n    static buildIndices(...indices)\x0d\n    {\x0d\n        let thisP = new Primitive();\x0d\n\x0d\n        for (let i of indices)\x0d\n        {\x0d\n            if (typeof i == "number")\x0d\n            {\x0d\n                thisP.addIndices(i\x2C i);\x0d\n\x09\x09\x09}\x0d\n            else\x0d\n            {\x0d\n                throw new Error("indice " + i + " must be numerical");\x0d\n\x09\x09\x09}\x0d\n        }\x0d\n\x0d\n        return thisP;\x0d\n    }\x0d\n\x0d\n\x0d\n    /**\x0d\n     * Add the given array of indices to the {@link renderer.scene.Vertex}\x0d\n      and {@link java.awt.Color} index lists.\x0d\n      <p>\x0d\n      NOTE: This method does not put any {@link renderer.scene.Vertex}\x0d\n      or {@link java.awt.Color} objects into this {@link Primitive}'s\x0d\n      {@link renderer.scene.Model} object. This method assumes that\x0d\n      the given indices are valid (or will be valid by the time this\x0d\n      {@link Primitive} gets rendered).\x0d\n     * @param  {...any} indices array of vertex and color indexes to add to this primitive\x0d\n     */\x0d\n    addIndex(... indices)\x0d\n    {\x0d\n        for (let i of indices)\x0d\n        {\x0d\n            this.addIndices(i\x2C i);\x0d\n\x09\x09}\x0d\n    }\x0d\n\x0d\n\x0d\n    /**\x0d\n     * Add the given indices to the {@link renderer.scene.Vertex} and\x0d\n      {@link java.awt.Color} index lists.\x0d\n      <p>\x0d\n      NOTE: This method does not put any {@link renderer.scene.Vertex}\x0d\n      or {@link java.awt.Color} objects into this {@link Primitive}'s\x0d\n      {@link renderer.scene.Model} object. This method assumes that\x0d\n      the given indices are valid (or will be valid by the time this\x0d\n      {@link Primitive} gets rendered).\x0d\n\x0d\n     * @param {number} vIndex the vertex index to be added\x0d\n     * @param {number} cIndex the color index to be added\x0d\n     */\x0d\n    addIndices(vIndex = 0\x2C cIndex = 0)\x0d\n    {\x0d\n        if (typeof vIndex != "number" ||\x0d\n            typeof cIndex != "number")\x0d\n              throw new Error("Vertex and Color indexes must be numerical");\x0d\n\x0d\n        this.#vIndexList[this.#vIndexList.length] = vIndex;\x0d\n        this.#cIndexList[this.#cIndexList.length] = cIndex;\x0d\n    }\x0d\n\x0d\n\x0d\n    /**\x0d\n     * Set the {@link java.awt.Color} index list to the given array of indices.\x0d\n      <p>\x0d\n      NOTE: This method does not put any {@link java.awt.Color} objects\x0d\n      into this {@link Primitive}'s {@link renderer.scene.Model} object.\x0d\n      This method assumes that the given indices are valid (or will be\x0d\n      valid by the time this {@link Primitive} gets rendered).\x0d\n     * @param  {...any} cIndices array of color indexes to be added\x0d\n     */\x0d\n    setColorIndices(... cIndices)\x0d\n    {\x0d\n        if (this.#cIndexList.length != cIndices.length)\x0d\n            throw new Error("Wront number of color indexes");\x0d\n\x0d\n        const origLength = this.#cIndexList.length;\x0d\n\x0d\n        for(let x = 0; x < cIndices.length; x += 1)\x0d\n        {\x0d\n            if (typeof (cIndices[x]) != "number")\x0d\n            {\x0d\n                this.#cIndexList.length = origLength;\x0d\n                throw new Error("Color index " + x + " is not numerical");\x0d\n            }\x0d\n            else\x0d\n            {\x0d\n                this.#cIndexList.push(cIndices[x]);\x0d\n\x09\x09\x09}\x0d\n        }\x0d\n\x0d\n        this.#cIndexList.splice(origLength\x2C this.#cIndexList.length);\x0d\n    }\x0d\n\x0d\n\x0d\n    /**\x0d\n     * Give this {@code Primitive} the uniform {@link java.awt.Color} indexed\x0d\n      by the given color index.\x0d\n      <p>\x0d\n      NOTE: This method does not put a {@link java.awt.Color} object\x0d\n      into this {@link Primitive}'s {@link renderer.scene.Model} object.\x0d\n      This method assumes that the given index is valid (or will be valid\x0d\n      by the time this {@link Primitive} gets rendered).\x0d\n\x0d\n     * @param {number} cIndex the color index\x0d\n     */\x0d\n    setColorIndex(cIndex = 0)\x0d\n    {\x0d\n        if (typeof cIndex != "number")\x0d\n            throw new Error("Color index is not numerical");\x0d\n\x0d\n        for (let x = 0; x < this.#cIndexList.length; x += 1)\x0d\n        {\x0d\n            this.#cIndexList[x] = cIndex;\x0d\n\x09\x09}\x0d\n    }\x0d\n\x0d\n\x0d\n    getVertexIndexList()\x0d\n    {\x0d\n        return this.#vIndexList;\x0d\n    }\x0d\n\x0d\n    get vIndexList()\x0d\n    {\x0d\n        return this.#vIndexList;\x0d\n    }\x0d\n\x0d\n\x0d\n    getColorIndexList()\x0d\n    {\x0d\n        return this.#cIndexList;\x0d\n    }\x0d\n\x0d\n    get cIndexList()\x0d\n    {\x0d\n        return this.#cIndexList;\x0d\n    }\x0d\n}
code-source-info,0xc1e5047278,497,0,8324,C10O0C28O0C48O0C169O1374C174O8324,,
code-creation,Function,10,486264,0xc1e5047398,18,<instance_members_initializer> file:///E:/Javascript%20Renderers/Javascript-Renderer-9v2/renderer_10_js/renderer/scene/primitives/Primitive.js:41:16,0xc1e5046f18,~
code-source-info,0xc1e5047398,497,1374,8324,C4O1495C12O1607C17O8324,,
code-creation,Script,10,486517,0xc1e5048b50,207, file:///E:/Javascript%20Renderers/Javascript-Renderer-9v2/renderer_10_js/renderer/scene/Vertex.js:1:1,0xc1e5047de8,~
script-source,498,file:///E:/Javascript%20Renderers/Javascript-Renderer-9v2/renderer_10_js/renderer/scene/Vertex.js,/*\x0d\n * Renderer 10. The MIT License.\x0d\n * Copyright (c) 2022 rlkraft@pnw.edu\x0d\n * See LICENSE for details.\x0d\n*/\x0d\n\x0d\n/**\x0d\n   A {@code Vertex} object has four doubles which represent the\x0d\n   homogeneous coordinates of a point in 3-dimensional space.\x0d\n   The fourth\x2C homogeneous\x2C coordinate will usually be 1\x2C but in\x0d\n   some stages of the graphics rendering pipeline it can be some\x0d\n   other (non-zero) number.\x0d\n<p>\x0d\n   When a {@code Vertex} object is created in a client program\x2C\x0d\n   before the {@code Vertex} object moves down the graphics rendering\x0d\n   pipeline\x2C the coordinates in the {@code Vertex} will be in\x0d\n   some model's local coordinate system.\x0d\n<p>\x0d\n   As a {@code Vertex} object moves down the graphics rendering\x0d\n   pipeline\x2C the coordinates in the {@code Vertex} will be transformed\x0d\n   from one coordinate system to another.\x0d\n<p>\x0d\n   A {@code Vertex} object is immutable\x2C so after it gets created it\x0d\n   cannot be modified (mutated). So a {@code Vertex} object does not\x0d\n   really "move" down the graphics pipeline. When a {@code Vertex}\x0d\n   object needs to be transformed\x2C we replace it\x2C with a new\x0d\n   {@code Vertex} object\x2C instead of mutating it.\x0d\n*/\x0d\n\x0d\n// @ts-check\x0d\nimport {Camera\x2C Matrix\x2C Model\x2C OrthoNorm\x2C PerspNorm\x2C Position\x2C Scene\x2C Vector} from "./SceneExport.js";\x0d\nimport {format} from "../scene/util/UtilExport.js";\x0d\n\x0d\nexport default class Vertex\x0d\n{\x0d\n    /** @type {number} #x the x value of this vector*/ #x;\x0d\n    /** @type {number} #y the y value of this vector*/ #y;\x0d\n    /** @type {number} #z the z value of this vector*/ #z;\x0d\n    /** @type {number} #w the w value of this vector*/ #w;\x0d\n\x0d\n    /**\x0d\n      Construct a new {@code Vertex} with the given homogeneous coordinates.\x0d\n      Uses the default value of 1 for w if not given.\x0d\n\x0d\n      @param {number} x  x-coordinate of the new {@code Vertex}\x0d\n      @param {number} y  y-coordinate of the new {@code Vertex}\x0d\n      @param {number} z  z-coordinate of the new {@code Vertex}\x0d\n      @param {number} w  w-coordinate of the new {@code Vertex}\x0d\n   */\x0d\n    constructor(x\x2C y\x2C z\x2C w = 1.0)\x0d\n    {\x0d\n        if (typeof x != "number" ||\x0d\n            typeof y != "number" ||\x0d\n            typeof z != "number" ||\x0d\n            typeof w != "number")\x0d\n                throw new Error("All parameters must be numerical");\x0d\n\x0d\n        this.#x = x;\x0d\n        this.#y = y;\x0d\n        this.#z = z;\x0d\n        this.#w = w;\x0d\n    }\x0d\n\x0d\n\x0d\n    /**\x0d\n     * @returns {number} the x value of this {@code Vertex}\x0d\n     */\x0d\n    getX()\x0d\n    {\x0d\n        return this.#x;\x0d\n    }\x0d\n\x0d\n    /**\x0d\n     * @returns {number} the x value of this {@code Vertex}\x0d\n     */\x0d\n    get x()\x0d\n    {\x0d\n        return this.#x;\x0d\n    }\x0d\n\x0d\n\x0d\n    /**\x0d\n     * @returns {number} the y value of this {@code Vertex}\x0d\n     */\x0d\n    getY()\x0d\n    {\x0d\n        return this.#y;\x0d\n    }\x0d\n\x0d\n    /**\x0d\n     * @returns {number} the y value of this {@code Vertex}\x0d\n     */\x0d\n    get y()\x0d\n    {\x0d\n        return this.#y;\x0d\n    }\x0d\n\x0d\n\x0d\n    /**\x0d\n     * @returns {number} the z value of this {@code Vertex}\x0d\n     */\x0d\n    getZ()\x0d\n    {\x0d\n        return this.#z;\x0d\n    }\x0d\n\x0d\n    /**\x0d\n     * @returns {number} the z value of this {@code Vertex}\x0d\n     */\x0d\n    get z()\x0d\n    {\x0d\n        return this.#z;\x0d\n    }\x0d\n\x0d\n\x0d\n    /**\x0d\n     * @returns {number} the w value of this {@code Vertex}\x0d\n     */\x0d\n    getW()\x0d\n    {\x0d\n        return this.#w;\x0d\n    }\x0d\n\x0d\n    /**\x0d\n     * @returns {number} the x value of this {@code Vertex}\x0d\n     */\x0d\n    get w()\x0d\n    {\x0d\n        return this.#w\x0d\n    }\x0d\n\x0d\n\x0d\n   /**\x0d\n    * For debugging.\x0d\n    *\x0d\n    * @returns {string} the string representation of this {@code Vertex}\x0d\n    */\x0d\n    toString()\x0d\n    {\x0d\n        return format("(x\x2C y\x2C z\x2C w) = (%3.5d\x2C %3.5d\x2C %3.5d\x2C %3.5d)"\x2C this.#x\x2C this.#y\x2C this.#z\x2C this.#w);\x0d\n    }\x0d\n\x0d\n    static main()\x0d\n    {\x0d\n        console.log("Creating vertex v1 = 1\x2C 1\x2C 1\x2C 1");\x0d\n        const v1 = new Vertex(1\x2C 1\x2C 1);\x0d\n\x0d\n        console.log("Checking functions of v1");\x0d\n\x0d\n        console.log("")\x0d\n        console.log("v1.x: ");\x0d\n        console.log(v1.x);\x0d\n        console.log("v1.getX(): ");\x0d\n        console.log(v1.getX());\x0d\n\x0d\n        console.log("");\x0d\n        console.log("v1.y: ");\x0d\n        console.log(v1.y);\x0d\n        console.log("v1.getY(): ");\x0d\n        console.log(v1.getY());\x0d\n\x0d\n        console.log("");\x0d\n        console.log("v1.z: ");\x0d\n        console.log(v1.z);\x0d\n        console.log("v1.getZ(): ");\x0d\n        console.log(v1.getZ());\x0d\n\x0d\n        console.log("");\x0d\n        console.log("v1.w: ");\x0d\n        console.log(v1.w);\x0d\n        console.log("v1.getW(): ");\x0d\n        console.log(v1.getW());\x0d\n\x0d\n        console.log("");\x0d\n        console.log("v1: ");\x0d\n        console.log(v1);\x0d\n        console.log("v1.toString(): ");\x0d\n        console.log(v1.toString());\x0d\n   }\x0d\n}\x0d\n\x0d\n
code-source-info,0xc1e5048b50,498,0,4691,C10O0C28O0C48O0C201O1357C206O4691,,
code-creation,Function,10,486889,0xc1e5048c90,34,<instance_members_initializer> file:///E:/Javascript%20Renderers/Javascript-Renderer-9v2/renderer_10_js/renderer/scene/Vertex.js:34:16,0xc1e5048790,~
code-source-info,0xc1e5048c90,498,1357,4687,C4O1429C12O1489C20O1549C28O1609C33O4687,,
code-creation,Script,10,487723,0xc1e5049d20,100, file:///E:/Javascript%20Renderers/Javascript-Renderer-9v2/renderer_10_js/renderer/scene/primitives/Point.js:1:1,0xc1e5049838,~
script-source,499,file:///E:/Javascript%20Renderers/Javascript-Renderer-9v2/renderer_10_js/renderer/scene/primitives/Point.js,/*\x0d\n * Renderer 10. The MIT License.\x0d\n * Copyright (c) 2022 rlkraft@pnw.edu\x0d\n * See LICENSE for details.\x0d\n*/\x0d\n\x0d\n/**\x0d\n   A {@code Point} object has two integers that represent the location\x0d\n   and color of a single {@link renderer.scene.Vertex}. The first integer\x0d\n   is an index into the {@link renderer.scene.Vertex} list of a\x0d\n   {@link renderer.scene.Model} object and the second integer is an index\x0d\n   into the {@link java.awt.Color} list of that {@link renderer.scene.Model}\x0d\n   object.\x0d\n*/\x0d\n\x0d\n//@ts-check\x0d\nimport Primitive from "./Primitive.js";\x0d\n// import {Primitive} from "./PrimitiveExport.js"; doesnt work gives me an error\x0d\n\x0d\nexport default class Point extends Primitive\x0d\n{\x0d\n    /**@type {number} */ radius = 0;\x0d\n\x0d\n    /**\x0d\n     * Construct a {@code Point} object using an integer index.\x0d\n      Use the given index for both the {@link renderer.scene.Vertex}\x0d\n      and the {@link java.awt.Color} lists.\x0d\n      <p>\x0d\n      NOTE: This constructor does not put a {@link renderer.scene.Vertex}\x0d\n      or a {@link java.awt.Color} object into this {@link Primitive}'s\x0d\n      {@link renderer.scene.Model} object. This constructor assumes that\x0d\n      the given index is valid (or will be valid by the time this\x0d\n      {@link Primitive} gets rendered).\x0d\n      <p>\x0d\n      NOTE: uses the default value of 0 for the vertex index and\x0d\n            uses the default value of the vertex index for the color index.\x0d\n\x0d\n     * @param {number} vIndex index for the vertex to be used\x0d\n     * @param {number} cIndex index for the color to be used\x0d\n     * @returns a new point with the specified vertex and color index\x0d\n     */\x0d\n    constructor(vIndex = 0\x2C cIndex = vIndex)\x0d\n    {\x0d\n        super([vIndex]\x2C [cIndex]);\x0d\n    }\x0d\n\x0d\n\x0d\n    /**\x0d\n     * For Debugging.\x0d\n     *\x0d\n     * @returns {string} representation of this {@code Point}\x0d\n     */\x0d\n    toString()\x0d\n    {\x0d\n        return ("Point: ([" + this.getVertexIndexList()[0] + "]\x2C " +\x0d\n                        "[" + this.getColorIndexList()[0] + "]) " +\x0d\n                        "radius = " + this.radius);\x0d\n    }\x0d\n\x0d\n\x0d\n}
code-source-info,0xc1e5049d20,499,0,2056,C10O0C28O0C48O0C55O673C94O653C99O2056,,
code-creation,Function,10,487918,0xc1e5049e10,7,<instance_members_initializer> file:///E:/Javascript%20Renderers/Javascript-Renderer-9v2/renderer_10_js/renderer/scene/primitives/Point.js:20:16,0xc1e5049b00,~
code-source-info,0xc1e5049e10,499,653,2056,C0O721C6O2056,,
code-creation,Script,10,488537,0xc1e504a840,117, file:///E:/Javascript%20Renderers/Javascript-Renderer-9v2/renderer_10_js/renderer/scene/primitives/LineSegment.js:1:1,0xc1e504a250,~
script-source,500,file:///E:/Javascript%20Renderers/Javascript-Renderer-9v2/renderer_10_js/renderer/scene/primitives/LineSegment.js,/*\x0d\n * Renderer 10. The MIT License.\x0d\n * Copyright (c) 2022 rlkraft@pnw.edu\x0d\n * See LICENSE for details.\x0d\n*/\x0d\n\x0d\n/**\x0d\n   A {@code LineSegment} object has four integers that\x0d\n   represent the endpoints of the line segment and the\x0d\n   color at each endpoint. Two of the integers are indices\x0d\n   into the {@link renderer.scene.Vertex} list of a\x0d\n   {@link renderer.scene.Model} object and the other two\x0d\n   integers are indices into the {@link java.awt.Color}\x0d\n   list of that {@link renderer.scene.Model} object.\x0d\n*/\x0d\n\x0d\n//@ts-check\x0d\nimport Primitive from "./Primitive.js";\x0d\n// import {Primitive} from "./PrimitiveExport.js"; doesnt work gives me an error\x0d\n\x0d\nexport default class LineSegment extends Primitive\x0d\n{\x0d\n    /**\x0d\n     * Constructs a {@code LineSegment} using the 2 given {@link Array}s of integer indices.\x0d\n     * <p>\x0d\n     * NOTE: This constructor does nut put any {@link renderer.scene.Vertex} or {@link renderer.color.Color} into this\x0d\n     * {@link Primitive} {@link renderer.scene.Model} object. This constructor assumes that\x0d\n     * the given indices are valid or will be by the time this {@link Primitive} is rendered.\x0d\n     *\x0d\n     * @param {number[]} [vIndList=new Array(2)] list of integer indexes to a {@link renderer.scene.Vertex} list\x0d\n     * @param {number[]} [cIndList=new Array(2)] list of integer indexes to a {@link renderer.color.Color} list\x0d\n     */\x0d\n    constructor(vIndList = new Array(2)\x2C cIndList = new Array(2))\x0d\n    {\x0d\n        if (Array.isArray(vIndList) == false ||\x0d\n            Array.isArray(cIndList) == false)\x0d\n            throw new Error("Vertex Index List and Color Index List must be an array. ");\x0d\n\x0d\n        if (vIndList.length != 2 ||\x0d\n            cIndList.length != 2)\x0d\n            throw new Error("Need 2 points to make a line segment");\x0d\n\x0d\n        super(vIndList\x2C cIndList);\x0d\n    }\x0d\n\x0d\n\x0d\n    /**\x0d\n     * Construct a {@code LineSegment} using the two gien integer indexes\x0d\n     * to access both the vertex and color list in the {@link renderer.scene.Model}.\x0d\n     * NOTE: Uses 0 and 1 as the default indexes.\x0d\n     *\x0d\n     * @param {number} i0 the first endpoint index into the vertex and color list\x0d\n     * @param {number} i1 the second endpoint index into the vertex and color list\x0d\n     * @returns the new {@code LineSegment} created from the given data\x0d\n     */\x0d\n    static buildVertex(i0 = 0\x2C i1 = 1)\x0d\n    {\x0d\n        return new LineSegment(new Array(i0\x2C i1)\x2C\x0d\n                               new Array(i0\x2C i1));\x0d\n    }\x0d\n\x0d\n\x0d\n    /**\x0d\n     * Construct a {@code LineSemgnet} using the 2 integer indexes for the\x0d\n     * vertexes and the one index for the colors.\x0d\n     * Note: Uses 0 and 1 as the default index for the vertexes and 0 for the color.\x0d\n     *\x0d\n     * @param {number} i0 the first endpoint index into the vertex list\x0d\n     * @param {number} i1 the second endpoint index into the vertex list\x0d\n     * @param {number} c the color index into the color list\x0d\n     * @returns a new {@code LineSegment} containing the given data.\x0d\n     */\x0d\n    static buildVertexColor(i0 = 0\x2C i1 = 1\x2C c = 0)\x0d\n    {\x0d\n        return new LineSegment(new Array(i0\x2C i1)\x2C\x0d\n                               new Array(c\x2C c));\x0d\n    }\x0d\n\x0d\n\x0d\n    /**\x0d\n     * Construct a {@code LineSegment} using the 2 integer indexes for the\x0d\n     * vertexes and the 2 integer indexes for the colors.\x0d\n     * Note: Uses 0 and 1 as the default first and second indexes.\x0d\n     *\x0d\n     * @param {number} i0 the first endpoint index into the vertex list\x0d\n     * @param {number} i1 the second endpoint index into the vertex list\x0d\n     * @param {number} c0 the first endopoint color index int the color list\x0d\n     * @param {number} c1 the second endpoint color index into the color list\x0d\n     * @returns a new {@code LineSegment} containing the given data.\x0d\n     */\x0d\n    static buildVertexColors(i0 = 0\x2C i1 = 1\x2C c0 = 0\x2C c1 = 1)\x0d\n    {\x0d\n        return new LineSegment(new Array(i0\x2C i1)\x2C\x0d\n                               new Array(c0\x2C c1));\x0d\n    }\x0d\n\x0d\n\x0d\n    /**\x0d\n     * For debugging.\x0d\n     *\x0d\n     * @returns {string} representation of this {@code LineSegment}\x0d\n     */\x0d\n    toString()\x0d\n    {\x0d\n        return ("LineSegment: ([" + this.getVertexIndexList()[0] + "\x2C " + this.getVertexIndexList()[1] + "]\x2C "\x0d\n                            + "[" + this.getColorIndexList()[0]  + "\x2C " + this.getColorIndexList()[1] + "])");\x0d\n    }\x0d\n}
code-source-info,0xc1e504a840,500,0,4318,C10O0C28O0C48O0C62O696C111O670C116O4318,,
tick,0x7ff7264ac0ab,489467,0,0x0,0,0x7ff72606c200,0x1c9a3007ab7,0x7ff72653f3f3
code-creation,Function,11,489544,0x7ff6a66f5f00,3332,getSource node:internal/modules/esm/load:32:25,0x2a6f0b99378,^
code-source-info,0x7ff6a66f5f00,465,1031,2140,,,
code-creation,Function,11,489609,0x7ff6a66f6cc0,788,throwIfUnsupportedURLScheme node:internal/modules/esm/resolve:1042:37,0x14dbcbb68d8,^
code-source-info,0x7ff6a66f6cc0,455,35475,35946,,,
code-creation,Function,11,489659,0x7ff6a66f7080,1360,checkIfDisallowedImport node:internal/modules/esm/resolve:995:33,0x14dbcbb6838,^
code-source-info,0x7ff6a66f7080,455,34030,35228,,,
code-creation,Script,10,490334,0xc1e504c730,346, file:///E:/Javascript%20Renderers/Javascript-Renderer-9v2/renderer_10_js/renderer/framebuffer/FrameBuffer.js:1:1,0xc1e504b258,~
script-source,501,file:///E:/Javascript%20Renderers/Javascript-Renderer-9v2/renderer_10_js/renderer/framebuffer/FrameBuffer.js,/*\x0d\n    FrameBuffer. The MIT License.\x0d\n    Copyright (c) 2022 rlkraft@pnw.edu\x0d\n    See LICENSE for details.\x0d\n*/\x0d\n\x0d\n//@ts-check\x0d\nimport {Viewport\x2C Color} from "./FramebufferExport.js";\x0d\nimport {format} from "../scene/util/UtilExport.js";\x0d\n\x0d\nexport default class FrameBuffer\x0d\n{\x0d\n    /**@type {number} #width the width of a framebuffer*/ #width;\x0d\n    /**@type {number} #height the height of this framebuffer*/ #height;\x0d\n    /**@type {Color} #bgColorFB the default color of the framebuffer*/ #bgColorFB;\x0d\n    /**@type {Viewport} #vp the viewport for this framebuffer */ #vp;\x0d\n\x0d\n    //    /**@type {Color[]} #pixelBuffer the actual pixel data for this framebuffer*/ #pixelBuffer;\x0d\n    \x0d\n    /**@type {Uint8ClampedArray} #pixelBuffer the actual pixel data for this framebuffer */ #pixelBuffer;\x0d\n\x0d\n    ///** #pixelBuffer the actual pixel data for this framebuffer stored as bytes*/ #pixelBuffer\x0d\n\x0d\n    /**\x0d\n    A {@code FrameBuffer} represents a two-dimensional array of pixel data.\x0d\n    The pixel data is stored as a one dimensional array in row-major order.\x0d\n    The first row of data should be displayed as the top row of pixels\x0d\n    in the image.\x0d\n<p>\x0d\n    A {@link Viewport} is a two-dimensional sub array of a {@code FrameBuffer}.\x0d\n<p>\x0d\n    A {@code FrameBuffer} has a default {@link Viewport}. The current {@link Viewport}\x0d\n    is represented by its upper-left-hand corner and its lower-right-hand\x0d\n    corner.\x0d\n<p>\x0d\n    {@code FrameBuffer} and {@link Viewport} coordinates act like Java\x0d\n    {@link java.awt.Graphics2D} coordinates; the positive x direction is\x0d\n    to the right and the positive y direction is downward.\x0d\n*/\x0d\n\x0d\n    /**\x0d\n     * Construct a {@code FrameBuffer} with the width\x2C height\x2C and Color specified.\x0d\n     * Width and height have the default value of 0\x2C and color has the default color black\x0d\n     * Will round Width and Height using the Math.round function.\x0d\n     *\x0d\n     * @param {number} width the width of the {@code FrameBuffer}\x0d\n     * @param {number} height the height of the {@code FrameBuffer}\x0d\n     * @param {Color} color the background {@link Color} of the {@code FrameBuffer}\x0d\n     */\x0d\n    constructor(width\x2C height\x2C color = Color.Black)\x0d\n    {\x0d\n        if (typeof width != "number" ||\x0d\n            typeof height != "number")\x0d\n               throw new Error("Width and Height must be numerical");\x0d\n\x0d\n        if (color instanceof Color == false)\x0d\n            color = Color.Black;\x0d\n\x0d\n        this.#width = Math.round(width);\x0d\n        this.#height = Math.round(height);\x0d\n        this.#bgColorFB = color;\x0d\n        \x0d\n        this.#pixelBuffer = new Uint8ClampedArray(this.#width * this.#height * 4);\x0d\n        this.#vp = Viewport.buildParent(this);\x0d\n\x0d\n        this.clearFB(this.#bgColorFB);\x0d\n    }\x0d\n\x0d\n\x0d\n    /**\x0d\n     * Creates an exact duplicate {@code FrameBuffer} out of the source {@code FrameBuffer}.\x0d\n     *\x0d\n     * @param {FrameBuffer} source\x0d\n     * @returns {FrameBuffer} this {@code FrameBuffer} object created\x0d\n     */\x0d\n    static buildFB(source)\x0d\n    {\x0d\n        if (source instanceof FrameBuffer == false)\x0d\n            throw new Error("Source is not instance of FrameBuffer");\x0d\n\x0d\n        const fb = new FrameBuffer(source.getWidthFB()\x2C\x0d\n                                   source.getHeightFB()\x2C\x0d\n                                   source.getBackgroundColorFB());\x0d\n\x0d\n        for( let x = 0; x < source.getWidthFB(); x += 1)\x0d\n        {\x0d\n            for (let y = 0; y < source.getHeightFB(); y += 1)\x0d\n            {\x0d\n                fb.setPixelFB(x\x2C y\x2C source.getPixelFB(x\x2C y));\x0d\n            }\x0d\n        }\x0d\n\x0d\n        return fb;\x0d\n    }\x0d\n\x0d\n\x0d\n    /**\x0d\n     * Creates an exact duplicate {@code FrameBuffer} out of the source {@code Viewport}\x0d\n     *\x0d\n     * @param {Viewport} source\x0d\n     * @returns {FrameBuffer} this {@code FrameBuffer} object created\x0d\n     */\x0d\n    static buildVP(source)\x0d\n    {\x0d\n        if (source instanceof Viewport == false)\x0d\n            throw new Error("Source is not instance of Viewport");\x0d\n\x0d\n        const fb = new FrameBuffer(source.getWidthVP()\x2C\x0d\n                                   source.getHeightVP()\x2C\x0d\n                                   source.getBackgroundColorVP());\x0d\n\x0d\n        for (let x = 0; x < source.getWidthVP(); x += 1)\x0d\n        {\x0d\n            for (let y = 0; y < source.getHeightVP(); y += 1)\x0d\n            {\x0d\n                fb.setPixelFB(x\x2C y\x2C source.getPixelVP(x\x2C y));\x0d\n            }\x0d\n        }\x0d\n\x0d\n        return fb;\x0d\n    }\x0d\n\x0d\n    /**\x0d\n       Construct a {@code FrameBuffer} from a PPM image file.\x0d\n    <p>\x0d\n       The size of the {@code FrameBuffer} will be the size of the image.\x0d\n    <p>\x0d\n       The default {@link Viewport} is the whole {@code FrameBuffer}.\x0d\n    <p>\x0d\n       This can be used to initialize a {@code FrameBuffer}\x0d\n       with a background image.\x0d\n\x0d\n       NOTE: THIS CODE IS ASYNCHRONOUS\x2C MUST USE AWAIT!!!\x0d\n\x0d\n       @param {string} fileName  must name a PPM image file with magic number P6.\x0d\n       @returns {Promise<FrameBuffer>}\x0d\n    */\x0d\n    static async buildFile(fileName)\x0d\n    {\x0d\n        if(typeof fileName != "string")\x0d\n            throw new Error("Filename must be a string");\x0d\n        \x0d\n        try\x0d\n        {\x0d\n            document;\x0d\n            return await FrameBuffer.#buildFileOnline(fileName);\x0d\n        }\x0d\n        catch(e)\x0d\n        {\x0d\n            return await FrameBuffer.#buildFileOffline(fileName);\x0d\n        }\x0d\n    }\x0d\n\x0d\n    static async #buildFileOnline(fileName)\x0d\n    {\x0d\n        const resp = await fetch(fileName\x2C {method : "GET"});\x0d\n        const data = await resp.arrayBuffer();\x0d\n\x0d\n        return FrameBuffer.interpretData(new Uint8Array(data));\x0d\n    }\x0d\n\x0d\n    /**\x0d\n     * @param {string} fileName \x0d\n     * @returns {Promise<FrameBuffer>}\x0d\n     */\x0d\n    static async #buildFileOffline(fileName)\x0d\n    {\x0d\n        const fs = await import("node:fs");\x0d\n        const buffer = fs.readFileSync(fileName);\x0d\n\x0d\n        return FrameBuffer.interpretData(Uint8Array.from(buffer));\x0d\n    }\x0d\n\x0d\n    /**\x0d\n     * @param {Uint8Array} data \x0d\n     * @returns {FrameBuffer} a framebuffer made from the data buffer\x0d\n     */\x0d\n    static interpretData(data)\x0d\n    {\x0d\n        // record where in the buffer we are\x0d\n        let buffIndex = 0; \x0d\n\x0d\n        // read the P6 bytes\x0d\n        const byteP = data[buffIndex++];\x0d\n        const byte6 = data[buffIndex++];\x0d\n\x0d\n        if(String.fromCharCode(byteP\x2C byte6) != "P6")\x0d\n            throw new Error("Missing the magic P6");\x0d\n\x0d\n        // skip any non numbers\x0d\n        while(data[buffIndex] < 48 || data[buffIndex] > 57)\x0d\n            buffIndex += 1;\x0d\n\x0d\n        // create a varaible to store the width\x0d\n        let widthStr = "";\x0d\n        // get the width dimensions\x0d\n        while(data[buffIndex] >= 48 && data[buffIndex] <= 57)\x0d\n            widthStr += String.fromCharCode(data[buffIndex++]);\x0d\n\x0d\n        // skip the space between the dimensions\x0d\n        buffIndex++;\x0d\n\x0d\n        // create a variable to store the height\x0d\n        let heightStr = "";\x0d\n        // get the height dimensions\x0d\n        while(data[buffIndex] >= 48 && data[buffIndex] <= 57)\x0d\n            heightStr += String.fromCharCode(data[buffIndex++]);\x0d\n        \x0d\n        // create the framebuffer\x0d\n        const fb = new FrameBuffer(+widthStr\x2C +heightStr);\x0d\n\x0d\n        // skip any nonnumbers\x0d\n        while(data[buffIndex] < 48 || data[buffIndex] > 57)\x0d\n            buffIndex += 1;\x0d\n        \x0d\n        // create a variable for the number of bytes per r\x2C g\x2C b\x0d\n        let maxValStr = "";\x0d\n        // get the number of bytes per r\x2C g\x2C b\x0d\n        while(data[buffIndex] >= 48 && data[buffIndex] <= 57)\x0d\n            maxValStr +=String.fromCharCode(data[buffIndex++]);\x0d\n\x0d\n        // skip any whitespace\x2C whose ascii value is <= 32\x0d\n        while(data[buffIndex] <= 32)\x0d\n            buffIndex += 1;\x0d\n\x0d\n        // create a variable to store where in the pixel buffer we are\x0d\n        let fbIndex = 0;\x0d\n        // read the pixel byte data\x0d\n        for(; buffIndex < data.length; buffIndex += 3)\x0d\n        {\x0d\n            let r = data[buffIndex + 0];\x0d\n            let g = data[buffIndex + 1];\x0d\n            let b = data[buffIndex + 2];\x0d\n            const a = 255;\x0d\n\x0d\n            if(r < 0) r += 256;\x0d\n            if(g < 0) g += 256;\x0d\n            if(b < 0) b += 256;\x0d\n\x0d\n            fb.pixelBuffer[fbIndex + 0] = r;\x0d\n            fb.pixelBuffer[fbIndex + 1] = g;\x0d\n            fb.pixelBuffer[fbIndex + 2] = b;\x0d\n            fb.pixelBuffer[fbIndex + 3] = a;\x0d\n\x0d\n            fbIndex += 4;\x0d\n        }\x0d\n        \x0d\n        return fb;\x0d\n    }\x0d\n\x0d\n    /**\x0d\n     * Get the width of this {@code FrameBuffer}\x0d\n     *\x0d\n     * @returns {number} the width of this {@code FrameBuffer}\x0d\n     */\x0d\n    getWidthFB()\x0d\n    {\x0d\n        return this.#width;\x0d\n    }\x0d\n\x0d\n    get width()\x0d\n    {\x0d\n        return this.#width;\x0d\n    }\x0d\n\x0d\n\x0d\n    /**\x0d\n     * Get the height of this {@code FrameBuffer}\x0d\n     *\x0d\n     * @returns {number} the height of this {@code FrameBuffer}\x0d\n     */\x0d\n    getHeightFB()\x0d\n    {\x0d\n        return this.#height;\x0d\n    }\x0d\n\x0d\n    get height()\x0d\n    {\x0d\n        return this.#height;\x0d\n    }\x0d\n\x0d\n\x0d\n    /**\x0d\n     * Get the background {Color} of this {@code FrameBuffer}\x0d\n     *\x0d\n     * @returns {Color} the background {Color} of this {@code FrameBuffer}\x0d\n     */\x0d\n    getBackgroundColorFB()\x0d\n    {\x0d\n        return this.#bgColorFB;\x0d\n    }\x0d\n\x0d\n    get bgColorFB()\x0d\n    {\x0d\n        return this.#bgColorFB;\x0d\n    }\x0d\n\x0d\n\x0d\n    /**\x0d\n     * Set this {@code FrameBuffer} new background color.\x0d\n     * <p>\x0d\n     * NOTE: this does not clear the contents of the {@code FrameBuffer}.\x0d\n     * to the given {Color}.  To actually change all the {@code FrameBuffer}\x0d\n     * pixels to the given {Color} call {clearFB()} method.\x0d\n     *\x0d\n     * @param {Color} color: the new background color\x0d\n     */\x0d\n    setBackgroundColorFB(color)\x0d\n    {\x0d\n        if (color instanceof Color == false)\x0d\n            throw new Error("Color must be instance of Color");\x0d\n\x0d\n        this.#bgColorFB = color;\x0d\n    }\x0d\n\x0d\n\x0d\n    set bgColorFB(color)\x0d\n    {\x0d\n        if (color instanceof Color == false)\x0d\n            throw new Error("Color must be instance of Color");\x0d\n\x0d\n        this.#bgColorFB = color;\x0d\n    }\x0d\n\x0d\n\x0d\n    /**\x0d\n     * Get the default {Viewport} of this {@code FrameBuffer}\x0d\n     *\x0d\n     * @returns {Viewport} the {Viewport} of this {@code FrameBuffer}\x0d\n     */\x0d\n    getViewport()\x0d\n    {\x0d\n        return this.#vp;\x0d\n    }\x0d\n\x0d\n    get vp()\x0d\n    {\x0d\n        return this.#vp;\x0d\n    }\x0d\n\x0d\n    get pixelBuffer()\x0d\n    {\x0d\n        return this.#pixelBuffer;\x0d\n    }\x0d\n\x0d\n    getPixelBuffer()\x0d\n    {\x0d\n        return this.#pixelBuffer;\x0d\n    }\x0d\n\x0d\n    /**\x0d\n     * Set this {@code FrameBuffer} default {Viewport} to be this whole this {@code FrameBuffer}\x0d\n    */\x0d\n    setViewportDefault()\x0d\n    {\x0d\n        this.setViewport(this.getWidthFB()\x2C this.getHeightFB());\x0d\n    }\x0d\n\x0d\n\x0d\n    /**\x0d\n     * Set the default {Viewport} with the given upper left hand corner\x2C width\x2C and height within this {@code FrameBuffer}\x0d\n     * If no upper left hand corner is given uses (0\x2C 0) as the default upper left corner for the {Viewport}\x0d\n     *\x0d\n     * @param {number} width width of this {@code FrameBuffer} default {Viewport}\x0d\n     * @param {number} height this {@code FrameBuffer} default {Viewport}\x0d\n     * @param {number} upperLeftX upper left hand x coordinate of this {@code FrameBuffer} default {Viewport}\x0d\n     * @param {number} upperLeftY upper left hand y coordinate of this {@code FrameBuffer} default {Viewport}\x0d\n     */\x0d\n    setViewport(width\x2C height\x2C upperLeftX = 0\x2C upperLeftY = 0)\x0d\n    {\x0d\n        if (typeof upperLeftX != "number" ||\x0d\n            typeof upperLeftY != "number" ||\x0d\n            typeof width      != "number" ||\x0d\n            typeof height     != "number")\x0d\n                throw new Error("All Parameters must be Numerical");\x0d\n\x0d\n        this.#vp.setViewport(width\x2C height\x2C upperLeftX\x2C upperLeftY);\x0d\n    }\x0d\n\x0d\n\x0d\n    /**\x0d\n     * Clear this {@code FrameBuffer} using the background color of this {@code FrameBuffer}\x0d\n     */\x0d\n    clearFBDefault()\x0d\n    {\x0d\n        this.clearFB(this.getBackgroundColorFB());\x0d\n    }\x0d\n\x0d\n\x0d\n    /**\x0d\n     * Clear this {@code FrameBuffer} using the given {Color}\x0d\n     *\x0d\n     * @param {Color} color the color to set this {@code FrameBuffer} pixels to\x0d\n     */\x0d\n    clearFB(color = this.#bgColorFB)\x0d\n    {\x0d\n        if (color instanceof Color == false)\x0d\n            throw new Error("Color must be a Color");\x0d\n\x0d\n        /*\x0d\n        for (let x = 0; x < this.getWidthFB(); x += 1)\x0d\n        {\x0d\n            for (let y = 0; y < this.getHeightFB(); y += 1)\x0d\n            {\x0d\n                this.setPixelFB(x\x2C y\x2C color);\x0d\n            }\x0d\n        }\x0d\n        */\x0d\n\x0d\n        // this code should be 4 times faster than above double for loop\x0d\n        // because instead of looping over every number in the pixelBuffer\x0d\n        // we loop over every pixel in the pixelBuffer\x0d\n        // so instead of looping over every single number\x0d\n        // we acces every fourth number\x2C the start of each pixel\x0d\n        //for(let startPixel = 0; startPixel < this.#pixelBuffer.length; startPixel += 4)\x0d\n        //{\x0d\n        //    this.#pixelBuffer[startPixel + 0] = color.getRed();\x0d\n        //    this.#pixelBuffer[startPixel + 1] = color.getGreen();\x0d\n        //    this.#pixelBuffer[startPixel + 2] = color.getBlue();\x0d\n        //    this.#pixelBuffer[startPixel + 3] = color.getAlpha();\x0d\n        //}\x0d\n\x0d\n        // see page 278 and 279 of the js book\x0d\n        for(let startPixel = 0; startPixel < this.#pixelBuffer.length; startPixel += 4)\x0d\n            this.#pixelBuffer.set(color.rgb\x2C startPixel);\x0d\n    }\x0d\n\x0d\n\x0d\n    /**\x0d\n     * Get the {Color} of the pixel within this {@code FrameBuffer} at the given {@code (x\x2C y)} coordinate\x0d\n     * NOTE: will round x and y using Math.round().\x0d\n     *\x0d\n     * @param {number} x horizontal coordinate within this {@code FrameBuffer}\x0d\n     * @param {number} y vertical coordinate within this {@code FrameBuffer}\x0d\n     * @returns {Color} the {Color} of the pixel at the given (x\x2C y) coordinate\x0d\n     */\x0d\n    getPixelFB(x\x2C y)\x0d\n    {\x0d\n        if (typeof x != "number" || typeof y != "number")\x0d\n            throw new Error("x and y must be numerical");\x0d\n\x0d\n        x = Math.round(x);\x0d\n        y = Math.round(y);\x0d\n\x0d\n        const index = y * this.getWidthFB() + x;\x0d\n\x0d\n        if (index >= this.#pixelBuffer.length)\x0d\n            throw new Error("FrameBuffer: Bad pixel coordinate " +\x0d\n                            "(" + x + "\x2C " + y + ") " +\x0d\n                            "[w= " + this.getWidthFB() + "\x2C h= " + this.getHeightFB() + "]");\x0d\n      \x0d\n        //const startPixelData = y*this.#width + x;\x0d\n        const startPixelData = this.width * 4 * y + 4 * x;\x0d\n\x0d\n        //const r = this.#pixelBuffer[startPixelData + 0];\x0d\n        //const g = this.#pixelBuffer[startPixelData + 1];\x0d\n        //const b = this.#pixelBuffer[startPixelData + 2];\x0d\n        //const a = this.#pixelBuffer[startPixelData + 3];\x0d\n\x0d\n        //return new Color(r\x2C g\x2C b\x2C a);\x0d\n        //return this.#pixelBuffer[index];\x0d\n\x0d\n        // see page 279 of the js book\x0d\n        return Color.buildRGBA(this.#pixelBuffer.slice(startPixelData\x2C startPixelData + 4));\x0d\n    }\x0d\n\x0d\n\x0d\n    /**\x0d\n     * Set the {Color} of the pixel within this {@code FrameBuffer} at the given {@code (x\x2C y)} coordinate\x0d\n     * Note: if no color is uses by deafult uses Color.black;\x0d\n     *\x0d\n     * @param {number} x horizontal coordinate within this {@code FrameBuffer}\x0d\n     * @param {number} y vertical coordinate within this {@code FrameBuffer}\x0d\n     * @param {Color} color that this {@code FrameBuffer} pixel  at the given {@code (x\x2C y)} coordinate should be set to\x0d\n     */\x0d\n    setPixelFB(x\x2C y\x2C color = Color.Black)\x0d\n    {\x0d\n        if (typeof x != "number" || typeof y != "number")\x0d\n            throw new Error("X and Y must be Numerical");\x0d\n\x0d\n        if (color instanceof Color == false)\x0d\n            throw new Error("Color must be of type Color");\x0d\n\x0d\n        x = Math.round(x);\x0d\n        y = Math.round(y);\x0d\n\x0d\n        //const index = y * this.getWidthFB() + x; // wrong indexing\x0d\n        //const index = y * this.getWidthFB() * 4 + x; // wrong indexing\x0d\n        //const index = y * this.getWidthFB() * 4 + (x + 4); // wrong indexing\x0d\n        //const index = y * this.getWidthFB() * 4 + (x + 3); // kinda right\x2C skips alot pixels though\x0d\n        //const index = y * this.getWidthFB() * 4;// kinda right skips a lot of pixels\x0d\n\x0d\n        // to access row 3 pixel 0:\x0d\n        // 3 * width * 4: each row is the width * 4\x2C and we need three rows\x0d\n\x0d\n        // to access row 3 pixel 1:\x0d\n        // 3 * width * 4 + 1 * 4: each row is width * 4\x2C three rows\x2C and second pixel starts at 4\x2C instead of 1\x0d\n\x0d\n        const index = this.getWidthFB() * 4 * y + x * 4;\x0d\n\x0d\n        if (index >= this.#pixelBuffer.length)\x0d\n            throw new Error("FrameBuffer: Bad pixel coordinate " +\x0d\n                            "(" + x + "\x2C " + y + ") " +\x0d\n                            "[w= " + this.getWidthFB() + "\x2C h= " + this.getHeightFB() + "]");\x0d\n\x0d\n        // see page 278 - 279 of the js book\x0d\n        this.#pixelBuffer.set(color.rgb\x2C index);\x0d\n    /*\x0d\n        see if the given color is supposed to be blended\x2C if so then call blending function.\x0d\n\x0d\n        Which blending function should be called?  blendColor uses the formula c1.alpha / (c1.alpha + c2.alpha)\x0d\n        while blendColorWeight just uses c1Weight * c1 + (1-c1Weight) * c2\x0d\n\x0d\n        Should I write a new function setPixelBlend(x\x2C y\x2C color\x2C weight) that would implement this if statement?\x0d\n\x0d\n        if (color.getAlpha() != 1 || color.getAlpha != 255)\x0d\n            this.#pixelBuffer[index] = Color.blendColor(color\x2C this.#pixelBuffer.getPixelFB(x\x2C y));\x0d\n            this.#pixelBuffer[index] = Color.blendColorWeight(color\x2C this.#pixelBuffer.getPixelFB(x\x2C y)\x2C color.getAlpha);\x0d\n        else\x0d\n            this.#pixelBuffer[index] = color;\x0d\n    */\x0d\n        //const c = Color.convert2Int(color);\x0d\n      \x0d\n        //const r = color.getRed();\x0d\n        //const g = color.getGreen();\x0d\n        //const b = color.getBlue();\x0d\n        //const a = color.getAlpha();\x0d\n//\x0d\n        //this.#pixelBuffer[index + 0] = r;\x0d\n        //this.#pixelBuffer[index + 1] = g;\x0d\n        //this.#pixelBuffer[index + 2] = b;\x0d\n        //this.#pixelBuffer[index + 3] = a;\x0d\n\x0d\n        // this seems to properly input the colors into the pixelbuffer\x0d\n        // but when the pixel buffer is printed out it is wrong\x0d\n        // becase we were improperly indexing into the pixelBuffer\x0d\n        //console.log("index: " + index + " x: " + x + " y: " + y + " " + color.toString());\x0d\n        //console.log(  this.#pixelBuffer[index + 0] + "\x2C " \x0d\n        //            + this.#pixelBuffer[index + 1] + "\x2C "\x0d\n        //            + this.#pixelBuffer[index + 2] + "\x2C "\x0d\n        //            + this.#pixelBuffer[index + 3]);\x0d\n       \x0d\n        \x0d\n        //this.#pixelBuffer[index] = Color.convert2Int(color);\x0d\n    }\x0d\n\x0d\n\x0d\n    /**\x0d\n     * Create a new {@code FrameBuffer} containing the pixel data from just the red plane of this {@code FrameBuffer}\x0d\n     *\x0d\n     * @returns {FrameBuffer} holding just the red pixel data from this {@code FrameBuffer}\x0d\n     */\x0d\n    convertRed2FB()\x0d\n    {\x0d\n        const newFB = FrameBuffer.buildFB(this);\x0d\n\x0d\n        for (let x = 0; x < this.getWidthFB(); x += 1)\x0d\n        {\x0d\n            for (let y = 0; y < this.getHeightFB(); y += 1)\x0d\n            {\x0d\n                const origColor = this.getPixelFB(x\x2C y);\x0d\n                const  newColor  = new Color(origColor.getRed()\x2C 0\x2C 0);\x0d\n\x0d\n                newFB.setPixelFB(x\x2C y\x2C newColor);\x0d\n            }\x0d\n        }\x0d\n\x0d\n        return newFB;\x0d\n    }\x0d\n\x0d\n\x0d\n    /**\x0d\n     * Create a new {@code FrameBuffer} containing the pixel data from just the green plane of this {@code FrameBuffer}\x0d\n     *\x0d\n     * @returns {FrameBuffer} holding just the green pixel data from this {@code FrameBuffer}\x0d\n     */\x0d\n    convertGreen2FB()\x0d\n    {\x0d\n        const newFB = FrameBuffer.buildFB(this);\x0d\n\x0d\n        for (let x = 0; x < this.getWidthFB(); x += 1)\x0d\n        {\x0d\n            for (let y = 0; y < this.getHeightFB(); y += 1)\x0d\n            {\x0d\n                const origColor = this.getPixelFB(x\x2C y);\x0d\n                const newColor  = new Color(0\x2C origColor.getGreen()\x2C 0);\x0d\n\x0d\n                newFB.setPixelFB(x\x2C y\x2C newColor);\x0d\n            }\x0d\n        }\x0d\n\x0d\n        return newFB;\x0d\n    }\x0d\n\x0d\n\x0d\n    /**\x0d\n     * Create a new {@code FrameBuffer} containing the pixel data from just the blue plane of this {@code FrameBuffer}\x0d\n     *\x0d\n     * @returns {FrameBuffer} holding just the blue pixel data from this {@code FrameBuffer}\x0d\n     */\x0d\n    convertBlue2FB()\x0d\n    {\x0d\n        const newFB = FrameBuffer.buildFB(this);\x0d\n\x0d\n        for (let x = 0; x < this.getWidthFB(); x += 1)\x0d\n        {\x0d\n            for (let y = 0; y < this.getHeightFB(); y += 1)\x0d\n            {\x0d\n                const origColor = this.getPixelFB(x\x2C y);\x0d\n                const newColor  = new Color(0\x2C 0\x2C origColor.getBlue());\x0d\n\x0d\n                newFB.setPixelFB(x\x2C y\x2C newColor);\x0d\n            }\x0d\n        }\x0d\n\x0d\n        return newFB;\x0d\n    }\x0d\n\x0d\n\x0d\n    /**\x0d\n      For debugging very small {@code FrameBuffer} objects.\x0d\n\x0d\n      @return {string} a string representation of this {@code FrameBuffer}\x0d\n   */\x0d\n    toString()\x0d\n    {\x0d\n        let result = "FrameBuffer [w=" + this.width + "\x2C h=" + this.height + "]\\n";\x0d\n\x0d\n        for (let j = 0; j < this.width; ++j)\x0d\n        {\x0d\n            result += " r   g   b |";\x0d\n        }\x0d\n\x0d\n        result += "\\n";\x0d\n        for (let i = 0; i < this.height; ++i)\x0d\n        {\x0d\n            for (let j = 0; j < this.width; j += 1)\x0d\n            {\x0d\n                const r = this.#pixelBuffer[((i*this.width) + j) ];\x0d\n                const g = this.#pixelBuffer[((i*this.width) + j) ];\x0d\n                const b = this.#pixelBuffer[((i*this.width) + j) ];\x0d\n                const a = this.#pixelBuffer[((i*this.width) + j) ];\x0d\n                \x0d\n                const color = new Color(r\x2C g\x2C b\x2C a);\x0d\n\x0d\n                result += format("%3d "\x2C color.getRed());\x0d\n                result += format("%3d "\x2C color.getGreen());\x0d\n                result += format("%3d|"\x2C color.getBlue());\x0d\n            }\x0d\n            result += "\\n";\x0d\n        }\x0d\n\x0d\n        /*\x0d\n        let result = "FrameBuffer [w = " + this.getWidthFB() + "\x2C h = " + this.getHeightFB() + "]\\n";\x0d\n\x0d\n        for(let y = 0; y < this.getHeightFB(); ++y)\x0d\n        {\x0d\n            for (let x = 0; x < this.getWidthFB(); ++x)\x0d\n            {\x0d\n                const color = this.getPixelFB(x\x2C y);\x0d\n                result += color.getRed() + " " + color.getGreen() + " " + color.getBlue() + " " + color.getAlpha() + " | ";\x0d\n            }\x0d\n            result += "\\n";\x0d\n        }\x0d\n        */\x0d\n        return result;\x0d\n    }\x0d\n\x0d\n\x0d\n    /**\x0d\n    Write this {@code FrameBuffer} to the specified PPM file.\x0d\n    <p>\x0d\n    <a href="https://en.wikipedia.org/wiki/Netpbm_format" target="_top">\x0d\n            https://en.wikipedia.org/wiki/Netpbm_format</a>\x0d\n\x0d\n    @param {string} filename  name of PPM image file to hold {@code FrameBuffer} data\x0d\n    */\x0d\n    dumpFB2File(filename)\x0d\n    {\x0d\n        if (typeof filename != "string")\x0d\n            throw new Error("Filename must be a string");\x0d\n\x0d\n        this.dumpPixels2File(0\x2C 0\x2C this.getWidthFB()\x2C this.getHeightFB()\x2C filename);\x0d\n    }\x0d\n\x0d\n\x0d\n    /**\x0d\n    Write a rectangular sub array of pixels from this {@code FrameBuffer}\x0d\n    to the specified PPM file.\x0d\n    <p>\x0d\n    <a href="https://en.wikipedia.org/wiki/Netpbm_format#PPM_example" target="_top">\x0d\n            https://en.wikipedia.org/wiki/Netpbm_format#PPM_example</a>\x0d\n    <p>\x0d\n    <a href="http://stackoverflow.com/questions/2693631/read-ppm-file-and-store-it-in-an-array-coded-with-c" target="_top">\x0d\n      http://stackoverflow.com/questions/2693631/read-ppm-file-and-store-it-in-an-array-coded-with-c</a>\x0d\n\x0d\n    @param {number} upperLeftX      upper left hand x-coordinate of pixel data rectangle\x0d\n    @param {number} upperLeftY      upper left hand y-coordinate of pixel data rectangle\x0d\n    @param {number} lowerRightX      lower right hand x-coordinate of pixel data rectangle\x0d\n    @param {number} lowerRightY      lower right hand y-coordinate of pixel data rectangle\x0d\n    @param {string} filename  name of PPM image file to hold pixel data\x0d\n    */\x0d\n    dumpPixels2File(upperLeftX\x2C upperLeftY\x2C lowerRightX\x2C lowerRightY\x2C filename)\x0d\n    {\x0d\n        if ( typeof upperLeftX != "number" || typeof upperLeftY != "number" ||\x0d\n            typeof lowerRightX != "number" || typeof lowerRightY != "number")\x0d\n                throw new Error("upperLeftX\x2C upperLeftY\x2C lowerRightX\x2C lowerRightY must be numerical");\x0d\n\x0d\n        if (typeof filename != "string")\x0d\n            throw new Error("Filename must be a String");\x0d\n\x0d\n        let pWidth  = lowerRightX - upperLeftX;\x0d\n        let pHeight = lowerRightY - upperLeftY;\x0d\n\x0d\n        const format = "P6\\n" + pWidth + " " + pHeight + "\\n" + 255 + "\\n"\x0d\n        const colorData = new Uint8Array(pWidth * pHeight * 3);\x0d\n\x0d\n        let index = 0;\x0d\n        for(let y = upperLeftY; y < lowerRightY; y += 1)\x0d\n        {\x0d\n            for(let x = upperLeftX; x < lowerRightX; x += 1)\x0d\n            {\x0d\n                const col = this.getPixelFB(x\x2C y);\x0d\n                \x0d\n                // see page 278 - 279 of the js book\x0d\n                colorData.set(col.rgb.slice(0\x2C 3)\x2C index);\x0d\n\x0d\n                //colorData[index+ 0] = col.getRed();\x0d\n                //colorData[index+ 1] = col.getGreen();\x0d\n                //colorData[index+ 2] = col.getBlue();\x0d\n                index += 3;\x0d\n            }\x0d\n        }\x0d\n\x0d\n        // Use dynamic import and then\x0d\n        // use synchronous API to avoid file corruption.\x0d\n        import('node:fs').then(fs => {\x0d\n          fs.writeFileSync(filename\x2C format\x2C //@ts-ignore\x0d\n                       err => {if (err) throw err;});\x0d\n        });\x0d\n        import('node:fs').then(fs => {\x0d\n          fs.appendFileSync(filename\x2C Buffer.from(colorData)\x2C //@ts-ignore\x0d\n                       err => {if (err) throw err;});\x0d\n        });\x0d\n    }\x0d\n\x0d\n\x0d\n    static main()\x0d\n    {   \x0d\n        // test the ofline ppm file building\x0d\n        //const fb = await FrameBuffer.buildFile("../../assets/textures/brick2.ppm");\x0d\n        //fb.dumpFB2File("output.ppm");\x0d\n\x0d\n        /*\x0d\n        let startTime = new Date().getTime();\x0d\n        const fb = new FrameBuffer(600\x2C 600\x2C Color.black);\x0d\n        let stopTime = new Date().getTime();\x0d\n\x0d\n        console.log("FB make : " + (stopTime - startTime));\x0d\n\x0d\n        for(let x = 0; x < 50; x += 1)\x0d\n        {\x0d\n            for(let y = 0; y < 50; y += 1)\x0d\n                fb.setPixelFB(x\x2C y\x2C new Color(y * 5\x2C y * 5\x2C y*5));\x0d\n        }\x0d\n\x0d\n        fb.dumpFB2File("gray.ppm");\x0d\n        */\x0d\n       \x0d\n        /*\x0d\n        console.log("Making Framebuffer 1 = new FrameBuffer(10\x2C 10)");\x0d\n        const fb1 = new FrameBuffer(10\x2C 10);\x0d\n\x0d\n        console.log("");\x0d\n        console.log("Making fb2 = FB.buildFB(fb1)");\x0d\n        const fb2 = FrameBuffer.buildFB(fb1);\x0d\n\x0d\n        console.log("");\x0d\n        console.log("Making fb3 = FB.buildVP(new VP(3\x2C 3\x2C fb1\x2C 0\x2C 0\x2C Color.blue))");\x0d\n        const vp1 = new Viewport(3\x2C 3\x2C fb1\x2C 0\x2C 0\x2C Color.magenta);\x0d\n        const fb3 = FrameBuffer.buildVP(vp1);\x0d\n\x0d\n        console.log("");\x0d\n        console.log("fb1.getWidth(): ");\x0d\n        console.log(fb1.getWidthFB());\x0d\n\x0d\n        console.log("");\x0d\n        console.log("fb1.getHeight()");\x0d\n        console.log(fb1.getHeightFB());\x0d\n\x0d\n        console.log("");\x0d\n        console.log("fb2.width: ");\x0d\n        console.log(fb2.width);\x0d\n\x0d\n        console.log("");\x0d\n        console.log("fb2.height");\x0d\n        console.log(fb2.height);\x0d\n\x0d\n        console.log("");\x0d\n        console.log("fb3.getBAckgroundColor()");\x0d\n        console.log(fb3.getBackgroundColorFB().toString());\x0d\n        \x0d\n        console.log("");\x0d\n        console.log("fb3.bgColor");\x0d\n        console.log(fb3.bgColorFB.toString());\x0d\n\x0d\n        console.log("");\x0d\n        console.log("fb2.setVP(2\x2C 2\x2C 1\x2C 1)");\x0d\n        fb2.setViewport(2\x2C 2\x2C 1\x2C 1);\x0d\n        console.log(fb2.toString());\x0d\n\x0d\n        console.log("");\x0d\n        console.log("fb2.getViewport()");\x0d\n        console.log(fb2.getViewport().toString());\x0d\n\x0d\n        console.log("");\x0d\n        console.log("fb1.setViewportDefault()");\x0d\n        fb1.setViewportDefault();\x0d\n        console.log(fb1.toString());\x0d\n\x0d\n        console.log("");\x0d\n        console.log("fb1.getViewport()");\x0d\n        console.log(fb1.getViewport().toString());\x0d\n\x0d\n        console.log("");\x0d\n        console.log("fb2.vp to see if fb2 feels fb1's viewport change since fb2 made from fb1");\x0d\n        console.log(fb2.vp.toString());\x0d\n\x0d\n        console.log("");\x0d\n        console.log("fb2.setBackgroundColor(color.red)");\x0d\n        fb2.setBackgroundColorFB(Color.red);\x0d\n        console.log(fb2.toString());\x0d\n\x0d\n        console.log("");\x0d\n        console.log("fb2.clearFBDefault()");\x0d\n        fb2.clearFBDefault();\x0d\n        console.log(fb2.toString());\x0d\n\x0d\n        console.log("");\x0d\n        console.log("fb1.setPixel(9\x2C 9\x2C Color.yellow");\x0d\n        fb1.setPixelFB(9\x2C 9\x2C Color.yellow);\x0d\n        console.log(fb1.toString());\x0d\n\x0d\n        console.log("");\x0d\n        console.log("fb1.getPixel(9\x2C 9)");\x0d\n        console.log(fb1.getPixelFB(9\x2C 9).toString());\x0d\n\x0d\n        console.log("");\x0d\n        console.log("fb1.dumpFB2File(FB1.ppm)");\x0d\n        fb1.dumpFB2File("FB1.ppm");\x0d\n\x0d\n        console.log("")\x0d\n        console.log("fb2.dumpFB2File(fb2.ppm");\x0d\n        fb2.dumpFB2File("FB2.ppm");\x0d\n\x0d\n        console.log("");\x0d\n        console.log('fb3.dumpfb2file(fb3.ppm)');\x0d\n        fb3.dumpFB2File("FB3.ppm");\x0d\n\x0d\n        console.log("");\x0d\n        console.log("fb1.convertRed2FB().dumpfb2file(fb1-red.ppm");\x0d\n        fb1.convertRed2FB().dumpFB2File("FB1-RED.ppm");\x0d\n\x0d\n        console.log("");\x0d\n        console.log("fb2.convertGreen2FB().dumpfb2file(fb2-green.ppm");\x0d\n        fb2.convertGreen2FB().dumpFB2File("FB2-GREEN.ppm");\x0d\n\x0d\n        console.log("");\x0d\n        console.log("fb3.convertblue2FB().dumpfb2file(fb3-blue.ppm");\x0d\n        fb3.convertBlue2FB().dumpFB2File("FB3-BLUE.ppm");\x0d\n        */\x0d\n    }\x0d\n}\x0d\n\x0d\n// if you run this code with the new vs old color implmentation\x0d\n// the old color implementation is a lot faster then the new implementation\x0d\n//let startTime = new Date().getTime();\x0d\n//let fb1 = await FrameBuffer.buildFile("../../assets/textures/brick2.ppm");\x0d\n//let stopTime = new Date().getTime();\x0d\n//console.log("read file: " + (stopTime - startTime));\x0d\n//\x0d\n//startTime = new Date().getTime();\x0d\n//fb1.dumpFB2File("brick.ppm");\x0d\n//stopTime = new Date().getTime();\x0d\n//console.log("write file: " + (stopTime - startTime));\x0d\n//\x0d\n//startTime = new Date().getTime();\x0d\n//const fb2 = new FrameBuffer(600\x2C 600\x2C Color.black);\x0d\n//stopTime = new Date().getTime();\x0d\n//console.log("FB make : " + (stopTime - startTime));\x0d\n\x0d\n// failed attempts at reading the ppm file byte by byte instead of at once\x0d\n/*\x0d\nconst underlyingSource = nodefs.createReadStream(ppmFile);\x0d\nconst byteStream = new ReadableStream(\x0d\n                                { \x0d\n                                    start(controller) {this.pull; console.log("It called start controller " + controller);}\x2C\x0d\n                                    pull(controller) {console.log("It called pull controller");}\x2C \x0d\n                                    type:"bytes"\x2C \x0d\n                                    autoAllocateChunkSize:3\x0d\n                                });\x0d\n*/\x0d\n/*\x0d\nnodefs.open(ppmFile\x2C 'r'\x2C function (status\x2C fd) \x0d\n                        {\x0d\n                            const buff = Buffer.alloc(3);\x0d\n\x0d\n                            nodefs.read(fd\x2C buff\x2C 0\x2C 3\x2C 0\x2C function(err\x2C num)\x0d\n                                                        {\x0d\n                                                            if(err)\x0d\n                                                                console.log(err);\x0d\n\x0d\n                                                            console.log(buff.toString());\x0d\n                                                        })\x0d\n                        });\x0d\n*/\x0d\n/*\x0d\nnodefs.open(ppmFile\x2C 'r'\x2C function(err\x2C fd) \x0d\n            {\x0d\n                if (err)\x0d\n                  throw err;\x0d\n\x0d\n                var buffer = Buffer.alloc(3);\x0d\n\x0d\n                while (true)\x0d\n                {   \x0d\n                  var num = nodefs.readSync(fd\x2C buffer\x2C 0\x2C 3\x2C null);\x0d\n                  if (num === 0)\x0d\n                    break;\x0d\n                  console.log('byte read'\x2C buffer[0] + "\x2C " + buffer[1] + "\x2C " + buffer[2]);\x0d\n                }\x0d\n            });\x0d\n*/\x0d\n/*\x0d\nnodefs.open(ppmFile\x2C 'r'\x2C \x0d\n    function(error\x2C fileDesc)\x0d\n    {\x0d\n        // make a 1 byte buffer\x0d\n        let byte = Buffer.alloc(1);\x0d\n\x0d\n        // record the number of lines read so we know when we reach the pixel data\x0d\n        let linesRead = 0;\x0d\n\x0d\n        // create the variable to handle the p6 line\x0d\n        let p6Str = "";\x0d\n\x0d\n        // create the variables to handle the dimension line\x0d\n        let hitDimSpace = false;\x0d\n        let widthStr = "";\x0d\n        let heightStr = "";\x0d\n        // create the varaibles to handle the max rgb value\x0d\n        let maxValStr = "";\x0d\n\x0d\n        // create a variable to store where in the pixel buffer we are\x0d\n        let fbIndex = 0;\x0d\n\x0d\n        // create a variable to store if the bytes we are reading are a part of a comment\x0d\n        let inComment = false;\x0d\n        let readComment = false;\x0d\n\x0d\n\x0d\n        let eof = 1;\x0d\n        while(eof)\x0d\n        {\x0d\n            // since 0 can be interpreted as a boolean\x2C can use 0 bytes read to mark eof or an err.\x0d\n            eof = nodefs.readSync(fileDesc\x2C byte);\x0d\n        \x0d\n            // convert the given byte into a string\x0d\n            const charRead = String.fromCharCode(byte[0]);\x0d\n        \x0d\n            // if the byte is a '#' then this line is a comment\x0d\n            // should only have one #\x0d\n            if(charRead == "#" && !readComment)\x0d\n                inComment = true;\x0d\n\x0d\n            // if we are in a comment line and reach the new line char we are no longer in the comment line\x0d\n            if(inComment)\x0d\n            {   \x0d\n                readComment = true;\x0d\n\x0d\n        console.log("in comment " + charRead + " " + byte[0]);\x0d\n                \x0d\n                if(charRead == "\\n" || byte[0] == 13)\x0d\n                    inComment = false;\x0d\n\x0d\n        console.log(inComment);\x0d\n            }\x0d\n            else // not inComment\x0d\n            {\x0d\n                // if we haven't read any lines then we have to check for the magic p6 \x0d\n                if(linesRead == 0)\x0d\n                {\x0d\n                    // if we have hit the new line char then we have read the p6 line\x0d\n                    // or if we have hit a carriage return\x0d\n                    if(charRead == "\\n" || byte[0] == 13)\x0d\n                    {\x0d\n                        linesRead += 1;\x0d\n                        if(p6Str != "P6")\x0d\n                            throw new Error("File does not contain the magic P6");\x0d\n                    }   \x0d\n                    else\x0d\n                        p6Str += charRead// keep concatenating each byte to accumulate the p6 str\x0d\n                }\x0d\n                else if(linesRead == 1)// the next nonComment line should be the dimensions\x0d\n                {\x0d\n        console.log(charRead);\x0d\n                    // see if we have read a whitespace character\x0d\n                    if(charRead == " " || charRead == "\\t" || (!hitDimSpace && charRead == "\\n"))\x0d\n                        hitDimSpace = true;\x0d\n\x0d\n                    if(!hitDimSpace)\x0d\n                        widthStr += charRead;\x0d\n                    else\x0d\n                        if(charRead != " " && charRead != "\\t" && charRead != '\\n')\x0d\n                            heightStr += charRead;\x0d\n\x0d\n                    // if we have read past the first dimension then\x0d\n                    // the next newLine represents an actual new line\x0d\n                    // create the framebuffer from the dimensions read\x0d\n                    if(hitDimSpace && charRead == "\\n")\x0d\n                    {    \x0d\n                        linesRead += 1;\x0d\n                        // create the frameBuffer from the dimensions read in the previous line\x0d\n                        fb = new FrameBuffer(+widthStr\x2C +heightStr);\x0d\n                        arr = new Uint8Array(+widthStr * +heightStr * 4);\x0d\n            //console.log(widthStr);\x0d\n            //console.log(heightStr);\x0d\n                    }\x0d\n            //console.log(linesRead);\x0d\n                }\x0d\n                else if(linesRead == 2)//the next line should be the max rgb value\x0d\n                {\x0d\n            console.log(charRead);\x0d\n                    if(charRead != "\\n")\x0d\n                        maxValStr += charRead;\x0d\n                    else\x0d\n                        linesRead += 1;\x0d\n            console.log(maxValStr);\x0d\n                }\x0d\n                else if(linesRead > 2)// the rest of the values should be the byte pixel data\x0d\n                {\x0d\n                    \x0d\n                    // create a buffer to hold three bytes for the r\x2C g\x2C b\x2C values\x0d\n                    let pixelBytes = Buffer.alloc(3);\x0d\n\x0d\n                    // read the pixel bytes from the file\x0d\n                    eof = nodefs.readSync(fileDesc\x2C pixelBytes);\x0d\n\x0d\n                    // extract each r\x2C g\x2C b\x2C byte\x0d\n                    let r = pixelBytes[0];\x0d\n                    let g = pixelBytes[1];\x0d\n                    let b = pixelBytes[2];\x0d\n\x0d\n                    // convert from unsigned to signed\x0d\n                    if(r < 0) r += 256;\x0d\n                    if(g < 0) g += 256;\x0d\n                    if(b < 0) b += 256;\x0d\n\x0d\n                    // write the rgb and 255 alpha value into the fb\x0d\n                    fb.pixelBuffer[fbIndex + 0] = r;\x0d\n                    fb.pixelBuffer[fbIndex + 1] = g;\x0d\n                    fb.pixelBuffer[fbIndex + 2] = b;\x0d\n                    fb.pixelBuffer[fbIndex + 3] = 255;\x0d\n\x0d\n                    // record that we are 4 more bytes into the pixel buffer\x0d\n                    fbIndex += 4;\x0d\n                    \x0d\n                    \x0d\n                    // set the unknown pixel value to be the byte\x0d\n                    let val = byte[0] < 0 ? byte[0] + 256 : byte[0];\x0d\n\x0d\n                    // write the unknown rgb value into the fb\x0d\n                    fb.pixelBuffer.set(new Uint8Array([val])\x2C fbIndex);\x0d\n            \x0d\n        //console.log(fb.pixelBuffer.length);\x0d\n\x0d\n                    arr[fbIndex] = val;\x0d\n                    fbIndex += 1;\x0d\n\x0d\n        //console.log(val);\x0d\n        //console.log(fb.pixelBuffer[fbIndex]);\x0d\n        //console.log(arr[fbIndex]);\x0d\n        //console.log(fbIndex);\x0d\n\x0d\n                    // if we have written 3 rgb values the next is the alpha value \x0d\n                    if(fbIndex %4 == 0)\x0d\n                        arr[++fbIndex] = 255;//fb.pixelBuffer[++fbIndex] = 255;\x0d\n        //console.log();\x0d\n                }\x0d\n            }  \x0d\n        }\x0d\n\x0d\n        //return fb;\x0d\n    });\x0d\n*/\x0d\n/*\x0d\nconsole.log(fb.pixelBuffer);\x0d\n\x0d\nconsole.log(fb.pixelBuffer.length);\x0d\nconsole.log(fb.getPixelBuffer().length);\x0d\nfor(let x = 0; x < fb.pixelBuffer.length; x += 3)\x0d\n    console.log(fb.pixelBuffer[x] + " " + fb.pixelBuffer[x+1] + " " + fb.pixelBuffer[x+2]);\x0d\nfb.dumpFB2File("output2.ppm");\x0d\n*/\x0d\n/*\x0d\nconst nodefs = await import("node:fs");\x0d\nlet fb = new FrameBuffer(0\x2C 0);\x0d\nnodefs.open(ppmFile\x2C 'r'\x2C \x0d\nfunction(error\x2C fileDesc)\x0d\n{\x0d\n    // make a 1 byte buffer\x0d\n    let byte = Buffer.alloc(1);\x0d\n        \x0d\n    // record the number of lines read so we know when we reach the pixel data\x0d\n    let linesRead = 0;\x0d\n        \x0d\n    // create the variable to handle the p6 line\x0d\n    let p6Str = "";\x0d\n        \x0d\n    // create the variables to handle the dimension line\x0d\n    let hitDimSpace = false;\x0d\n    let widthStr = "";\x0d\n    let heightStr = "";\x0d\n    // create the varaibles to handle the max rgb value\x0d\n    let maxValStr = "";\x0d\n        \x0d\n    // create a variable to store where in the pixel buffer we are\x0d\n    let fbIndex = 0;\x0d\n        \x0d\n    // create a variable to store if the bytes we are reading are a part of a comment\x0d\n    let inComment = false;\x0d\n    let readComment = false;\x0d\n        \x0d\n        \x0d\n    let eof = 1;\x0d\n    while(eof)\x0d\n    {\x0d\n        // since 0 can be interpreted as a boolean\x2C can use 0 bytes read to mark eof or an err.\x0d\n        eof = nodefs.readSync(fileDesc\x2C byte);\x0d\n    \x0d\n        // convert the given byte into a string\x0d\n        const charRead = String.fromCharCode(byte[0]);\x0d\n    \x0d\n        // if the byte is a '#' then this line is a comment\x0d\n        // should only have one #\x0d\n        if(charRead == "#" && !readComment)\x0d\n            inComment = true;\x0d\n    \x0d\n        // if we are in a comment line and reach the new line char we are no longer in the comment line\x0d\n        if(inComment)\x0d\n        {   \x0d\n            readComment = true;\x0d\n        \x0d\n    //console.log("in comment " + charRead + " " + byte[0]);\x0d\n        \x0d\n            if(charRead == "\\n" || byte[0] == 13)\x0d\n                inComment = false;\x0d\n        \x0d\n    //console.log(inComment);\x0d\n        }\x0d\n        else // not inComment\x0d\n        {\x0d\n            // if we haven't read any lines then we have to check for the magic p6 \x0d\n            if(linesRead == 0)\x0d\n            {\x0d\n                // if we have hit the new line char then we have read the p6 line\x0d\n                // or if we have hit a carriage return\x0d\n                if(charRead == "\\n" || byte[0] == 13)\x0d\n                {\x0d\n                    linesRead += 1;\x0d\n                    if(p6Str != "P6")\x0d\n                        throw new Error("File does not contain the magic P6");\x0d\n                }   \x0d\n                else\x0d\n                    p6Str += charRead// keep concatenating each byte to accumulate the p6 str\x0d\n            }\x0d\n            else if(linesRead == 1)// the next nonComment line should be the dimensions\x0d\n            {\x0d\n    //console.log(charRead);\x0d\n                // see if we have read a whitespace character\x0d\n                if(charRead == " " || charRead == "\\t" || (!hitDimSpace && charRead == "\\n"))\x0d\n                    hitDimSpace = true;\x0d\n            \x0d\n                if(!hitDimSpace)\x0d\n                    widthStr += charRead;\x0d\n                else\x0d\n                    if(charRead != " " && charRead != "\\t" && charRead != '\\n')\x0d\n                        heightStr += charRead;\x0d\n            \x0d\n                // if we have read past the first dimension then\x0d\n                // the next newLine represents an actual new line\x0d\n                // create the framebuffer from the dimensions read\x0d\n                if(hitDimSpace && charRead == "\\n")\x0d\n                {    \x0d\n                    linesRead += 1;\x0d\n                    // create the frameBuffer from the dimensions read in the previous line\x0d\n                    fb = new FrameBuffer(+widthStr\x2C +heightStr);\x0d\n        console.log(widthStr);\x0d\n        console.log(heightStr);\x0d\n        //console.log(fb.toString());\x0d\n                }\x0d\n        //console.log(linesRead);\x0d\n            }\x0d\n            else if(linesRead == 2)//the next line should be the max rgb value\x0d\n            {\x0d\n        //console.log(charRead);\x0d\n                if(charRead != "\\n")\x0d\n                    maxValStr += charRead;\x0d\n                else\x0d\n                    linesRead += 1;\x0d\n        //console.log(maxValStr);\x0d\n            }\x0d\n            else if(linesRead > 2)// the rest of the values should be the byte pixel data\x0d\n            {\x0d\n                // create a buffer to hold three bytes for the r\x2C g\x2C b\x2C values\x0d\n                let pixelBytes = Buffer.alloc(3);\x0d\n                // read the pixel bytes from the file\x0d\n                eof = nodefs.readSync(fileDesc\x2C pixelBytes);\x0d\n                // extract each r\x2C g\x2C b\x2C byte\x0d\n                let r = pixelBytes[0];\x0d\n                let g = pixelBytes[1];\x0d\n                let b = pixelBytes[2];\x0d\n                // convert from unsigned to signed\x0d\n                if(r < 0) r += 256;\x0d\n                if(g < 0) g += 256;\x0d\n                if(b < 0) b += 256;\x0d\n                // write the rgb and 255 alpha value into the fb\x0d\n                fb.pixelBuffer[fbIndex + 0] = r;\x0d\n                fb.pixelBuffer[fbIndex + 1] = g;\x0d\n                fb.pixelBuffer[fbIndex + 2] = b;\x0d\n                fb.pixelBuffer[fbIndex + 3] = 255;\x0d\n                // record that we are 4 more bytes into the pixel buffer\x0d\n                fbIndex += 4;\x0d\n                \x0d\n                // set the unknown pixel value to be the byte\x0d\n                let val = byte[0] < 0 ? byte[0] + 256 : byte[0];\x0d\n                // write the unknown rgb value into the fb\x0d\n                fb.pixelBuffer.set(new Uint8Array([val])\x2C fbIndex);\x0d\n//console.log(fb.pixelBuffer.length);\x0d\n                fbIndex += 1;\x0d\n//console.log(val);\x0d\n//console.log(fb.pixelBuffer[fbIndex]);\x0d\n//console.log(arr[fbIndex]);\x0d\n//console.log(fbIndex);\x0d\n                // if we have written 3 rgb values the next is the alpha value \x0d\n                if(fbIndex %4 == 0)\x0d\n                    fb.pixelBuffer[++fbIndex] = 255;\x0d\n//console.log();\x0d\n            \x0d\n            }\x0d\n        }  \x0d\n    }\x0d\n    return fb;\x0d\n}\x0d\n);\x0d\n\x0d\nreturn await fb;\x0d\n*/\x0d\n/*\x0d\nimport("node:fs").then(\x0d\n    fs => fs.open(ppmFile\x2C 'r'\x2C \x0d\n            function(error\x2C fileDesc)\x0d\n            {\x0d\n                console.log("entered funciont");\x0d\n                // make a 1 byte buffer\x0d\n                let byte = Buffer.alloc(1);\x0d\n            \x0d\n                // record the number of lines read so we know when we reach the pixel data\x0d\n                let linesRead = 0;\x0d\n            \x0d\n                // create the variable to handle the p6 line\x0d\n                let p6Str = "";\x0d\n            \x0d\n                // create the variables to handle the dimension line\x0d\n                let hitDimSpace = false;\x0d\n                let widthStr = "";\x0d\n                let heightStr = "";\x0d\n                // create the varaibles to handle the max rgb value\x0d\n                let maxValStr = "";\x0d\n            \x0d\n                // create a variable to store where in the pixel buffer we are\x0d\n                let fbIndex = 0;\x0d\n            \x0d\n                // create a variable to store if the bytes we are reading are a part of a comment\x0d\n                let inComment = false;\x0d\n                let readComment = false;\x0d\n            \x0d\n            \x0d\n                let eof = 1;\x0d\n                while(eof)\x0d\n                {\x0d\n                    // since 0 can be interpreted as a boolean\x2C can use 0 bytes read to mark eof or an err.\x0d\n                    eof = fs.readSync(fileDesc\x2C byte);\x0d\n                \x0d\n                    // convert the given byte into a string\x0d\n                    const charRead = String.fromCharCode(byte[0]);\x0d\n                \x0d\n                    // if the byte is a '#' then this line is a comment\x0d\n                    // should only have one #\x0d\n                    if(charRead == "#" && !readComment)\x0d\n                        inComment = true;\x0d\n                \x0d\n                    // if we are in a comment line and reach the new line char we are no longer in the comment line\x0d\n                    if(inComment)\x0d\n                    {   \x0d\n                        readComment = true;\x0d\n                    \x0d\n                //console.log("in comment " + charRead + " " + byte[0]);\x0d\n                    \x0d\n                        if(charRead == "\\n" || byte[0] == 13)\x0d\n                            inComment = false;\x0d\n                    \x0d\n                //console.log(inComment);\x0d\n                    }\x0d\n                    else // not inComment\x0d\n                    {\x0d\n                        // if we haven't read any lines then we have to check for the magic p6 \x0d\n                        if(linesRead == 0)\x0d\n                        {\x0d\n                            // if we have hit the new line char then we have read the p6 line\x0d\n                            // or if we have hit a carriage return\x0d\n                            if(charRead == "\\n" || byte[0] == 13)\x0d\n                            {\x0d\n                                linesRead += 1;\x0d\n                                if(p6Str != "P6")\x0d\n                                    throw new Error("File does not contain the magic P6");\x0d\n                            }   \x0d\n                            else\x0d\n                                p6Str += charRead// keep concatenating each byte to accumulate the p6 str\x0d\n                        }\x0d\n                        else if(linesRead == 1)// the next nonComment line should be the dimensions\x0d\n                        {\x0d\n                //console.log(charRead);\x0d\n                            // see if we have read a whitespace character\x0d\n                            if(charRead == " " || charRead == "\\t" || (!hitDimSpace && charRead == "\\n"))\x0d\n                                hitDimSpace = true;\x0d\n                        \x0d\n                            if(!hitDimSpace)\x0d\n                                widthStr += charRead;\x0d\n                            else\x0d\n                                if(charRead != " " && charRead != "\\t" && charRead != '\\n')\x0d\n                                    heightStr += charRead;\x0d\n                        \x0d\n                            // if we have read past the first dimension then\x0d\n                            // the next newLine represents an actual new line\x0d\n                            // create the framebuffer from the dimensions read\x0d\n                            if(hitDimSpace && charRead == "\\n")\x0d\n                            {    \x0d\n                                linesRead += 1;\x0d\n                                // create the frameBuffer from the dimensions read in the previous line\x0d\n                                fb = new FrameBuffer(+widthStr\x2C +heightStr);\x0d\n                    console.log(widthStr);\x0d\n                    console.log(heightStr);\x0d\n                    //console.log(fb.toString());\x0d\n                            }\x0d\n                    //console.log(linesRead);\x0d\n                        }\x0d\n                        else if(linesRead == 2)//the next line should be the max rgb value\x0d\n                        {\x0d\n                    //console.log(charRead);\x0d\n                            if(charRead != "\\n")\x0d\n                                maxValStr += charRead;\x0d\n                            else\x0d\n                                linesRead += 1;\x0d\n                    //console.log(maxValStr);\x0d\n                        }\x0d\n                        else if(linesRead > 2)// the rest of the values should be the byte pixel data\x0d\n                    {\x0d\n                        // create a buffer to hold three bytes for the r\x2C g\x2C b\x2C values\x0d\n                        let pixelBytes = Buffer.alloc(3);\x0d\n                    \x0d\n                        // read the pixel bytes from the file\x0d\n                        eof = fs.readSync(fileDesc\x2C pixelBytes);\x0d\n                    \x0d\n                        // extract each r\x2C g\x2C b\x2C byte\x0d\n                        let r = pixelBytes[0];\x0d\n                        let g = pixelBytes[1];\x0d\n                        let b = pixelBytes[2];\x0d\n                    \x0d\n                        // convert from unsigned to signed\x0d\n                        if(r < 0) r += 256;\x0d\n                        if(g < 0) g += 256;\x0d\n                        if(b < 0) b += 256;\x0d\n                    \x0d\n                        // write the rgb and 255 alpha value into the fb\x0d\n                        fb.pixelBuffer[fbIndex + 0] = r;\x0d\n                        fb.pixelBuffer[fbIndex + 1] = g;\x0d\n                        fb.pixelBuffer[fbIndex + 2] = b;\x0d\n                        fb.pixelBuffer[fbIndex + 3] = 255;\x0d\n                    \x0d\n                        // record that we are 4 more bytes into the pixel buffer\x0d\n                        fbIndex += 4;\x0d\n                        \x0d\n                    \x0d\n                        \x0d\n                        // set the unknown pixel value to be the byte\x0d\n                        let val = byte[0] < 0 ? byte[0] + 256 : byte[0];\x0d\n                    \x0d\n                        // write the unknown rgb value into the fb\x0d\n                        fb.pixelBuffer.set(new Uint8Array([val])\x2C fbIndex);\x0d\n                    \x0d\n            //console.log(fb.pixelBuffer.length);\x0d\n                    \x0d\n                        fbIndex += 1;\x0d\n                    \x0d\n            //console.log(val);\x0d\n            //console.log(fb.pixelBuffer[fbIndex]);\x0d\n            //console.log(arr[fbIndex]);\x0d\n            //console.log(fbIndex);\x0d\n                    \x0d\n                        // if we have written 3 rgb values the next is the alpha value \x0d\n                        if(fbIndex %4 == 0)\x0d\n                            fb.pixelBuffer[++fbIndex] = 255;\x0d\n            //console.log();\x0d\n                        \x0d\n                        }\x0d\n                    }  \x0d\n                }\x0d\n            \x0d\n                //return fb;\x0d\n            }));\x0d\n    */\x0d\n/*\x0d\n        const nodefs = await import("node:fs");\x0d\n        const nodeReadLine = await import("node:readline");\x0d\n\x0d\n        const inputStream = nodefs.createReadStream(fileName);\x0d\n        const readLine = nodeReadLine.createInterface(\x0d\n                                        {\x0d\n                                            input: inputStream\x2C\x0d\n                                            crlfDelay: Infinity\x0d\n                                        });\x0d\n        \x0d\n        let fb = new FrameBuffer(0\x2C 0);\x0d\n        const a = 255;\x0d\n\x0d\n        // record the number of lines read so we know when we reach the pixel data\x0d\n        let linesRead = 0;\x0d\n        // record where in the framebuffer we are\x0d\n        let fbIndex = 0;\x0d\n        // record whether a value is 1 or 2 bytes based upon the maxVal color\x0d\n        let numBytesPerPixel = 0;\x0d\n        // record any caryover bytes from each line \x0d\n        let caryOver = new Array();\x0d\n\x0d\n    let sumLine = 0;\x0d\n        for await(const line of readLine)\x0d\n        {\x0d\n            if(!line.startsWith("#"))// if the line isn't a comment\x0d\n            {\x0d\n                if(linesRead == 0)// first noncomment line\x2C saying it is a p6 file\x0d\n                {\x0d\n                    if(!line.startsWith("P6"))\x0d\n                        throw new Error("File doesn't contain the P6 needed");\x0d\n                    else \x0d\n                        linesRead += 1;\x0d\n                }\x0d\n                else if(linesRead == 1) // second non comment line containing the dimensions\x0d\n                {\x0d\n                    const dim = line.split(" ");\x0d\n                    const width  = +dim[0];\x0d\n                    const height = +dim[1];\x0d\n\x0d\n                    fb = new FrameBuffer(width\x2C height);\x0d\n                    linesRead += 1;\x0d\n                }\x0d\n                else if(linesRead == 2)// third noncomment line saying maxVal for a color's r\x2C g\x2C or b value\x0d\n                {\x0d\n                    if(+line < 256 && +line > 0) // maximum 1 byte value\x0d\n                        numBytesPerPixel = 1;\x0d\n                    else if(+line < 65536 && +line >= 256) // maximum 2 byte value\x0d\n                        numBytesPerPixel = 2;\x0d\n                    else // error should only be 1 or 2 bytes\x0d\n                    {    \x0d\n                        console.log(line);\x0d\n                        throw new Error("maxVal should be either 1 or 2 bytes");\x0d\n                    }\x0d\n\x0d\n                    linesRead += 1;\x0d\n                }\x0d\n                else if(linesRead >= 3)// fourth noncomment line and on for the actual rgb bytes\x0d\n                {\x0d\n                    // because the line ends in an a value that doesn't have a char code\x0d\n                //console.log(line.charCodeAt(line.length));\x0d\n                    // this causes the last byte to not have a value\x0d\n                    // so we have to discard the last char in the line\x0d\n                    // before we create the bytes\x0d\n                    const byteLine = line.substring(0\x2C line.length-1);\x0d\n                    \x0d\n                    // since javascript strings are 16 bits shift right 8 bits\x0d\n                    const bytes = Uint8Array.from(byteLine\x2C (c) => c.charCodeAt(0)>>8)\x0d\n\x0d\n                    // record any caryover incase the line isn't divisible by three\x0d\n                    let caryOver = new Array();\x0d\n                    //record where in the fb we are at\x0d\n                    let fbIndex = 0; \x0d\n                    \x0d\n                    // handle any caryover since a line may not be a complete set of r\x2C g\x2C b's\x0d\n                    let caryOverIndex = 0;\x0d\n                    while(caryOverIndex < caryOver.length)\x0d\n                    {\x0d\n                        let val = caryOver[caryOverIndex];\x0d\n                        if(val < 0) val += 256;\x0d\n                    \x0d\n                        // see if we are at the alpha value in the framebuffer\x0d\n                        if(fbIndex %4 == 0)\x0d\n                        {\x0d\n                            fb.#pixelBuffer[fbIndex] = a;\x0d\n                            fbIndex += 1;\x0d\n                        }\x0d\n                    \x0d\n                        fb.#pixelBuffer[fbIndex] = val;\x0d\n\x0d\n                        caryOverIndex += 1;\x0d\n                        fbIndex += 1;\x0d\n                    }\x0d\n                    \x0d\n\x0d\n                    let byteIndex = 0;\x0d\n                    // loop over the bytes in this line\x2C increment by three since we need r\x2C g\x2C b\x0d\n                    for(; byteIndex < bytes.length; byteIndex += 3)\x0d\n                    {\x0d\n                        let r = bytes[byteIndex + 0];\x0d\n                        let g = bytes[byteIndex + 1];\x0d\n                        let b = bytes[byteIndex + 2];\x0d\n\x0d\n                        if(r < 0) r += 256; \x0d\n                        if(g < 0) g += 256; \x0d\n                        if(b < 0) b += 256; \x0d\n\x0d\n                        fb.#pixelBuffer[fbIndex + 0] = r;\x0d\n                        fb.#pixelBuffer[fbIndex + 1] = g;\x0d\n                        fb.#pixelBuffer[fbIndex + 2] = b;\x0d\n                        fb.#pixelBuffer[fbIndex + 3] = a;\x0d\n\x0d\n                        fbIndex += 4;\x0d\n                    }\x0d\n                    \x0d\n                    // record the caryover\x0d\n                    if(byteIndex != bytes.length)\x0d\n                        caryOver = new Array(bytes.slice(byteIndex));\x0d\n                    else // no caryover so reset the array.\x0d\n                        caryOver.length = 0;\x0d\n                    \x0d\n                    linesRead +=1;\x0d\n                }\x0d\n            }\x0d\n\x0d\n        }\x0d\n\x0d\n        // why is the number of lines read 141\x2C shouldn't the ppm raster be free of any whitespace?\x0d\n        console.log("Number of lines read in the ppm raster: " + linesRead)// 141\x0d\n        // why isn't the number of bytes read = width * height * 3 = 512 * 512 * 3 = 786432\x2C how am I mising so many bytes\x0d\n        console.log("Number of bytes read in the ppm raster :" + sumLine);// 748258\x0d\n        return fb;\x0d\n*/
code-source-info,0xc1e504c730,501,0,58208,C10O0C28O0C48O0C340O255C345O58208,,
code-creation,Function,10,493867,0xc1e504c900,42,<instance_members_initializer> file:///E:/Javascript%20Renderers/Javascript-Renderer-9v2/renderer_10_js/renderer/framebuffer/FrameBuffer.js:11:16,0xc1e504c0e0,~
code-source-info,0xc1e504c900,501,255,29699,C4O335C12O407C20O488C28O566C36O774C41O29699,,
code-creation,Script,10,495015,0xc1e5051000,329, file:///E:/Javascript%20Renderers/Javascript-Renderer-9v2/renderer_10_js/renderer/framebuffer/Viewport.js:1:1,0xc1e504fc78,~
script-source,502,file:///E:/Javascript%20Renderers/Javascript-Renderer-9v2/renderer_10_js/renderer/framebuffer/Viewport.js,/*\x0d\n    FrameBuffer. The MIT License.\x0d\n    Copyright (c) 2022 rlkraft@pnw.edu\x0d\n    See LICENSE for details.\x0d\n*/\x0d\n\x0d\n/**\x0d\n      A {@code Viewport} is an inner (non-static nested) class of\x0d\n      {@link FrameBuffer}. That means that a {@code Viewport} has\x0d\n      access to the pixel data of its "parent" {@link FrameBuffer}.\x0d\n   <p>\x0d\n      A {@code Viewport} is a two-dimensional sub array of its\x0d\n      "parent" {@link FrameBuffer}. A {@code Viewport} is\x0d\n      represented by its upper-left-hand corner and its\x0d\n      lower-right-hand corner in the {@link FrameBuffer}.\x0d\n   <p>\x0d\n      When you set a pixel in a {@code Viewport}\x2C you are really\x0d\n      setting a pixel in its parent {@link FrameBuffer}.\x0d\n   <p>\x0d\n      A {@link FrameBuffer} can have multiple {@code Viewport}s.\x0d\n   <p>\x0d\n      {@code Viewport} coordinates act like Java {@link java.awt.Graphics2D}\x0d\n      coordinates; the positive {@code x} direction is to the right and the\x0d\n      positive {@code y} direction is downward.\x0d\n*/\x0d\n\x0d\n//@ts-check\x0d\nimport {FrameBuffer\x2C Color} from "./FramebufferExport.js";\x0d\nimport {format} from "../scene/util/UtilExport.js";\x0d\n\x0d\nexport default class Viewport\x0d\n{\x0d\n    // Coordinates of the viewport within the framebuffer.\x0d\n    /**@type {number} #vp_ur_x upper left x */ #vp_ul_x;\x0d\n    /**@type {number} #vp_ur_y upper left y*/ #vp_ul_y;\x0d\n    /**@type {number} #vp_lr_x lower right x*/ #vp_lr_x;\x0d\n    /**@type {number} #vp_lr_y lower right y*/ #vp_lr_y;\x0d\n    /**@type {Color}  #bgColorVP background color*/ #bgColorVP;\x0d\n    /**@type {FrameBuffer} #parent the parent fb that the vp is in*/ #parent;\x0d\n\x0d\n    /**\x0d\n     * Create a {@code Viewport} with the given upper left hand corner\x0d\n     * width and height within its parent {@link FrameBuffer} and with the given background color.\x0d\n     * If no background color is give the default of {@link Color}.black is used.\x0d\n     * If no upper left hand corner is given then uses (0\x2C 0) as the upper left corner in the parent {@link FrameBuffer}\x0d\n     * NOTE: This constructor does not use the background color to set the pixels\x0d\n     * of this {@code Viewport} If you want the pixels of this {@code Viewport} to be cleared\x0d\n     * to the background color call the {@link clearVP} method\x0d\n     *\x0d\n     * @param {number} width the width of this {@code Viewport}\x0d\n     * @param {number} height the height of this {@code Viewport}\x0d\n     * @param {FrameBuffer} parent the {FrameBuffer} that this {@code Viewport} is inside\x0d\n     * @param {number} upperLeftX upper left hand x coordinate of this {@code Viewport}\x0d\n     * @param {number} upperLeftY upper left hand y coordinate of this {@code Viewport}\x0d\n     * @param {Color} color background {Color} for this {@code Viewport}\x0d\n     */\x0d\n    constructor(width\x2C height\x2C parent\x2C upperLeftX = 0\x2C upperLeftY = 0\x2C color = Color.Black)\x0d\n    {\x0d\n        if ( typeof upperLeftX != "number" ||\x0d\n             typeof upperLeftY != "number" ||\x0d\n             typeof width != "number"      ||\x0d\n             typeof height != "number")\x0d\n                 throw new Error("upperLeftX\x2C upperLeftY\x2C width\x2C height must be numerical");\x0d\n\x0d\n        if (parent instanceof FrameBuffer == false)\x0d\n            throw new Error("Parent is required and must be a FrameBuffer");\x0d\n\x0d\n        if (color instanceof Color == false)\x0d\n        {\x0d\n            color = Color.Black;\x0d\n        }\x0d\n\x0d\n        this.setViewport(width\x2C height\x2C upperLeftX\x2C upperLeftY);\x0d\n\x0d\n        this.#bgColorVP = color;\x0d\n        this.#parent = parent;\x0d\n\x0d\n        // we don't need this line of code\x0d\n        //this.clearVP(this.#bgColorVP);\x0d\n    }\x0d\n\x0d\n    /**\x0d\n     * Create a {@code Viewport} that is the exact replica of its parent {FrameBuffer}.\x0d\n     *\x0d\n     * @param {FrameBuffer} parent the parent {FrameBuffer} from which all data is taken from\x0d\n     * @returns {Viewport} a viewport that is the exact same as its {parent}\x0d\n     */\x0d\n    static buildParent(parent)\x0d\n    {\x0d\n        if (parent instanceof FrameBuffer == false)\x0d\n            throw new Error("Parent is required and must be a FrameBuffer");\x0d\n\x0d\n        const vp = new Viewport(parent.getWidthFB()\x2C\x0d\n                                parent.getHeightFB()\x2C\x0d\n                                parent\x2C\x0d\n                                0\x2C\x0d\n                                0\x2C\x0d\n                                parent.getBackgroundColorFB());\x0d\n\x0d\n        /*\x0d\n        we don't need this code it is just repeating setting the \x0d\n        fb to be its own color\x0d\n        since this function uses the fb's data\x0d\n        and the vp is the whole fb\x0d\n        */\x0d\n       \x0d\n        /*\x0d\n        for (let x = 0; x < parent.getWidthFB(); x += 1)\x0d\n        {\x0d\n            for (let y = 0; y < parent.getHeightFB(); y += 1)\x0d\n            {\x0d\n                vp.setPixelVP(x\x2C y\x2C parent.getPixelFB(x\x2C y));\x0d\n            }\x0d\n        }\x0d\n        */\x0d\n        return vp;\x0d\n    }\x0d\n\x0d\n    /**\x0d\n     * Create a {Viewport} that is the exact replica of the source {FrameBuffer} with its\x0d\n     * upper left hand corner at the specified point inside its parent {FrameBuffer}\x0d\n     * If no upper left hand corner is given uses (0\x2C 0) as the default upper left corner in the parent {FrameBuffer}\x0d\n     *\x0d\n     * @param {FrameBuffer} source the {FrameBuffer} that the width\x2C height\x2C and pixel data is to be taken from\x0d\n     * @param {FrameBuffer} parent the {FrameBuffer} that this {Viewport} is stored within\x0d\n     * @param {number} upperLeftX the upper left hand x coordinate of this {Viewport}\x0d\n     * @param {number} upperLeftY the upper left hand y coordinate of this {Viewport}\x0d\n     * @returns {Viewport} this {Viewport} with the specified upper left corner inside its parent and the size and pixel data of the source\x0d\n     */\x0d\n    static buildFB(source\x2C parent\x2C upperLeftX = 0\x2C upperLeftY = 0)\x0d\n    {\x0d\n        if (typeof upperLeftX != "number" || typeof upperLeftY != "number")\x0d\n            throw new Error("UpperLeftX and UpperleftY must be numerical.");\x0d\n\x0d\n        if (source instanceof FrameBuffer == false)\x0d\n            throw new Error("Source must be of type FrameBuffer");\x0d\n\x0d\n        if (parent instanceof FrameBuffer == false)\x0d\n            throw new Error("Parent is required and must be a framebuffer");\x0d\n\x0d\n        const vp = new Viewport(source.getWidthFB()\x2C\x0d\n                                source.getHeightFB()\x2C\x0d\n                                parent\x2C\x0d\n                                upperLeftX\x2C\x0d\n                                upperLeftY\x2C\x0d\n                                source.getBackgroundColorFB());\x0d\n\x0d\n        for (let x = 0; x < source.getWidthFB(); x += 1)\x0d\n        {\x0d\n            for (let y = 0; y < source.getHeightFB(); y += 1)\x0d\n            {\x0d\n                vp.setPixelVP(x\x2C y\x2C source.getPixelFB(x\x2C y));\x0d\n            }\x0d\n        }\x0d\n\x0d\n        return vp;\x0d\n    }\x0d\n\x0d\n    /**\x0d\n     * Create a {Viewport} that is the exact replica of the source {Viewport} with its\x0d\n     * upper left hand corner at the specified point inside its parent {FrameBuffer}\x0d\n     * if no upper left hand corner is given uses (0\x2C 0) as the default upper left hand corner in the parent {FrameBuffer}\x0d\n     *\x0d\n     * @param {Viewport} source the {Viewport} that the width height and pixel data is to be taken from\x0d\n     * @param {FrameBuffer} parent the {FrameBuffer} that this {Viewport} is stored within\x0d\n     * @param {number} upperLeftX upper left hand x coordinate of this {Viewport}\x0d\n     * @param {number} upperLeftY upper left hand y coordinate of this {Viewport}\x0d\n     * @returns {Viewport} with the specified upper left corner inside its parent and the size and pixel data of the source\x0d\n     */\x0d\n    static buildVP(source\x2C parent\x2C upperLeftX = 0\x2C upperLeftY = 0)\x0d\n    {\x0d\n        if (typeof upperLeftX != "number" || typeof upperLeftY != "number")\x0d\n            throw new Error("UpperLeftX and UpperleftY must be numerical.");\x0d\n\x0d\n        if (source instanceof Viewport == false)\x0d\n            throw new Error("Source must be of type FrameBuffer");\x0d\n\x0d\n        if (parent instanceof FrameBuffer == false)\x0d\n            throw new Error("Parent is required and must be a framebuffer");\x0d\n\x0d\n        const vp = new Viewport(source.getWidthVP()\x2C\x0d\n                                source.getHeightVP()\x2C\x0d\n                                parent\x2C\x0d\n                                upperLeftX\x2C\x0d\n                                upperLeftY\x2C\x0d\n                                source.getBackgroundColorVP());\x0d\n\x0d\n        for (let x = 0; x < source.getWidthVP(); x += 1)\x0d\n        {\x0d\n            for (let y = 0; y < source.getHeightVP(); y += 1)\x0d\n            {\x0d\n                vp.setPixelVP(x\x2C y\x2C source.getPixelVP(x\x2C y));\x0d\n            }\x0d\n        }\x0d\n\x0d\n        return vp;\x0d\n    }\x0d\n\x0d\n    /**\x0d\n     * Mutate this {Viewport} into the given upper left hand corner\x0d\n     * of its parent {FrameBuffer} with the specified widht and height\x0d\n     * if no upper left hand corner is given uses (0\x2C 0) as the default\x0d\n     * NOTE: will use Math.round() on upperLeftX and upperLeftY\x2C width and height\x0d\n     *\x0d\n     * @param {number} width the width of this {Viewport}\x0d\n     * @param {number} height the height of this {Viewport}\x0d\n     * @param {number} upperLeftX horizontal coordinate of this {Viewport}\x0d\n     * @param {number} upperLeftY vertical coordinate of this {Viewport}\x0d\n     */\x0d\n    setViewport(width\x2C height\x2C upperLeftX = 0\x2C upperLeftY = 0)\x0d\n    {\x0d\n        if (typeof width != "number"      ||\x0d\n            typeof height != "number"     ||\x0d\n            typeof upperLeftX != "number" ||\x0d\n            typeof upperLeftY != "number")\x0d\n                throw new Error("All parameters must be numerical.");\x0d\n\x0d\n        upperLeftX = Math.round(upperLeftX);\x0d\n        upperLeftY = Math.round(upperLeftY);\x0d\n        width = Math.round(width);\x0d\n        height = Math.round(height);\x0d\n\x0d\n        this.#vp_ul_x = upperLeftX;\x0d\n        this.#vp_ul_y = upperLeftY;\x0d\n        this.#vp_lr_x = this.#vp_ul_x + width;\x0d\n        this.#vp_lr_y = this.#vp_ul_y + height;\x0d\n    }\x0d\n\x0d\n\x0d\n    /**\x0d\n     * Return a reference to the {FrameBuffer} that this {Viewport} is in\x0d\n     *\x0d\n     * @returns {FrameBuffer} a reference to the {FrameBuffer} that this {Viewport} is inside\x0d\n     */\x0d\n    getFrameBuffer()\x0d\n    {\x0d\n        return this.#parent;\x0d\n    }\x0d\n\x0d\n\x0d\n    framebuffer = () => {return this.#parent}\x0d\n\x0d\n\x0d\n    get parent()\x0d\n    {\x0d\n        return this.#parent\x0d\n    }\x0d\n\x0d\n\x0d\n    /**\x0d\n     * Get the Width of this {Viewport}\x0d\n     *\x0d\n     * @returns {number} width of this {Viewport}\x0d\n     */\x0d\n    getWidthVP()\x0d\n    {\x0d\n        return this.#vp_lr_x - this.#vp_ul_x;\x0d\n    }\x0d\n\x0d\n\x0d\n    get width()\x0d\n    {\x0d\n        return this.#vp_lr_x - this.#vp_ul_x;\x0d\n    }\x0d\n\x0d\n\x0d\n    /**\x0d\n     * Get the height of this {Viewport}\x0d\n     * @returns {number} the height of this {Viewport}\x0d\n     */\x0d\n    getHeightVP()\x0d\n    {\x0d\n        return this.#vp_lr_y - this.#vp_ul_y;\x0d\n    }\x0d\n\x0d\n\x0d\n    get height()\x0d\n    {\x0d\n        return this.#vp_lr_y - this.#vp_ul_y;\x0d\n    }\x0d\n\x0d\n\x0d\n    /**\x0d\n     * Get this {Viewport} background color.\x0d\n     *\x0d\n     * @returns {Color} this {Viewport} background {Color}\x0d\n     */\x0d\n    getBackgroundColorVP()\x0d\n    {\x0d\n        return this.#bgColorVP;\x0d\n    }\x0d\n\x0d\n\x0d\n    get bgColorVP()\x0d\n    {\x0d\n        return this.#bgColorVP;\x0d\n    }\x0d\n\x0d\n\x0d\n    get vp_ul_x() {return this.#vp_ul_x;}\x0d\n    get vp_ul_y() {return this.#vp_ul_y;}\x0d\n    get vp_lr_x() {return this.#vp_lr_x;}\x0d\n    get vp_lr_y() {return this.#vp_lr_y;}\x0d\n\x0d\n\x0d\n    /**\x0d\n     * Set this {Viewport} background color.\x0d\n     * <p>\x0d\n     * NOTE: this method does not clear the pixels of this {Viewport}.\x0d\n     * to actually change all this {Viewport} pixels to the given\x0d\n     * {Color} use the {clearVP} method.\x0d\n     *\x0d\n     * @param {Color} color this {Viewport} new background color\x0d\n     */\x0d\n    setBackgroundColorVP(color)\x0d\n    {        \x0d\n        if (color instanceof Color == false)\x0d\n            throw new Error("Color is not of type Color");\x0d\n\x0d\n        this.#bgColorVP = color;\x0d\n    }\x0d\n\x0d\n\x0d\n    set bgColorVP(color)\x0d\n    {\x0d\n        if (color instanceof Color == false)\x0d\n            throw new Error("Color must be an intance of Color");\x0d\n\x0d\n        this.#bgColorVP = color;\x0d\n    }\x0d\n\x0d\n\x0d\n    /**\x0d\n     * Clear this {Viewport} using its background {Color}\x0d\n     */\x0d\n    clearVPDefault()\x0d\n    {\x0d\n        this.clearVP(this.getBackgroundColorVP());\x0d\n    }\x0d\n\x0d\n\x0d\n    /**\x0d\n     * Clear this {Viewport} using the given {Color}\x0d\n     *\x0d\n     * @param {Color} color\x2C the color to set this {Viewport} pixels to\x0d\n     */\x0d\n    clearVP(color)\x0d\n    {\x0d\n        if (color instanceof Color == false)\x0d\n            throw new Error("Color is not of type Color");\x0d\n\x0d\n        /*\x0d\n        for (let x = 0; x < this.getWidthVP(); x += 1)\x0d\n        {\x0d\n            for (let y = 0; y < this.getHeightVP(); y += 1)\x0d\n            {\x0d\n                this.setPixelVP(x\x2C y\x2C color);\x0d\n            }\x0d\n        }\x0d\n        */\x0d\n\x0d\n        //const c = Color.convert2Int(color);\x0d\n        for(let pixel = 0; pixel < this.getWidthVP() * this.getHeightVP()*4; pixel += 4)\x0d\n        {\x0d\n            this.parent.pixelBuffer[pixel + 0] = color.getRed();\x0d\n            this.parent.pixelBuffer[pixel + 1] = color.getGreen();\x0d\n            this.parent.pixelBuffer[pixel + 2] = color.getBlue();\x0d\n            this.parent.pixelBuffer[pixel + 3] = color.getAlpha();\x0d\n        }\x0d\n\x0d\n        for(let pixel = 0; pixel < this.getWidthVP() * this.getHeightVP()*4; pixel += 4)\x0d\n            this.parent.pixelBuffer.set(color.rgb\x2C pixel);\x0d\n    }\x0d\n\x0d\n\x0d\n    /**\x0d\n     * Get the {Color} of the pixel with coordinates at\x0d\n     * {(x\x2C y)} realtive to this {Viewport}\x0d\n     * Note: uses Math.round() to round x and y\x0d\n     *\x0d\n     * @param {number} x the horizontal coordinate within this {Viewport}\x0d\n     * @param {number} y the vertical coordinate within this {Viewport}\x0d\n     * @returns {Color} of the current pixel at the specified coordinate in this {Viewport}\x0d\n     */\x0d\n    getPixelVP(x\x2C y)\x0d\n    {\x0d\n        if (typeof x != "number" ||\x0d\n            typeof y != "number")\x0d\n               throw new Error("X and Y must be numerical");\x0d\n\x0d\n        x = Math.round(x);\x0d\n        y = Math.round(y);\x0d\n\x0d\n        return this.#parent.getPixelFB(this.#vp_ul_x + x\x2C\x0d\n                                       this.#vp_ul_y + y);\x0d\n    }\x0d\n\x0d\n\x0d\n    /**\x0d\n     * Set the {Color} of the pixel with coordinates {(x\x2C y)} within this {Viewport}\x0d\n     * Note uses default value {Color}.black if no color is given\x0d\n     * Note rounds x and y\x0d\n     *\x0d\n     * @param {number} x the horizontal coordinate within this {Viewport}\x0d\n     * @param {number} y the vertical coordinate within this {Viewport}\x0d\n     * @param {Color} color the {Color} that the {(x\x2C y)} pixel should be set to within this {Viewport}\x0d\n     */\x0d\n    setPixelVP(x\x2C y\x2C color = Color.black)\x0d\n    {\x0d\n        if (typeof x != "number" || typeof y != "number")\x0d\n            throw new Error("X and Y must be numerical");\x0d\n\x0d\n        if (color instanceof Color == false)\x0d\n            throw new Error("Color must be a Color");\x0d\n\x0d\n        x = Math.round(x);\x0d\n        y = Math.round(y);\x0d\n\x0d\n        this.#parent.setPixelFB(this.#vp_ul_x + x\x2C\x0d\n                                this.#vp_ul_y + y\x2C\x0d\n                                color);\x0d\n    }\x0d\n\x0d\n\x0d\n    /**\x0d\n     * Create a new {FrameBuffer} contianing the pixel data from this {Viewport}\x0d\n     *\x0d\n     * @returns {FrameBuffer} holding pixel data from this {Viewport}\x0d\n     */\x0d\n    convertVP2FB()\x0d\n    {\x0d\n        return(FrameBuffer.buildVP(this));\x0d\n    }\x0d\n\x0d\n\x0d\n    /**\x0d\n         Write this {Viewport} to the specified PPM file.\x0d\n      <p>\x0d\n         <a href="https://en.wikipedia.org/wiki/Netpbm_format" target="_top">\x0d\n                  https://en.wikipedia.org/wiki/Netpbm_format</a>\x0d\n\x0d\n         @param filename {string}  name of PPM image file to hold {Viewport} data\x0d\n    */\x0d\n    dumpVP2File(filename)\x0d\n    {\x0d\n        if (typeof filename != "string")\x0d\n            throw new Error("Filename must be a String");\x0d\n\x0d\n        this.#parent.dumpPixels2File(this.#vp_ul_x\x2C\x0d\n                                     this.#vp_ul_y\x2C\x0d\n                                     this.#vp_lr_x\x2C\x0d\n                                     this.#vp_lr_y\x2C\x0d\n                                     filename);\x0d\n    }\x0d\n\x0d\n\x0d\n    /**\x0d\n      For debugging very small {Viewport} objects.\x0d\n\x0d\n      @return {string} a string representation of this {Viewport}\x0d\n   */\x0d\n    toString()\x0d\n    {\x0d\n        let result = "Viewport [w=" + this.width + "\x2C h=" + this.height + "]\\n";\x0d\n\x0d\n        for (let j = 0; j < this.width; ++j)\x0d\n        {\x0d\n            result += " r   g   b |";\x0d\n        }\x0d\n\x0d\n        result += "\\n";\x0d\n        for (let i = 0; i < this.height; ++i)\x0d\n        {\x0d\n            for (let j = 0; j < this.width; ++j)\x0d\n            {\x0d\n                const c = this.getPixelVP(j\x2C i);\x0d\n                const color = Color.buildColor(c);\x0d\n\x0d\n                result += format("%3d "\x2C color.getRed());\x0d\n                result += format("%3d "\x2C color.getGreen());\x0d\n                result += format("%3d|"\x2C color.getBlue());\x0d\n            }\x0d\n            result += "\\n";\x0d\n        }\x0d\n        /*\x0d\n        let result = "Viewport [w = " + this.getWidthVP() + "\x2C h = " + this.getHeightVP() + "]\\n";\x0d\n\x0d\n        for (let y = 0; y < this.getHeightVP(); ++y)\x0d\n        {\x0d\n            for (let x = 0; x < this.getWidthVP(); ++x)\x0d\n            {\x0d\n                const color = this.getPixelVP(x\x2C y);\x0d\n                result += color.getRed() + " " + color.getGreen() + " " + color.getBlue() + " " + color.getAlpha() + " | ";\x0d\n            }\x0d\n            result += "\\n";\x0d\n        }\x0d\n        */\x0d\n        return result;\x0d\n    }\x0d\n\x0d\n\x0d\n    /**\x0d\n     * For Testing.\x0d\n     */\x0d\n    static main()\x0d\n    {\x0d\n        const fb = new FrameBuffer(10\x2C 10);\x0d\n\x0d\n        console.log("creating vp1 = new VP(3\x2C 3\x2C fb = new FrameBuffer(10\x2C 10)\x2C 4\x2C 4\x2C color.orange)");\x0d\n        const vp1 = new Viewport(3\x2C 3\x2C fb\x2C 4\x2C 4\x2C Color.orange);\x0d\n\x0d\n        console.log("creating vp2 = VP.buildParent()");\x0d\n        const vp2 = Viewport.buildParent(fb);\x0d\n\x0d\n        console.log("creating vp3 = vP.buildFB");\x0d\n        const vp3 = Viewport.buildFB(new FrameBuffer(5\x2C 5)\x2C fb\x2C 2\x2C 2);\x0d\n\x0d\n        console.log("creating vp4 = vp.buildVP");\x0d\n        const vp4 = Viewport.buildVP(vp1\x2C fb\x2C 0\x2C 0);\x0d\n\x0d\n        console.log("");\x0d\n        console.log("vp1.getFramebuffer()");\x0d\n        console.log(vp1.getFrameBuffer().toString());\x0d\n\x0d\n        console.log("");\x0d\n        console.log("vp2.framebuffer()");\x0d\n        console.log(vp2.framebuffer().toString());\x0d\n\x0d\n        console.log("");\x0d\n        console.log("vp3.parent");\x0d\n        console.log(vp3.parent.toString());\x0d\n\x0d\n        console.log("");\x0d\n        console.log("vp1.getWidthVP()");\x0d\n        console.log(vp1.getWidthVP());\x0d\n\x0d\n        console.log("");\x0d\n        console.log("vp1.getHeightVP()");\x0d\n        console.log(vp1.getHeightVP());\x0d\n\x0d\n        console.log("");\x0d\n        console.log("vp4.width");\x0d\n        console.log(vp4.width);\x0d\n\x0d\n        console.log("");\x0d\n        console.log("vp4.height");\x0d\n        console.log(vp4.height);\x0d\n\x0d\n        console.log("");\x0d\n        console.log("vp2.getBackGroundColorVP()");\x0d\n        console.log(vp2.getBackgroundColorVP().toString());\x0d\n\x0d\n        console.log("");\x0d\n        console.log("vp3.bgColorVP");\x0d\n        console.log(vp3.bgColorVP.toString());\x0d\n\x0d\n        console.log("");\x0d\n        console.log("vp3.setBackGroundColorVP(Color.Green");\x0d\n        vp3.setBackgroundColorVP(Color.Green);\x0d\n        console.log(vp3.toString());\x0d\n\x0d\n        console.log("");\x0d\n        console.log("vp3.clearVPDefault()");\x0d\n        vp3.clearVPDefault();\x0d\n        console.log(vp3.toString());\x0d\n\x0d\n        console.log("");\x0d\n        console.log("vp2.setPixelVP(1\x2C 1\x2C Color.PINK)");\x0d\n        vp2.setPixelVP(1\x2C 1\x2C Color.Pink);\x0d\n        console.log(vp2.toString());\x0d\n\x0d\n        console.log("");\x0d\n        console.log("vp2.getPixelVP(1\x2C 1");\x0d\n        console.log(vp2.getPixelVP(1\x2C 1).toString());\x0d\n\x0d\n        console.log("");\x0d\n        console.log("vp1.dumpVP2File(VP1.ppm)");\x0d\n        vp1.dumpVP2File("VP1.ppm");\x0d\n\x0d\n        console.log("");\x0d\n        console.log("vp2.dumpVP2File(VP2.ppm)");\x0d\n        vp2.dumpVP2File("VP2.ppm");\x0d\n\x0d\n        console.log("");\x0d\n        console.log("vp3.dumpVP2File(VP3.ppm)");\x0d\n        vp3.dumpVP2File("VP3.ppm");\x0d\n\x0d\n        console.log("");\x0d\n        console.log("vp4.dumpVP2File(VP4.ppm)");\x0d\n        vp4.dumpVP2File("VP4.ppm");\x0d\n\x0d\n        console.log("");\x0d\n        console.log("vp1.convertVP2FB()");\x0d\n        console.log(vp1.convertVP2FB().toString());\x0d\n    }\x0d\n}
code-source-info,0xc1e5051000,502,0,20215,C10O0C28O0C48O0C323O1137C328O20215,,
code-creation,Function,10,496348,0xc1e5051238,79,<instance_members_initializer> file:///E:/Javascript%20Renderers/Javascript-Renderer-9v2/renderer_10_js/renderer/framebuffer/Viewport.js:31:16,0xc1e50509d0,~
code-source-info,0xc1e5051238,502,1137,20215,C0O1137C15O1263C25O1320C35O1378C45O1436C55O1499C65O1581C69O10141C78O20215,,
new,MemoryChunk,0x277c1680000,262144
code-creation,Script,10,497940,0xc1e5053638,225, file:///E:/Javascript%20Renderers/Javascript-Renderer-9v2/renderer_10_js/renderer/framebuffer/Color.js:1:1,0xc1e5052838,~
script-source,503,file:///E:/Javascript%20Renderers/Javascript-Renderer-9v2/renderer_10_js/renderer/framebuffer/Color.js,/*\x0d\n    FrameBuffer. The MIT License.\x0d\n    Copyright (c) 2022 rlkraft@pnw.edu\x0d\n    See LICENSE for details.\x0d\n*/\x0d\n\x0d\n/**\x0d\n * An {@code Color} is a way of storing the red\x2C green\x2C blue\x2C and alpha data\x0d\n * about a color object.  It is supposed to mimic Java's Color class.\x0d\n */\x0d\n\x0d\n//@ts-check\x0d\nimport {format} from "../scene/util/UtilExport.js";\x0d\n\x0d\nimport {FrameBuffer} from "./FramebufferExport.js";\x0d\n\x0d\nexport default class Color\x0d\n{\x0d\n    /**@type {Uint8ClampedArray} #rgb the rgba array for this color*/#rgb = new Uint8ClampedArray(4);\x0d\n\x0d\n    static GAMMA = 1/2.2;\x0d\n\x0d\n    static black = new Color();\x0d\n    static BLACK = new Color();\x0d\n    static Black = new Color();\x0d\n\x0d\n    static white = new Color(255\x2C 255\x2C 255);\x0d\n    static WHITE = new Color(255\x2C 255\x2C 255);\x0d\n    static White = new Color(255\x2C 255\x2C 255);\x0d\n\x0d\n    static red = new Color(255\x2C 0\x2C 0);\x0d\n    static RED = new Color(255\x2C 0\x2C 0);\x0d\n    static Red = new Color(255\x2C 0\x2C 0);\x0d\n\x0d\n    static green = new Color(0\x2C 255\x2C 0);\x0d\n    static GREEN = new Color(0\x2C 255\x2C 0);\x0d\n    static Green = new Color(0\x2C 255\x2C 0);\x0d\n\x0d\n    static blue = new Color(0\x2C 0\x2C 255);\x0d\n    static BLUE = new Color(0\x2C 0\x2C 255);\x0d\n    static Blue = new Color(0\x2C 0\x2C 255);\x0d\n\x0d\n    static orange = new Color(255\x2C 127\x2C 0);\x0d\n    static ORANGE = new Color(255\x2C 127\x2C 0);\x0d\n    static Orange = new Color(255\x2C 127\x2C 0);\x0d\n\x0d\n    static yellow = new Color(255\x2C 255\x2C 0);\x0d\n    static YELLOW = new Color(255\x2C 255\x2C 0);\x0d\n    static Yellow = new Color(255\x2C 255\x2C 0);\x0d\n\x0d\n    static pink = new Color(255\x2C 192\x2C 203\x2C);\x0d\n    static PINK = new Color(255\x2C 192\x2C 203\x2C);\x0d\n    static Pink = new Color(255\x2C 192\x2C 203\x2C);\x0d\n\x0d\n    static cyan = new Color(0\x2C 255\x2C 255);\x0d\n    static CYAN = new Color(0\x2C 255\x2C 255);\x0d\n    static Cyan = new Color(0\x2C 255\x2C 255);\x0d\n\x0d\n    static magenta = new Color(255\x2C 0\x2C 255);\x0d\n    static MAGENTA = new Color(255\x2C 0\x2C 255);\x0d\n    static Magenta = new Color(255\x2C 0\x2C 255);\x0d\n\x0d\n    static gray = new Color(192\x2C 192\x2C 192);\x0d\n    static GRAY = new Color(192\x2C 192\x2C 192);\x0d\n    static Gray = new Color(192\x2C 192\x2C 192);\x0d\n\x0d\n    /**\x0d\n     * Creates a new {@code Color} with the specified red\x2C green\x2C blue\x2C and alpha values given.\x0d\n     * Will check to make sure that the given values are within range\x0d\n     * By default alpha is set to 255 \x0d\n     * uses Math.round() on r\x2C g\x2C b\x0d\n     *\x0d\n     * @param {number} r the red value of the {@code Color}\x0d\n     * @param {number} g the green value of the {@code Color}\x0d\n     * @param {number} b the blue value of the {@code Color}\x0d\n     * @param {number} a the alpha value of the {@code Color}\x0d\n     */\x0d\n    constructor(r = 0\x2C g = 0\x2C b = 0\x2C a = 255)\x0d\n    {\x0d\n        if (typeof r != "number" ||\x0d\n            typeof g != "number" ||\x0d\n            typeof b != "number" ||\x0d\n            typeof a != "number")\x0d\n                throw new Error("All parameters must be numeric");\x0d\n\x0d\n        if (! (r >= 0 && r <= 255) ||\x0d\n            ! (g >= 0 && g <= 255) ||\x0d\n            ! (b >= 0 && b <= 255) ||\x0d\n            ! (a >= 0 && a <= 255))\x0d\n               throw new Error("Int data must be between 0 and 255 inclusive");\x0d\n\x0d\n        r = Math.round(r);\x0d\n        g = Math.round(g);\x0d\n        b = Math.round(b);\x0d\n        a = Math.round(a);\x0d\n\x0d\n        this.#rgb[0] = r;\x0d\n        this.#rgb[1] = g;\x0d\n        this.#rgb[2] = b;\x0d\n        this.#rgb[3] = a;\x0d\n    }\x0d\n\x0d\n\x0d\n    /**\x0d\n     * Creates a new color using the rgba data of the given color\x0d\n     *\x0d\n     * @param {Color}  color the color whose data is to be used to create the new {@code Color}\x0d\n     * @returns {Color} a new {@code Color} that is a deep copy of the color passed.\x0d\n     */\x0d\n    static buildColor(color)\x0d\n    {\x0d\n        if (color instanceof Color == false)\x0d\n            throw new Error("color is not of type Color");\x0d\n\x0d\n        return new Color(color.getRed()\x2C\x0d\n                         color.getGreen()\x2C\x0d\n                         color.getBlue()\x2C\x0d\n                         color.getAlpha());\x0d\n    }\x0d\n\x0d\n    /**\x0d\n     * Create a color object from an rgba uint8clamped array.\x0d\n     * @param {Uint8ClampedArray} rgba the rgba array to be used \x0d\n     * @returns {Color} the new color created with the given rgba data\x0d\n     */\x0d\n    static buildRGBA(rgba)\x0d\n    {\x0d\n        if(rgba instanceof Uint8ClampedArray == false)\x0d\n            throw new Error("RGBA needs to be a uint8clamped array");\x0d\n\x0d\n        return new Color(rgba[0]\x2C rgba[1]\x2C rgba[2]\x2C rgba[3]);\x0d\n    }\x0d\n\x0d\n    /**\x0d\n     * Creates a new color that is the same rgb values but not the alpha value of the color passed.\x0d\n     * Insteads uses the passed alpha.  This function is supposed to create a 'stronger' or 'weaker' duplicate color.\x0d\n     * NOTE: this function is NON MUTATING\x0d\n     *\x0d\n     * @param {Color} color the rgb values to be used in the color being created\x0d\n     * @param {number} alpha the alpha value for the color to be created\x0d\n     * @returns {Color} the 'stronger' or 'weaker' duplicate color\x0d\n     */\x0d\n    static buildAlpha(color\x2C alpha)\x0d\n    {\x0d\n        if (color instanceof Color == false)\x0d\n            throw new Error("Color is not of type Color");\x0d\n\x0d\n        if (typeof alpha != "number")\x0d\n            throw new Error("Alpha is not numerical");\x0d\n\x0d\n        return new Color(color.getRed()\x2C\x0d\n                         color.getGreen()\x2C\x0d\n                         color.getBlue()\x2C\x0d\n                         alpha);\x0d\n    }\x0d\n\x0d\n\x0d\n    /**\x0d\n     * Creates a new color that is the weighted average of the two colors using the ratio between their Alphas.\x0d\n     * formula: c1.alpha/(c1.alpha + c2.alpha)\x0d\n     * this function is NON MUTATING\x0d\n     * NOTE: returns a float color with alpha of 1\x0d\n     *\x0d\n     * @param {Color} c1 the first color to be blended with\x0d\n     * @param {Color} c2 the second color to be blended with\x0d\n     * @returns the new float representation of the blended colors with an alpha of 1\x0d\n     */\x0d\n    static blendColor(c1\x2C c2)\x0d\n    {\x0d\n        return Color.blendColorWeight(c1\x2C c2\x2C c1.getAlpha()/(c1.getAlpha() + c2.getAlpha()));\x0d\n    }\x0d\n\x0d\n\x0d\n    /**\x0d\n     * Creates a new color that is the weighted average of\x0d\n     * the two colors using the given c1Weight\x2C the weight\x0d\n     * of the first color.  c1Weight has the default value of 1/2\x0d\n     * Uses the equation: c1Weight * c1 + (1-c1Weight) * c2;\x0d\n     * this function is NON MUTATING\x0d\n     * NOTE: returns a color with alpha of 255\x0d\n     *\x0d\n     * @param {Color} c1 the first color to be blended with\x0d\n     * @param {Color} c2 the second color to be blended with\x0d\n     * @param {number} c1Weight the weight of the first color\x2C must be in the range [0\x2C 1]\x0d\n     * @returns {Color} the new float representation of the passed color\x0d\n     */\x0d\n    static blendColorWeight(c1\x2C c2\x2C c1Weight = .5)\x0d\n    {\x0d\n        if (c1 instanceof Color == false || c2 instanceof Color == false)\x0d\n            throw new Error("C1 and C2 are not of type color");\x0d\n\x0d\n        if (typeof c1Weight != "number")\x0d\n            throw new Error("c1Weight is not numerical");\x0d\n\x0d\n        if (! (c1Weight >= 0 && c1Weight <= 1))\x0d\n            throw new Error("c1Weight has to be in the range 0 to 1 inclusive");\x0d\n\x0d\n        const newR = c1Weight * c1.getRed()   + (1-c1Weight) * c2.getRed();\x0d\n        const newG = c1Weight * c1.getGreen() + (1-c1Weight) * c2.getGreen();\x0d\n        const newB = c1Weight * c1.getBlue()  + (1-c1Weight) * c2.getBlue();\x0d\n\x0d\n        return new Color(newR\x2C newG\x2C newB\x2C 255);\x0d\n    }\x0d\n\x0d\n\x0d\n    /**\x0d\n     * Creates a new {@code Color} that is the float representation of the passed color.\x0d\n     * NOTE: this function is NON MUTATING.  If you want to mutate the color call {@code mutate2Float()}\x0d\n     *\x0d\n     * @param {Color} color the color whose data is to be used to create the new color\x0d\n     * @returns {Color} the new float representation of the color passed\x0d\n     */\x0d\n    /*\x0d\n    static convert2Float(color)\x0d\n    {\x0d\n        if (color instanceof Color == false)\x0d\n            throw new Error("Color is not of type Color");\x0d\n\x0d\n        if (color.isFloat())\x0d\n        {\x0d\n            return Color.buildColor(color);\x0d\n        }\x0d\n\x0d\n        return (new Color(color.getRed()/255\x2C\x0d\n                          color.getGreen()/255\x2C\x0d\n                          color.getBlue()/255\x2C\x0d\n                          color.getAlpha()/255\x2C\x0d\n                          true));\x0d\n    }\x0d\n    */\x0d\n\x0d\n    /**\x0d\n     * Creates a new {@code Color} that is the integer representation of the passed Color.\x0d\n     * NOTE: this function is NON MUTATING.  If you want to mutate the color call {@code mutate2Int()}\x0d\n     *\x0d\n     * @param {Color} color the color whose data is to be used to make the new {@code Color}\x0d\n     * @returns {Color} the new int representation of the color passed.\x0d\n     */\x0d\n    /*\x0d\n    static convert2Int(color)\x0d\n    {\x0d\n        if (color instanceof Color == false)\x0d\n            throw new Error("Color is not of type Color");\x0d\n\x0d\n        if (color.isFloat() == false)\x0d\n        {\x0d\n            return Color.buildColor(color);\x0d\n        }\x0d\n\x0d\n        return (new Color(color.getRed() * 255\x2C\x0d\n                          color.getGreen() * 255\x2C\x0d\n                          color.getBlue() * 255\x2C\x0d\n                          color.getAlpha() * 255\x2C\x0d\n                          false));\x0d\n    }\x0d\n    */\x0d\n\x0d\n    /**\x0d\n     * MUTATE the calling {@code Color} object to be the float representation of itself.\x0d\n     * @param {Color} c the color to be mutated into a float\x0d\n     * @returns {Color} the MUTATED calling color represented as a float for method chaining\x0d\n     */\x0d\n    /*\x0d\n    static mutate2Float(c)\x0d\n    {\x0d\n        if (c instanceof Color == false)\x0d\n            throw new Error("c is not a color");\x0d\n\x0d\n        if (c.isFloat() == false)\x0d\n        {\x0d\n            c = new Color(c.getRed()/255\x2C\x0d\n                          c.getGreen()/255\x2C\x0d\n                          c.getBlue()/255\x2C\x0d\n                          c.getAlpha()/255\x2C\x0d\n                          true);\x0d\n        }\x0d\n\x0d\n        return c;\x0d\n    }\x0d\n    */\x0d\n\x0d\n    /**\x0d\n     * MUTATE the calling {@code Color} object to be the int representation of itself.\x0d\n     * @param {Color} c the color to be mutated\x0d\n     * @returns {Color} the mutated color for method chaining\x0d\n     */\x0d\n    /*\x0d\n    static mutate2Int(c)\x0d\n    {\x0d\n        if (c instanceof Color == false)\x0d\n            throw new Error("c is not a color");\x0d\n\x0d\n        if (c.isFloat())\x0d\n        {\x0d\n            c = new Color(c.getRed() * 255\x2C\x0d\n                          c.getGreen() * 255\x2C\x0d\n                          c.getBlue() * 255\x2C\x0d\n                          c.getAlpha() * 255\x2C\x0d\n                          false);\x0d\n        }\x0d\n\x0d\n        return c;\x0d\n    }\x0d\n    */\x0d\n\x0d\n\x0d\n    /**\x0d\n     * Get the red value of the color\x0d\n     * @returns {number} the red value of the color\x0d\n     */\x0d\n    getRed()\x0d\n    {\x0d\n        return this.#rgb[0];\x0d\n    }\x0d\n\x0d\n    /**\x0d\n     * Get the green value of the color\x0d\n     * @returns {number} the green value of the color\x0d\n     */\x0d\n    getGreen()\x0d\n    {\x0d\n        return this.#rgb[1];\x0d\n    }\x0d\n\x0d\n    /**\x0d\n     * Get the blue value of the color\x0d\n     * @returns {number} the blue value of the color\x0d\n     */\x0d\n    getBlue()\x0d\n    {\x0d\n        return this.#rgb[2];\x0d\n    }\x0d\n\x0d\n    /**\x0d\n     * Get the alpha value of the color\x0d\n     * @returns {number} the alpha value of the color\x0d\n     */\x0d\n    getAlpha()\x0d\n    {\x0d\n        return this.#rgb[3];\x0d\n    }\x0d\n\x0d\n\x0d\n    /**\x0d\n     * Change the alpha value of this color\x0d\n     * @param {number} a the new alpha value for this color\x0d\n     */\x0d\n    setAlpha(a)\x0d\n    {\x0d\n        if(typeof a != "number")\x0d\n            throw new Error("a is not numerical");\x0d\n\x0d\n        if(a < 0 || a > 255)\x0d\n            throw new Error("a is supposed to be between 0 and 255 inclusive");\x0d\n\x0d\n        this.#rgb[3] = Math.round(a);\x0d\n    }\x0d\n\x0d\n\x0d\n    /**\x0d\n     * Get the r\x2C g\x2C b\x2C and alpha values in an array\x0d\n     * @returns {Uint8ClampedArray} the rgba array for this color\x0d\n     */\x0d\n    getRGBComponents()\x0d\n    {\x0d\n        return this.#rgb;\x0d\n    }\x0d\n\x0d\n    get rgb()\x0d\n    {\x0d\n        return this.#rgb;\x0d\n    }\x0d\n\x0d\n    /**\x0d\n     * For debugging.\x0d\n     * @returns {string} a string representation of this color\x0d\n     */\x0d\n    toString()\x0d\n    {\x0d\n        return (format("(r\x2C g\x2C b): (%3d\x2C %3d\x2C %3d)"\x2C this.#rgb[0]\x2C this.#rgb[1]\x2C this.#rgb[2]));\x0d\n    }\x0d\n\x0d\n\x0d\n    /**\x0d\n     * For testing.\x0d\n     */\x0d\n    static main()\x0d\n    {\x0d\n        /*\x0d\n        console.log("Making color1 = new Color(0\x2C 0\x2C 0\x2C 100)");\x0d\n        let color1 = new Color(0\x2C 0\x2C 0\x2C 100);\x0d\n        console.log(color1.toString());\x0d\n\x0d\n        console.log("Making color2 = new Color(1\x2C 1\x2C 1\x2C 1\x2C true)");\x0d\n        let color2 = new Color(1\x2C 1\x2C 1\x2C 1\x2C true);\x0d\n        console.log(color2.toString());\x0d\n\x0d\n        console.log("Making color3 = Color.buildAlpha(color1\x2C 255)");\x0d\n        let color3 = Color.buildAlpha(color1\x2C 255);\x0d\n        console.log(color3.toString());\x0d\n\x0d\n        console.log("Making color4 = Color.buildColor(color2)");\x0d\n        let color4 = Color.buildColor(color2);\x0d\n        console.log(color4.toString());\x0d\n\x0d\n        console.log("Making color5 = Color.blendColor(color2\x2C color3)");\x0d\n        let color5 = Color.blendColor(color2\x2C color3);\x0d\n        console.log(color5.toString());\x0d\n\x0d\n        console.log("Making color6 = Color.blendColorWeight(color3\x2C .9)");\x0d\n        let color6 = Color.blendColorWeight(color2\x2C color3\x2C .9);\x0d\n        console.log(color6.toString());\x0d\n\x0d\n        console.log("Making color7 = Color.convert2Int(color2)");\x0d\n        let color7 = Color.convert2Int(color2);\x0d\n        console.log(color7.toString());\x0d\n\x0d\n        console.log("Making color8 = Color.convert2Float(color3)");\x0d\n        let color8 = Color.convert2Float(color3);\x0d\n        console.log(color8.toString());\x0d\n\x0d\n        console.log("Checking color2.isFloat()");\x0d\n        console.log(color2.isFloat());\x0d\n\x0d\n        console.log("Mutating color2 to be an int");\x0d\n        Color.mutate2Int(color2);\x0d\n        console.log(color2.toString());\x0d\n\x0d\n        console.log("Calling color2.isFloat()");\x0d\n        console.log(color2.isFloat());\x0d\n\x0d\n        console.log("calling color3.isFloat()");\x0d\n        console.log(color3.isFloat());\x0d\n\x0d\n        console.log("Mutating color3 to be a float");\x0d\n        Color.mutate2Int(color3);\x0d\n        console.log(color3.toString());\x0d\n\x0d\n        console.log("calling color3.isFloat())");\x0d\n        console.log(color3.isFloat());\x0d\n        */\x0d\n    }\x0d\n\x0d\n\x0d\n    // Apply gamma-encoding (gamma-compression) to the colors.\x0d\n    // https://www.scratchapixel.com/lessons/digital-imaging/digital-images\x0d\n    // http://blog.johnnovak.net/2016/09/21/what-every-coder-should-know-about-gamma/\x0d\n    static applyGamma(color)\x0d\n    {\x0d\n        if (color instanceof Color == false)\x0d\n            throw new Error("Color is not of type Color");\x0d\n\x0d\n        const newRed   = 255 * Math.pow(color.getRed()/255\x2C   Color.GAMMA);\x0d\n        const newGreen = 255 * Math.pow(color.getGreen()/255\x2C Color.GAMMA);\x0d\n        const newBlue  = 255 * Math.pow(color.getBlue()/255\x2C  Color.GAMMA);\x0d\n\x0d\n        return new Color(newRed\x2C newGreen\x2C newBlue);\x0d\n    }\x0d\n\x0d\n\x0d\n    static hexToRgba(hex)\x0d\n    {\x0d\n        if (hex.match(/^#[A-Fa-f0-9]{6}/))\x0d\n        {\x0d\n            return new Array([parseInt(hex.substring(1\x2C 3)\x2C 16)\x2C\x0d\n                              parseInt(hex.substring(3\x2C 5)\x2C 16)\x2C\x0d\n                              parseInt(hex.substring(5\x2C 7)\x2C 16)\x2C\x0d\n                              255]);\x0d\n        }\x0d\n\x0d\n        return new Array([0\x2C 0\x2C 0\x2C 255]);\x0d\n    }\x0d\n\x0d\n\x0d\n    static RgbToHex(color)\x0d\n    {\x0d\n        if (color instanceof Color == false)\x0d\n            throw new Error("Color is not of type Color");\x0d\n\x0d\n        return "#" + Color.intToHex(color[0]) + Color.intToHex(color[1]) + Color.intToHex(color[2]);\x0d\n    }\x0d\n\x0d\n\x0d\n    static intToHex(x)\x0d\n    {\x0d\n        if (x < 10)\x0d\n        {\x0d\n            return "0" + x.toString(16);\x0d\n        }\x0d\n\x0d\n        return x.toString(16);\x0d\n    }\x0d\n}\x0d\n\x0d\n///*\x0d\n//    FrameBuffer. The MIT License.\x0d\n//    Copyright (c) 2022 rlkraft@pnw.edu\x0d\n//    See LICENSE for details.\x0d\n//*/\x0d\n//\x0d\n///**\x0d\n// * An {@code Color} is a way of storing the red\x2C green\x2C blue\x2C and alpha data\x0d\n// * about a color object.  It is supposed to mimic Java's Color class.\x0d\n// */\x0d\n//\x0d\n//@ts-check\x0d\n//import {format} from "../scene/util/UtilExport.js";\x0d\n//\x0d\n//export default class Color\x0d\n//{\x0d\n//    /**@type {number[]} #rgb the rgba array for this color*/#rgb = new Array(4);\x0d\n//    /**@type {boolean}  #float whether the rgba array is int or float representation*/#float = false;\x0d\n//\x0d\n//    static GAMMA = 1/2.2;\x0d\n//\x0d\n//    static black = new Color();\x0d\n//    static BLACK = new Color();\x0d\n//    static Black = new Color();\x0d\n//\x0d\n//    static white = new Color(255\x2C 255\x2C 255);\x0d\n//    static WHITE = new Color(255\x2C 255\x2C 255);\x0d\n//    static White = new Color(255\x2C 255\x2C 255);\x0d\n//\x0d\n//    static red = new Color(255\x2C 0\x2C 0);\x0d\n//    static RED = new Color(255\x2C 0\x2C 0);\x0d\n//    static Red = new Color(255\x2C 0\x2C 0);\x0d\n//\x0d\n//    static green = new Color(0\x2C 255\x2C 0);\x0d\n//    static GREEN = new Color(0\x2C 255\x2C 0);\x0d\n//    static Green = new Color(0\x2C 255\x2C 0);\x0d\n//\x0d\n//    static blue = new Color(0\x2C 0\x2C 255);\x0d\n//    static BLUE = new Color(0\x2C 0\x2C 255);\x0d\n//    static Blue = new Color(0\x2C 0\x2C 255);\x0d\n//\x0d\n//    static orange = new Color(255\x2C 127\x2C 0);\x0d\n//    static ORANGE = new Color(255\x2C 127\x2C 0);\x0d\n//    static Orange = new Color(255\x2C 127\x2C 0);\x0d\n//\x0d\n//    static yellow = new Color(255\x2C 255\x2C 0);\x0d\n//    static YELLOW = new Color(255\x2C 255\x2C 0);\x0d\n//    static Yellow = new Color(255\x2C 255\x2C 0);\x0d\n//\x0d\n//    static pink = new Color(255\x2C 192\x2C 203\x2C);\x0d\n//    static PINK = new Color(255\x2C 192\x2C 203\x2C);\x0d\n//    static Pink = new Color(255\x2C 192\x2C 203\x2C);\x0d\n//\x0d\n//    static cyan = new Color(0\x2C 255\x2C 255);\x0d\n//    static CYAN = new Color(0\x2C 255\x2C 255);\x0d\n//    static Cyan = new Color(0\x2C 255\x2C 255);\x0d\n//\x0d\n//    static magenta = new Color(255\x2C 0\x2C 255);\x0d\n//    static MAGENTA = new Color(255\x2C 0\x2C 255);\x0d\n//    static Magenta = new Color(255\x2C 0\x2C 255);\x0d\n//\x0d\n//    static gray = new Color(192\x2C 192\x2C 192);\x0d\n//    static GRAY = new Color(192\x2C 192\x2C 192);\x0d\n//    static Gray = new Color(192\x2C 192\x2C 192);\x0d\n//\x0d\n//    /**\x0d\n//     * Creates a new {@code Color} with the specified red\x2C green\x2C blue\x2C and alpha values given.\x0d\n//     * Will check to make sure that the given values are within the range specified by {@code float}\x0d\n//     * By default alpha is set to 255 and float is set to false.\x0d\n//     * If the color is supposed to be an integer representation uses Math.round() on r\x2C g\x2C b\x0d\n//     *\x0d\n//     * @param {number} r the red value of the {@code Color}\x0d\n//     * @param {number} g the green value of the {@code Color}\x0d\n//     * @param {number} b the blue value of the {@code Color}\x0d\n//     * @param {number} a the alpha value of the {@code Color}\x0d\n//     * @param {boolean} float specifing whether the rgb values are integer or float.\x0d\n//     */\x0d\n//    constructor(r = 0\x2C g = 0\x2C b = 0\x2C a = 255\x2C float = false)\x0d\n//    {\x0d\n//        if (typeof r != "number" ||\x0d\n//            typeof g != "number" ||\x0d\n//            typeof b != "number" ||\x0d\n//            typeof a != "number")\x0d\n//                throw new Error("All parameters must be numeric");\x0d\n//\x0d\n//        if (typeof float != "boolean")\x0d\n//              throw new Error("float must be a boolean");\x0d\n//\x0d\n//        if (float)\x0d\n//        {\x0d\n//            if (! (r >= 0 && r <= 1))\x0d\n//                throw new Error("R Float data must be between 0 and 1 inclusive");\x0d\n//            if (! (g >= 0 && g <= 1))\x0d\n//                throw new Error("G Float data must be between 0 and 1 inclusive");\x0d\n//            if (! (b >= 0 && b <= 1))\x0d\n//                throw new Error("B Float data must be between 0 and 1 inclusive");\x0d\n//            if (! (a >=0 && a <= 1))\x0d\n//                throw new Error("Alpha Float data must be between 0 and 1 inclusive");\x0d\n//        }\x0d\n//        else\x0d\n//        {\x0d\n//            if (! (r >= 0 && r <= 255) ||\x0d\n//                ! (g >= 0 && g <= 255) ||\x0d\n//                ! (b >= 0 && b <= 255) ||\x0d\n//                ! (a >= 0 && a <= 255))\x0d\n//                   throw new Error("Int data must be between 0 and 255 inclusive");\x0d\n//\x0d\n//            r = Math.round(r);\x0d\n//            g = Math.round(g);\x0d\n//            b = Math.round(b);\x0d\n//            a = Math.round(a);\x0d\n//        }\x0d\n//\x0d\n//        this.#rgb[0] = r;\x0d\n//        this.#rgb[1] = g;\x0d\n//        this.#rgb[2] = b;\x0d\n//        this.#rgb[3] = a;\x0d\n//        this.#float = float;\x0d\n//    }\x0d\n//\x0d\n//\x0d\n//    /**\x0d\n//     * Creates a new color using the rgb\x2C alpha\x2C and float data of the color passed\x0d\n//     *\x0d\n//     * @param {Color}  color the color whose data is to be used to create the new {@code Color}\x0d\n//     * @returns {Color} a new {@code Color} that is a copy of the color passed.\x0d\n//     */\x0d\n//    static buildColor(color)\x0d\n//    {\x0d\n//        if (color instanceof Color == false)\x0d\n//            throw new Error("color is not of type Color");\x0d\n//\x0d\n//        return new Color(color.getRed()\x2C\x0d\n//                         color.getGreen()\x2C\x0d\n//                         color.getBlue()\x2C\x0d\n//                         color.getAlpha()\x2C\x0d\n//                         color.isFloat());\x0d\n//    }\x0d\n//\x0d\n//\x0d\n//    /**\x0d\n//     * Creates a new color that is the same rgb values but not the alpha value of the color passed.\x0d\n//     * Insteads uses the passed alpha.  This function is supposed to create a 'stronger' or 'weaker' duplicate color.\x0d\n//     * NOTE: this function is NON MUTATING\x0d\n//     *\x0d\n//     * @param {Color} color the rgb values to be used in the color being created\x0d\n//     * @param {number} alpha the alpha value for the color to be created\x0d\n//     * @returns {Color} the 'stronger' or 'weaker' duplicate color\x0d\n//     */\x0d\n//    static buildAlpha(color\x2C alpha)\x0d\n//    {\x0d\n//        if (color instanceof Color == false)\x0d\n//            throw new Error("Color is not of type Color");\x0d\n//\x0d\n//        if (typeof alpha != "number")\x0d\n//            throw new Error("Alpha is not numerical");\x0d\n//\x0d\n//        if (color.isFloat())\x0d\n//        {\x0d\n//            if (! (alpha >= 0 && alpha <= 1))\x0d\n//                throw new Error("Alpha is not a float");\x0d\n//\x0d\n//            return new Color(color.getRed()\x2C\x0d\n//                             color.getGreen()\x2C\x0d\n//                             color.getBlue()\x2C\x0d\n//                             alpha\x2C\x0d\n//                             color.isFloat());\x0d\n//        }\x0d\n//        else\x0d\n//        {\x0d\n//            if (! (alpha >= 0 && alpha <= 255))\x0d\n//                throw new Error("Alpha is not a 1 byte int");\x0d\n//\x0d\n//            return new Color(color.getRed()\x2C\x0d\n//                             color.getGreen()\x2C\x0d\n//                             color.getBlue()\x2C\x0d\n//                             alpha\x2C\x0d\n//                             color.isFloat());\x0d\n//        }\x0d\n//    }\x0d\n//\x0d\n//\x0d\n//    /**\x0d\n//     * Creates a new color that is the weighted average of the two colors using the ratio between their Alphas.\x0d\n//     * formula: c1.alpha/(c1.alpha + c2.alpha)\x0d\n//     * this function is NON MUTATING\x0d\n//     * NOTE: returns a float color with alpha of 1\x0d\n//     *\x0d\n//     * @param {Color} c1 the first color to be blended with\x0d\n//     * @param {Color} c2 the second color to be blended with\x0d\n//     * @returns the new float representation of the blended colors with an alpha of 1\x0d\n//     */\x0d\n//    static blendColor(c1\x2C c2)\x0d\n//    {\x0d\n//        return Color.blendColorWeight(c1\x2C c2\x2C c1.getAlpha()/(c1.getAlpha() + c2.getAlpha()));\x0d\n//    }\x0d\n//\x0d\n//\x0d\n//    /**\x0d\n//     * Creates a new color that is the weighted average of\x0d\n//     * the two colors using the given c1Weight\x2C the weight\x0d\n//     * of the first color.  c1Weight has the default value of 1/2\x0d\n//     * Uses the equation: c1Weight * c1 + (1-c1Weight) * c2;\x0d\n//     * this function is NON MUTATING\x0d\n//     * NOTE: returns a float color with alpha of 1\x0d\n//     *\x0d\n//     * @param {Color} c1 the first color to be blended with\x0d\n//     * @param {Color} c2 the second color to be blended with\x0d\n//     * @param {number} c1Weight the weight of the first color\x2C must be in the range [0\x2C 1]\x0d\n//     * @returns {Color} the new float representation of the passed color\x0d\n//     */\x0d\n//    static blendColorWeight(c1\x2C c2\x2C c1Weight = .5)\x0d\n//    {\x0d\n//        if (c1 instanceof Color == false || c2 instanceof Color == false)\x0d\n//            throw new Error("C1 and C2 are not of type color");\x0d\n//\x0d\n//        if (typeof c1Weight != "number")\x0d\n//            throw new Error("c1Weight is not numerical");\x0d\n//\x0d\n//        if (! (c1Weight >= 0 && c1Weight <= 1))\x0d\n//            throw new Error("c1Weight has to be in the range 0 to 1 inclusive");\x0d\n//\x0d\n//        const floatC1 = Color.convert2Float(c1);\x0d\n//        const floatC2 = Color.convert2Float(c2);\x0d\n//\x0d\n//        const newR = c1Weight * floatC1.getRed() + (1-c1Weight) * floatC2.getRed();\x0d\n//        const newG = c1Weight * floatC1.getGreen() + (1-c1Weight) * floatC2.getGreen();\x0d\n//        const newB = c1Weight * floatC1.getBlue() + (1-c1Weight) * floatC2.getBlue();\x0d\n//\x0d\n//        return new Color(newR\x2C newG\x2C newB\x2C 1\x2C true);\x0d\n//    }\x0d\n//\x0d\n//\x0d\n//    /**\x0d\n//     * Creates a new {@code Color} that is the float representation of the passed color.\x0d\n//     * NOTE: this function is NON MUTATING.  If you want to mutate the color call {@code mutate2Float()}\x0d\n//     *\x0d\n//     * @param {Color} color the color whose data is to be used to create the new color\x0d\n//     * @returns {Color} the new float representation of the color passed\x0d\n//     */\x0d\n//    static convert2Float(color)\x0d\n//    {\x0d\n//        if (color instanceof Color == false)\x0d\n//            throw new Error("Color is not of type Color");\x0d\n//\x0d\n//        if (color.isFloat())\x0d\n//        {\x0d\n//            return Color.buildColor(color);\x0d\n//        }\x0d\n//\x0d\n//        return (new Color(color.getRed()/255\x2C\x0d\n//                          color.getGreen()/255\x2C\x0d\n//                          color.getBlue()/255\x2C\x0d\n//                          color.getAlpha()/255\x2C\x0d\n//                          true));\x0d\n//    }\x0d\n//\x0d\n//\x0d\n//    /**\x0d\n//     * Creates a new {@code Color} that is the integer representation of the passed Color.\x0d\n//     * NOTE: this function is NON MUTATING.  If you want to mutate the color call {@code mutate2Int()}\x0d\n//     *\x0d\n//     * @param {Color} color the color whose data is to be used to make the new {@code Color}\x0d\n//     * @returns {Color} the new int representation of the color passed.\x0d\n//     */\x0d\n//    static convert2Int(color)\x0d\n//    {\x0d\n//        if (color instanceof Color == false)\x0d\n//            throw new Error("Color is not of type Color");\x0d\n//\x0d\n//        if (color.isFloat() == false)\x0d\n//        {\x0d\n//            return Color.buildColor(color);\x0d\n//        }\x0d\n//\x0d\n//        return (new Color(color.getRed() * 255\x2C\x0d\n//                          color.getGreen() * 255\x2C\x0d\n//                          color.getBlue() * 255\x2C\x0d\n//                          color.getAlpha() * 255\x2C\x0d\n//                          false));\x0d\n//    }\x0d\n//\x0d\n//\x0d\n//    /**\x0d\n//     * MUTATE the calling {@code Color} object to be the float representation of itself.\x0d\n//     * @param {Color} c the color to be mutated into a float\x0d\n//     * @returns {Color} the MUTATED calling color represented as a float for method chaining\x0d\n//     */\x0d\n//    static mutate2Float(c)\x0d\n//    {\x0d\n//        if (c instanceof Color == false)\x0d\n//            throw new Error("c is not a color");\x0d\n//\x0d\n//        if (c.isFloat() == false)\x0d\n//        {\x0d\n//            c = new Color(c.getRed()/255\x2C\x0d\n//                          c.getGreen()/255\x2C\x0d\n//                          c.getBlue()/255\x2C\x0d\n//                          c.getAlpha()/255\x2C\x0d\n//                          true);\x0d\n//        }\x0d\n//\x0d\n//        return c;\x0d\n//    }\x0d\n//\x0d\n//\x0d\n//    /**\x0d\n//     * MUTATE the calling {@code Color} object to be the int representation of itself.\x0d\n//     * @param {Color} c the color to be mutated\x0d\n//     * @returns {Color} the mutated color for method chaining\x0d\n//     */\x0d\n//    static mutate2Int(c)\x0d\n//    {\x0d\n//        if (c instanceof Color == false)\x0d\n//            throw new Error("c is not a color");\x0d\n//\x0d\n//        if (c.isFloat())\x0d\n//        {\x0d\n//            c = new Color(c.getRed() * 255\x2C\x0d\n//                          c.getGreen() * 255\x2C\x0d\n//                          c.getBlue() * 255\x2C\x0d\n//                          c.getAlpha() * 255\x2C\x0d\n//                          false);\x0d\n//        }\x0d\n//\x0d\n//        return c;\x0d\n//    }\x0d\n//\x0d\n//\x0d\n//    getRed()\x0d\n//    {\x0d\n//        return this.#rgb[0];\x0d\n//    }\x0d\n//\x0d\n//\x0d\n//    getGreen()\x0d\n//    {\x0d\n//        return this.#rgb[1];\x0d\n//    }\x0d\n//\x0d\n//\x0d\n//    getBlue()\x0d\n//    {\x0d\n//        return this.#rgb[2];\x0d\n//    }\x0d\n//\x0d\n//\x0d\n//    getAlpha()\x0d\n//    {\x0d\n//        return this.#rgb[3];\x0d\n//    }\x0d\n//\x0d\n//\x0d\n//    /**\x0d\n//     * Change the alpha value of this color\x0d\n//     * @param {number} a the new alpha value for this color\x0d\n//     */\x0d\n//    setAlpha(a)\x0d\n//    {\x0d\n//        if (this.isFloat())\x0d\n//        {\x0d\n//            if (!(a >= 0 && a <= 1))\x0d\n//                throw new Error("alpha is not a float");\x0d\n//\x0d\n//            this.#rgb[3] = a;\x0d\n//        }\x0d\n//        else\x0d\n//        {\x0d\n//            if ((!(a >= 0 && a <= 255)))\x0d\n//                throw new Error("alpha is not an int");\x0d\n//\x0d\n//            this.#rgb[3] = Math.round(a);\x0d\n//        }\x0d\n//    }\x0d\n//\x0d\n//\x0d\n//    isFloat()\x0d\n//    {\x0d\n//        return this.#float;\x0d\n//    }\x0d\n//\x0d\n//\x0d\n//    /**\x0d\n//     * Get the r\x2C g\x2C b\x2C and alpha values in an array\x0d\n//     * @returns {number[]} the rgba array for this color\x0d\n//     */\x0d\n//    getRGBComponents()\x0d\n//    {\x0d\n//        return this.#rgb;\x0d\n//    }\x0d\n//\x0d\n//\x0d\n//    /**\x0d\n//     * For debugging.\x0d\n//     * @returns {string} a string representation of this color\x0d\n//     */\x0d\n//    toString()\x0d\n//    {\x0d\n//        if (this.#float)\x0d\n//        {\x0d\n//            return (format("(r\x2C g\x2C b): (%0.5d\x2C %0.5d\x2C %0.5d)"));\x0d\n//        }\x0d\n//        else\x0d\n//        {\x0d\n//            return (format("(r\x2C g\x2C b): (%3d\x2C %3d\x2C %3d)"\x2C this.#rgb[0]\x2C this.#rgb[1]\x2C this.#rgb[2]));\x0d\n//        }\x0d\n//    }\x0d\n//\x0d\n//\x0d\n//    /**\x0d\n//     * For testing.\x0d\n//     */\x0d\n//    static main()\x0d\n//    {\x0d\n//        console.log("Making color1 = new Color(0\x2C 0\x2C 0\x2C 100)");\x0d\n//        let color1 = new Color(0\x2C 0\x2C 0\x2C 100);\x0d\n//        console.log(color1.toString());\x0d\n//\x0d\n//        console.log("Making color2 = new Color(1\x2C 1\x2C 1\x2C 1\x2C true)");\x0d\n//        let color2 = new Color(1\x2C 1\x2C 1\x2C 1\x2C true);\x0d\n//        console.log(color2.toString());\x0d\n//\x0d\n//        console.log("Making color3 = Color.buildAlpha(color1\x2C 255)");\x0d\n//        let color3 = Color.buildAlpha(color1\x2C 255);\x0d\n//        console.log(color3.toString());\x0d\n//\x0d\n//        console.log("Making color4 = Color.buildColor(color2)");\x0d\n//        let color4 = Color.buildColor(color2);\x0d\n//        console.log(color4.toString());\x0d\n//\x0d\n//        console.log("Making color5 = Color.blendColor(color2\x2C color3)");\x0d\n//        let color5 = Color.blendColor(color2\x2C color3);\x0d\n//        console.log(color5.toString());\x0d\n//\x0d\n//        console.log("Making color6 = Color.blendColorWeight(color3\x2C .9)");\x0d\n//        let color6 = Color.blendColorWeight(color2\x2C color3\x2C .9);\x0d\n//        console.log(color6.toString());\x0d\n//\x0d\n//        console.log("Making color7 = Color.convert2Int(color2)");\x0d\n//        let color7 = Color.convert2Int(color2);\x0d\n//        console.log(color7.toString());\x0d\n//\x0d\n//        console.log("Making color8 = Color.convert2Float(color3)");\x0d\n//        let color8 = Color.convert2Float(color3);\x0d\n//        console.log(color8.toString());\x0d\n//\x0d\n//        console.log("Checking color2.isFloat()");\x0d\n//        console.log(color2.isFloat());\x0d\n//\x0d\n//        console.log("Mutating color2 to be an int");\x0d\n//        Color.mutate2Int(color2);\x0d\n//        console.log(color2.toString());\x0d\n//\x0d\n//        console.log("Calling color2.isFloat()");\x0d\n//        console.log(color2.isFloat());\x0d\n//\x0d\n//        console.log("calling color3.isFloat()");\x0d\n//        console.log(color3.isFloat());\x0d\n//\x0d\n//        console.log("Mutating color3 to be a float");\x0d\n//        Color.mutate2Int(color3);\x0d\n//        console.log(color3.toString());\x0d\n//\x0d\n//        console.log("calling color3.isFloat())");\x0d\n//        console.log(color3.isFloat());\x0d\n//    }\x0d\n//\x0d\n//\x0d\n//    // Apply gamma-encoding (gamma-compression) to the colors.\x0d\n//    // https://www.scratchapixel.com/lessons/digital-imaging/digital-images\x0d\n//    // http://blog.johnnovak.net/2016/09/21/what-every-coder-should-know-about-gamma/\x0d\n//    static applyGamma(color)\x0d\n//    {\x0d\n//        if (color instanceof Color == false)\x0d\n//            throw new Error("Color is not of type Color");\x0d\n//\x0d\n//        const newRed   = 255 * Math.pow(color.getRed()/255\x2C   Color.GAMMA);\x0d\n//        const newGreen = 255 * Math.pow(color.getGreen()/255\x2C Color.GAMMA);\x0d\n//        const newBlue  = 255 * Math.pow(color.getBlue()/255\x2C  Color.GAMMA);\x0d\n//\x0d\n//        return new Color(newRed\x2C newGreen\x2C newBlue);\x0d\n//    }\x0d\n//\x0d\n//\x0d\n//    static hexToRgba(hex)\x0d\n//    {\x0d\n//        if (hex.match(/^#[A-Fa-f0-9]{6}/))\x0d\n//        {\x0d\n//            return new Array([parseInt(hex.substring(1\x2C 3)\x2C 16)\x2C\x0d\n//                              parseInt(hex.substring(3\x2C 5)\x2C 16)\x2C\x0d\n//                              parseInt(hex.substring(5\x2C 7)\x2C 16)\x2C\x0d\n//                              255]);\x0d\n//        }\x0d\n//\x0d\n//        return new Array([0\x2C 0\x2C 0\x2C 255]);\x0d\n//    }\x0d\n//\x0d\n//\x0d\n//    static RgbToHex(color)\x0d\n//    {\x0d\n//        if (color instanceof Color == false)\x0d\n//            throw new Error("Color is not of type Color");\x0d\n//\x0d\n//        return "#" + Color.intToHex(color[0]) + Color.intToHex(color[1]) + Color.intToHex(color[2]);\x0d\n//    }\x0d\n//\x0d\n//\x0d\n//    static intToHex(x)\x0d\n//    {\x0d\n//        if (x < 10)\x0d\n//        {\x0d\n//            return "0" + x.toString(16);\x0d\n//        }\x0d\n//\x0d\n//        return x.toString(16);\x0d\n//    }\x0d\n//}
code-source-info,0xc1e5053638,503,0,33220,C10O0C28O0C48O0C219O414C224O33220,,
code-creation,Function,10,500126,0xc1e50538d0,884,<static_initializer> file:///E:/Javascript%20Renderers/Javascript-Renderer-9v2/renderer_10_js/renderer/framebuffer/Color.js:65:5,0xc1e50531d0,~
code-source-info,0xc1e50538d
code-creation,Function,10,500236,0xc1e5053dc8,23,<instance_members_initializer> file:///E:/Javascript%20Renderers/Javascript-Renderer-9v2/renderer_10_js/renderer/framebuffer/Color.js:17:16,0xc1e5053198,~
code-source-info,0xc1e5053dc8,503,414,15560,C3O506C12O506C22O15560,,
code-creation,LazyCompile,10,501316,0xc1e5059ed0,292,Color file:///E:/Javascript%20Renderers/Javascript-Renderer-9v2/renderer_10_js/renderer/framebuffer/Color.js:78:16,0xc1e5052b90,~
code-source-info,0xc1e5059ed0,503,2537,3256,C0O2537C57O2584C81O2738C90O2744C95O2738C96O2800C97O2809C106O2819C112O2848C121O2858C127O2887C136O2897C142O2926C151O2936C156O2961C165O2967C170O2961C171O3037C175O3046C180O3046C186O3065C190O3074C195O3074C201O3093C205O3102C210O3102C216O3121C220O3130C225O3130C231O3151C233O3156C241O3164C245O3178C247O3183C256O3191C260O3205C262O3210C271O3218C275O3232C277O3237C286O3245C291O3255,,
code-creation,LazyCompile,10,501771,0xc1e505a9d8,292,Color file:///E:/Javascript%20Renderers/Javascript-Renderer-9v2/renderer_10_js/ColorImplementationTiming/Uint8/Fast%20GC/Color.js:76:16,0x1c9a30224f0,~
code-source-info,0xc1e505a9d8,480,2497,3216,C0O2497C57O2544C81O2698C90O2704C95O2698C96O2760C97O2769C106O2779C112O2808C121O2818C127O2847C136O2857C142O2886C151O2896C156O2921C165O2927C170O2921C171O2997C175O3006C180O3006C186O3025C190O3034C195O3034C201O3053C205O3062C210O3062C216O3081C220O3090C225O3090C231O3111C233O3116C241O3124C245O3138C247O3143C256O3151C260O3165C262O3170C271O3178C275O3192C277O3197C286O3205C291O3215,,
code-creation,Function,11,501997,0x7ff6a66f7680,1736,Color file:///E:/Javascript%20Renderers/Javascript-Renderer-9v2/renderer_10_js/ColorImplementationTiming/Uint8/Fast%20GC/Color.js:76:16,0x1c9a30224f0,^
code-source-info,0x7ff6a66f7680,480,2497,3216,,,
code-creation,Function,11,502046,0x7ff6a66f7e00,180,assert node:internal/assert:11:16,0x3a8997aece8,^
code-source-info,0x7ff6a66f7e00,27,182,322,,,
code-creation,Function,11,502079,0x7ff6a66f7f40,148,<instance_members_initializer> file:///E:/Javascript%20Renderers/Javascript-Renderer-9v2/renderer_10_js/renderer/framebuffer/Color.js:17:16,0xc1e5053198,^
code-source-info,0x7ff6a66f7f40,503,414,15560,,,
code-creation,Function,11,502133,0x7ff6a66f8080,1736,Color file:///E:/Javascript%20Renderers/Javascript-Renderer-9v2/renderer_10_js/renderer/framebuffer/Color.js:78:16,0xc1e5052b90,^
code-source-info,0x7ff6a66f8080,503,2537,3256,,,
code-creation,Function,11,502169,0x7ff6a66f8800,148,<instance_members_initializer> file:///E:/Javascript%20Renderers/Javascript-Renderer-9v2/renderer_10_js/ColorImplementationTiming/Uint8/Fast%20GC/Color.js:15:16,0x1c9a3022af8,^
code-source-info,0x7ff6a66f8800,480,374,15548,,,
code-creation,LazyCompile,10,502395,0xc1e505b170,240,buildFile file:///E:/Javascript%20Renderers/Javascript-Renderer-9v2/renderer_10_js/ColorImplementationTiming/Uint8/Fast%20GC/FrameBuffer.js:138:27,0x1c9a30192e0,~
code-source-info,0xc1e505b170,478,4974,5347,C10O4974C18O5009C24O5054C33O5060C38O5054C42O5147C45O5170C64O5195C76O5211C89O5177C122O5222C134O5276C157O5301C171O5318C184O5283C217O5329,,
code-creation,LazyCompile,10,502551,0xc1e505b400,135,#buildFileOffline file:///E:/Javascript%20Renderers/Javascript-Renderer-9v2/renderer_10_js/ColorImplementationTiming/Uint8/Fast%20GC/FrameBuffer.js:166:35,0x1c9a30191a0,~
code-source-info,0xc1e505b400,478,5716,5906,C10O5716C18O5754C37O5754C63O5806C68O5806C74O5841C79O5860C84O5874C88O5885C93O5885C99O5860C112O5899,,
code-creation,LazyCompile,10,502661,0xc1e505b608,130,importModuleDynamicallyCallback node:internal/process/esm_loader:30:47,0x14dbcbab2c8,~
code-source-info,0xc1e505b608,450,866,1277,C6O866C14O925C20O925C25O909C30O976C35O976C42O1042C47O1042C53O1002C58O1058C60O1110C62O1162C65O1162C83O1117C96O1207C97O1223C102O1229C107O1223,,
code-creation,LazyCompile,10,502770,0xc1e505b798,16,getModuleFromWrap node:internal/vm/module:458:22,0x2a6f0bb6608,~
code-source-info,0xc1e505b798,473,12809,12844,C0O12835C5O12835C10O12835C15O12844,,
code-creation,LazyCompile,10,502846,0xc1e505c7b8,114,importModuleDynamically node:internal/modules/esm/translators:109:39,0x2a6f0bb3338,~
code-source-info,0xc1e505c7b8,471,3048,3150,C6O3048C17O3062C54O3086C59O3102C64O3112C78O3118C91O3147,,
code-creation,LazyCompile,10,503059,0xc1e505cb78,65,defaultGetFormat node:internal/modules/esm/get_format:118:26,0x14dbcbbb470,~
code-source-info,0xc1e505cb78,457,3967,4171,C0O4002C7O4002C13O4019C20O4056C23O4081C28O4026C37O4098C40O4122C44O4114C56O4131C64O4168,,
code-creation,LazyCompile,10,503136,0xc1e505cca8,3,node: node:internal/modules/esm/get_format:32:10,0x14dbcbbb4c0,~
code-source-info,0xc1e505cca8,457,1118,1142,C0O1123C2O1140,,
code-creation,LazyCompile,10,503254,0xc1e505ce60,149,builtinStrategy node:internal/modules/esm/translators:253:58,0x2a6f0bb3540,~
code-source-info,0xc1e505ce60,471,7774,8137,C6O7774C14O7785C24O7820C29O7785C33O7869C41O7869C47O7917C52O7917C58O7948C66O7953C75O7997C77O8012C84O8018C89O8012C90O8063C100O8094C105O8063C109O8119C114O8119C126O8134,,
code-creation,LazyCompile,10,503367,0xc1e505d058,62,loadBuiltinModule node:internal/modules/cjs/helpers:45:27,0x14dbcb96010,~
code-source-info,0xc1e505d058,445,1250,1541,C0O1287C5O1301C10O1305C15O1305C21O1323C26O1330C35O1361C43O1361C48O1491C53O1491C57O1522C59O1533C61O1540,,
code-creation,LazyCompile,10,503442,0xc1e505d938,10, node:internal/modules/cjs/helpers:30:66,0x14dbcb96230,~
code-source-info,0xc1e505d938,445,893,920,C0O906C2O912C9O919,,
code-creation,LazyCompile,10,503522,0xc1e505dab0,129,compileForPublicLoader node:internal/bootstrap/loaders:264:25,0x1f81b719408,~
code-source-info,0xc1e505dab0,15,8294,8982,C0O8314C6O8461C16O8504C33O8467C38O8461C39O8543C44O8543C48O8586C54O8778C61O8809C69O8778C75O8834C80O8852C90O8868C93O8884C98O8868C102O8850C106O8911C111O8911C115O8937C120O8937C124O8969C128O8977,,
code-creation,LazyCompile,10,503663,0xc1e505dd48,170,getESMFacade node:internal/bootstrap/loaders:282:15,0x1f81b719458,~
code-source-info,0xc1e505dd48,15,9000,9769,C0O9000C8O9019C14O9039C18O9046C19O9075C29O9075C34O9060C39O9195C46O9227C53O9195C58O9262C61O9275C70O9302C72O9302C74O9333C81O9358C86O9333C91O9376C101O9376C106O9425C108O9478C121O9439C126O9437C130O9680C135O9687C140O9687C144O9712C149O9719C159O9719C165O9757C169O9764,,
code-creation,LazyCompile,10,503809,0xc1e505e638,40, node:internal/bootstrap/loaders:293:15,0xc1e505dc30,~
code-source-info,0xc1e505e638,15,9506,9604,C0O9520C5O9528C10O9528C14O9557C24O9578C27O9586C32O9557C39O9603,,
code-creation,LazyCompile,10,503895,0xc1e505e788,89,syncExports node:internal/bootstrap/loaders:307:14,0x1f81b7194d0,~
code-source-info,0xc1e505e788,15,10082,10425,C0O10111C5O10137C11O10167C13O10180C17O10172C22O10223C24O10228C28O10242C30O10257C35O10272C37O10296C42O10303C51O10356C54O10368C59O10394C67O10356C73O10303C79O10189C84O10154C88O10424,,
code-creation,LazyCompile,10,503974,0xc1e505e8f8,35,getOwn node:internal/bootstrap/loaders:188:16,0x1f81b719010,~
code-source-info,0xc1e505e8f8,15,5849,6007,C0O5886C5O5893C14O5948C26O5948C34O6004,,
code-creation,LazyCompile,10,504075,0xc1e505eb78,11,get ReadStream node:fs:3050:17,0x2dbe93f5d78,~
code-source-info,0xc1e505eb78,75,84086,84143,C0O84096C3O84096C6O84120C10O84138,,
code-creation,LazyCompile,10,504138,0xc1e505eca8,71,lazyLoadStreams node:fs:2907:25,0x2dbe93f5c88,~
code-source-info,0xc1e505eca8,75,81547,81720,C0O81555C6O81579C12O81610C17O81582C30O81594C43O81648C50O81663C56O81682C63O81698C70O81719,,
code-creation,Eval,10,504665,0xc1e505f4f8,5, node:internal/fs/streams:1:1,0xc1e505f160,~
script-source,504,node:internal/fs/streams,'use strict';\x0d\n\x0d\nconst {\x0d\n  Array\x2C\x0d\n  FunctionPrototypeBind\x2C\x0d\n  MathMin\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  PromisePrototypeThen\x2C\x0d\n  ReflectApply\x2C\x0d\n  Symbol\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  ERR_INVALID_ARG_TYPE\x2C\x0d\n  ERR_OUT_OF_RANGE\x2C\x0d\n  ERR_METHOD_NOT_IMPLEMENTED\x2C\x0d\n} = require('internal/errors').codes;\x0d\nconst {\x0d\n  deprecate\x2C\x0d\n  kEmptyObject\x2C\x0d\n} = require('internal/util');\x0d\nconst {\x0d\n  validateFunction\x2C\x0d\n  validateInteger\x2C\x0d\n} = require('internal/validators');\x0d\nconst { errorOrDestroy } = require('internal/streams/destroy');\x0d\nconst fs = require('fs');\x0d\nconst { kRef\x2C kUnref\x2C FileHandle } = require('internal/fs/promises');\x0d\nconst { Buffer } = require('buffer');\x0d\nconst {\x0d\n  copyObject\x2C\x0d\n  getOptions\x2C\x0d\n  getValidatedFd\x2C\x0d\n  validatePath\x2C\x0d\n} = require('internal/fs/utils');\x0d\nconst { Readable\x2C Writable\x2C finished } = require('stream');\x0d\nconst { toPathIfFileURL } = require('internal/url');\x0d\nconst kIoDone = Symbol('kIoDone');\x0d\nconst kIsPerformingIO = Symbol('kIsPerformingIO');\x0d\n\x0d\nconst kFs = Symbol('kFs');\x0d\nconst kHandle = Symbol('kHandle');\x0d\n\x0d\nfunction _construct(callback) {\x0d\n  const stream = this;\x0d\n  if (typeof stream.fd === 'number') {\x0d\n    callback();\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  if (stream.open !== openWriteFs && stream.open !== openReadFs) {\x0d\n    // Backwards compat for monkey patching open().\x0d\n    const orgEmit = stream.emit;\x0d\n    stream.emit = function(...args) {\x0d\n      if (args[0] === 'open') {\x0d\n        this.emit = orgEmit;\x0d\n        callback();\x0d\n        ReflectApply(orgEmit\x2C this\x2C args);\x0d\n      } else if (args[0] === 'error') {\x0d\n        this.emit = orgEmit;\x0d\n        callback(args[1]);\x0d\n      } else {\x0d\n        ReflectApply(orgEmit\x2C this\x2C args);\x0d\n      }\x0d\n    };\x0d\n    stream.open();\x0d\n  } else {\x0d\n    stream[kFs].open(stream.path\x2C stream.flags\x2C stream.mode\x2C (er\x2C fd) => {\x0d\n      if (er) {\x0d\n        callback(er);\x0d\n      } else {\x0d\n        stream.fd = fd;\x0d\n        callback();\x0d\n        stream.emit('open'\x2C stream.fd);\x0d\n        stream.emit('ready');\x0d\n      }\x0d\n    });\x0d\n  }\x0d\n}\x0d\n\x0d\n// This generates an fs operations structure for a FileHandle\x0d\nconst FileHandleOperations = (handle) => {\x0d\n  return {\x0d\n    open: (path\x2C flags\x2C mode\x2C cb) => {\x0d\n      throw new ERR_METHOD_NOT_IMPLEMENTED('open()');\x0d\n    }\x2C\x0d\n    close: (fd\x2C cb) => {\x0d\n      handle[kUnref]();\x0d\n      PromisePrototypeThen(handle.close()\x2C\x0d\n                           () => cb()\x2C cb);\x0d\n    }\x2C\x0d\n    read: (fd\x2C buf\x2C offset\x2C length\x2C pos\x2C cb) => {\x0d\n      PromisePrototypeThen(handle.read(buf\x2C offset\x2C length\x2C pos)\x2C\x0d\n                           (r) => cb(null\x2C r.bytesRead\x2C r.buffer)\x2C\x0d\n                           (err) => cb(err\x2C 0\x2C buf));\x0d\n    }\x2C\x0d\n    write: (fd\x2C buf\x2C offset\x2C length\x2C pos\x2C cb) => {\x0d\n      PromisePrototypeThen(handle.write(buf\x2C offset\x2C length\x2C pos)\x2C\x0d\n                           (r) => cb(null\x2C r.bytesWritten\x2C r.buffer)\x2C\x0d\n                           (err) => cb(err\x2C 0\x2C buf));\x0d\n    }\x2C\x0d\n    writev: (fd\x2C buffers\x2C pos\x2C cb) => {\x0d\n      PromisePrototypeThen(handle.writev(buffers\x2C pos)\x2C\x0d\n                           (r) => cb(null\x2C r.bytesWritten\x2C r.buffers)\x2C\x0d\n                           (err) => cb(err\x2C 0\x2C buffers));\x0d\n    }\x0d\n  };\x0d\n};\x0d\n\x0d\nfunction close(stream\x2C err\x2C cb) {\x0d\n  if (!stream.fd) {\x0d\n    cb(err);\x0d\n  } else {\x0d\n    stream[kFs].close(stream.fd\x2C (er) => {\x0d\n      cb(er || err);\x0d\n    });\x0d\n    stream.fd = null;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction importFd(stream\x2C options) {\x0d\n  if (typeof options.fd === 'number') {\x0d\n    // When fd is a raw descriptor\x2C we must keep our fingers crossed\x0d\n    // that the descriptor won't get closed\x2C or worse\x2C replaced with\x0d\n    // another one\x0d\n    // https://github.com/nodejs/node/issues/35862\x0d\n    stream[kFs] = options.fs || fs;\x0d\n    return options.fd;\x0d\n  } else if (typeof options.fd === 'object' &&\x0d\n             options.fd instanceof FileHandle) {\x0d\n    // When fd is a FileHandle we can listen for 'close' events\x0d\n    if (options.fs) {\x0d\n      // FileHandle is not supported with custom fs operations\x0d\n      throw new ERR_METHOD_NOT_IMPLEMENTED('FileHandle with fs');\x0d\n    }\x0d\n    stream[kHandle] = options.fd;\x0d\n    stream[kFs] = FileHandleOperations(stream[kHandle]);\x0d\n    stream[kHandle][kRef]();\x0d\n    options.fd.on('close'\x2C FunctionPrototypeBind(stream.close\x2C stream));\x0d\n    return options.fd.fd;\x0d\n  }\x0d\n\x0d\n  throw ERR_INVALID_ARG_TYPE('options.fd'\x2C\x0d\n                             ['number'\x2C 'FileHandle']\x2C options.fd);\x0d\n}\x0d\n\x0d\nfunction ReadStream(path\x2C options) {\x0d\n  if (!(this instanceof ReadStream))\x0d\n    return new ReadStream(path\x2C options);\x0d\n\x0d\n  // A little bit bigger buffer and water marks by default\x0d\n  options = copyObject(getOptions(options\x2C kEmptyObject));\x0d\n  if (options.highWaterMark === undefined)\x0d\n    options.highWaterMark = 64 * 1024;\x0d\n\x0d\n  if (options.autoDestroy === undefined) {\x0d\n    options.autoDestroy = false;\x0d\n  }\x0d\n\x0d\n  if (options.fd == null) {\x0d\n    this.fd = null;\x0d\n    this[kFs] = options.fs || fs;\x0d\n    validateFunction(this[kFs].open\x2C 'options.fs.open');\x0d\n\x0d\n    // Path will be ignored when fd is specified\x2C so it can be falsy\x0d\n    this.path = toPathIfFileURL(path);\x0d\n    this.flags = options.flags === undefined ? 'r' : options.flags;\x0d\n    this.mode = options.mode === undefined ? 0o666 : options.mode;\x0d\n\x0d\n    validatePath(this.path);\x0d\n  } else {\x0d\n    this.fd = getValidatedFd(importFd(this\x2C options));\x0d\n  }\x0d\n\x0d\n  options.autoDestroy = options.autoClose === undefined ?\x0d\n    true : options.autoClose;\x0d\n\x0d\n  validateFunction(this[kFs].read\x2C 'options.fs.read');\x0d\n\x0d\n  if (options.autoDestroy) {\x0d\n    validateFunction(this[kFs].close\x2C 'options.fs.close');\x0d\n  }\x0d\n\x0d\n  this.start = options.start;\x0d\n  this.end = options.end;\x0d\n  this.pos = undefined;\x0d\n  this.bytesRead = 0;\x0d\n  this[kIsPerformingIO] = false;\x0d\n\x0d\n  if (this.start !== undefined) {\x0d\n    validateInteger(this.start\x2C 'start'\x2C 0);\x0d\n\x0d\n    this.pos = this.start;\x0d\n  }\x0d\n\x0d\n\x0d\n  if (this.end === undefined) {\x0d\n    this.end = Infinity;\x0d\n  } else if (this.end !== Infinity) {\x0d\n    validateInteger(this.end\x2C 'end'\x2C 0);\x0d\n\x0d\n    if (this.start !== undefined && this.start > this.end) {\x0d\n      throw new ERR_OUT_OF_RANGE(\x0d\n        'start'\x2C\x0d\n        `<= "end" (here: ${this.end})`\x2C\x0d\n        this.start\x0d\n      );\x0d\n    }\x0d\n  }\x0d\n\x0d\n  ReflectApply(Readable\x2C this\x2C [options]);\x0d\n}\x0d\nObjectSetPrototypeOf(ReadStream.prototype\x2C Readable.prototype);\x0d\nObjectSetPrototypeOf(ReadStream\x2C Readable);\x0d\n\x0d\nObjectDefineProperty(ReadStream.prototype\x2C 'autoClose'\x2C {\x0d\n  __proto__: null\x2C\x0d\n  get() {\x0d\n    return this._readableState.autoDestroy;\x0d\n  }\x2C\x0d\n  set(val) {\x0d\n    this._readableState.autoDestroy = val;\x0d\n  }\x0d\n});\x0d\n\x0d\nconst openReadFs = deprecate(function() {\x0d\n  // Noop.\x0d\n}\x2C 'ReadStream.prototype.open() is deprecated'\x2C 'DEP0135');\x0d\nReadStream.prototype.open = openReadFs;\x0d\n\x0d\nReadStream.prototype._construct = _construct;\x0d\n\x0d\nReadStream.prototype._read = function(n) {\x0d\n  n = this.pos !== undefined ?\x0d\n    MathMin(this.end - this.pos + 1\x2C n) :\x0d\n    MathMin(this.end - this.bytesRead + 1\x2C n);\x0d\n\x0d\n  if (n <= 0) {\x0d\n    this.push(null);\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  const buf = Buffer.allocUnsafeSlow(n);\x0d\n\x0d\n  this[kIsPerformingIO] = true;\x0d\n  this[kFs]\x0d\n    .read(this.fd\x2C buf\x2C 0\x2C n\x2C this.pos\x2C (er\x2C bytesRead\x2C buf) => {\x0d\n      this[kIsPerformingIO] = false;\x0d\n\x0d\n      // Tell ._destroy() that it's safe to close the fd now.\x0d\n      if (this.destroyed) {\x0d\n        this.emit(kIoDone\x2C er);\x0d\n        return;\x0d\n      }\x0d\n\x0d\n      if (er) {\x0d\n        errorOrDestroy(this\x2C er);\x0d\n      } else if (bytesRead > 0) {\x0d\n        if (this.pos !== undefined) {\x0d\n          this.pos += bytesRead;\x0d\n        }\x0d\n\x0d\n        this.bytesRead += bytesRead;\x0d\n\x0d\n        if (bytesRead !== buf.length) {\x0d\n          // Slow path. Shrink to fit.\x0d\n          // Copy instead of slice so that we don't retain\x0d\n          // large backing buffer for small reads.\x0d\n          const dst = Buffer.allocUnsafeSlow(bytesRead);\x0d\n          buf.copy(dst\x2C 0\x2C 0\x2C bytesRead);\x0d\n          buf = dst;\x0d\n        }\x0d\n\x0d\n        this.push(buf);\x0d\n      } else {\x0d\n        this.push(null);\x0d\n      }\x0d\n    });\x0d\n};\x0d\n\x0d\nReadStream.prototype._destroy = function(err\x2C cb) {\x0d\n  // Usually for async IO it is safe to close a file descriptor\x0d\n  // even when there are pending operations. However\x2C due to platform\x0d\n  // differences file IO is implemented using synchronous operations\x0d\n  // running in a thread pool. Therefore\x2C file descriptors are not safe\x0d\n  // to close while used in a pending read or write operation. Wait for\x0d\n  // any pending IO (kIsPerformingIO) to complete (kIoDone).\x0d\n  if (this[kIsPerformingIO]) {\x0d\n    this.once(kIoDone\x2C (er) => close(this\x2C err || er\x2C cb));\x0d\n  } else {\x0d\n    close(this\x2C err\x2C cb);\x0d\n  }\x0d\n};\x0d\n\x0d\nReadStream.prototype.close = function(cb) {\x0d\n  if (typeof cb === 'function') finished(this\x2C cb);\x0d\n  this.destroy();\x0d\n};\x0d\n\x0d\nObjectDefineProperty(ReadStream.prototype\x2C 'pending'\x2C {\x0d\n  __proto__: null\x2C\x0d\n  get() { return this.fd === null; }\x2C\x0d\n  configurable: true\x0d\n});\x0d\n\x0d\nfunction WriteStream(path\x2C options) {\x0d\n  if (!(this instanceof WriteStream))\x0d\n    return new WriteStream(path\x2C options);\x0d\n\x0d\n  options = copyObject(getOptions(options\x2C kEmptyObject));\x0d\n\x0d\n  // Only buffers are supported.\x0d\n  options.decodeStrings = true;\x0d\n\x0d\n  if (options.fd == null) {\x0d\n    this.fd = null;\x0d\n    this[kFs] = options.fs || fs;\x0d\n    validateFunction(this[kFs].open\x2C 'options.fs.open');\x0d\n\x0d\n    // Path will be ignored when fd is specified\x2C so it can be falsy\x0d\n    this.path = toPathIfFileURL(path);\x0d\n    this.flags = options.flags === undefined ? 'w' : options.flags;\x0d\n    this.mode = options.mode === undefined ? 0o666 : options.mode;\x0d\n\x0d\n    validatePath(this.path);\x0d\n  } else {\x0d\n    this.fd = getValidatedFd(importFd(this\x2C options));\x0d\n  }\x0d\n\x0d\n  options.autoDestroy = options.autoClose === undefined ?\x0d\n    true : options.autoClose;\x0d\n\x0d\n  if (!this[kFs].write && !this[kFs].writev) {\x0d\n    throw new ERR_INVALID_ARG_TYPE('options.fs.write'\x2C 'function'\x2C\x0d\n                                   this[kFs].write);\x0d\n  }\x0d\n\x0d\n  if (this[kFs].write) {\x0d\n    validateFunction(this[kFs].write\x2C 'options.fs.write');\x0d\n  }\x0d\n\x0d\n  if (this[kFs].writev) {\x0d\n    validateFunction(this[kFs].writev\x2C 'options.fs.writev');\x0d\n  }\x0d\n\x0d\n  if (options.autoDestroy) {\x0d\n    validateFunction(this[kFs].close\x2C 'options.fs.close');\x0d\n  }\x0d\n\x0d\n  // It's enough to override either\x2C in which case only one will be used.\x0d\n  if (!this[kFs].write) {\x0d\n    this._write = null;\x0d\n  }\x0d\n  if (!this[kFs].writev) {\x0d\n    this._writev = null;\x0d\n  }\x0d\n\x0d\n  this.start = options.start;\x0d\n  this.pos = undefined;\x0d\n  this.bytesWritten = 0;\x0d\n  this[kIsPerformingIO] = false;\x0d\n\x0d\n  if (this.start !== undefined) {\x0d\n    validateInteger(this.start\x2C 'start'\x2C 0);\x0d\n\x0d\n    this.pos = this.start;\x0d\n  }\x0d\n\x0d\n  ReflectApply(Writable\x2C this\x2C [options]);\x0d\n\x0d\n  if (options.encoding)\x0d\n    this.setDefaultEncoding(options.encoding);\x0d\n}\x0d\nObjectSetPrototypeOf(WriteStream.prototype\x2C Writable.prototype);\x0d\nObjectSetPrototypeOf(WriteStream\x2C Writable);\x0d\n\x0d\nObjectDefineProperty(WriteStream.prototype\x2C 'autoClose'\x2C {\x0d\n  __proto__: null\x2C\x0d\n  get() {\x0d\n    return this._writableState.autoDestroy;\x0d\n  }\x2C\x0d\n  set(val) {\x0d\n    this._writableState.autoDestroy = val;\x0d\n  }\x0d\n});\x0d\n\x0d\nconst openWriteFs = deprecate(function() {\x0d\n  // Noop.\x0d\n}\x2C 'WriteStream.prototype.open() is deprecated'\x2C 'DEP0135');\x0d\nWriteStream.prototype.open = openWriteFs;\x0d\n\x0d\nWriteStream.prototype._construct = _construct;\x0d\n\x0d\nWriteStream.prototype._write = function(data\x2C encoding\x2C cb) {\x0d\n  this[kIsPerformingIO] = true;\x0d\n  this[kFs].write(this.fd\x2C data\x2C 0\x2C data.length\x2C this.pos\x2C (er\x2C bytes) => {\x0d\n    this[kIsPerformingIO] = false;\x0d\n    if (this.destroyed) {\x0d\n      // Tell ._destroy() that it's safe to close the fd now.\x0d\n      cb(er);\x0d\n      return this.emit(kIoDone\x2C er);\x0d\n    }\x0d\n\x0d\n    if (er) {\x0d\n      return cb(er);\x0d\n    }\x0d\n\x0d\n    this.bytesWritten += bytes;\x0d\n    cb();\x0d\n  });\x0d\n\x0d\n  if (this.pos !== undefined)\x0d\n    this.pos += data.length;\x0d\n};\x0d\n\x0d\nWriteStream.prototype._writev = function(data\x2C cb) {\x0d\n  const len = data.length;\x0d\n  const chunks = new Array(len);\x0d\n  let size = 0;\x0d\n\x0d\n  for (let i = 0; i < len; i++) {\x0d\n    const chunk = data[i].chunk;\x0d\n\x0d\n    chunks[i] = chunk;\x0d\n    size += chunk.length;\x0d\n  }\x0d\n\x0d\n  this[kIsPerformingIO] = true;\x0d\n  this[kFs].writev(this.fd\x2C chunks\x2C this.pos\x2C (er\x2C bytes) => {\x0d\n    this[kIsPerformingIO] = false;\x0d\n    if (this.destroyed) {\x0d\n      // Tell ._destroy() that it's safe to close the fd now.\x0d\n      cb(er);\x0d\n      return this.emit(kIoDone\x2C er);\x0d\n    }\x0d\n\x0d\n    if (er) {\x0d\n      return cb(er);\x0d\n    }\x0d\n\x0d\n    this.bytesWritten += bytes;\x0d\n    cb();\x0d\n  });\x0d\n\x0d\n  if (this.pos !== undefined)\x0d\n    this.pos += size;\x0d\n};\x0d\n\x0d\nWriteStream.prototype._destroy = function(err\x2C cb) {\x0d\n  // Usually for async IO it is safe to close a file descriptor\x0d\n  // even when there are pending operations. However\x2C due to platform\x0d\n  // differences file IO is implemented using synchronous operations\x0d\n  // running in a thread pool. Therefore\x2C file descriptors are not safe\x0d\n  // to close while used in a pending read or write operation. Wait for\x0d\n  // any pending IO (kIsPerformingIO) to complete (kIoDone).\x0d\n  if (this[kIsPerformingIO]) {\x0d\n    this.once(kIoDone\x2C (er) => close(this\x2C err || er\x2C cb));\x0d\n  } else {\x0d\n    close(this\x2C err\x2C cb);\x0d\n  }\x0d\n};\x0d\n\x0d\nWriteStream.prototype.close = function(cb) {\x0d\n  if (cb) {\x0d\n    if (this.closed) {\x0d\n      process.nextTick(cb);\x0d\n      return;\x0d\n    }\x0d\n    this.on('close'\x2C cb);\x0d\n  }\x0d\n\x0d\n  // If we are not autoClosing\x2C we should call\x0d\n  // destroy on 'finish'.\x0d\n  if (!this.autoClose) {\x0d\n    this.on('finish'\x2C this.destroy);\x0d\n  }\x0d\n\x0d\n  // We use end() instead of destroy() because of\x0d\n  // https://github.com/nodejs/node/issues/2006\x0d\n  this.end();\x0d\n};\x0d\n\x0d\n// There is no shutdown() for files.\x0d\nWriteStream.prototype.destroySoon = WriteStream.prototype.end;\x0d\n\x0d\nObjectDefineProperty(WriteStream.prototype\x2C 'pending'\x2C {\x0d\n  __proto__: null\x2C\x0d\n  get() { return this.fd === null; }\x2C\x0d\n  configurable: true\x0d\n});\x0d\n\x0d\nmodule.exports = {\x0d\n  ReadStream\x2C\x0d\n  WriteStream\x0d\n};\x0d\n
code-source-info,0xc1e505f4f8,504,0,13754,C0O0C4O13754,,
tick,0x7ff72591f171,505909,1,0x7ff725a6ef10,3,0x7ff7264a2ab0,0x7ff6a66cb6a6,0x7ff6a66c32e1,0xc1e505ecb4,0xc1e505eb7b,0x7ff7265dd584,0xc1e505e912,0xc1e505e7cb,0xc1e505e642,0x7ff725a8f470,0xc1e505dde7,0xc1e505db1f,0xc1e505d08d,0xc1e505ce94,0x7ff6a66e771b,0x7ff72653f3f3
code-creation,Function,10,506004,0xc1e50601a8,875, node:internal/fs/streams:1:1,0xc1e505f470,~
code-source-info,0xc1e50601a
code-creation,LazyCompile,10,506576,0xc1e5061d18,11,get WriteStream node:fs:3059:18,0x2dbe93f5e58,~
code-source-info,0xc1e5061d18,75,84221,84279,C0O84231C3O84231C6O84255C10O84274,,
code-creation,LazyCompile,10,506665,0xc1e5061e28,11,get FileReadStream node:fs:3070:21,0x2dbe93f5f38,~
code-source-info,0xc1e5061e28,75,84497,84558,C0O84507C3O84507C6O84531C10O84553,,
code-creation,LazyCompile,10,506721,0xc1e5061f38,11,get FileWriteStream node:fs:3079:22,0x2dbe93f6028,~
code-source-info,0xc1e5061f38,75,84648,84710,C0O84658C3O84658C6O84682C10O84705,,
code-creation,LazyCompile,10,506789,0xc1e5062030,37,get node:fs:3107:8,0x2dbe93f6118,~
code-source-info,0xc1e5062030,75,85341,85437,C0O85353C14O85366C19O85397C26O85362C32O85414C36O85430,,
code-creation,LazyCompile,10,506943,0xc1e5062160,15, node:internal/modules/esm/loader:527:15,0x857283a5c0,~
code-source-info,0xc1e5062160,451,16338,16375,C0O16341C5O16361C10O16361C14O16375,,
code-creation,LazyCompile,10,507215,0xc1e5063cb0,376,readFileSync node:fs:465:22,0x2dbe93f3fe8,~
code-source-info,0xc1e5063cb
code-creation,LazyCompile,10,507371,0xc1e5063fb0,9,isUint32 node:internal/validators:51:18,0x3a8997929d0,~
code-source-info,0xc1e5063fb0,22,1011,1058,C0O1024C2O1048C5O1037C8O1055,,
code-creation,LazyCompile,10,507459,0xc1e5064110,113,openSync node:fs:591:18,0x2dbe93f4178,~
code-source-info,0xc1e5064110,75,15620,16010,C0O15645C5O15652C11O15699C16O15699C21O15724C37O15731C44O15784C51O15786C58O15812C63O15820C70O15825C73O15836C78O15836C95O15820C101O15961C106O15961C110O15993C112O16007,,
code-creation,LazyCompile,10,507693,0xc1e50642d8,66,tryStatSync node:fs:419:21,0x2dbe93f3ef8,~
code-source-info,0xc1e50642d8,75,11352,11570,C0O11384C2O11405C7O11413C22O11413C28O11458C36O11482C38O11499C43O11502C48O11502C53O11522C58O11528C62O11522C63O11554C65O11567,,
code-creation,LazyCompile,10,507807,0xc1e5064458,96,tryCreateBuffer node:fs:429:25,0x2dbe93f3f48,~
code-source-info,0xc1e5064458,75,11598,11898,C0O11636C2O11649C7O11671C9O11682C11O11680C16O11705C23O11711C28O11705C29O11756C34O11772C39O11772C45O11796C57O11802C58O11831C65O11845C67O11855C72O11858C77O11858C93O11881C95O11895,,
code-creation,LazyCompile,10,507882,0xc1e50645b0,17,allocUnsafe node:buffer:382:42,0x1adeb58d120,~
code-source-info,0xc1e50645b0,30,11434,11492,C0O11446C5O11446C9O11467C12O11474C16O11489,,
code-creation,LazyCompile,10,507967,0xc1e50646c0,119,allocate node:buffer:407:18,0x1adeb58d210,~
code-source-info,0xc1e50646c0,30,12161,12489,C0O12173C1O12182C6O12195C11O12202C16O12219C17O12228C20O12247C24O12256C27O12237C32O12271C34O12283C39O12294C41O12292C44O12280C49O12314C52O12314C55O12343C62O12358C67O12369C75O12343C81O12393C88O12407C94O12404C100O12418C103O12418C106O12436C108O12445C109O12454C114O12461C118O12486,,
code-creation,LazyCompile,10,508097,0xc1e5064880,86,tryReadSync node:fs:444:21,0x2dbe93f3f98,~
code-source-info,0xc1e5064880,75,11922,12167,C0O11972C2O11985C7O12010C12O12025C29O12025C35O12062C47O12068C48O12097C55O12111C57O12121C62O12124C67O12124C83O12147C85O12164,,
code-creation,LazyCompile,10,508220,0xc1e5064a70,251,readSync node:fs:705:18,0x2dbe93f4248,~
code-source-info,0xc1e5064a70,75,18799,19828,C0O18799C2O18843C7O18848C13O18873C18O18873C22O18916C29O18923C34O19000C40O19010C43O19041C55O19060C61O19076C68O19087C73O19104C82O19150C87O19177C92O19206C105O19206C110O19254C117O19272C118O19283C123O19297C124O19306C125O19328C131O19339C136O19353C152O19359C157O19353C158O19485C163O19533C174O19485C179O19551C184O19578C188O19598C196O19598C201O19655C203O19677C208O19685C233O19685C239O19779C244O19779C248O19811C250O19825,,
code-creation,LazyCompile,10,508331,0xc1e5064cd8,52, node:internal/fs/utils:692:40,0x914791df28,~
code-source-info,0xc1e5064cd8,79,19507,19636,C14O19537C22O19541C29O19566C30O19575C31O19586C44O19586C49O19623C51O19633,,
code-creation,LazyCompile,10,508400,0xc1e5064e48,51, node:internal/validators:354:40,0x3a899792fb8,~
code-source-info,0xc1e5064e48,22,9777,10013,C14O9811C19O9816C25O9850C30O9881C43O9856C48O9850C50O10012,,
code-creation,LazyCompile,10,508505,0xc1e5064fa0,151, node:internal/validators:94:3,0x3a899792a70,~
code-source-info,0xc1e5064fa0,22,2280,2668,C12O2300C25O2330C32O2364C38O2402C54O2408C59O2402C60O2462C65O2467C71O2498C87O2504C92O2498C93O2558C95O2568C102O2583C107O2597C117O2636C130O2649C143O2603C148O2597C150O2667,,
code-creation,LazyCompile,10,508601,0xc1e5065190,103, node:internal/fs/utils:642:3,0x914791dde8,~
code-source-info,0xc1e5065190,79,18081,18471,C0O18122C1O18133C6O18147C22O18153C27O18147C28O18213C29O18224C34O18238C50O18244C55O18238C56O18304C58O18315C64O18324C69O18349C82O18439C95O18355C100O18349C102O18470,,
code-creation,LazyCompile,10,508705,0xc1e5065490,148, node:internal/fs/utils:907:42,0x914791e298,~
code-source-info,0xc1e5065490,79,25568,26050,C0O25593C6O25634C11O25634C18O25677C24O25718C29O25741C32O25736C34O25733C44O25767C50O25774C53O25761C58O25790C71O25868C74O25863C92O25888C98O25895C114O25796C119O25790C122O25972C127O26003C140O25978C145O25972C147O26049,,
code-creation,LazyCompile,10,509159,0xc1e5065690,47,closeSync node:fs:541:19,0x2dbe93f40d8,~
code-source-info,0xc1e5065690,75,14439,14567,C0O14449C5O14454C11O14491C13O14498C18O14506C31O14506C36O14536C41O14536C46O14566,,
code-creation,LazyCompile,10,509792,0xc1e5065878,557,interpretData file:///E:/Javascript%20Renderers/Javascript-Renderer-9v2/renderer_10_js/ColorImplementationTiming/Uint8/Fast%20GC/FrameBuffer.js:178:25,0x1c9a3019330,~
code-source-info,0xc1e
code-creation,LazyCompile,10,510053,0xc1e5065d38,220,FrameBuffer file:///E:/Javascript%20Renderers/Javascript-Renderer-9v2/renderer_10_js/ColorImplementationTiming/Uint8/Fast%20GC/FrameBuffer.js:50:16,0x1c9a30191f0,~
code-source-info,0xc1e5065d38,478,2150,2740,C0O2150C24O2174C30O2180C39O2203C51O2291C60O2297C65O2291C66O2378C71O2367C76O2384C81O2407C87O2421C92O2439C95O2453C99O2458C104O2458C109O2451C113O2481C116O2496C120O2501C125O2501C130O2494C134O2525C139O2541C143O2569C146O2593C152O2616C158O2630C161O2623C164O2638C170O2589C175O2587C179O2653C182O2664C188O2673C193O2673C198O2662C202O2708C209O2721C213O2708C219O2739,,
code-creation,LazyCompile,10,510246,0xc1e5065fd0,81,buildParent file:///E:/Javascript%20Renderers/Javascript-Renderer-9v2/renderer_10_js/ColorImplementationTiming/Uint8/Fast%20GC/Viewport.js:88:23,0x1c9a301e2f0,~
code-source-info,0xc1e5065fd0,479,3884,4824,C0O3931C5O3920C10O3943C15O3966C24O3972C29O3966C30O4053C35O4073C40O4073C45O4127C50O4127C59O4295C64O4295C74O4053C80O4817,,
code-creation,LazyCompile,10,510321,0xc1e5066108,6,getWidthFB file:///E:/Javascript%20Renderers/Javascript-Renderer-9v2/renderer_10_js/ColorImplementationTiming/Uint8/Fast%20GC/FrameBuffer.js:257:15,0x1c9a3019380,~
code-source-info,0xc1e5066108,478,8658,8703,C0O8677C2O8689C5O8696,,
code-creation,LazyCompile,10,510372,0xc1e50661d0,6,getHeightFB file:///E:/Javascript%20Renderers/Javascript-Renderer-9v2/renderer_10_js/ColorImplementationTiming/Uint8/Fast%20GC/FrameBuffer.js:273:16,0x1c9a3019440,~
code-source-info,0xc1e50661d0,478,8928,8974,C0O8947C2O8959C5O8967,,
code-creation,LazyCompile,10,510421,0xc1e5066298,6,getBackgroundColorFB file:///E:/Javascript%20Renderers/Javascript-Renderer-9v2/renderer_10_js/ColorImplementationTiming/Uint8/Fast%20GC/FrameBuffer.js:289:25,0x1c9a3019500,~
code-source-info,0xc1e5066298,478,9233,9282,C0O9252C2O9264C5O9275,,
code-creation,LazyCompile,10,510514,0xc1e50663f8,202,Viewport file:///E:/Javascript%20Renderers/Javascript-Renderer-9v2/renderer_10_js/ColorImplementationTiming/Uint8/Fast%20GC/Viewport.js:57:16,0x1c9a301e2a0,~
code-source-info,0xc1e50663f8,479,2743,3570,C0O2743C47O2807C53O2813C62O2836C86O3027C95O3033C100O3027C101O3136C106O3125C111O3148C116O3171C125O3177C130O3171C131O3268C136O3257C141O3274C146O3308C152O3322C157O3356C177O3356C182O3419C187O3435C191O3453C196O3466C201O3569,,
code-creation,LazyCompile,10,510660,0xc1e5066660,181,setViewport file:///E:/Javascript%20Renderers/Javascript-Renderer-9v2/renderer_10_js/ColorImplementationTiming/Uint8/Fast%20GC/Viewport.js:210:16,0x1c9a301e3e0,~
code-source-info,0xc1e5066660,479,9211,9866,C26O9275C50O9465C59O9471C64O9465C65O9530C69O9548C74O9548C80O9576C84O9594C89O9594C95O9622C99O9635C104O9635C110O9658C114O9672C119O9672C125O9698C130O9712C134O9735C139O9749C143O9772C148O9793C154O9802C157O9786C161O9820C166O9841C172O9850C175O9834C180O9865,,
code-creation,LazyCompile,10,510788,0xc1e5066888,94,clearFB file:///E:/Javascript%20Renderers/Javascript-Renderer-9v2/renderer_10_js/ColorImplementationTiming/Uint8/Fast%20GC/FrameBuffer.js:396:12,0x1c9a30198e8,~
code-source-info,0xc1e5066888,478,12193,13496,C6O12207C14O12256C19O12245C24O12262C29O12285C38O12291C43O12285C44O13372C46O13386C48O13393C52O13406C56O13386C61O13444C63O13449C67O13462C72O13472C77O13462C83O13425C89O13351C93O13495,,
code-creation,LazyCompile,10,510872,0xc1e50669f0,6,get rgb file:///E:/Javascript%20Renderers/Javascript-Renderer-9v2/renderer_10_js/ColorImplementationTiming/Uint8/Fast%20GC/Color.js:370:12,0x1c9a30228c8,~
code-source-info,0xc1e50669f0,480,11732,11775,C0O11751C2O11763C5O11768,,
code-creation,Function,11,512594,0x7ff6a66f8940,704,clearFB file:///E:/Javascript%20Renderers/Javascript-Renderer-9v2/renderer_10_js/ColorImplementationTiming/Uint8/Fast%20GC/FrameBuffer.js:396:12,0x1c9a30198e8,^
code-source-info,0x7ff6a66f8940,478,12193,13496,,,
code-creation,Function,11,512645,0x7ff6a66f8c80,296,getOwn node:internal/bootstrap/loaders:188:16,0x1f81b719010,^
code-source-info,0x7ff6a66f8c80,15,5849,6007,,,
code-creation,Function,11,512688,0x7ff6a66f8e40,668,syncExports node:internal/bootstrap/loaders:307:14,0x1f81b7194d0,^
code-source-info,0x7ff6a66f8e40,15,10082,10425,,,
code-creation,Function,11,512727,0x7ff6a66f9180,56,get rgb file:///E:/Javascript%20Renderers/Javascript-Renderer-9v2/renderer_10_js/ColorImplementationTiming/Uint8/Fast%20GC/Color.js:370:12,0x1c9a30228c8,^
code-source-info,0x7ff6a66f9180,480,11732,11775,,,
code-creation,LazyCompile,13,514403,0x7ff6a66f9240,768,clearFB file:///E:/Javascript%20Renderers/Javascript-Renderer-9v2/renderer_10_js/ColorImplementationTiming/Uint8/Fast%20GC/FrameBuffer.js:396:12,0x1c9a30198e8,*
code-source-info,0x7ff6a66f9240,478,12193,13496,C0O12193C56O13386C64O13393C121O13406C145O13386C196O13472C231O11763I0C235O13462C284O13425C297O13351C320O13386C332O13393C383O13406C407O13386C452O13472C465O13462C501O13425C514O13351C529O13495C562O12193C608O13351,F0O13472,S0x1c9a30228c8
feedback-vector,514488,0xc1e5066a70,22,0x7ff6a66f9240,TieringState::kRequestTurbofan_Concurrent,0,1,5,000000C1E5066A71: [FeedbackVector] in OldSpace\n - map: 0x03ba70f41b89 <Map>\n - length: 22\n - shared function info: 0x01c9a30198e9 <SharedFunctionInfo clearFB>\n - no optimized code\n - tiering state: TieringState::kRequestTurbofan_Concurrent\n - maybe has optimized code: 0\n - invocation count: 1\n - profiler ticks: 5\n - closure feedback cell array: 000003BA70F432F1: [ClosureFeedbackCellArray] in ReadOnlySpace\n - map: 0x03ba70f41f39 <Map>\n - length: 0\n\n - slot #0 LoadKeyed UNINITIALIZED {\n     [0]: 0x03ba70f468b1 <Symbol: (uninitialized_symbol)>\n     [1]: 0x03ba70f468b1 <Symbol: (uninitialized_symbol)>\n  }\n - slot #2 InstanceOf UNINITIALIZED {\n     [2]: 0x03ba70f468b1 <Symbol: (uninitialized_symbol)>\n  }\n - slot #3 CompareOp CompareOp:None {\n     [3]: 0\n  }\n - slot #4 LoadGlobalNotInsideTypeof UNINITIALIZED {\n     [4]: [cleared]\n     [5]: 0x03ba70f468b1 <Symbol: (uninitialized_symbol)>\n  }\n - slot #6 Call UNINITIALIZED {\n     [6]: 0x03ba70f468b1 <Symbol: (uninitialized_symbol)>\n     [7]: 0\n  }\n - slot #8 LoadKeyed MONOMORPHIC {\n     [8]: 0x00c1e505a6d1 <Symbol: #pixelBuffer>\n     [9]: 0x0192d554fb59 <Other heap object (WEAK_FIXED_ARRAY_TYPE)>\n  }\n - slot #10 LoadProperty MONOMORPHIC {\n     [10]: [weak] 0x008cb684da49 <Map(UINT8_CLAMPEDELEMENTS)>\n     [11]: 0x00c1e5066b99 <Other heap object (LOAD_HANDLER_TYPE)>\n  }\n - slot #12 CompareOp CompareOp:SignedSmall {\n     [12]: 1\n  }\n - slot #13 LoadKeyed MONOMORPHIC {\n     [13]: 0x00c1e505a6d1 <Symbol: #pixelBuffer>\n     [14]: 0x0192d554fb79 <Other heap object (WEAK_FIXED_ARRAY_TYPE)>\n  }\n - slot #15 LoadProperty MONOMORPHIC {\n     [15]: [weak] 0x008cb684da49 <Map(UINT8_CLAMPEDELEMENTS)>\n     [16]: 0x00c1e5066bb9 <Other heap object (LOAD_HANDLER_TYPE)>\n  }\n - slot #17 LoadProperty MONOMORPHIC {\n     [17]: [weak] 0x009983f0fa59 <Map(HOLEY_ELEMENTS)>\n     [18]: 0x00c1e5066be9 <Other heap object (LOAD_HANDLER_TYPE)>\n  }\n - slot #19 Call MONOMORPHIC {\n     [19]: [weak] 0x02ffd8f93fb1 <JSFunction set (sfi = 000003A8997BF001)>\n     [20]: 58788\n  }\n - slot #21 BinaryOp BinaryOp:SignedSmall {\n     [21]: 1\n  }\n
code-creation,LazyCompile,10,519623,0xc1e5067590,6,get pixelBuffer file:///E:/Javascript%20Renderers/Javascript-Renderer-9v2/renderer_10_js/ColorImplementationTiming/Uint8/Fast%20GC/FrameBuffer.js:342:20,0x1c9a3019758,~
code-source-info,0xc1e5067590,478,10409,10460,C0O10428C2O10440C5O10453,,
code-creation,Function,11,520177,0x7ff6a66f9600,3680,interpretData file:///E:/Javascript%20Renderers/Javascript-Renderer-9v2/renderer_10_js/ColorImplementationTiming/Uint8/Fast%20GC/FrameBuffer.js:178:25,0x1c9a3019330,^
code-source-info,0x7ff6a66f9600,478,6057,8500,,,
code-creation,Function,11,520224,0x7ff6a66fa500,56,get pixelBuffer file:///E:/Javascript%20Renderers/Javascript-Renderer-9v2/renderer_10_js/ColorImplementationTiming/Uint8/Fast%20GC/FrameBuffer.js:342:20,0x1c9a3019758,^
code-source-info,0x7ff6a66fa500,478,10409,10460,,,
tick,0x7ff72642d8d7,520673,0,0x0,0,0x7ff7266036da,0x7ff6a66fa3a6,0xc1e505b463,0x7ff72653f3f3
new,MemoryChunk,0x36f3f340000,262144
new,MemoryChunk,0xd3b5600000,262144
new,MemoryChunk,0x28330c40000,262144
new,MemoryChunk,0x39aeb880000,262144
new,MemoryChunk,0x1fb52f40000,262144
new,MemoryChunk,0x2ecec2c0000,262144
new,MemoryChunk,0xff70d80000,262144
new,MemoryChunk,0x2f5c8ac0000,262144
new,MemoryChunk,0x3a96ff40000,262144
new,MemoryChunk,0x20fdcb80000,262144
code-creation,LazyCompile,13,525852,0x7ff6a66fa5c0,1628,interpretData file:///E:/Javascript%20Renderers/Javascript-Renderer-9v2/renderer_10_js/ColorImplementationTiming/Uint8/Fast%20GC/FrameBuffer.js:178:25,0x1c9a3019330,*
code-source-info,0x7ff6a66fa5c0,478,6057,8500,C0O6057C59O7872C96O7865C158O7932C187O7985C199O7974C219O8027C231O8016C252O8386C284O10440I0C288O8398C452O8403C460O8406C468O8409C476O8412C490O8398C532O8439C562O7890C579O7849C654O7872C686O7865C766O7932C794O7985C810O7974C837O8027C853O8016C873O8386C883O10440I0C887O8398C1007O8403C1022O8406C1030O8409C1038O8412C1049O8398C1096O8439C1112O7890C1129O7849C1144O8493C1170O6057C1294O7849,F0O8386,S0x1c9a3019758
feedback-vector,525971,0xc1e5067610,105,0x7ff6a66fa5c0,TieringState::kRequestTurbofan_Concurrent,0,1,10,000000C1E5067611: [FeedbackVector] in OldSpace\n - map: 0x03ba70f41b89 <Map>\n - length: 105\n - shared function info: 0x01c9a3019331 <SharedFunctionInfo interpretData>\n - no optimized code\n - tiering state: TieringState::kRequestTurbofan_Concurrent\n - maybe has optimized code: 0\n - invocation count: 1\n - profiler ticks: 10\n - closure feedback cell array: 000003BA70F432F1: [ClosureFeedbackCellArray] in ReadOnlySpace\n - map: 0x03ba70f41f39 <Map>\n - length: 0\n\n - slot #0 BinaryOp BinaryOp:None {\n     [0]: 0\n  }\n - slot #1 LoadKeyed UNINITIALIZED {\n     [1]: 0x03ba70f468b1 <Symbol: (uninitialized_symbol)>\n     [2]: 0x03ba70f468b1 <Symbol: (uninitialized_symbol)>\n  }\n - slot #3 BinaryOp BinaryOp:None {\n     [3]: 0\n  }\n - slot #4 LoadKeyed UNINITIALIZED {\n     [4]: 0x03ba70f468b1 <Symbol: (uninitialized_symbol)>\n     [5]: 0x03ba70f468b1 <Symbol: (uninitialized_symbol)>\n  }\n - slot #6 LoadGlobalNotInsideTypeof UNINITIALIZED {\n     [6]: [cleared]\n     [7]: 0x03ba70f468b1 <Symbol: (uninitialized_symbol)>\n  }\n - slot #8 LoadProperty UNINITIALIZED {\n     [8]: 0x03ba70f468b1 <Symbol: (uninitialized_symbol)>\n     [9]: 0x03ba70f468b1 <Symbol: (uninitialized_symbol)>\n  }\n - slot #10 Call UNINITIALIZED {\n     [10]: 0x03ba70f468b1 <Symbol: (uninitialized_symbol)>\n     [11]: 0\n  }\n - slot #12 CompareOp CompareOp:None {\n     [12]: 0\n  }\n - slot #13 LoadGlobalNotInsideTypeof UNINITIALIZED {\n     [13]: [cleared]\n     [14]: 0x03ba70f468b1 <Symbol: (uninitialized_symbol)>\n  }\n - slot #15 Call UNINITIALIZED {\n     [15]: 0x03ba70f468b1 <Symbol: (uninitialized_symbol)>\n     [16]: 0\n  }\n - slot #17 LoadKeyed UNINITIALIZED {\n     [17]: 0x03ba70f468b1 <Symbol: (uninitialized_symbol)>\n     [18]: 0x03ba70f468b1 <Symbol: (uninitialized_symbol)>\n  }\n - slot #19 CompareOp CompareOp:None {\n     [19]: 0\n  }\n - slot #20 LoadKeyed UNINITIALIZED {\n     [20]: 0x03ba70f468b1 <Symbol: (uninitialized_symbol)>\n     [21]: 0x03ba70f468b1 <Symbol: (uninitialized_symbol)>\n  }\n - slot #22 CompareOp CompareOp:None {\n     [22]: 0\n  }\n - slot #23 BinaryOp BinaryOp:None {\n     [23]: 0\n  }\n - slot #24 LoadKeyed UNINITIALIZED {\n     [24]: 0x03ba70f468b1 <Symbol: (uninitialized_symbol)>\n     [25]: 0x03ba70f468b1 <Symbol: (uninitialized_symbol)>\n  }\n - slot #26 CompareOp CompareOp:None {\n     [26]: 0\n  }\n - slot #27 LoadKeyed UNINITIALIZED {\n     [27]: 0x03ba70f468b1 <Symbol: (uninitialized_symbol)>\n     [28]: 0x03ba70f468b1 <Symbol: (uninitialized_symbol)>\n  }\n - slot #29 CompareOp CompareOp:None {\n     [29]: 0\n  }\n - slot #30 BinaryOp BinaryOp:None {\n     [30]: 0\n  }\n - slot #31 BinaryOp BinaryOp:None {\n     [31]: 0\n  }\n - slot #32 LoadKeyed UNINITIALIZED {\n     [32]: 0x03ba70f468b1 <Symbol: (uninitialized_symbol)>\n     [33]: 0x03ba70f468b1 <Symbol: (uninitialized_symbol)>\n  }\n - slot #34 Call UNINITIALIZED {\n     [34]: 0x03ba70f468b1 <Symbol: (uninitialized_symbol)>\n     [35]: 0\n  }\n - slot #36 BinaryOp BinaryOp:None {\n     [36]: 0\n  }\n - slot #37 LoadKeyed UNINITIALIZED {\n     [37]: 0x03ba70f468b1 <Symbol: (uninitialized_symbol)>\n     [38]: 0x03ba70f468b1 <Symbol: (uninitialized_symbol)>\n  }\n - slot #39 CompareOp CompareOp:None {\n     [39]: 0\n  }\n - slot #40 LoadKeyed UNINITIALIZED {\n     [40]: 0x03ba70f468b1 <Symbol: (uninitialized_symbol)>\n     [41]: 0x03ba70f468b1 <Symbol: (uninitialized_symbol)>\n  }\n - slot #42 CompareOp CompareOp:None {\n     [42]: 0\n  }\n - slot #43 BinaryOp BinaryOp:None {\n     [43]: 0\n  }\n - slot #44 BinaryOp BinaryOp:None {\n     [44]: 0\n  }\n - slot #45 LoadKeyed UNINITIALIZED {\n     [45]: 0x03ba70f468b1 <Symbol: (uninitialized_symbol)>\n     [46]: 0x03ba70f468b1 <Symbol: (uninitialized_symbol)>\n  }\n - slot #47 Call UNINITIALIZED {\n     [47]: 0x03ba70f468b1 <Symbol: (uninitialized_symbol)>\n     [48]: 0\n  }\n - slot #49 BinaryOp BinaryOp:None {\n     [49]: 0\n  }\n - slot #50 BinaryOp BinaryOp:None {\n     [50]: 0\n  }\n - slot #51 Call UNINITIALIZED {\n     [51]: 0x03ba70f468b1 <Symbol: (uninitialized_symbol)>\n     [52]: 0\n  }\n - slot #53 LoadKeyed UNINITIALIZED {\n     [53]: 0x03ba70f468b1 <Symbol: (uninitialized_symbol)>\n     [54]: 0x03ba70f468b1 <Symbol: (uninitialized_symbol)>\n  }\n - slot #55 CompareOp CompareOp:None {\n     [55]: 0\n  }\n - slot #56 LoadKeyed UNINITIALIZED {\n     [56]: 0x03ba70f468b1 <Symbol: (uninitialized_symbol)>\n     [57]: 0x03ba70f468b1 <Symbol: (uninitialized_symbol)>\n  }\n - slot #58 CompareOp CompareOp:None {\n     [58]: 0\n  }\n - slot #59 BinaryOp BinaryOp:None {\n     [59]: 0\n  }\n - slot #60 LoadKeyed UNINITIALIZED {\n     [60]: 0x03ba70f468b1 <Symbol: (uninitialized_symbol)>\n     [61]: 0x03ba70f468b1 <Symbol: (uninitialized_symbol)>\n  }\n - slot #62 CompareOp CompareOp:None {\n     [62]: 0\n  }\n - slot #63 LoadKeyed UNINITIALIZED {\n     [63]: 0x03ba70f468b1 <Symbol: (uninitialized_symbol)>\n     [64]: 0x03ba70f468b1 <Symbol: (uninitialized_symbol)>\n  }\n - slot #65 CompareOp CompareOp:None {\n     [65]: 0\n  }\n - slot #66 BinaryOp BinaryOp:None {\n     [66]: 0\n  }\n - slot #67 BinaryOp BinaryOp:None {\n     [67]: 0\n  }\n - slot #68 LoadKeyed UNINITIALIZED {\n     [68]: 0x03ba70f468b1 <Symbol: (uninitialized_symbol)>\n     [69]: 0x03ba70f468b1 <Symbol: (uninitialized_symbol)>\n  }\n - slot #70 Call UNINITIALIZED {\n     [70]: 0x03ba70f468b1 <Symbol: (uninitialized_symbol)>\n     [71]: 0\n  }\n - slot #72 LoadKeyed UNINITIALIZED {\n     [72]: 0x03ba70f468b1 <Symbol: (uninitialized_symbol)>\n     [73]: 0x03ba70f468b1 <Symbol: (uninitialized_symbol)>\n  }\n - slot #74 CompareOp CompareOp:None {\n     [74]: 0\n  }\n - slot #75 BinaryOp BinaryOp:None {\n     [75]: 0\n  }\n - slot #76 LoadProperty MONOMORPHIC {\n     [76]: [weak] 0x008cb6846f21 <Map(UINT8ELEMENTS)>\n     [77]: 0x00c1e5067999 <Other heap object (LOAD_HANDLER_TYPE)>\n  }\n - slot #78 CompareOp CompareOp:SignedSmall {\n     [78]: 1\n  }\n - slot #79 BinaryOp BinaryOp:SignedSmall {\n     [79]: 1\n  }\n - slot #80 LoadKeyed MONOMORPHIC {\n     [80]: [weak] 0x008cb6846f21 <Map(UINT8ELEMENTS)>\n     [81]: 17408\n  }\n - slot #82 BinaryOp BinaryOp:SignedSmall {\n     [82]: 1\n  }\n - slot #83 LoadKeyed MONOMORPHIC {\n     [83]: [weak] 0x008cb6846f21 <Map(UINT8ELEMENTS)>\n     [84]: 17408\n  }\n - slot #85 BinaryOp BinaryOp:SignedSmall {\n     [85]: 1\n  }\n - slot #86 LoadKeyed MONOMORPHIC {\n     [86]: [weak] 0x008cb6846f21 <Map(UINT8ELEMENTS)>\n     [87]: 17408\n  }\n - slot #88 CompareOp CompareOp:SignedSmall {\n     [88]: 1\n  }\n - slot #89 BinaryOp BinaryOp:None {\n     [89]: 0\n  }\n - slot #90 CompareOp CompareOp:SignedSmall {\n     [90]: 1\n  }\n - slot #91 BinaryOp BinaryOp:None {\n     [91]: 0\n  }\n - slot #92 CompareOp CompareOp:SignedSmall {\n     [92]: 1\n  }\n - slot #93 BinaryOp BinaryOp:None {\n     [93]: 0\n  }\n - slot #94 LoadProperty MONOMORPHIC {\n     [94]: [weak] 0x009983f10d31 <Map(HOLEY_ELEMENTS)>\n     [95]: 0x00c1e50679c9 <Other heap object (LOAD_HANDLER_TYPE)>\n  }\n - slot #96 LoadProperty MONOMORPHIC {\n     [96]: [weak] 0x008cb684da49 <Map(UINT8_CLAMPEDELEMENTS)>\n     [97]: 0x00c1e50679e9 <Other heap object (LOAD_HANDLER_TYPE)>\n  }\n - slot #98 Literal  {\n     [98]: 0x00c1e5067a29 <AllocationSite>\n  }\n - slot #99 StoreInArrayLiteral MONOMORPHIC {\n     [99]: [weak] 0x008cb68435c1 <Map(PACKED_SMI_ELEMENTS)>\n     [100]: 0x03ba70f502a1 <Code BUILTIN StoreFastElementIC_Standard>\n  }\n - slot #101 Call MONOMORPHIC {\n     [101]: [weak] 0x02ffd8f93fb1 <JSFunction set (sfi = 000003A8997BF001)>\n     [102]: 40688\n  }\n - slot #103 BinaryOp BinaryOp:SignedSmall {\n     [103]: 1\n  }\n - slot #104 BinaryOp BinaryOp:SignedSmall {\n     [104]: 1\n  }\n
tick,0x7ff7266036b8,536295,0,0x0,0,0x7ff6a66faa08,0xc1e505b463,0x7ff72653f3f3
tick,0x7ff726603418,551914,0,0x0,0,0x7ff6a66f9435,0xc1e5065e0d,0x1c9a30158c1,0x7ff72653f3f3
code-creation,LazyCompile,10,562057,0xc1e5068a30,6,get width file:///E:/Javascript%20Renderers/Javascript-Renderer-9v2/renderer_10_js/ColorImplementationTiming/Uint8/Fast%20GC/FrameBuffer.js:262:14,0x1c9a30193f0,~
code-source-info,0xc1e5068a30,478,8720,8765,C0O8739C2O8751C5O8758,,
code-creation,LazyCompile,10,562163,0xc1e5068b18,6,get height file:///E:/Javascript%20Renderers/Javascript-Renderer-9v2/renderer_10_js/ColorImplementationTiming/Uint8/Fast%20GC/FrameBuffer.js:278:15,0x1c9a30194b0,~
code-source-info,0xc1e5068b18,478,8992,9038,C0O9011C2O9023C5O9031,,
code-creation,LazyCompile,10,562293,0xc1e5068d30,246,getPixelFB file:///E:/Javascript%20Renderers/Javascript-Renderer-9v2/renderer_10_js/ColorImplementationTiming/Uint8/Fast%20GC/FrameBuffer.js:438:15,0x1c9a3019938,~
code-source-info,0xc1e5068d30,478,13942,15046,C0O13965C12O14028C21O14034C26O14028C27O14085C31O14094C36O14094C43O14113C47O14122C52O14122C59O14166C64O14166C68O14159C74O14179C78O14195C80O14213C84O14226C88O14205C93O14247C102O14300C108O14335C114O14339C120O14346C126O14350C132O14357C136O14402C141O14402C145O14395C151O14415C155O14432C160O14432C164O14425C170O14446C176O14253C181O14247C182O14552C186O14558C192O14562C198O14570C201O14566C205O14955C211O14968C218O14983C222O14996C229O15033C233O14996C240O14968C245O15039,,
code-creation,LazyCompile,10,562457,0xc1e5068fd8,51,buildRGBA file:///E:/Javascript%20Renderers/Javascript-Renderer-9v2/renderer_10_js/ColorImplementationTiming/Uint8/Fast%20GC/Color.js:124:21,0x1c9a3022590,~
code-source-info,0xc1e5068fd8,480,4066,4306,C0O4108C3O4097C8O4126C13O4149C22O4155C27O4149C28O4230C33O4230C39O4252C44O4261C48O4288C50O4299,,
code-creation,Function,11,562856,0x7ff6a66fad00,2776, file:///E:/Javascript%20Renderers/Javascript-Renderer-9v2/renderer_10_js/ColorImplementationTiming/Uint8/Fast%20GC/test.js:1:1,0x1c9a3015548,^
code-source-info,0x7ff6a66fad00,476,0,755,,,
code-creation,Function,11,562922,0x7ff6a66fb880,56,getWidthFB file:///E:/Javascript%20Renderers/Javascript-Renderer-9v2/renderer_10_js/ColorImplementationTiming/Uint8/Fast%20GC/FrameBuffer.js:257:15,0x1c9a3019380,^
code-source-info,0x7ff6a66fb880,478,8658,8703,,,
code-creation,Function,11,562958,0x7ff6a66fb940,56,get width file:///E:/Javascript%20Renderers/Javascript-Renderer-9v2/renderer_10_js/ColorImplementationTiming/Uint8/Fast%20GC/FrameBuffer.js:262:14,0x1c9a30193f0,^
code-source-info,0x7ff6a66fb940,478,8720,8765,,,
code-creation,Function,11,562992,0x7ff6a66fba00,56,get height file:///E:/Javascript%20Renderers/Javascript-Renderer-9v2/renderer_10_js/ColorImplementationTiming/Uint8/Fast%20GC/FrameBuffer.js:278:15,0x1c9a30194b0,^
code-source-info,0x7ff6a66fba00,478,8992,9038,,,
code-creation,Function,11,563030,0x7ff6a66fbac0,356,buildRGBA file:///E:/Javascript%20Renderers/Javascript-Renderer-9v2/renderer_10_js/ColorImplementationTiming/Uint8/Fast%20GC/Color.js:124:21,0x1c9a3022590,^
code-source-info,0x7ff6a66fbac0,480,4066,4306,,,
code-creation,Function,11,563083,0x7ff6a66fbcc0,1372,getPixelFB file:///E:/Javascript%20Renderers/Javascript-Renderer-9v2/renderer_10_js/ColorImplementationTiming/Uint8/Fast%20GC/FrameBuffer.js:438:15,0x1c9a3019938,^
code-source-info,0x7ff6a66fbcc0,478,13942,15046,,,
code-creation,LazyCompile,13,566832,0x7ff6a66fc2c0,1480,Color file:///E:/Javascript%20Renderers/Javascript-Renderer-9v2/renderer_10_js/ColorImplementationTiming/Uint8/Fast%20GC/Color.js:76:16,0x1c9a30224f0,*
code-source-info,0x7ff6a66fc2c0,480,2497,3216,C0O2497C48O466I0C96O2497C214O2544C251O466I0C370O2544C459O2698C486O2704C491O2769C512O2779C532O2808C552O2818C568O2847C588O2857C604O2886C623O2896C639O2921C666O2927C671O3090C735O3205C787O3062C837O3178C882O3034C933O3151C978O3006C1028O3124C1074O3006C1114O3124C1171O3151C1193O3178C1215O3205C1237O3215C1270O2497,F0O2497,S0x1c9a3022af8
feedback-vector,567014,0xc1e505ac38,46,0x7ff6a66fc2c0,TieringState::kInProgress,0,3491,0,000000C1E505AC39: [FeedbackVector] in OldSpace\n - map: 0x03ba70f41b89 <Map>\n - length: 46\n - shared function info: 0x01c9a30224f1 <SharedFunctionInfo Color>\n - no optimized code\n - tiering state: TieringState::kInProgress\n - maybe has optimized code: 0\n - invocation count: 3491\n - profiler ticks: 0\n - closure feedback cell array: 000003BA70F432F1: [ClosureFeedbackCellArray] in ReadOnlySpace\n - map: 0x03ba70f41f39 <Map>\n - length: 0\n\n - slot #0 LoadProperty MEGAMORPHIC {\n     [0]: 0x03ba70f466d1 <Symbol: (megamorphic_symbol)>\n     [1]: 1\n  }\n - slot #2 Call MONOMORPHIC {\n     [2]: [weak] 0x03a96ff4b909 <JSFunction <instance_members_initializer> (sfi = 000001C9A3022AF9)>\n     [3]: 13956\n  }\n - slot #4 LoadGlobalNotInsideTypeof UNINITIALIZED {\n     [4]: [cleared]\n     [5]: 0x03ba70f468b1 <Symbol: (uninitialized_symbol)>\n  }\n - slot #6 Call UNINITIALIZED {\n     [6]: 0x03ba70f468b1 <Symbol: (uninitialized_symbol)>\n     [7]: 0\n  }\n - slot #8 CompareOp CompareOp:SignedSmall {\n     [8]: 1\n  }\n - slot #9 CompareOp CompareOp:SignedSmall {\n     [9]: 1\n  }\n - slot #10 CompareOp CompareOp:SignedSmall {\n     [10]: 1\n  }\n - slot #11 CompareOp CompareOp:SignedSmall {\n     [11]: 1\n  }\n - slot #12 CompareOp CompareOp:SignedSmall {\n     [12]: 1\n  }\n - slot #13 CompareOp CompareOp:SignedSmall {\n     [13]: 1\n  }\n - slot #14 CompareOp CompareOp:SignedSmall {\n     [14]: 1\n  }\n - slot #15 CompareOp CompareOp:SignedSmall {\n     [15]: 1\n  }\n - slot #16 Call UNINITIALIZED {\n     [16]: 0x03ba70f468b1 <Symbol: (uninitialized_symbol)>\n     [17]: 0\n  }\n - slot #18 LoadGlobalNotInsideTypeof MONOMORPHIC {\n     [18]: [weak] 0x02ffd8fb69f1 <PropertyCell name=0x03774421cae9 <String[4]: #Math> value=0x02ffd8fb6e51 <Object map = 0000008CB684CBA9>>\n     [19]: 0x03ba70f468b1 <Symbol: (uninitialized_symbol)>\n  }\n - slot #20 LoadProperty MONOMORPHIC {\n     [20]: [weak] 0x008cb684cba9 <Map(HOLEY_ELEMENTS)>\n     [21]: 12804\n  }\n - slot #22 Call MONOMORPHIC {\n     [22]: [weak] 0x023add77f029 <JSFunction round (sfi = 000003A8997BE209)>\n     [23]: 13956\n  }\n - slot #24 Call MONOMORPHIC {\n     [24]: [weak] 0x023add77f029 <JSFunction round (sfi = 000003A8997BE209)>\n     [25]: 13956\n  }\n - slot #26 Call MONOMORPHIC {\n     [26]: [weak] 0x023add77f029 <JSFunction round (sfi = 000003A8997BE209)>\n     [27]: 13956\n  }\n - slot #28 Call MONOMORPHIC {\n     [28]: [weak] 0x023add77f029 <JSFunction round (sfi = 000003A8997BE209)>\n     [29]: 13956\n  }\n - slot #30 LoadKeyed MONOMORPHIC {\n     [30]: 0x00c1e505a8e1 <Symbol: #rgb>\n     [31]: 0x03a96ff4b941 <Other heap object (WEAK_FIXED_ARRAY_TYPE)>\n  }\n - slot #32 StoreKeyedStrict MONOMORPHIC {\n     [32]: [weak] 0x008cb684da49 <Map(UINT8_CLAMPEDELEMENTS)>\n     [33]: 0x03ba70f502a1 <Code BUILTIN StoreFastElementIC_Standard>\n  }\n - slot #34 LoadKeyed MONOMORPHIC {\n     [34]: 0x00c1e505a8e1 <Symbol: #rgb>\n     [35]: 0x03a96ff4b961 <Other heap object (WEAK_FIXED_ARRAY_TYPE)>\n  }\n - slot #36 StoreKeyedStrict MONOMORPHIC {\n     [36]: [weak] 0x008cb684da49 <Map(UINT8_CLAMPEDELEMENTS)>\n     [37]: 0x03ba70f502a1 <Code BUILTIN StoreFastElementIC_Standard>\n  }\n - slot #38 LoadKeyed MONOMORPHIC {\n     [38]: 0x00c1e505a8e1 <Symbol: #rgb>\n     [39]: 0x03a96ff4b981 <Other heap object (WEAK_FIXED_ARRAY_TYPE)>\n  }\n - slot #40 StoreKeyedStrict MONOMORPHIC {\n     [40]: [weak] 0x008cb684da49 <Map(UINT8_CLAMPEDELEMENTS)>\n     [41]: 0x03ba70f502a1 <Code BUILTIN StoreFastElementIC_Standard>\n  }\n - slot #42 LoadKeyed MONOMORPHIC {\n     [42]: 0x00c1e505a8e1 <Symbol: #rgb>\n     [43]: 0x03a96ff4b9a1 <Other heap object (WEAK_FIXED_ARRAY_TYPE)>\n  }\n - slot #44 StoreKeyedStrict MONOMORPHIC {\n     [44]: [weak] 0x008cb684da49 <Map(UINT8_CLAMPEDELEMENTS)>\n     [45]: 0x03ba70f502a1 <Code BUILTIN StoreFastElementIC_Standard>\n  }\n
tick,0x7ff72626aada,567685,0,0x0,4,0x7ff72606d4a0,0x7ff6a66f7694,0x7ff6a66fbbe9,0x7ff6a66fc20a,0x7ff6a66fb1ac,0x7ff72653f3f3
code-creation,LazyCompile,13,570728,0x7ff6a66fc940,1220,buildRGBA file:///E:/Javascript%20Renderers/Javascript-Renderer-9v2/renderer_10_js/ColorImplementationTiming/Uint8/Fast%20GC/Color.js:124:21,0x1c9a3022590,*
code-source-info,0x7ff6a66fc940,480,4066,4306,C0O4066C48O4097C187O4126C274O4230C399O466I1C555O3006I0C595O3124I0C638O3151I0C657O3178I0C676O3205I0C695O4261C747O4299C776O4149C803O4155C808O4066C863O4097C959O4230,F0O4230F1O2497I0,S0x1c9a30224f0S0x1c9a3022af8
feedback-vector,570877,0xc1e5069118,12,0x7ff6a66fc940,TieringState::kInProgress,0,5505,0,000000C1E5069119: [FeedbackVector] in OldSpace\n - map: 0x03ba70f41b89 <Map>\n - length: 12\n - shared function info: 0x01c9a3022591 <SharedFunctionInfo buildRGBA>\n - no optimized code\n - tiering state: TieringState::kInProgress\n - maybe has optimized code: 0\n - invocation count: 5505\n - profiler ticks: 0\n - closure feedback cell array: 000003BA70F432F1: [ClosureFeedbackCellArray] in ReadOnlySpace\n - map: 0x03ba70f41f39 <Map>\n - length: 0\n\n - slot #0 LoadGlobalNotInsideTypeof MONOMORPHIC {\n     [0]: [weak] 0x010673ec3429 <PropertyCell name=0x03ba70f46369 <String[17]: #Uint8ClampedArray> value=0x010673ec34e1 <JSFunction Uint8ClampedArray (sfi = 000003893BCF27D9)>>\n     [1]: 0x03ba70f468b1 <Symbol: (uninitialized_symbol)>\n  }\n - slot #2 InstanceOf MONOMORPHIC {\n     [2]: [weak] 0x010673ec34e1 <JSFunction Uint8ClampedArray (sfi = 000003893BCF27D9)>\n  }\n - slot #3 CompareOp CompareOp:NumberOrBoolean {\n     [3]: 4\n  }\n - slot #4 LoadGlobalNotInsideTypeof UNINITIALIZED {\n     [4]: [cleared]\n     [5]: 0x03ba70f468b1 <Symbol: (uninitialized_symbol)>\n  }\n - slot #6 Call UNINITIALIZED {\n     [6]: 0x03ba70f468b1 <Symbol: (uninitialized_symbol)>\n     [7]: 0\n  }\n - slot #8 Call MONOMORPHIC {\n     [8]: [weak] 0x03a96ff4ab79 <JSFunction Color (sfi = 000001C9A30224F1)>\n     [9]: 22012\n  }\n - slot #10 StoreKeyedStrict MONOMORPHIC {\n     [10]: 0x00c1e505a8e1 <Symbol: #rgb>\n     [11]: 0x00191ca41321 <Other heap object (WEAK_FIXED_ARRAY_TYPE)>\n  }\n
code-creation,LazyCompile,13,571756,0x7ff6a66fcec0,2408,getPixelFB file:///E:/Javascript%20Renderers/Javascript-Renderer-9v2/renderer_10_js/ColorImplementationTiming/Uint8/Fast%20GC/FrameBuffer.js:438:15,0x1c9a3019938,*
code-source-info,0x7ff6a66fcecx1c9a3019380S0x1c9a30193f0S0x1c9a3022590S0x1c9a30224f0S0x1c9a3022af8
feedback-vector,571909,0xc1e50691a8,60,0x7ff6a66fcec0,TieringState::kInProgress,0,6177,0,000000C1E50691A9: [FeedbackVector] in OldSpace\n - map: 0x03ba70f41b89 <Map>\n - length: 60\n - shared function info: 0x01c9a3019939 <SharedFunctionInfo getPixelFB>\n - no optimized code\n - tiering state: TieringState::kInProgress\n - maybe has optimized code: 0\n - invocation count: 6177\n - profiler ticks: 0\n - closure feedback cell array: 000003BA70F432F1: [ClosureFeedbackCellArray] in ReadOnlySpace\n - map: 0x03ba70f41f39 <Map>\n - length: 0\n\n - slot #0 LoadGlobalNotInsideTypeof UNINITIALIZED {\n     [0]: [cleared]\n     [1]: 0x03ba70f468b1 <Symbol: (uninitialized_symbol)>\n  }\n - slot #2 Call UNINITIALIZED {\n     [2]: 0x03ba70f468b1 <Symbol: (uninitialized_symbol)>\n     [3]: 0\n  }\n - slot #4 LoadGlobalNotInsideTypeof MONOMORPHIC {\n     [4]: [weak] 0x02ffd8fb69f1 <PropertyCell name=0x03774421cae9 <String[4]: #Math> value=0x02ffd8fb6e51 <Object map = 0000008CB684CBA9>>\n     [5]: 0x03ba70f468b1 <Symbol: (uninitialized_symbol)>\n  }\n - slot #6 LoadProperty MONOMORPHIC {\n     [6]: [weak] 0x008cb684cba9 <Map(HOLEY_ELEMENTS)>\n     [7]: 12804\n  }\n - slot #8 Call MONOMORPHIC {\n     [8]: [weak] 0x023add77f029 <JSFunction round (sfi = 000003A8997BE209)>\n     [9]: 24700\n  }\n - slot #10 Call MONOMORPHIC {\n     [10]: [weak] 0x023add77f029 <JSFunction round (sfi = 000003A8997BE209)>\n     [11]: 24700\n  }\n - slot #12 BinaryOp BinaryOp:SignedSmall {\n     [12]: 1\n  }\n - slot #13 BinaryOp BinaryOp:SignedSmall {\n     [13]: 1\n  }\n - slot #14 LoadProperty MONOMORPHIC {\n     [14]: [weak] 0x009983f10d31 <Map(HOLEY_ELEMENTS)>\n     [15]: 0x00c1e50693b9 <Other heap object (LOAD_HANDLER_TYPE)>\n  }\n - slot #16 Call MONOMORPHIC {\n     [16]: [weak] 0x020fdcb98bf9 <JSFunction getWidthFB (sfi = 000001C9A3019381)>\n     [17]: 24700\n  }\n - slot #18 LoadKeyed MONOMORPHIC {\n     [18]: 0x00c1e505a6d1 <Symbol: #pixelBuffer>\n     [19]: 0x00191ca41341 <Other heap object (WEAK_FIXED_ARRAY_TYPE)>\n  }\n - slot #20 LoadProperty MONOMORPHIC {\n     [20]: [weak] 0x008cb684da49 <Map(UINT8_CLAMPEDELEMENTS)>\n     [21]: 0x00c1e50693d9 <Other heap object (LOAD_HANDLER_TYPE)>\n  }\n - slot #22 CompareOp CompareOp:SignedSmall {\n     [22]: 1\n  }\n - slot #23 BinaryOp BinaryOp:None {\n     [23]: 0\n  }\n - slot #24 BinaryOp BinaryOp:None {\n     [24]: 0\n  }\n - slot #25 BinaryOp BinaryOp:None {\n     [25]: 0\n  }\n - slot #26 BinaryOp BinaryOp:None {\n     [26]: 0\n  }\n - slot #27 BinaryOp BinaryOp:None {\n     [27]: 0\n  }\n - slot #28 BinaryOp BinaryOp:None {\n     [28]: 0\n  }\n - slot #29 LoadProperty UNINITIALIZED {\n     [29]: 0x03ba70f468b1 <Symbol: (uninitialized_symbol)>\n     [30]: 0x03ba70f468b1 <Symbol: (uninitialized_symbol)>\n  }\n - slot #31 Call UNINITIALIZED {\n     [31]: 0x03ba70f468b1 <Symbol: (uninitialized_symbol)>\n     [32]: 0\n  }\n - slot #33 BinaryOp BinaryOp:None {\n     [33]: 0\n  }\n - slot #34 BinaryOp BinaryOp:None {\n     [34]: 0\n  }\n - slot #35 LoadProperty UNINITIALIZED {\n     [35]: 0x03ba70f468b1 <Symbol: (uninitialized_symbol)>\n     [36]: 0x03ba70f468b1 <Symbol: (uninitialized_symbol)>\n  }\n - slot #37 Call UNINITIALIZED {\n     [37]: 0x03ba70f468b1 <Symbol: (uninitialized_symbol)>\n     [38]: 0\n  }\n - slot #39 BinaryOp BinaryOp:None {\n     [39]: 0\n  }\n - slot #40 BinaryOp BinaryOp:None {\n     [40]: 0\n  }\n - slot #41 Call UNINITIALIZED {\n     [41]: 0x03ba70f468b1 <Symbol: (uninitialized_symbol)>\n     [42]: 0\n  }\n - slot #43 BinaryOp BinaryOp:SignedSmall {\n     [43]: 1\n  }\n - slot #44 LoadProperty MONOMORPHIC {\n     [44]: [weak] 0x009983f10d31 <Map(HOLEY_ELEMENTS)>\n     [45]: 0x00c1e50693f9 <Other heap object (LOAD_HANDLER_TYPE)>\n  }\n - slot #46 BinaryOp BinaryOp:SignedSmall {\n     [46]: 1\n  }\n - slot #47 BinaryOp BinaryOp:SignedSmall {\n     [47]: 1\n  }\n - slot #48 BinaryOp BinaryOp:SignedSmall {\n     [48]: 1\n  }\n - slot #49 LoadProperty MONOMORPHIC {\n     [49]: [weak] 0x009983f103e9 <Map(HOLEY_ELEMENTS)>\n     [50]: 2052\n  }\n - slot #51 LoadKeyed MONOMORPHIC {\n     [51]: 0x00c1e505a6d1 <Symbol: #pixelBuffer>\n     [52]: 0x00191ca41361 <Other heap object (WEAK_FIXED_ARRAY_TYPE)>\n  }\n - slot #53 LoadProperty MONOMORPHIC {\n     [53]: [weak] 0x008cb684da49 <Map(UINT8_CLAMPEDELEMENTS)>\n     [54]: 0x00c1e5069419 <Other heap object (LOAD_HANDLER_TYPE)>\n  }\n - slot #55 BinaryOp BinaryOp:SignedSmall {\n     [55]: 1\n  }\n - slot #56 Call MONOMORPHIC {\n     [56]: [weak] 0x023add746561 <JSFunction slice (sfi = 000003A8997BF039)>\n     [57]: 24700\n  }\n - slot #58 Call MONOMORPHIC {\n     [58]: [weak] 0x03a96ff4fcd1 <JSFunction buildRGBA (sfi = 000001C9A3022591)>\n     [59]: 24700\n  }\n
code-creation,LazyCompile,13,577600,0x7ff6a66fd900,160,get height file:///E:/Javascript%20Renderers/Javascript-Renderer-9v2/renderer_10_js/ColorImplementationTiming/Uint8/Fast%20GC/FrameBuffer.js:278:15,0x1c9a30194b0,*
code-source-info,0x7ff6a66fd900,478,8992,9038,C0O8992C40O9023C77O9031C103O8992,,
feedback-vector,577696,0xc1e50690d8,2,0x7ff6a66fd900,TieringState::kInProgress,0,24211,0,000000C1E50690D9: [FeedbackVector] in OldSpace\n - map: 0x03ba70f41b89 <Map>\n - length: 2\n - shared function info: 0x01c9a30194b1 <SharedFunctionInfo get height>\n - no optimized code\n - tiering state: TieringState::kInProgress\n - maybe has optimized code: 0\n - invocation count: 24211\n - profiler ticks: 0\n - closure feedback cell array: 000003BA70F432F1: [ClosureFeedbackCellArray] in ReadOnlySpace\n - map: 0x03ba70f41f39 <Map>\n - length: 0\n\n - slot #0 LoadKeyed MONOMORPHIC {\n     [0]: 0x00c1e505a689 <Symbol: #height>\n     [1]: 0x03a96ff52991 <Other heap object (WEAK_FIXED_ARRAY_TYPE)>\n  }\n
tick,0x7ff7268b7778,583172,0,0x0,4,0x7ff7260747b0,0x7ff6a66fb286,0x7ff72653f3f3
code-creation,LazyCompile,13,584176,0x7ff6a66fda40,2524, file:///E:/Javascript%20Renderers/Javascript-Renderer-9v2/renderer_10_js/ColorImplementationTiming/Uint8/Fast%20GC/test.js:1:1,0x1c9a3015548,*
code-source-info,0x7ff6a66fdax1c9a30193f0S0x1c9a30194b0S0x1c9a3019938S0x1c9a3019380S0x1c9a3022590S0x1c9a30224f0S0x1c9a3022af8
feedback-vector,584343,0xc1e5069438,47,0x7ff6a66fda40,TieringState::kRequestTurbofan_Concurrent,0,1,6,000000C1E5069439: [FeedbackVector] in OldSpace\n - map: 0x03ba70f41b89 <Map>\n - length: 47\n - shared function info: 0x01c9a3015549 <SharedFunctionInfo>\n - no optimized code\n - tiering state: TieringState::kRequestTurbofan_Concurrent\n - maybe has optimized code: 0\n - invocation count: 1\n - profiler ticks: 6\n - closure feedback cell array: 000003BA70F432F1: [ClosureFeedbackCellArray] in ReadOnlySpace\n - map: 0x03ba70f41f39 <Map>\n - length: 0\n\n - slot #0 LoadProperty UNINITIALIZED {\n     [0]: 0x03ba70f468b1 <Symbol: (uninitialized_symbol)>\n     [1]: 0x03ba70f468b1 <Symbol: (uninitialized_symbol)>\n  }\n - slot #2 Call UNINITIALIZED {\n     [2]: 0x03ba70f468b1 <Symbol: (uninitialized_symbol)>\n     [3]: 0\n  }\n - slot #4 LoadProperty UNINITIALIZED {\n     [4]: 0x03ba70f468b1 <Symbol: (uninitialized_symbol)>\n     [5]: 0x03ba70f468b1 <Symbol: (uninitialized_symbol)>\n  }\n - slot #6 Call UNINITIALIZED {\n     [6]: 0x03ba70f468b1 <Symbol: (uninitialized_symbol)>\n     [7]: 0\n  }\n - slot #8 LoadProperty MONOMORPHIC {\n     [8]: [weak] 0x009983f10d31 <Map(HOLEY_ELEMENTS)>\n     [9]: 0x00c1e5069871 <Other heap object (LOAD_HANDLER_TYPE)>\n  }\n - slot #10 CompareOp CompareOp:SignedSmall {\n     [10]: 1\n  }\n - slot #11 LoadProperty MONOMORPHIC {\n     [11]: [weak] 0x009983f10d31 <Map(HOLEY_ELEMENTS)>\n     [12]: 0x00c1e5069831 <Other heap object (LOAD_HANDLER_TYPE)>\n  }\n - slot #13 CompareOp CompareOp:SignedSmall {\n     [13]: 1\n  }\n - slot #14 LoadProperty MONOMORPHIC {\n     [14]: [weak] 0x009983f10d31 <Map(HOLEY_ELEMENTS)>\n     [15]: 0x00c1e5069851 <Other heap object (LOAD_HANDLER_TYPE)>\n  }\n - slot #16 Call MONOMORPHIC {\n     [16]: [weak] 0x020fdcb98e29 <JSFunction getPixelFB (sfi = 000001C9A3019939)>\n     [17]: 114276\n  }\n - slot #18 BinaryOp BinaryOp:SignedSmall {\n     [18]: 1\n  }\n - slot #19 BinaryOp BinaryOp:SignedSmall {\n     [19]: 1\n  }\n - slot #20 CompareOp CompareOp:None {\n     [20]: 0\n  }\n - slot #21 CompareOp CompareOp:None {\n     [21]: 0\n  }\n - slot #22 BinaryOp BinaryOp:None {\n     [22]: 0\n  }\n - slot #23 LoadGlobalNotInsideTypeof UNINITIALIZED {\n     [23]: [cleared]\n     [24]: 0x03ba70f468b1 <Symbol: (uninitialized_symbol)>\n  }\n - slot #25 LoadProperty UNINITIALIZED {\n     [25]: 0x03ba70f468b1 <Symbol: (uninitialized_symbol)>\n     [26]: 0x03ba70f468b1 <Symbol: (uninitialized_symbol)>\n  }\n - slot #27 Call UNINITIALIZED {\n     [27]: 0x03ba70f468b1 <Symbol: (uninitialized_symbol)>\n     [28]: 0\n  }\n - slot #29 BinaryOp BinaryOp:None {\n     [29]: 0\n  }\n - slot #30 Call UNINITIALIZED {\n     [30]: 0x03ba70f468b1 <Symbol: (uninitialized_symbol)>\n     [31]: 0\n  }\n - slot #32 BinaryOp BinaryOp:None {\n     [32]: 0\n  }\n - slot #33 Call UNINITIALIZED {\n     [33]: 0x03ba70f468b1 <Symbol: (uninitialized_symbol)>\n     [34]: 0\n  }\n - slot #35 Call UNINITIALIZED {\n     [35]: 0x03ba70f468b1 <Symbol: (uninitialized_symbol)>\n     [36]: 0\n  }\n - slot #37 LoadProperty UNINITIALIZED {\n     [37]: 0x03ba70f468b1 <Symbol: (uninitialized_symbol)>\n     [38]: 0x03ba70f468b1 <Symbol: (uninitialized_symbol)>\n  }\n - slot #39 Call UNINITIALIZED {\n     [39]: 0x03ba70f468b1 <Symbol: (uninitialized_symbol)>\n     [40]: 0\n  }\n - slot #41 BinaryOp BinaryOp:None {\n     [41]: 0\n  }\n - slot #42 BinaryOp BinaryOp:None {\n     [42]: 0\n  }\n - slot #43 LoadProperty UNINITIALIZED {\n     [43]: 0x03ba70f468b1 <Symbol: (uninitialized_symbol)>\n     [44]: 0x03ba70f468b1 <Symbol: (uninitialized_symbol)>\n  }\n - slot #45 Call UNINITIALIZED {\n     [45]: 0x03ba70f468b1 <Symbol: (uninitialized_symbol)>\n     [46]: 0\n  }\n
tick,0x7ff7265fb779,598794,0,0x0,0,0x7ff726604599,0x7ff6a66fdd58,0x7ff72653f3f3
tick,0x7ff726031707,614493,0,0x0,1
tick,0x7ff6a66fdecc,630012,0,0x0,0,0x7ff72653f3f3
tick,0x7ff726abe48e,645684,0,0x0,0,0x7ff726604a0a,0x7ff6a66fdd58,0x7ff72653f3f3
tick,0x7ff7265fb698,661293,0,0x0,0,0x7ff6a66fdf03,0x7ff72653f3f3
tick,0x7ff6a66fe001,676907,0,0x0,0,0x7ff72653f3f3
tick,0x7ff6a66fdf0a,692559,0,0x0,0,0x7ff72653f3f3
tick,0x7ff726abe48c,708191,0,0x0,0,0x7ff726604a0a,0x7ff6a66fdd58,0x7ff72653f3f3
tick,0x7ff7265fb681,723796,0,0x0,0,0x7ff726604599,0x7ff6a66fdd58,0x7ff72653f3f3
tick,0x7ff7265faf75,739442,0,0x0,0,0x7ff72653f3f3
tick,0x7ff7265fb4ea,755091,0,0x0,0,0x7ff6a66fdf03,0x7ff72653f3f3
code-creation,LazyCompile,10,759218,0xc1e506e668,268,setPixelFB file:///E:/Javascript%20Renderers/Javascript-Renderer-9v2/renderer_10_js/ColorImplementationTiming/Uint8/Fast%20GC/FrameBuffer.js:477:15,0x1c9a3019988,~
code-source-info,0xc1e506e
code-creation,Function,11,761594,0x7ff6a66fe580,1600,setPixelFB file:///E:/Javascript%20Renderers/Javascript-Renderer-9v2/renderer_10_js/ColorImplementationTiming/Uint8/Fast%20GC/FrameBuffer.js:477:15,0x1c9a3019988,^
code-source-info,0x7ff6a66fe580,478,15543,18764,,,
code-creation,LazyCompile,13,762802,0x7ff6a66fec40,404,<instance_members_initializer> file:///E:/Javascript%20Renderers/Javascript-Renderer-9v2/renderer_10_js/ColorImplementationTiming/Uint8/Fast%20GC/Color.js:15:16,0x1c9a3022af8,*
code-source-info,0x7ff6a66fec40,480,374,15548,C0O374C48O466C216O15548C249O374,,
feedback-vector,762869,0xc1e505aba0,6,0x7ff6a66fec40,TieringState::kInProgress,0,6285,0,000000C1E505ABA1: [FeedbackVector] in OldSpace\n - map: 0x03ba70f41b89 <Map>\n - length: 6\n - shared function info: 0x01c9a3022af9 <SharedFunctionInfo <instance_members_initializer>>\n - no optimized code\n - tiering state: TieringState::kInProgress\n - maybe has optimized code: 0\n - invocation count: 6285\n - profiler ticks: 0\n - closure feedback cell array: 000003BA70F432F1: [ClosureFeedbackCellArray] in ReadOnlySpace\n - map: 0x03ba70f41f39 <Map>\n - length: 0\n\n - slot #0 LoadGlobalNotInsideTypeof MONOMORPHIC {\n     [0]: [weak] 0x010673ec3429 <PropertyCell name=0x03ba70f46369 <String[17]: #Uint8ClampedArray> value=0x010673ec34e1 <JSFunction Uint8ClampedArray (sfi = 000003893BCF27D9)>>\n     [1]: 0x03ba70f468b1 <Symbol: (uninitialized_symbol)>\n  }\n - slot #2 Call MONOMORPHIC {\n     [2]: [weak] 0x010673ec34e1 <JSFunction Uint8ClampedArray (sfi = 000003893BCF27D9)>\n     [3]: 25136\n  }\n - slot #4 DefineKeyedOwn MONOMORPHIC {\n     [4]: 0x00c1e505a8e1 <Symbol: #rgb>\n     [5]: 0x03a96ff4b8e9 <Other heap object (WEAK_FIXED_ARRAY_TYPE)>\n  }\n
new,MemoryChunk,0x7ff6a6700000,262144
code-creation,LazyCompile,13,763142,0x7ff6a6703080,1544,Color file:///E:/Javascript%20Renderers/Javascript-Renderer-9v2/renderer_10_js/ColorImplementationTiming/Uint8/Fast%20GC/Color.js:76:16,0x1c9a30224f0,*
code-source-info,0x7ff6a6703080,480,2497,3216,C0O2497C48O466I0C96O2497C214O2544C251O466I0C370O2544C459O2698C486O2704C491O2769C560O2779C585O2808C645O2818C655O2847C715O2857C725O2886C744O2896C760O2921C787O2927C792O3090C857O3205C899O3062C938O3178C982O3034C1021O3151C1065O3006C1103O3124C1137O3006C1177O3124C1234O3151C1256O3178C1278O3205C1300O3215C1333O2497,F0O2497,S0x1c9a3022af8
feedback-vector,763222,0xc1e505ac38,46,0x7ff6a6703080,TieringState::kInProgress,0,6307,0,000000C1E505AC39: [FeedbackVector] in OldSpace\n - map: 0x03ba70f41b89 <Map>\n - length: 46\n - shared function info: 0x01c9a30224f1 <SharedFunctionInfo Color>\n - no optimized code\n - tiering state: TieringState::kInProgress\n - maybe has optimized code: 0\n - invocation count: 6307\n - profiler ticks: 0\n - closure feedback cell array: 000003BA70F432F1: [ClosureFeedbackCellArray] in ReadOnlySpace\n - map: 0x03ba70f41f39 <Map>\n - length: 0\n\n - slot #0 LoadProperty MEGAMORPHIC {\n     [0]: 0x03ba70f466d1 <Symbol: (megamorphic_symbol)>\n     [1]: 1\n  }\n - slot #2 Call MONOMORPHIC {\n     [2]: [weak] 0x03a96ff4b909 <JSFunction <instance_members_initializer> (sfi = 000001C9A3022AF9)>\n     [3]: 25224\n  }\n - slot #4 LoadGlobalNotInsideTypeof UNINITIALIZED {\n     [4]: [cleared]\n     [5]: 0x03ba70f468b1 <Symbol: (uninitialized_symbol)>\n  }\n - slot #6 Call UNINITIALIZED {\n     [6]: 0x03ba70f468b1 <Symbol: (uninitialized_symbol)>\n     [7]: 0\n  }\n - slot #8 CompareOp CompareOp:Number {\n     [8]: 3\n  }\n - slot #9 CompareOp CompareOp:Number {\n     [9]: 3\n  }\n - slot #10 CompareOp CompareOp:Number {\n     [10]: 3\n  }\n - slot #11 CompareOp CompareOp:Number {\n     [11]: 3\n  }\n - slot #12 CompareOp CompareOp:Number {\n     [12]: 3\n  }\n - slot #13 CompareOp CompareOp:Number {\n     [13]: 3\n  }\n - slot #14 CompareOp CompareOp:SignedSmall {\n     [14]: 1\n  }\n - slot #15 CompareOp CompareOp:SignedSmall {\n     [15]: 1\n  }\n - slot #16 Call UNINITIALIZED {\n     [16]: 0x03ba70f468b1 <Symbol: (uninitialized_symbol)>\n     [17]: 0\n  }\n - slot #18 LoadGlobalNotInsideTypeof MONOMORPHIC {\n     [18]: [weak] 0x02ffd8fb69f1 <PropertyCell name=0x03774421cae9 <String[4]: #Math> value=0x02ffd8fb6e51 <Object map = 0000008CB684CBA9>>\n     [19]: 0x03ba70f468b1 <Symbol: (uninitialized_symbol)>\n  }\n - slot #20 LoadProperty MONOMORPHIC {\n     [20]: [weak] 0x008cb684cba9 <Map(HOLEY_ELEMENTS)>\n     [21]: 12804\n  }\n - slot #22 Call MONOMORPHIC {\n     [22]: [weak] 0x023add77f029 <JSFunction round (sfi = 000003A8997BE209)>\n     [23]: 25228\n  }\n - slot #24 Call MONOMORPHIC {\n     [24]: [weak] 0x023add77f029 <JSFunction round (sfi = 000003A8997BE209)>\n     [25]: 25228\n  }\n - slot #26 Call MONOMORPHIC {\n     [26]: [weak] 0x023add77f029 <JSFunction round (sfi = 000003A8997BE209)>\n     [27]: 25228\n  }\n - slot #28 Call MONOMORPHIC {\n     [28]: [weak] 0x023add77f029 <JSFunction round (sfi = 000003A8997BE209)>\n     [29]: 25228\n  }\n - slot #30 LoadKeyed MONOMORPHIC {\n     [30]: 0x00c1e505a8e1 <Symbol: #rgb>\n     [31]: 0x03a96ff4b941 <Other heap object (WEAK_FIXED_ARRAY_TYPE)>\n  }\n - slot #32 StoreKeyedStrict MONOMORPHIC {\n     [32]: [weak] 0x008cb684da49 <Map(UINT8_CLAMPEDELEMENTS)>\n     [33]: 0x03ba70f502a1 <Code BUILTIN StoreFastElementIC_Standard>\n  }\n - slot #34 LoadKeyed MONOMORPHIC {\n     [34]: 0x00c1e505a8e1 <Symbol: #rgb>\n     [35]: 0x03a96ff4b961 <Other heap object (WEAK_FIXED_ARRAY_TYPE)>\n  }\n - slot #36 StoreKeyedStrict MONOMORPHIC {\n     [36]: [weak] 0x008cb684da49 <Map(UINT8_CLAMPEDELEMENTS)>\n     [37]: 0x03ba70f502a1 <Code BUILTIN StoreFastElementIC_Standard>\n  }\n - slot #38 LoadKeyed MONOMORPHIC {\n     [38]: 0x00c1e505a8e1 <Symbol: #rgb>\n     [39]: 0x03a96ff4b981 <Other heap object (WEAK_FIXED_ARRAY_TYPE)>\n  }\n - slot #40 StoreKeyedStrict MONOMORPHIC {\n     [40]: [weak] 0x008cb684da49 <Map(UINT8_CLAMPEDELEMENTS)>\n     [41]: 0x03ba70f502a1 <Code BUILTIN StoreFastElementIC_Standard>\n  }\n - slot #42 LoadKeyed MONOMORPHIC {\n     [42]: 0x00c1e505a8e1 <Symbol: #rgb>\n     [43]: 0x03a96ff4b9a1 <Other heap object (WEAK_FIXED_ARRAY_TYPE)>\n  }\n - slot #44 StoreKeyedStrict MONOMORPHIC {\n     [44]: [weak] 0x008cb684da49 <Map(UINT8_CLAMPEDELEMENTS)>\n     [45]: 0x03ba70f502a1 <Code BUILTIN StoreFastElementIC_Standard>\n  }\n
code-creation,LazyCompile,13,765189,0x7ff6a6703740,160,get rgb file:///E:/Javascript%20Renderers/Javascript-Renderer-9v2/renderer_10_js/ColorImplementationTiming/Uint8/Fast%20GC/Color.js:370:12,0x1c9a30228c8,*
code-source-info,0x7ff6a6703740,480,11732,11775,C0O11732C40O11763C77O11768C103O11732,,
feedback-vector,765261,0xc1e5066a30,2,0x7ff6a6703740,TieringState::kInProgress,0,22958,0,000000C1E5066A31: [FeedbackVector] in OldSpace\n - map: 0x03ba70f41b89 <Map>\n - length: 2\n - shared function info: 0x01c9a30228c9 <SharedFunctionInfo get rgb>\n - no optimized code\n - tiering state: TieringState::kInProgress\n - maybe has optimized code: 0\n - invocation count: 22958\n - profiler ticks: 0\n - closure feedback cell array: 000003BA70F432F1: [ClosureFeedbackCellArray] in ReadOnlySpace\n - map: 0x03ba70f41f39 <Map>\n - length: 0\n\n - slot #0 LoadKeyed MONOMORPHIC {\n     [0]: 0x00c1e505a8e1 <Symbol: #rgb>\n     [1]: 0x03a96ff4e389 <Other heap object (WEAK_FIXED_ARRAY_TYPE)>\n  }\n
code-creation,LazyCompile,13,765966,0x7ff6a6703880,1608,setPixelFB file:///E:/Javascript%20Renderers/Javascript-Renderer-9v2/renderer_10_js/ColorImplementationTiming/Uint8/Fast%20GC/FrameBuffer.js:477:15,0x1c9a3019988,*
code-source-info,0x7ff6a6703880,478,15543,18764,C0O15543C57O15587C119O15650C146O15656C151O15728C179O15717C312O15734C399O15825C499O15853C562O15825C614O15853C657O16578C691O8689I0C695O16591C717O16595C730O16591C739O16595C785O16603C832O16599C840O16637C844O16650C872O16629C897O16940C928O16953C953O16963C990O11763I1C994O16953C1049O18763C1082O16671C1109O16724C1114O15757C1141O15763C1146O15558C1173O15564C1178O15543C1233O15717C1316O16595C1352O16603C1372O15728C1418O15558,F0O16578F1O16963,S0x1c9a3019380S0x1c9a30228c8
feedback-vector,766065,0xc1e506e838,59,0x7ff6a6703880,TieringState::kInProgress,0,6387,0,000000C1E506E839: [FeedbackVector] in OldSpace\n - map: 0x03ba70f41b89 <Map>\n - length: 59\n - shared function info: 0x01c9a3019989 <SharedFunctionInfo setPixelFB>\n - no optimized code\n - tiering state: TieringState::kInProgress\n - maybe has optimized code: 0\n - invocation count: 6387\n - profiler ticks: 0\n - closure feedback cell array: 000003BA70F432F1: [ClosureFeedbackCellArray] in ReadOnlySpace\n - map: 0x03ba70f41f39 <Map>\n - length: 0\n\n - slot #0 LoadProperty UNINITIALIZED {\n     [0]: 0x03ba70f468b1 <Symbol: (uninitialized_symbol)>\n     [1]: 0x03ba70f468b1 <Symbol: (uninitialized_symbol)>\n  }\n - slot #2 LoadGlobalNotInsideTypeof UNINITIALIZED {\n     [2]: [cleared]\n     [3]: 0x03ba70f468b1 <Symbol: (uninitialized_symbol)>\n  }\n - slot #4 Call UNINITIALIZED {\n     [4]: 0x03ba70f468b1 <Symbol: (uninitialized_symbol)>\n     [5]: 0\n  }\n - slot #6 InstanceOf MONOMORPHIC {\n     [6]: [weak] 0x03a96ff4ab79 <JSFunction Color (sfi = 000001C9A30224F1)>\n  }\n - slot #7 CompareOp CompareOp:NumberOrBoolean {\n     [7]: 4\n  }\n - slot #8 Call UNINITIALIZED {\n     [8]: 0x03ba70f468b1 <Symbol: (uninitialized_symbol)>\n     [9]: 0\n  }\n - slot #10 LoadGlobalNotInsideTypeof MONOMORPHIC {\n     [10]: [weak] 0x02ffd8fb69f1 <PropertyCell name=0x03774421cae9 <String[4]: #Math> value=0x02ffd8fb6e51 <Object map = 0000008CB684CBA9>>\n     [11]: 0x03ba70f468b1 <Symbol: (uninitialized_symbol)>\n  }\n - slot #12 LoadProperty MONOMORPHIC {\n     [12]: [weak] 0x008cb684cba9 <Map(HOLEY_ELEMENTS)>\n     [13]: 12804\n  }\n - slot #14 Call MONOMORPHIC {\n     [14]: [weak] 0x023add77f029 <JSFunction round (sfi = 000003A8997BE209)>\n     [15]: 25544\n  }\n - slot #16 Call MONOMORPHIC {\n     [16]: [weak] 0x023add77f029 <JSFunction round (sfi = 000003A8997BE209)>\n     [17]: 25544\n  }\n - slot #18 BinaryOp BinaryOp:SignedSmall {\n     [18]: 1\n  }\n - slot #19 LoadProperty MONOMORPHIC {\n     [19]: [weak] 0x009983f10d31 <Map(HOLEY_ELEMENTS)>\n     [20]: 0x00c1e506ea41 <Other heap object (LOAD_HANDLER_TYPE)>\n  }\n - slot #21 Call MONOMORPHIC {\n     [21]: [weak] 0x020fdcb98bf9 <JSFunction getWidthFB (sfi = 000001C9A3019381)>\n     [22]: 25544\n  }\n - slot #23 BinaryOp BinaryOp:SignedSmall {\n     [23]: 1\n  }\n - slot #24 BinaryOp BinaryOp:SignedSmall {\n     [24]: 1\n  }\n - slot #25 BinaryOp BinaryOp:SignedSmall {\n     [25]: 1\n  }\n - slot #26 LoadKeyed MONOMORPHIC {\n     [26]: 0x00c1e505a6d1 <Symbol: #pixelBuffer>\n     [27]: 0x02b2c4041151 <Other heap object (WEAK_FIXED_ARRAY_TYPE)>\n  }\n - slot #28 LoadProperty MONOMORPHIC {\n     [28]: [weak] 0x008cb684da49 <Map(UINT8_CLAMPEDELEMENTS)>\n     [29]: 0x00c1e506ea61 <Other heap object (LOAD_HANDLER_TYPE)>\n  }\n - slot #30 CompareOp CompareOp:SignedSmall {\n     [30]: 1\n  }\n - slot #31 BinaryOp BinaryOp:None {\n     [31]: 0\n  }\n - slot #32 BinaryOp BinaryOp:None {\n     [32]: 0\n  }\n - slot #33 BinaryOp BinaryOp:None {\n     [33]: 0\n  }\n - slot #34 BinaryOp BinaryOp:None {\n     [34]: 0\n  }\n - slot #35 BinaryOp BinaryOp:None {\n     [35]: 0\n  }\n - slot #36 BinaryOp BinaryOp:None {\n     [36]: 0\n  }\n - slot #37 LoadProperty UNINITIALIZED {\n     [37]: 0x03ba70f468b1 <Symbol: (uninitialized_symbol)>\n     [38]: 0x03ba70f468b1 <Symbol: (uninitialized_symbol)>\n  }\n - slot #39 Call UNINITIALIZED {\n     [39]: 0x03ba70f468b1 <Symbol: (uninitialized_symbol)>\n     [40]: 0\n  }\n - slot #41 BinaryOp BinaryOp:None {\n     [41]: 0\n  }\n - slot #42 BinaryOp BinaryOp:None {\n     [42]: 0\n  }\n - slot #43 LoadProperty UNINITIALIZED {\n     [43]: 0x03ba70f468b1 <Symbol: (uninitialized_symbol)>\n     [44]: 0x03ba70f468b1 <Symbol: (uninitialized_symbol)>\n  }\n - slot #45 Call UNINITIALIZED {\n     [45]: 0x03ba70f468b1 <Symbol: (uninitialized_symbol)>\n     [46]: 0\n  }\n - slot #47 BinaryOp BinaryOp:None {\n     [47]: 0\n  }\n - slot #48 BinaryOp BinaryOp:None {\n     [48]: 0\n  }\n - slot #49 Call UNINITIALIZED {\n     [49]: 0x03ba70f468b1 <Symbol: (uninitialized_symbol)>\n     [50]: 0\n  }\n - slot #51 LoadKeyed MONOMORPHIC {\n     [51]: 0x00c1e505a6d1 <Symbol: #pixelBuffer>\n     [52]: 0x02b2c4041171 <Other heap object (WEAK_FIXED_ARRAY_TYPE)>\n  }\n - slot #53 LoadProperty MONOMORPHIC {\n     [53]: [weak] 0x008cb684da49 <Map(UINT8_CLAMPEDELEMENTS)>\n     [54]: 0x00c1e506ea81 <Other heap object (LOAD_HANDLER_TYPE)>\n  }\n - slot #55 LoadProperty MONOMORPHIC {\n     [55]: [weak] 0x009983f0fa59 <Map(HOLEY_ELEMENTS)>\n     [56]: 0x00c1e506eaa1 <Other heap object (LOAD_HANDLER_TYPE)>\n  }\n - slot #57 Call MONOMORPHIC {\n     [57]: [weak] 0x02ffd8f93fb1 <JSFunction set (sfi = 000003A8997BF001)>\n     [58]: 25540\n  }\n
tick,0x7ff726a355f9,770637,0,0x0,4,0x7ff7260747b0,0x7ff6a66fb673,0x7ff72653f3f3
code-creation,LazyCompile,13,774587,0x7ff6a6703fc0,3168, file:///E:/Javascript%20Renderers/Javascript-Renderer-9v2/renderer_10_js/ColorImplementationTiming/Uint8/Fast%20GC/test.js:1:1,0x1c9a3015548,*
code-source-info,0x7ff6a6703fcx1c9a30193f0S0x1c9a30194b0S0x1c9a3019988S0x1c9a3019380S0x1c9a30228c8S0x1c9a30224f0S0x1c9a3022af8
feedback-vector,774791,0xc1e5069438,47,0x7ff6a6703fc0,TieringState::kRequestTurbofan_Concurrent,0,1,6,000000C1E5069439: [FeedbackVector] in OldSpace\n - map: 0x03ba70f41b89 <Map>\n - length: 47\n - shared function info: 0x01c9a3015549 <SharedFunctionInfo>\n - no optimized code\n - tiering state: TieringState::kRequestTurbofan_Concurrent\n - maybe has optimized code: 0\n - invocation count: 1\n - profiler ticks: 6\n - closure feedback cell array: 000003BA70F432F1: [ClosureFeedbackCellArray] in ReadOnlySpace\n - map: 0x03ba70f41f39 <Map>\n - length: 0\n\n - slot #0 LoadProperty UNINITIALIZED {\n     [0]: 0x03ba70f468b1 <Symbol: (uninitialized_symbol)>\n     [1]: 0x03ba70f468b1 <Symbol: (uninitialized_symbol)>\n  }\n - slot #2 Call UNINITIALIZED {\n     [2]: 0x03ba70f468b1 <Symbol: (uninitialized_symbol)>\n     [3]: 0\n  }\n - slot #4 LoadProperty UNINITIALIZED {\n     [4]: 0x03ba70f468b1 <Symbol: (uninitialized_symbol)>\n     [5]: 0x03ba70f468b1 <Symbol: (uninitialized_symbol)>\n  }\n - slot #6 Call UNINITIALIZED {\n     [6]: 0x03ba70f468b1 <Symbol: (uninitialized_symbol)>\n     [7]: 0\n  }\n - slot #8 LoadProperty MONOMORPHIC {\n     [8]: [weak] 0x009983f10d31 <Map(HOLEY_ELEMENTS)>\n     [9]: 0x00c1e5069871 <Other heap object (LOAD_HANDLER_TYPE)>\n  }\n - slot #10 CompareOp CompareOp:SignedSmall {\n     [10]: 1\n  }\n - slot #11 LoadProperty MONOMORPHIC {\n     [11]: [weak] 0x009983f10d31 <Map(HOLEY_ELEMENTS)>\n     [12]: 0x00c1e5069831 <Other heap object (LOAD_HANDLER_TYPE)>\n  }\n - slot #13 CompareOp CompareOp:SignedSmall {\n     [13]: 1\n  }\n - slot #14 LoadProperty MONOMORPHIC {\n     [14]: [weak] 0x009983f10d31 <Map(HOLEY_ELEMENTS)>\n     [15]: 0x00c1e5069851 <Other heap object (LOAD_HANDLER_TYPE)>\n  }\n - slot #16 Call MONOMORPHIC {\n     [16]: [weak] 0x020fdcb98e29 <JSFunction getPixelFB (sfi = 000001C9A3019939)>\n     [17]: 114276\n  }\n - slot #18 BinaryOp BinaryOp:SignedSmall {\n     [18]: 1\n  }\n - slot #19 BinaryOp BinaryOp:SignedSmall {\n     [19]: 1\n  }\n - slot #20 CompareOp CompareOp:SignedSmall {\n     [20]: 1\n  }\n - slot #21 CompareOp CompareOp:SignedSmall {\n     [21]: 1\n  }\n - slot #22 BinaryOp BinaryOp:Number {\n     [22]: 7\n  }\n - slot #23 LoadGlobalNotInsideTypeof MONOMORPHIC {\n     [23]: [weak] 0x02ffd8fb69f1 <PropertyCell name=0x03774421cae9 <String[4]: #Math> value=0x02ffd8fb6e51 <Object map = 0000008CB684CBA9>>\n     [24]: 0x03ba70f468b1 <Symbol: (uninitialized_symbol)>\n  }\n - slot #25 LoadProperty MONOMORPHIC {\n     [25]: [weak] 0x008cb684cba9 <Map(HOLEY_ELEMENTS)>\n     [26]: 12292\n  }\n - slot #27 Call MONOMORPHIC {\n     [27]: [weak] 0x02ffd8fb73d9 <JSFunction random (sfi = 000003A8997BE1D1)>\n     [28]: 32768\n  }\n - slot #29 BinaryOp BinaryOp:Number {\n     [29]: 7\n  }\n - slot #30 Call MONOMORPHIC {\n     [30]: [weak] 0x02ffd8fb73d9 <JSFunction random (sfi = 000003A8997BE1D1)>\n     [31]: 32768\n  }\n - slot #32 BinaryOp BinaryOp:Number {\n     [32]: 7\n  }\n - slot #33 Call MONOMORPHIC {\n     [33]: [weak] 0x02ffd8fb73d9 <JSFunction random (sfi = 000003A8997BE1D1)>\n     [34]: 32768\n  }\n - slot #35 Call MONOMORPHIC {\n     [35]: [weak] 0x03a96ff4ab79 <JSFunction Color (sfi = 000001C9A30224F1)>\n     [36]: 32768\n  }\n - slot #37 LoadProperty MONOMORPHIC {\n     [37]: [weak] 0x009983f10d31 <Map(HOLEY_ELEMENTS)>\n     [38]: 0x00c1e506e4b9 <Other heap object (LOAD_HANDLER_TYPE)>\n  }\n - slot #39 Call MONOMORPHIC {\n     [39]: [weak] 0x020fdcb98e61 <JSFunction setPixelFB (sfi = 000001C9A3019989)>\n     [40]: 32768\n  }\n - slot #41 BinaryOp BinaryOp:SignedSmall {\n     [41]: 1\n  }\n - slot #42 BinaryOp BinaryOp:SignedSmall {\n     [42]: 1\n  }\n - slot #43 LoadProperty UNINITIALIZED {\n     [43]: 0x03ba70f468b1 <Symbol: (uninitialized_symbol)>\n     [44]: 0x03ba70f468b1 <Symbol: (uninitialized_symbol)>\n  }\n - slot #45 Call UNINITIALIZED {\n     [45]: 0x03ba70f468b1 <Symbol: (uninitialized_symbol)>\n     [46]: 0\n  }\n
tick,0x7ff726ad01ad,786258,0,0x0,1
tick,0x7ff6a67044ed,801936,0,0x0,0,0x7ff72653f3f3
tick,0x7ff726603b98,817564,0,0x0,0,0x7ff6a67047b8,0x7ff72653f3f3
tick,0x7ff6a67043c9,833275,0,0x0,0,0x7ff72653f3f3
tick,0x7ff6a67044cb,848778,0,0x0,0,0x7ff72653f3f3
tick,0x7ff6a67048b0,864417,0,0x0,0,0x7ff72653f3f3
tick,0x7ff726abe48e,880076,0,0x0,0,0x7ff726603c38,0x7ff6a67047b8,0x7ff72653f3f3
tick,0x7ff726abe48e,895627,0,0x0,0,0x7ff726603c38,0x7ff6a67047b8,0x7ff72653f3f3
tick,0x7ff6a6704407,911253,0,0x0,0,0x7ff72653f3f3
code-creation,LazyCompile,10,920297,0xc1e5072620,63,dumpFB2File file:///E:/Javascript%20Renderers/Javascript-Renderer-9v2/renderer_10_js/ColorImplementationTiming/Uint8/Fast%20GC/FrameBuffer.js:679:16,0x1c9a3019b18,~
code-source-info,0xc1e5072620,478,22875,23088,C0O22902C6O22948C15O22954C20O22948C21O23010C30O23037C35O23037C40O23056C45O23056C56O23010C62O23087,,
code-creation,LazyCompile,10,920525,0xc1e5072938,303,dumpPixels2File file:///E:/Javascript%20Renderers/Javascript-Renderer-9v2/renderer_10_js/ColorImplementationTiming/Uint8/Fast%20GC/FrameBuffer.js:704:20,0x1c9a3019b68,~
code-source-info,0xc1e
new,MemoryChunk,0x114fc80000,270336
code-creation,Function,11,921857,0x7ff6a6704dc0,2132,dumpPixels2File file:///E:/Javascript%20Renderers/Javascript-Renderer-9v2/renderer_10_js/ColorImplementationTiming/Uint8/Fast%20GC/FrameBuffer.js:704:20,0x1c9a3019b68,^
code-source-info,0x7ff6a6704dc0,478,24084,25799,,,
tick,0x7ff726a38dca,926934,0,0x0,4,0x7ff7260747b0,0x7ff6a67054bd,0xc1e5072658,0x7ff6a66fb6f2,0x7ff72653f3f3
code-creation,LazyCompile,13,929866,0x7ff6a67056c0,2772,dumpPixels2File file:///E:/Javascript%20Renderers/Javascript-Renderer-9v2/renderer_10_js/ColorImplementationTiming/Uint8/Fast%20GC/FrameBuffer.js:704:20,0x1c9a3019b68,*
code-source-info,0x7ff6a67056cx1c9a30228c8S0x1c9a3019938S0x1c9a3019380S0x1c9a30193f0S0x1c9a3022590S0x1c9a30224f0S0x1c9a3022af8
feedback-vector,930049,0xc1e5072b98,47,0x7ff6a67056c0,TieringState::kRequestTurbofan_Concurrent,0,1,5,000000C1E5072B99: [FeedbackVector] in OldSpace\n - map: 0x03ba70f41b89 <Map>\n - length: 47\n - shared function info: 0x01c9a3019b69 <SharedFunctionInfo dumpPixels2File>\n - no optimized code\n - tiering state: TieringState::kRequestTurbofan_Concurrent\n - maybe has optimized code: 0\n - invocation count: 1\n - profiler ticks: 5\n - closure feedback cell array: 000000C1E5072B31: [ClosureFeedbackCellArray] in OldSpace\n - map: 0x03ba70f41f39 <Map>\n - length: 2\n           0: 0x00c1e5072b51 <FeedbackCell[no feedback]>\n           1: 0x00c1e5072b69 <FeedbackCell[no feedback]>\n\n - slot #0 LoadGlobalNotInsideTypeof UNINITIALIZED {\n     [0]: [cleared]\n     [1]: 0x03ba70f468b1 <Symbol: (uninitialized_symbol)>\n  }\n - slot #2 Call UNINITIALIZED {\n     [2]: 0x03ba70f468b1 <Symbol: (uninitialized_symbol)>\n     [3]: 0\n  }\n - slot #4 Call UNINITIALIZED {\n     [4]: 0x03ba70f468b1 <Symbol: (uninitialized_symbol)>\n     [5]: 0\n  }\n - slot #6 BinaryOp BinaryOp:None {\n     [6]: 0\n  }\n - slot #7 BinaryOp BinaryOp:None {\n     [7]: 0\n  }\n - slot #8 BinaryOp BinaryOp:None {\n     [8]: 0\n  }\n - slot #9 BinaryOp BinaryOp:None {\n     [9]: 0\n  }\n - slot #10 BinaryOp BinaryOp:None {\n     [10]: 0\n  }\n - slot #11 BinaryOp BinaryOp:None {\n     [11]: 0\n  }\n - slot #12 BinaryOp BinaryOp:None {\n     [12]: 0\n  }\n - slot #13 BinaryOp BinaryOp:None {\n     [13]: 0\n  }\n - slot #14 LoadGlobalNotInsideTypeof UNINITIALIZED {\n     [14]: [cleared]\n     [15]: 0x03ba70f468b1 <Symbol: (uninitialized_symbol)>\n  }\n - slot #16 BinaryOp BinaryOp:None {\n     [16]: 0\n  }\n - slot #17 BinaryOp BinaryOp:None {\n     [17]: 0\n  }\n - slot #18 Call UNINITIALIZED {\n     [18]: 0x03ba70f468b1 <Symbol: (uninitialized_symbol)>\n     [19]: 0\n  }\n - slot #20 CompareOp CompareOp:SignedSmall {\n     [20]: 1\n  }\n - slot #21 CompareOp CompareOp:SignedSmall {\n     [21]: 1\n  }\n - slot #22 LoadProperty MONOMORPHIC {\n     [22]: [weak] 0x009983f10d31 <Map(HOLEY_ELEMENTS)>\n     [23]: 0x00c1e5072d41 <Other heap object (LOAD_HANDLER_TYPE)>\n  }\n - slot #24 Call MONOMORPHIC {\n     [24]: [weak] 0x020fdcb98e29 <JSFunction getPixelFB (sfi = 000001C9A3019939)>\n     [25]: 40816\n  }\n - slot #26 LoadProperty MONOMORPHIC {\n     [26]: [weak] 0x008cb6846f21 <Map(UINT8ELEMENTS)>\n     [27]: 0x00c1e5072d61 <Other heap object (LOAD_HANDLER_TYPE)>\n  }\n - slot #28 LoadProperty MONOMORPHIC {\n     [28]: [weak] 0x009983f0fa59 <Map(HOLEY_ELEMENTS)>\n     [29]: 0x00c1e5072d81 <Other heap object (LOAD_HANDLER_TYPE)>\n  }\n - slot #30 LoadProperty MONOMORPHIC {\n     [30]: [weak] 0x008cb684da49 <Map(UINT8_CLAMPEDELEMENTS)>\n     [31]: 0x00c1e5072da1 <Other heap object (LOAD_HANDLER_TYPE)>\n  }\n - slot #32 Call MONOMORPHIC {\n     [32]: [weak] 0x023add746561 <JSFunction slice (sfi = 000003A8997BF039)>\n     [33]: 40816\n  }\n - slot #34 Call MONOMORPHIC {\n     [34]: [weak] 0x02ffd8f93fb1 <JSFunction set (sfi = 000003A8997BF001)>\n     [35]: 40816\n  }\n - slot #36 BinaryOp BinaryOp:SignedSmall {\n     [36]: 1\n  }\n - slot #37 BinaryOp BinaryOp:SignedSmall {\n     [37]: 1\n  }\n - slot #38 BinaryOp BinaryOp:SignedSmall {\n     [38]: 1\n  }\n - slot #39 LoadProperty UNINITIALIZED {\n     [39]: 0x03ba70f468b1 <Symbol: (uninitialized_symbol)>\n     [40]: 0x03ba70f468b1 <Symbol: (uninitialized_symbol)>\n  }\n - slot #41 Call UNINITIALIZED {\n     [41]: 0x03ba70f468b1 <Symbol: (uninitialized_symbol)>\n     [42]: 0\n  }\n - slot #43 LoadProperty UNINITIALIZED {\n     [43]: 0x03ba70f468b1 <Symbol: (uninitialized_symbol)>\n     [44]: 0x03ba70f468b1 <Symbol: (uninitialized_symbol)>\n  }\n - slot #45 Call UNINITIALIZED {\n     [45]: 0x03ba70f468b1 <Symbol: (uninitialized_symbol)>\n     [46]: 0\n  }\n
tick,0x7ff726abebcb,942697,0,0x0,0,0x7ff7265fb7aa,0x7ff6a6705bbf,0xc1e5072658,0x7ff6a66fb6f2,0x7ff72653f3f3
tick,0x7ff7265fb44e,958164,0,0x0,0,0x7ff726604599,0x7ff6a6705a3d,0xc1e5072658,0x7ff6a66fb6f2,0x7ff72653f3f3
tick,0x7ff7265fb12f,973787,0,0x0,0,0x7ff6a6705bbf,0xc1e5072658,0x7ff6a66fb6f2,0x7ff72653f3f3
tick,0x7ffaea99b394,989411,0,0x0,1
tick,0x7ffaeaa16f3f,1005010,0,0x0,1
tick,0x7ff726603eb8,1300844,0,0x0,0,0x7ff6a6705a3d,0xc1e5072658,0x7ff6a66fb6f2,0x7ff72653f3f3
tick,0x7ff726604a1a,1300893,0,0x0,0,0x7ff726604a0a,0x7ff6a6705d5c,0xc1e5072658,0x7ff6a66fb6f2,0x7ff72653f3f3
tick,0x7ff726604b34,1300923,0,0x0,0,0x7ff6a6705d5c,0xc1e5072658,0x7ff6a66fb6f2,0x7ff72653f3f3
tick,0x7ff7265fb773,1300949,0,0x0,0,0x7ff726604599,0x7ff6a6705a3d,0xc1e5072658,0x7ff6a66fb6f2,0x7ff72653f3f3
tick,0x7ff7266033f1,1300971,0,0x0,0,0x7ff6a6705d88,0xc1e5072658,0x7ff6a66fb6f2,0x7ff72653f3f3
tick,0x7ff7265fb558,1300992,0,0x0,0,0x7ff726604599,0x7ff6a6705a3d,0xc1e5072658,0x7ff6a66fb6f2,0x7ff72653f3f3
tick,0x7ff6a6705d7c,1301014,0,0x0,0,0xc1e5072658,0x7ff6a66fb6f2,0x7ff72653f3f3
tick,0x7ff72630a7c4,1301034,0,0x0,0,0x7ff72606be30,0x7ff6a6705bbf,0xc1e5072658,0x7ff6a66fb6f2,0x7ff72653f3f3
tick,0x7ff7262faf9c,1301062,0,0x0,1
tick,0x7ff7266030f9,1301078,0,0x0,0,0x7ff6a6705d88,0xc1e5072658,0x7ff6a66fb6f2,0x7ff72653f3f3
tick,0x7ff7266049ae,1301100,0,0x0,0,0x7ff6a6705d5c,0xc1e5072658,0x7ff6a66fb6f2,0x7ff72653f3f3
tick,0x7ffaeaa10a14,1301120,0,0x0,3,0x7ff726074500,0x8572838102,0x7ff72653f3f3
tick,0x7ffaeaa10a14,1301140,0,0x0,3,0x7ff726074500,0x8572838102,0x7ff72653f3f3
tick,0x7ffaeaa10a14,1301159,0,0x0,3,0x7ff726074500,0x8572838102,0x7ff72653f3f3
code-creation,LazyCompile,10,1301178,0xc1e5075478,307,removeListener node:events:675:28,0x3a8997ba550,~
code-source-info,0xc1e
tick,0x7ffaeaa10a14,1301378,0,0x0,3,0x7ff726074500,0x8572838102,0x7ff72653f3f3
tick,0x7ffaeaa10a14,1301419,0,0x0,3,0x7ff726074500,0x8572838102,0x7ff72653f3f3
tick,0x7ffaeaa10a14,1301439,0,0x0,3,0x7ff726074500,0x8572838102,0x7ff72653f3f3
code-creation,LazyCompile,10,1301456,0xc1e5075760,64,stopListeningIfSignal node:internal/process/signal:43:31,0x3541b4f8740,~
script-source,132,node:internal/process/signal,'use strict';\x0d\n\x0d\nconst {\x0d\n  FunctionPrototypeBind\x2C\x0d\n  SafeMap\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  errnoException\x2C\x0d\n} = require('internal/errors');\x0d\n\x0d\nconst { signals } = internalBinding('constants').os;\x0d\n\x0d\nlet Signal;\x0d\nconst signalWraps = new SafeMap();\x0d\n\x0d\nfunction isSignal(event) {\x0d\n  return typeof event === 'string' && signals[event] !== undefined;\x0d\n}\x0d\n\x0d\n// Detect presence of a listener for the special signal types\x0d\nfunction startListeningIfSignal(type) {\x0d\n  if (isSignal(type) && !signalWraps.has(type)) {\x0d\n    if (Signal === undefined)\x0d\n      Signal = internalBinding('signal_wrap').Signal;\x0d\n    const wrap = new Signal();\x0d\n\x0d\n    wrap.unref();\x0d\n\x0d\n    wrap.onsignal = FunctionPrototypeBind(process.emit\x2C process\x2C type\x2C type);\x0d\n\x0d\n    const signum = signals[type];\x0d\n    const err = wrap.start(signum);\x0d\n    if (err) {\x0d\n      wrap.close();\x0d\n      throw errnoException(err\x2C 'uv_signal_start');\x0d\n    }\x0d\n\x0d\n    signalWraps.set(type\x2C wrap);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction stopListeningIfSignal(type) {\x0d\n  const wrap = signalWraps.get(type);\x0d\n  if (wrap !== undefined && process.listenerCount(type) === 0) {\x0d\n    wrap.close();\x0d\n    signalWraps.delete(type);\x0d\n  }\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  startListeningIfSignal\x2C\x0d\n  stopListeningIfSignal\x0d\n};\x0d\n
code-source-info,0xc1e5075760,132,978,1149,C0O1003C5O1015C10O1015C16O1029C21O1063C26O1063C33O1083C38O1102C43O1102C47O1116C52O1128C57O1134C63O1148,,
tick,0x7ffaeaa10a14,1301657,0,0x0,3,0x7ff726074500,0x8572838102,0x7ff72653f3f3
code-creation,LazyCompile,10,1301698,0xc1e5075ab8,28, file:///E:/Javascript%20Renderers/Javascript-Renderer-9v2/renderer_10_js/ColorImplementationTiming/Uint8/Fast%20GC/FrameBuffer.js:738:32,0xc1e50727d0,~
code-source-info,0xc1e5075ab8,478,25474,25606,C0O25496C10O25520C21O25496C27O25605,,
tick,0x7ff726ad9907,1301877,0,0x0,3
code-creation,LazyCompile,10,1302016,0xc1e5075cf8,253,writeFileSync node:fs:2207:23,0x2dbe93f55a8,~
code-source-info,0xc1e5075cf8,75,60910,61706,C0O60937C5O60958C10O60947C17O61019C22O61024C28O61056C36O61056C41O61111C47O61150C52O61150C55O61195C60O61209C67O61214C70O61214C75O61236C84O61209C92O61288C101O61323C106O61323C111O61378C119O61396C122O61399C127O61428C138O61399C144O61453C146O61477C154O61517C155O61517C160O61547C165O61550C182O61550C188O61594C190O61604C197O61620C199O61630C206O61503C220O61666C225O61681C230O61684C235O61684C252O61705,,
code-creation,LazyCompile,10,1302176,0xc1e5075fa0,67, node:internal/fs/utils:876:60,0x914791e1f8,~
code-source-info,0xc1e5075fa0,79,24865,25256,C0O24888C6O24927C7O24934C8O24945C18O25028C28O25060C34O25060C41O25122C42O25129C43O25140C48O25177C61O25146C66O25140,,
code-creation,LazyCompile,10,1302329,0xc1e50761c8,499,getEncodingOps node:buffer:688:24,0x1adeb58efd0,~
code-source-info,0xc1e50761c
tick,0x7ffaeaa0da84,1317585,1,0x7ff725a44870,6,0x7ff7264a2ab0,0xc1e506416f,0xc1e5075d82,0xc1e5075acd
code-creation,LazyCompile,10,1317816,0xc1e5076650,266,writeSync node:fs:898:19,0x2dbe93f43d8,~
code-source-info,0xc1e5076650,75,23972,25133,C0O24025C5O24030C11O24065C13O24076C15O24102C18O24122C23O24126C29O24160C35O24201C43O24327C46O24213C54O24234C60O24250C67O24261C72O24280C81O24354C85O24389C88O24411C93O24440C97O24473C110O24473C115O24523C121O24578C128O24589C133O24604C138O24653C149O24604C154O24671C159O24688C184O24688C192O24806C200O24806C205O24874C210O24874C215O24915C219O24948C221O24968C226O24985C248O24985C254O25084C259O25084C263O25116C265O25130,,
code-creation,LazyCompile,10,1318131,0xc1e50768d0,126, node:internal/fs/utils:657:3,0x914791de38,~
code-source-info,0xc1e50768d0,79,18533,18951,C0O18572C2O18583C7O18606C20O18649C30O18612C35O18606C36O18686C38O18710C41O18697C46O18729C59O18783C72O18735C77O18729C78O18818C79O18829C84O18843C100O18849C105O18843C106O18911C119O18911C125O18950,,
code-creation,LazyCompile,10,1331450,0xc1e5076ac8,43, file:///E:/Javascript%20Renderers/Javascript-Renderer-9v2/renderer_10_js/ColorImplementationTiming/Uint8/Fast%20GC/FrameBuffer.js:742:32,0xc1e5072820,~
code-source-info,0xc1e5076ac8,478,25641,25790,C0O25663C8O25688C12O25695C19O25700C22O25695C36O25663C42O25789,,
code-creation,LazyCompile,10,1331634,0xc1e5076c08,5,get node:internal/bootstrap/node:460:8,0x1f81b71e238,~
code-source-info,0xc1e5076c08,16,15449,15483,C0O15461C4O15476,,
code-creation,LazyCompile,10,1331802,0xc1e5076d00,92,fromObject node:buffer:504:20,0x1adeb58d730,~
code-source-info,0xc1e5076d00,30,14692,14990,C0O14711C8O14735C11O14756C16O14735C22O14787C30O14817C35O14824C40O14841C41O14854C44O14861C48O14880C49O14899C56O14904C63O14920C66O14937C71O14920C77O14951C80O14976C85O14958C89O14982C91O14989,,
code-creation,LazyCompile,10,1332040,0xc1e5076e88,159,fromArrayLike node:buffer:489:23,0x1adeb58d6e0,~
code-source-info,0xc1e5076e88,30,14284,14669,C0O14303C6O14310C11O14321C16O14328C21O14345C22O14357C30O14374C34O14383C37O14364C42O14406C49O14416C54O14427C56O14425C59O14413C64O14447C67O14447C70O14476C77O14491C82O14502C85O14518C92O14476C98O14532C111O14532C116O14572C121O14590C131O14583C137O14603C140O14603C143O14621C145O14630C146O14639C153O14646C158O14666,,
tick,0x7ff726abe6be,1333085,0,0x0,0,0x7ff7265fc5ed,0x7ff726578efb,0x7ff6a66e3e22,0xc1e5076f21,0xc1e5076d2c,0x1adeb58ce61,0xc1e5076ade
code-creation,LazyCompile,10,1333627,0xc1e50770c8,77,appendFileSync node:fs:2273:24,0x2dbe93f5648,~
code-source-info,0xc1e50770c8,75,62775,63142,C0O62802C5O62823C10O62812C17O62936C22O62946C28O63051C36O63059C39O63059C45O63076C47O63089C51O63101C56O63104C70O63104C76O63141,,
code-creation,LazyCompile,10,1333882,0xc1e50771f8,47,copyObject node:internal/fs/utils:214:20,0x914791d348,~
code-source-info,0xc1e50771f8,79,4888,5002,C0O4917C2O4942C15O4935C28O4935C29O4955C31O4975C34O4967C41O4924C44O4985C46O4999,,
code-creation,LazyCompile,10,1334192,0xc1e5077330,30,isEncoding node:buffer:539:40,0x1adeb58d820,~
code-source-info,0xc1e5077330,30,15494,15629,C0O15510C6O15558C12O15565C20O15584C23O15584C28O15612C29O15626,,
code-creation,LazyCompile,10,1334414,0xc1e5077438,30,normalizeEncoding node:internal/util:164:27,0x3a89978da98,~
code-source-info,0xc1e5077438,21,4379,4487,C0O4390C7O4413C14O4431C19O4444C21O4458C22O4462C25O4469C29O4484,,
tick,0x7ffaeaa0d1c4,1348901,1,0x7ff725a3d400,6,0x7ff7264a2ab0,0xc1e50656af,0xc1e5075de3,0xc1e507710e,0xc1e5076aec
tick,0x7ffaeaa0d1c4,1364517,1,0x7ff725a3d400,6,0x7ff7264a2ab0,0xc1e50656af,0xc1e5075de3,0xc1e507710e,0xc1e5076aec
tick,0x7ffaeaa0d1c4,1380083,1,0x7ff725a3d400,6,0x7ff7264a2ab0,0xc1e50656af,0xc1e5075de3,0xc1e507710e,0xc1e5076aec
tick,0x7ffaeaa0d1c4,1395725,1,0x7ff725a3d400,6,0x7ff7264a2ab0,0xc1e50656af,0xc1e5075de3,0xc1e507710e,0xc1e5076aec
tick,0x7ffaeaa0d1c4,1411299,1,0x7ff725a3d400,6,0x7ff7264a2ab0,0xc1e50656af,0xc1e5075de3,0xc1e507710e,0xc1e5076aec
tick,0x7ffaeaa0d1c4,1426878,1,0x7ff725a3d400,6,0x7ff7264a2ab0,0xc1e50656af,0xc1e5075de3,0xc1e507710e,0xc1e5076aec
tick,0x7ffaeaa0d1c4,1442535,1,0x7ff725a3d400,6,0x7ff7264a2ab0,0xc1e50656af,0xc1e5075de3,0xc1e507710e,0xc1e5076aec
tick,0x7ffaeaa0d1c4,1458211,1,0x7ff725a3d400,6,0x7ff7264a2ab0,0xc1e50656af,0xc1e5075de3,0xc1e507710e,0xc1e5076aec
tick,0x7ffaeaa0d1c4,1473825,1,0x7ff725a3d400,6,0x7ff7264a2ab0,0xc1e50656af,0xc1e5075de3,0xc1e507710e,0xc1e5076aec
tick,0x7ffaeaa0d1c4,1489450,1,0x7ff725a3d400,6,0x7ff7264a2ab0,0xc1e50656af,0xc1e5075de3,0xc1e507710e,0xc1e5076aec
tick,0x7ffaeaa0d1c4,1505094,1,0x7ff725a3d400,6,0x7ff7264a2ab0,0xc1e50656af,0xc1e5075de3,0xc1e507710e,0xc1e5076aec
tick,0x7ffaeaa0d1c4,1520614,1,0x7ff725a3d400,6,0x7ff7264a2ab0,0xc1e50656af,0xc1e5075de3,0xc1e507710e,0xc1e5076aec
tick,0x7ffaeaa0d1c4,1536314,1,0x7ff725a3d400,6,0x7ff7264a2ab0,0xc1e50656af,0xc1e5075de3,0xc1e507710e,0xc1e5076aec
profiler,end
delete,MemoryChunk,0x37744200000
delete,MemoryChunk,0x1f81b700000
delete,MemoryChunk,0x3a899780000
delete,MemoryChunk,0x1adeb580000
delete,MemoryChunk,0x113713c0000
delete,MemoryChunk,0x2dbe93c0000
delete,MemoryChunk,0x9147900000
delete,MemoryChunk,0x3893bcc0000
delete,MemoryChunk,0x3541b4c0000
delete,MemoryChunk,0x36900ac0000
delete,MemoryChunk,0x2ffd8f80000
delete,MemoryChunk,0x10673ec0000
delete,MemoryChunk,0x23add740000
delete,MemoryChunk,0xb505300000
delete,MemoryChunk,0x14dbcb80000
delete,MemoryChunk,0x3a217e40000
delete,MemoryChunk,0x2a6f0b80000
delete,MemoryChunk,0x8572800000
delete,MemoryChunk,0xc1e5040000
delete,MemoryChunk,0x1c9a3000000
delete,MemoryChunk,0x2662fa00000
delete,MemoryChunk,0x277c1680000
delete,MemoryChunk,0x3a96ff40000
delete,MemoryChunk,0x20fdcb80000
delete,MemoryChunk,0x7ff6a6680000
delete,MemoryChunk,0x7ff6a66c0000
delete,MemoryChunk,0x7ff6a6700000
delete,MemoryChunk,0x343bc740000
delete,MemoryChunk,0x8cb6840000
delete,MemoryChunk,0x9983f00000
delete,LargeObjectChunk,0x114fc80000
delete,MemoryChunk,0x114fc80000
delete,MemoryChunk,0x2b2c4040000
delete,MemoryChunk,0x31a25cc0000
delete,MemoryChunk,0x37b0f5c0000
delete,MemoryChunk,0xa19b980000
delete,MemoryChunk,0x1fb52f40000
delete,MemoryChunk,0x2ecec2c0000
delete,MemoryChunk,0xff70d80000
delete,MemoryChunk,0x2f5c8ac0000
delete,MemoryChunk,0x191ca40000
delete,MemoryChunk,0x192d5540000
delete,MemoryChunk,0x3ad297c0000
delete,MemoryChunk,0x2aaec640000
delete,MemoryChunk,0x36f3f340000
delete,MemoryChunk,0xd3b5600000
delete,MemoryChunk,0x28330c40000
delete,MemoryChunk,0x39aeb880000
